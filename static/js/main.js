/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ((function(modules) {
	// Check all modules for deduplicated modules
	for(var i in modules) {
		if(Object.prototype.hasOwnProperty.call(modules, i)) {
			switch(typeof modules[i]) {
			case "function": break;
			case "object":
				// Module can be created from a template
				modules[i] = (function(_m) {
					var args = _m.slice(1), fn = modules[_m[0]];
					return function (a,b,c) {
						fn.apply(this, [a,b,c].concat(args));
					};
				}(modules[i]));
				break;
			default:
				// Module is a copy of another module
				modules[i] = modules[modules[i]];
				break;
			}
		}
	}
	return modules;
}([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(328);
	module.exports = __webpack_require__(393);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var require;/* WEBPACK VAR INJECTION */(function(module) {//! moment.js
	//! version : 2.20.1
	//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
	//! license : MIT
	//! momentjs.com
	
	;(function (global, factory) {
	     true ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    global.moment = factory()
	}(this, (function () { 'use strict';
	
	var hookCallback;
	
	function hooks () {
	    return hookCallback.apply(null, arguments);
	}
	
	// This is done to register the method called with moment()
	// without creating circular dependencies.
	function setHookCallback (callback) {
	    hookCallback = callback;
	}
	
	function isArray(input) {
	    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
	}
	
	function isObject(input) {
	    // IE8 will treat undefined and null as object if it wasn't for
	    // input != null
	    return input != null && Object.prototype.toString.call(input) === '[object Object]';
	}
	
	function isObjectEmpty(obj) {
	    if (Object.getOwnPropertyNames) {
	        return (Object.getOwnPropertyNames(obj).length === 0);
	    } else {
	        var k;
	        for (k in obj) {
	            if (obj.hasOwnProperty(k)) {
	                return false;
	            }
	        }
	        return true;
	    }
	}
	
	function isUndefined(input) {
	    return input === void 0;
	}
	
	function isNumber(input) {
	    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
	}
	
	function isDate(input) {
	    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
	}
	
	function map(arr, fn) {
	    var res = [], i;
	    for (i = 0; i < arr.length; ++i) {
	        res.push(fn(arr[i], i));
	    }
	    return res;
	}
	
	function hasOwnProp(a, b) {
	    return Object.prototype.hasOwnProperty.call(a, b);
	}
	
	function extend(a, b) {
	    for (var i in b) {
	        if (hasOwnProp(b, i)) {
	            a[i] = b[i];
	        }
	    }
	
	    if (hasOwnProp(b, 'toString')) {
	        a.toString = b.toString;
	    }
	
	    if (hasOwnProp(b, 'valueOf')) {
	        a.valueOf = b.valueOf;
	    }
	
	    return a;
	}
	
	function createUTC (input, format, locale, strict) {
	    return createLocalOrUTC(input, format, locale, strict, true).utc();
	}
	
	function defaultParsingFlags() {
	    // We need to deep clone this object.
	    return {
	        empty           : false,
	        unusedTokens    : [],
	        unusedInput     : [],
	        overflow        : -2,
	        charsLeftOver   : 0,
	        nullInput       : false,
	        invalidMonth    : null,
	        invalidFormat   : false,
	        userInvalidated : false,
	        iso             : false,
	        parsedDateParts : [],
	        meridiem        : null,
	        rfc2822         : false,
	        weekdayMismatch : false
	    };
	}
	
	function getParsingFlags(m) {
	    if (m._pf == null) {
	        m._pf = defaultParsingFlags();
	    }
	    return m._pf;
	}
	
	var some;
	if (Array.prototype.some) {
	    some = Array.prototype.some;
	} else {
	    some = function (fun) {
	        var t = Object(this);
	        var len = t.length >>> 0;
	
	        for (var i = 0; i < len; i++) {
	            if (i in t && fun.call(this, t[i], i, t)) {
	                return true;
	            }
	        }
	
	        return false;
	    };
	}
	
	function isValid(m) {
	    if (m._isValid == null) {
	        var flags = getParsingFlags(m);
	        var parsedParts = some.call(flags.parsedDateParts, function (i) {
	            return i != null;
	        });
	        var isNowValid = !isNaN(m._d.getTime()) &&
	            flags.overflow < 0 &&
	            !flags.empty &&
	            !flags.invalidMonth &&
	            !flags.invalidWeekday &&
	            !flags.weekdayMismatch &&
	            !flags.nullInput &&
	            !flags.invalidFormat &&
	            !flags.userInvalidated &&
	            (!flags.meridiem || (flags.meridiem && parsedParts));
	
	        if (m._strict) {
	            isNowValid = isNowValid &&
	                flags.charsLeftOver === 0 &&
	                flags.unusedTokens.length === 0 &&
	                flags.bigHour === undefined;
	        }
	
	        if (Object.isFrozen == null || !Object.isFrozen(m)) {
	            m._isValid = isNowValid;
	        }
	        else {
	            return isNowValid;
	        }
	    }
	    return m._isValid;
	}
	
	function createInvalid (flags) {
	    var m = createUTC(NaN);
	    if (flags != null) {
	        extend(getParsingFlags(m), flags);
	    }
	    else {
	        getParsingFlags(m).userInvalidated = true;
	    }
	
	    return m;
	}
	
	// Plugins that add properties should also add the key here (null value),
	// so we can properly clone ourselves.
	var momentProperties = hooks.momentProperties = [];
	
	function copyConfig(to, from) {
	    var i, prop, val;
	
	    if (!isUndefined(from._isAMomentObject)) {
	        to._isAMomentObject = from._isAMomentObject;
	    }
	    if (!isUndefined(from._i)) {
	        to._i = from._i;
	    }
	    if (!isUndefined(from._f)) {
	        to._f = from._f;
	    }
	    if (!isUndefined(from._l)) {
	        to._l = from._l;
	    }
	    if (!isUndefined(from._strict)) {
	        to._strict = from._strict;
	    }
	    if (!isUndefined(from._tzm)) {
	        to._tzm = from._tzm;
	    }
	    if (!isUndefined(from._isUTC)) {
	        to._isUTC = from._isUTC;
	    }
	    if (!isUndefined(from._offset)) {
	        to._offset = from._offset;
	    }
	    if (!isUndefined(from._pf)) {
	        to._pf = getParsingFlags(from);
	    }
	    if (!isUndefined(from._locale)) {
	        to._locale = from._locale;
	    }
	
	    if (momentProperties.length > 0) {
	        for (i = 0; i < momentProperties.length; i++) {
	            prop = momentProperties[i];
	            val = from[prop];
	            if (!isUndefined(val)) {
	                to[prop] = val;
	            }
	        }
	    }
	
	    return to;
	}
	
	var updateInProgress = false;
	
	// Moment prototype object
	function Moment(config) {
	    copyConfig(this, config);
	    this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	    if (!this.isValid()) {
	        this._d = new Date(NaN);
	    }
	    // Prevent infinite loop in case updateOffset creates new moment
	    // objects.
	    if (updateInProgress === false) {
	        updateInProgress = true;
	        hooks.updateOffset(this);
	        updateInProgress = false;
	    }
	}
	
	function isMoment (obj) {
	    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
	}
	
	function absFloor (number) {
	    if (number < 0) {
	        // -0 -> 0
	        return Math.ceil(number) || 0;
	    } else {
	        return Math.floor(number);
	    }
	}
	
	function toInt(argumentForCoercion) {
	    var coercedNumber = +argumentForCoercion,
	        value = 0;
	
	    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	        value = absFloor(coercedNumber);
	    }
	
	    return value;
	}
	
	// compare two arrays, return the number of differences
	function compareArrays(array1, array2, dontConvert) {
	    var len = Math.min(array1.length, array2.length),
	        lengthDiff = Math.abs(array1.length - array2.length),
	        diffs = 0,
	        i;
	    for (i = 0; i < len; i++) {
	        if ((dontConvert && array1[i] !== array2[i]) ||
	            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
	            diffs++;
	        }
	    }
	    return diffs + lengthDiff;
	}
	
	function warn(msg) {
	    if (hooks.suppressDeprecationWarnings === false &&
	            (typeof console !==  'undefined') && console.warn) {
	        console.warn('Deprecation warning: ' + msg);
	    }
	}
	
	function deprecate(msg, fn) {
	    var firstTime = true;
	
	    return extend(function () {
	        if (hooks.deprecationHandler != null) {
	            hooks.deprecationHandler(null, msg);
	        }
	        if (firstTime) {
	            var args = [];
	            var arg;
	            for (var i = 0; i < arguments.length; i++) {
	                arg = '';
	                if (typeof arguments[i] === 'object') {
	                    arg += '\n[' + i + '] ';
	                    for (var key in arguments[0]) {
	                        arg += key + ': ' + arguments[0][key] + ', ';
	                    }
	                    arg = arg.slice(0, -2); // Remove trailing comma and space
	                } else {
	                    arg = arguments[i];
	                }
	                args.push(arg);
	            }
	            warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
	            firstTime = false;
	        }
	        return fn.apply(this, arguments);
	    }, fn);
	}
	
	var deprecations = {};
	
	function deprecateSimple(name, msg) {
	    if (hooks.deprecationHandler != null) {
	        hooks.deprecationHandler(name, msg);
	    }
	    if (!deprecations[name]) {
	        warn(msg);
	        deprecations[name] = true;
	    }
	}
	
	hooks.suppressDeprecationWarnings = false;
	hooks.deprecationHandler = null;
	
	function isFunction(input) {
	    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	}
	
	function set (config) {
	    var prop, i;
	    for (i in config) {
	        prop = config[i];
	        if (isFunction(prop)) {
	            this[i] = prop;
	        } else {
	            this['_' + i] = prop;
	        }
	    }
	    this._config = config;
	    // Lenient ordinal parsing accepts just a number in addition to
	    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
	    // TODO: Remove "ordinalParse" fallback in next major release.
	    this._dayOfMonthOrdinalParseLenient = new RegExp(
	        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
	            '|' + (/\d{1,2}/).source);
	}
	
	function mergeConfigs(parentConfig, childConfig) {
	    var res = extend({}, parentConfig), prop;
	    for (prop in childConfig) {
	        if (hasOwnProp(childConfig, prop)) {
	            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
	                res[prop] = {};
	                extend(res[prop], parentConfig[prop]);
	                extend(res[prop], childConfig[prop]);
	            } else if (childConfig[prop] != null) {
	                res[prop] = childConfig[prop];
	            } else {
	                delete res[prop];
	            }
	        }
	    }
	    for (prop in parentConfig) {
	        if (hasOwnProp(parentConfig, prop) &&
	                !hasOwnProp(childConfig, prop) &&
	                isObject(parentConfig[prop])) {
	            // make sure changes to properties don't modify parent config
	            res[prop] = extend({}, res[prop]);
	        }
	    }
	    return res;
	}
	
	function Locale(config) {
	    if (config != null) {
	        this.set(config);
	    }
	}
	
	var keys;
	
	if (Object.keys) {
	    keys = Object.keys;
	} else {
	    keys = function (obj) {
	        var i, res = [];
	        for (i in obj) {
	            if (hasOwnProp(obj, i)) {
	                res.push(i);
	            }
	        }
	        return res;
	    };
	}
	
	var defaultCalendar = {
	    sameDay : '[Today at] LT',
	    nextDay : '[Tomorrow at] LT',
	    nextWeek : 'dddd [at] LT',
	    lastDay : '[Yesterday at] LT',
	    lastWeek : '[Last] dddd [at] LT',
	    sameElse : 'L'
	};
	
	function calendar (key, mom, now) {
	    var output = this._calendar[key] || this._calendar['sameElse'];
	    return isFunction(output) ? output.call(mom, now) : output;
	}
	
	var defaultLongDateFormat = {
	    LTS  : 'h:mm:ss A',
	    LT   : 'h:mm A',
	    L    : 'MM/DD/YYYY',
	    LL   : 'MMMM D, YYYY',
	    LLL  : 'MMMM D, YYYY h:mm A',
	    LLLL : 'dddd, MMMM D, YYYY h:mm A'
	};
	
	function longDateFormat (key) {
	    var format = this._longDateFormat[key],
	        formatUpper = this._longDateFormat[key.toUpperCase()];
	
	    if (format || !formatUpper) {
	        return format;
	    }
	
	    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
	        return val.slice(1);
	    });
	
	    return this._longDateFormat[key];
	}
	
	var defaultInvalidDate = 'Invalid date';
	
	function invalidDate () {
	    return this._invalidDate;
	}
	
	var defaultOrdinal = '%d';
	var defaultDayOfMonthOrdinalParse = /\d{1,2}/;
	
	function ordinal (number) {
	    return this._ordinal.replace('%d', number);
	}
	
	var defaultRelativeTime = {
	    future : 'in %s',
	    past   : '%s ago',
	    s  : 'a few seconds',
	    ss : '%d seconds',
	    m  : 'a minute',
	    mm : '%d minutes',
	    h  : 'an hour',
	    hh : '%d hours',
	    d  : 'a day',
	    dd : '%d days',
	    M  : 'a month',
	    MM : '%d months',
	    y  : 'a year',
	    yy : '%d years'
	};
	
	function relativeTime (number, withoutSuffix, string, isFuture) {
	    var output = this._relativeTime[string];
	    return (isFunction(output)) ?
	        output(number, withoutSuffix, string, isFuture) :
	        output.replace(/%d/i, number);
	}
	
	function pastFuture (diff, output) {
	    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	    return isFunction(format) ? format(output) : format.replace(/%s/i, output);
	}
	
	var aliases = {};
	
	function addUnitAlias (unit, shorthand) {
	    var lowerCase = unit.toLowerCase();
	    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	}
	
	function normalizeUnits(units) {
	    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
	}
	
	function normalizeObjectUnits(inputObject) {
	    var normalizedInput = {},
	        normalizedProp,
	        prop;
	
	    for (prop in inputObject) {
	        if (hasOwnProp(inputObject, prop)) {
	            normalizedProp = normalizeUnits(prop);
	            if (normalizedProp) {
	                normalizedInput[normalizedProp] = inputObject[prop];
	            }
	        }
	    }
	
	    return normalizedInput;
	}
	
	var priorities = {};
	
	function addUnitPriority(unit, priority) {
	    priorities[unit] = priority;
	}
	
	function getPrioritizedUnits(unitsObj) {
	    var units = [];
	    for (var u in unitsObj) {
	        units.push({unit: u, priority: priorities[u]});
	    }
	    units.sort(function (a, b) {
	        return a.priority - b.priority;
	    });
	    return units;
	}
	
	function zeroFill(number, targetLength, forceSign) {
	    var absNumber = '' + Math.abs(number),
	        zerosToFill = targetLength - absNumber.length,
	        sign = number >= 0;
	    return (sign ? (forceSign ? '+' : '') : '-') +
	        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
	}
	
	var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
	
	var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
	
	var formatFunctions = {};
	
	var formatTokenFunctions = {};
	
	// token:    'M'
	// padded:   ['MM', 2]
	// ordinal:  'Mo'
	// callback: function () { this.month() + 1 }
	function addFormatToken (token, padded, ordinal, callback) {
	    var func = callback;
	    if (typeof callback === 'string') {
	        func = function () {
	            return this[callback]();
	        };
	    }
	    if (token) {
	        formatTokenFunctions[token] = func;
	    }
	    if (padded) {
	        formatTokenFunctions[padded[0]] = function () {
	            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	        };
	    }
	    if (ordinal) {
	        formatTokenFunctions[ordinal] = function () {
	            return this.localeData().ordinal(func.apply(this, arguments), token);
	        };
	    }
	}
	
	function removeFormattingTokens(input) {
	    if (input.match(/\[[\s\S]/)) {
	        return input.replace(/^\[|\]$/g, '');
	    }
	    return input.replace(/\\/g, '');
	}
	
	function makeFormatFunction(format) {
	    var array = format.match(formattingTokens), i, length;
	
	    for (i = 0, length = array.length; i < length; i++) {
	        if (formatTokenFunctions[array[i]]) {
	            array[i] = formatTokenFunctions[array[i]];
	        } else {
	            array[i] = removeFormattingTokens(array[i]);
	        }
	    }
	
	    return function (mom) {
	        var output = '', i;
	        for (i = 0; i < length; i++) {
	            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
	        }
	        return output;
	    };
	}
	
	// format date using native date object
	function formatMoment(m, format) {
	    if (!m.isValid()) {
	        return m.localeData().invalidDate();
	    }
	
	    format = expandFormat(format, m.localeData());
	    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);
	
	    return formatFunctions[format](m);
	}
	
	function expandFormat(format, locale) {
	    var i = 5;
	
	    function replaceLongDateFormatTokens(input) {
	        return locale.longDateFormat(input) || input;
	    }
	
	    localFormattingTokens.lastIndex = 0;
	    while (i >= 0 && localFormattingTokens.test(format)) {
	        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
	        localFormattingTokens.lastIndex = 0;
	        i -= 1;
	    }
	
	    return format;
	}
	
	var match1         = /\d/;            //       0 - 9
	var match2         = /\d\d/;          //      00 - 99
	var match3         = /\d{3}/;         //     000 - 999
	var match4         = /\d{4}/;         //    0000 - 9999
	var match6         = /[+-]?\d{6}/;    // -999999 - 999999
	var match1to2      = /\d\d?/;         //       0 - 99
	var match3to4      = /\d\d\d\d?/;     //     999 - 9999
	var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
	var match1to3      = /\d{1,3}/;       //       0 - 999
	var match1to4      = /\d{1,4}/;       //       0 - 9999
	var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999
	
	var matchUnsigned  = /\d+/;           //       0 - inf
	var matchSigned    = /[+-]?\d+/;      //    -inf - inf
	
	var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
	var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z
	
	var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123
	
	// any word (or two) characters or numbers including two/three word month in arabic.
	// includes scottish gaelic two word and hyphenated months
	var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
	
	
	var regexes = {};
	
	function addRegexToken (token, regex, strictRegex) {
	    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
	        return (isStrict && strictRegex) ? strictRegex : regex;
	    };
	}
	
	function getParseRegexForToken (token, config) {
	    if (!hasOwnProp(regexes, token)) {
	        return new RegExp(unescapeFormat(token));
	    }
	
	    return regexes[token](config._strict, config._locale);
	}
	
	// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	function unescapeFormat(s) {
	    return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
	        return p1 || p2 || p3 || p4;
	    }));
	}
	
	function regexEscape(s) {
	    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	}
	
	var tokens = {};
	
	function addParseToken (token, callback) {
	    var i, func = callback;
	    if (typeof token === 'string') {
	        token = [token];
	    }
	    if (isNumber(callback)) {
	        func = function (input, array) {
	            array[callback] = toInt(input);
	        };
	    }
	    for (i = 0; i < token.length; i++) {
	        tokens[token[i]] = func;
	    }
	}
	
	function addWeekParseToken (token, callback) {
	    addParseToken(token, function (input, array, config, token) {
	        config._w = config._w || {};
	        callback(input, config._w, config, token);
	    });
	}
	
	function addTimeToArrayFromToken(token, input, config) {
	    if (input != null && hasOwnProp(tokens, token)) {
	        tokens[token](input, config._a, config, token);
	    }
	}
	
	var YEAR = 0;
	var MONTH = 1;
	var DATE = 2;
	var HOUR = 3;
	var MINUTE = 4;
	var SECOND = 5;
	var MILLISECOND = 6;
	var WEEK = 7;
	var WEEKDAY = 8;
	
	// FORMATTING
	
	addFormatToken('Y', 0, 0, function () {
	    var y = this.year();
	    return y <= 9999 ? '' + y : '+' + y;
	});
	
	addFormatToken(0, ['YY', 2], 0, function () {
	    return this.year() % 100;
	});
	
	addFormatToken(0, ['YYYY',   4],       0, 'year');
	addFormatToken(0, ['YYYYY',  5],       0, 'year');
	addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');
	
	// ALIASES
	
	addUnitAlias('year', 'y');
	
	// PRIORITIES
	
	addUnitPriority('year', 1);
	
	// PARSING
	
	addRegexToken('Y',      matchSigned);
	addRegexToken('YY',     match1to2, match2);
	addRegexToken('YYYY',   match1to4, match4);
	addRegexToken('YYYYY',  match1to6, match6);
	addRegexToken('YYYYYY', match1to6, match6);
	
	addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	addParseToken('YYYY', function (input, array) {
	    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
	});
	addParseToken('YY', function (input, array) {
	    array[YEAR] = hooks.parseTwoDigitYear(input);
	});
	addParseToken('Y', function (input, array) {
	    array[YEAR] = parseInt(input, 10);
	});
	
	// HELPERS
	
	function daysInYear(year) {
	    return isLeapYear(year) ? 366 : 365;
	}
	
	function isLeapYear(year) {
	    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	}
	
	// HOOKS
	
	hooks.parseTwoDigitYear = function (input) {
	    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	};
	
	// MOMENTS
	
	var getSetYear = makeGetSet('FullYear', true);
	
	function getIsLeapYear () {
	    return isLeapYear(this.year());
	}
	
	function makeGetSet (unit, keepTime) {
	    return function (value) {
	        if (value != null) {
	            set$1(this, unit, value);
	            hooks.updateOffset(this, keepTime);
	            return this;
	        } else {
	            return get(this, unit);
	        }
	    };
	}
	
	function get (mom, unit) {
	    return mom.isValid() ?
	        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
	}
	
	function set$1 (mom, unit, value) {
	    if (mom.isValid() && !isNaN(value)) {
	        if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
	            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
	        }
	        else {
	            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	        }
	    }
	}
	
	// MOMENTS
	
	function stringGet (units) {
	    units = normalizeUnits(units);
	    if (isFunction(this[units])) {
	        return this[units]();
	    }
	    return this;
	}
	
	
	function stringSet (units, value) {
	    if (typeof units === 'object') {
	        units = normalizeObjectUnits(units);
	        var prioritized = getPrioritizedUnits(units);
	        for (var i = 0; i < prioritized.length; i++) {
	            this[prioritized[i].unit](units[prioritized[i].unit]);
	        }
	    } else {
	        units = normalizeUnits(units);
	        if (isFunction(this[units])) {
	            return this[units](value);
	        }
	    }
	    return this;
	}
	
	function mod(n, x) {
	    return ((n % x) + x) % x;
	}
	
	var indexOf;
	
	if (Array.prototype.indexOf) {
	    indexOf = Array.prototype.indexOf;
	} else {
	    indexOf = function (o) {
	        // I know
	        var i;
	        for (i = 0; i < this.length; ++i) {
	            if (this[i] === o) {
	                return i;
	            }
	        }
	        return -1;
	    };
	}
	
	function daysInMonth(year, month) {
	    if (isNaN(year) || isNaN(month)) {
	        return NaN;
	    }
	    var modMonth = mod(month, 12);
	    year += (month - modMonth) / 12;
	    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
	}
	
	// FORMATTING
	
	addFormatToken('M', ['MM', 2], 'Mo', function () {
	    return this.month() + 1;
	});
	
	addFormatToken('MMM', 0, 0, function (format) {
	    return this.localeData().monthsShort(this, format);
	});
	
	addFormatToken('MMMM', 0, 0, function (format) {
	    return this.localeData().months(this, format);
	});
	
	// ALIASES
	
	addUnitAlias('month', 'M');
	
	// PRIORITY
	
	addUnitPriority('month', 8);
	
	// PARSING
	
	addRegexToken('M',    match1to2);
	addRegexToken('MM',   match1to2, match2);
	addRegexToken('MMM',  function (isStrict, locale) {
	    return locale.monthsShortRegex(isStrict);
	});
	addRegexToken('MMMM', function (isStrict, locale) {
	    return locale.monthsRegex(isStrict);
	});
	
	addParseToken(['M', 'MM'], function (input, array) {
	    array[MONTH] = toInt(input) - 1;
	});
	
	addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	    var month = config._locale.monthsParse(input, token, config._strict);
	    // if we didn't find a month name, mark the date as invalid.
	    if (month != null) {
	        array[MONTH] = month;
	    } else {
	        getParsingFlags(config).invalidMonth = input;
	    }
	});
	
	// LOCALES
	
	var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
	var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
	function localeMonths (m, format) {
	    if (!m) {
	        return isArray(this._months) ? this._months :
	            this._months['standalone'];
	    }
	    return isArray(this._months) ? this._months[m.month()] :
	        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
	}
	
	var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
	function localeMonthsShort (m, format) {
	    if (!m) {
	        return isArray(this._monthsShort) ? this._monthsShort :
	            this._monthsShort['standalone'];
	    }
	    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
	        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
	}
	
	function handleStrictParse(monthName, format, strict) {
	    var i, ii, mom, llc = monthName.toLocaleLowerCase();
	    if (!this._monthsParse) {
	        // this is not used
	        this._monthsParse = [];
	        this._longMonthsParse = [];
	        this._shortMonthsParse = [];
	        for (i = 0; i < 12; ++i) {
	            mom = createUTC([2000, i]);
	            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
	            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
	        }
	    }
	
	    if (strict) {
	        if (format === 'MMM') {
	            ii = indexOf.call(this._shortMonthsParse, llc);
	            return ii !== -1 ? ii : null;
	        } else {
	            ii = indexOf.call(this._longMonthsParse, llc);
	            return ii !== -1 ? ii : null;
	        }
	    } else {
	        if (format === 'MMM') {
	            ii = indexOf.call(this._shortMonthsParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._longMonthsParse, llc);
	            return ii !== -1 ? ii : null;
	        } else {
	            ii = indexOf.call(this._longMonthsParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._shortMonthsParse, llc);
	            return ii !== -1 ? ii : null;
	        }
	    }
	}
	
	function localeMonthsParse (monthName, format, strict) {
	    var i, mom, regex;
	
	    if (this._monthsParseExact) {
	        return handleStrictParse.call(this, monthName, format, strict);
	    }
	
	    if (!this._monthsParse) {
	        this._monthsParse = [];
	        this._longMonthsParse = [];
	        this._shortMonthsParse = [];
	    }
	
	    // TODO: add sorting
	    // Sorting makes sure if one month (or abbr) is a prefix of another
	    // see sorting in computeMonthsParse
	    for (i = 0; i < 12; i++) {
	        // make the regex if we don't have it already
	        mom = createUTC([2000, i]);
	        if (strict && !this._longMonthsParse[i]) {
	            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
	            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
	        }
	        if (!strict && !this._monthsParse[i]) {
	            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	        }
	        // test the regex
	        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
	            return i;
	        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
	            return i;
	        } else if (!strict && this._monthsParse[i].test(monthName)) {
	            return i;
	        }
	    }
	}
	
	// MOMENTS
	
	function setMonth (mom, value) {
	    var dayOfMonth;
	
	    if (!mom.isValid()) {
	        // No op
	        return mom;
	    }
	
	    if (typeof value === 'string') {
	        if (/^\d+$/.test(value)) {
	            value = toInt(value);
	        } else {
	            value = mom.localeData().monthsParse(value);
	            // TODO: Another silent failure?
	            if (!isNumber(value)) {
	                return mom;
	            }
	        }
	    }
	
	    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	    return mom;
	}
	
	function getSetMonth (value) {
	    if (value != null) {
	        setMonth(this, value);
	        hooks.updateOffset(this, true);
	        return this;
	    } else {
	        return get(this, 'Month');
	    }
	}
	
	function getDaysInMonth () {
	    return daysInMonth(this.year(), this.month());
	}
	
	var defaultMonthsShortRegex = matchWord;
	function monthsShortRegex (isStrict) {
	    if (this._monthsParseExact) {
	        if (!hasOwnProp(this, '_monthsRegex')) {
	            computeMonthsParse.call(this);
	        }
	        if (isStrict) {
	            return this._monthsShortStrictRegex;
	        } else {
	            return this._monthsShortRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_monthsShortRegex')) {
	            this._monthsShortRegex = defaultMonthsShortRegex;
	        }
	        return this._monthsShortStrictRegex && isStrict ?
	            this._monthsShortStrictRegex : this._monthsShortRegex;
	    }
	}
	
	var defaultMonthsRegex = matchWord;
	function monthsRegex (isStrict) {
	    if (this._monthsParseExact) {
	        if (!hasOwnProp(this, '_monthsRegex')) {
	            computeMonthsParse.call(this);
	        }
	        if (isStrict) {
	            return this._monthsStrictRegex;
	        } else {
	            return this._monthsRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_monthsRegex')) {
	            this._monthsRegex = defaultMonthsRegex;
	        }
	        return this._monthsStrictRegex && isStrict ?
	            this._monthsStrictRegex : this._monthsRegex;
	    }
	}
	
	function computeMonthsParse () {
	    function cmpLenRev(a, b) {
	        return b.length - a.length;
	    }
	
	    var shortPieces = [], longPieces = [], mixedPieces = [],
	        i, mom;
	    for (i = 0; i < 12; i++) {
	        // make the regex if we don't have it already
	        mom = createUTC([2000, i]);
	        shortPieces.push(this.monthsShort(mom, ''));
	        longPieces.push(this.months(mom, ''));
	        mixedPieces.push(this.months(mom, ''));
	        mixedPieces.push(this.monthsShort(mom, ''));
	    }
	    // Sorting makes sure if one month (or abbr) is a prefix of another it
	    // will match the longer piece.
	    shortPieces.sort(cmpLenRev);
	    longPieces.sort(cmpLenRev);
	    mixedPieces.sort(cmpLenRev);
	    for (i = 0; i < 12; i++) {
	        shortPieces[i] = regexEscape(shortPieces[i]);
	        longPieces[i] = regexEscape(longPieces[i]);
	    }
	    for (i = 0; i < 24; i++) {
	        mixedPieces[i] = regexEscape(mixedPieces[i]);
	    }
	
	    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	    this._monthsShortRegex = this._monthsRegex;
	    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	}
	
	function createDate (y, m, d, h, M, s, ms) {
	    // can't just apply() to create a date:
	    // https://stackoverflow.com/q/181348
	    var date = new Date(y, m, d, h, M, s, ms);
	
	    // the date constructor remaps years 0-99 to 1900-1999
	    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
	        date.setFullYear(y);
	    }
	    return date;
	}
	
	function createUTCDate (y) {
	    var date = new Date(Date.UTC.apply(null, arguments));
	
	    // the Date.UTC function remaps years 0-99 to 1900-1999
	    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
	        date.setUTCFullYear(y);
	    }
	    return date;
	}
	
	// start-of-first-week - start-of-year
	function firstWeekOffset(year, dow, doy) {
	    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
	        fwd = 7 + dow - doy,
	        // first-week day local weekday -- which local weekday is fwd
	        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
	
	    return -fwdlw + fwd - 1;
	}
	
	// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
	    var localWeekday = (7 + weekday - dow) % 7,
	        weekOffset = firstWeekOffset(year, dow, doy),
	        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
	        resYear, resDayOfYear;
	
	    if (dayOfYear <= 0) {
	        resYear = year - 1;
	        resDayOfYear = daysInYear(resYear) + dayOfYear;
	    } else if (dayOfYear > daysInYear(year)) {
	        resYear = year + 1;
	        resDayOfYear = dayOfYear - daysInYear(year);
	    } else {
	        resYear = year;
	        resDayOfYear = dayOfYear;
	    }
	
	    return {
	        year: resYear,
	        dayOfYear: resDayOfYear
	    };
	}
	
	function weekOfYear(mom, dow, doy) {
	    var weekOffset = firstWeekOffset(mom.year(), dow, doy),
	        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
	        resWeek, resYear;
	
	    if (week < 1) {
	        resYear = mom.year() - 1;
	        resWeek = week + weeksInYear(resYear, dow, doy);
	    } else if (week > weeksInYear(mom.year(), dow, doy)) {
	        resWeek = week - weeksInYear(mom.year(), dow, doy);
	        resYear = mom.year() + 1;
	    } else {
	        resYear = mom.year();
	        resWeek = week;
	    }
	
	    return {
	        week: resWeek,
	        year: resYear
	    };
	}
	
	function weeksInYear(year, dow, doy) {
	    var weekOffset = firstWeekOffset(year, dow, doy),
	        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
	    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
	}
	
	// FORMATTING
	
	addFormatToken('w', ['ww', 2], 'wo', 'week');
	addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');
	
	// ALIASES
	
	addUnitAlias('week', 'w');
	addUnitAlias('isoWeek', 'W');
	
	// PRIORITIES
	
	addUnitPriority('week', 5);
	addUnitPriority('isoWeek', 5);
	
	// PARSING
	
	addRegexToken('w',  match1to2);
	addRegexToken('ww', match1to2, match2);
	addRegexToken('W',  match1to2);
	addRegexToken('WW', match1to2, match2);
	
	addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
	    week[token.substr(0, 1)] = toInt(input);
	});
	
	// HELPERS
	
	// LOCALES
	
	function localeWeek (mom) {
	    return weekOfYear(mom, this._week.dow, this._week.doy).week;
	}
	
	var defaultLocaleWeek = {
	    dow : 0, // Sunday is the first day of the week.
	    doy : 6  // The week that contains Jan 1st is the first week of the year.
	};
	
	function localeFirstDayOfWeek () {
	    return this._week.dow;
	}
	
	function localeFirstDayOfYear () {
	    return this._week.doy;
	}
	
	// MOMENTS
	
	function getSetWeek (input) {
	    var week = this.localeData().week(this);
	    return input == null ? week : this.add((input - week) * 7, 'd');
	}
	
	function getSetISOWeek (input) {
	    var week = weekOfYear(this, 1, 4).week;
	    return input == null ? week : this.add((input - week) * 7, 'd');
	}
	
	// FORMATTING
	
	addFormatToken('d', 0, 'do', 'day');
	
	addFormatToken('dd', 0, 0, function (format) {
	    return this.localeData().weekdaysMin(this, format);
	});
	
	addFormatToken('ddd', 0, 0, function (format) {
	    return this.localeData().weekdaysShort(this, format);
	});
	
	addFormatToken('dddd', 0, 0, function (format) {
	    return this.localeData().weekdays(this, format);
	});
	
	addFormatToken('e', 0, 0, 'weekday');
	addFormatToken('E', 0, 0, 'isoWeekday');
	
	// ALIASES
	
	addUnitAlias('day', 'd');
	addUnitAlias('weekday', 'e');
	addUnitAlias('isoWeekday', 'E');
	
	// PRIORITY
	addUnitPriority('day', 11);
	addUnitPriority('weekday', 11);
	addUnitPriority('isoWeekday', 11);
	
	// PARSING
	
	addRegexToken('d',    match1to2);
	addRegexToken('e',    match1to2);
	addRegexToken('E',    match1to2);
	addRegexToken('dd',   function (isStrict, locale) {
	    return locale.weekdaysMinRegex(isStrict);
	});
	addRegexToken('ddd',   function (isStrict, locale) {
	    return locale.weekdaysShortRegex(isStrict);
	});
	addRegexToken('dddd',   function (isStrict, locale) {
	    return locale.weekdaysRegex(isStrict);
	});
	
	addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
	    var weekday = config._locale.weekdaysParse(input, token, config._strict);
	    // if we didn't get a weekday name, mark the date as invalid
	    if (weekday != null) {
	        week.d = weekday;
	    } else {
	        getParsingFlags(config).invalidWeekday = input;
	    }
	});
	
	addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	    week[token] = toInt(input);
	});
	
	// HELPERS
	
	function parseWeekday(input, locale) {
	    if (typeof input !== 'string') {
	        return input;
	    }
	
	    if (!isNaN(input)) {
	        return parseInt(input, 10);
	    }
	
	    input = locale.weekdaysParse(input);
	    if (typeof input === 'number') {
	        return input;
	    }
	
	    return null;
	}
	
	function parseIsoWeekday(input, locale) {
	    if (typeof input === 'string') {
	        return locale.weekdaysParse(input) % 7 || 7;
	    }
	    return isNaN(input) ? null : input;
	}
	
	// LOCALES
	
	var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
	function localeWeekdays (m, format) {
	    if (!m) {
	        return isArray(this._weekdays) ? this._weekdays :
	            this._weekdays['standalone'];
	    }
	    return isArray(this._weekdays) ? this._weekdays[m.day()] :
	        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
	}
	
	var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
	function localeWeekdaysShort (m) {
	    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
	}
	
	var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
	function localeWeekdaysMin (m) {
	    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
	}
	
	function handleStrictParse$1(weekdayName, format, strict) {
	    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
	    if (!this._weekdaysParse) {
	        this._weekdaysParse = [];
	        this._shortWeekdaysParse = [];
	        this._minWeekdaysParse = [];
	
	        for (i = 0; i < 7; ++i) {
	            mom = createUTC([2000, 1]).day(i);
	            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
	            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
	            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
	        }
	    }
	
	    if (strict) {
	        if (format === 'dddd') {
	            ii = indexOf.call(this._weekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        } else if (format === 'ddd') {
	            ii = indexOf.call(this._shortWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        } else {
	            ii = indexOf.call(this._minWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        }
	    } else {
	        if (format === 'dddd') {
	            ii = indexOf.call(this._weekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._shortWeekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._minWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        } else if (format === 'ddd') {
	            ii = indexOf.call(this._shortWeekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._weekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._minWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        } else {
	            ii = indexOf.call(this._minWeekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._weekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._shortWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        }
	    }
	}
	
	function localeWeekdaysParse (weekdayName, format, strict) {
	    var i, mom, regex;
	
	    if (this._weekdaysParseExact) {
	        return handleStrictParse$1.call(this, weekdayName, format, strict);
	    }
	
	    if (!this._weekdaysParse) {
	        this._weekdaysParse = [];
	        this._minWeekdaysParse = [];
	        this._shortWeekdaysParse = [];
	        this._fullWeekdaysParse = [];
	    }
	
	    for (i = 0; i < 7; i++) {
	        // make the regex if we don't have it already
	
	        mom = createUTC([2000, 1]).day(i);
	        if (strict && !this._fullWeekdaysParse[i]) {
	            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
	            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
	            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
	        }
	        if (!this._weekdaysParse[i]) {
	            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
	            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	        }
	        // test the regex
	        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
	            return i;
	        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
	            return i;
	        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
	            return i;
	        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
	            return i;
	        }
	    }
	}
	
	// MOMENTS
	
	function getSetDayOfWeek (input) {
	    if (!this.isValid()) {
	        return input != null ? this : NaN;
	    }
	    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	    if (input != null) {
	        input = parseWeekday(input, this.localeData());
	        return this.add(input - day, 'd');
	    } else {
	        return day;
	    }
	}
	
	function getSetLocaleDayOfWeek (input) {
	    if (!this.isValid()) {
	        return input != null ? this : NaN;
	    }
	    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	    return input == null ? weekday : this.add(input - weekday, 'd');
	}
	
	function getSetISODayOfWeek (input) {
	    if (!this.isValid()) {
	        return input != null ? this : NaN;
	    }
	
	    // behaves the same as moment#day except
	    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	    // as a setter, sunday should belong to the previous week.
	
	    if (input != null) {
	        var weekday = parseIsoWeekday(input, this.localeData());
	        return this.day(this.day() % 7 ? weekday : weekday - 7);
	    } else {
	        return this.day() || 7;
	    }
	}
	
	var defaultWeekdaysRegex = matchWord;
	function weekdaysRegex (isStrict) {
	    if (this._weekdaysParseExact) {
	        if (!hasOwnProp(this, '_weekdaysRegex')) {
	            computeWeekdaysParse.call(this);
	        }
	        if (isStrict) {
	            return this._weekdaysStrictRegex;
	        } else {
	            return this._weekdaysRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_weekdaysRegex')) {
	            this._weekdaysRegex = defaultWeekdaysRegex;
	        }
	        return this._weekdaysStrictRegex && isStrict ?
	            this._weekdaysStrictRegex : this._weekdaysRegex;
	    }
	}
	
	var defaultWeekdaysShortRegex = matchWord;
	function weekdaysShortRegex (isStrict) {
	    if (this._weekdaysParseExact) {
	        if (!hasOwnProp(this, '_weekdaysRegex')) {
	            computeWeekdaysParse.call(this);
	        }
	        if (isStrict) {
	            return this._weekdaysShortStrictRegex;
	        } else {
	            return this._weekdaysShortRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_weekdaysShortRegex')) {
	            this._weekdaysShortRegex = defaultWeekdaysShortRegex;
	        }
	        return this._weekdaysShortStrictRegex && isStrict ?
	            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
	    }
	}
	
	var defaultWeekdaysMinRegex = matchWord;
	function weekdaysMinRegex (isStrict) {
	    if (this._weekdaysParseExact) {
	        if (!hasOwnProp(this, '_weekdaysRegex')) {
	            computeWeekdaysParse.call(this);
	        }
	        if (isStrict) {
	            return this._weekdaysMinStrictRegex;
	        } else {
	            return this._weekdaysMinRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_weekdaysMinRegex')) {
	            this._weekdaysMinRegex = defaultWeekdaysMinRegex;
	        }
	        return this._weekdaysMinStrictRegex && isStrict ?
	            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
	    }
	}
	
	
	function computeWeekdaysParse () {
	    function cmpLenRev(a, b) {
	        return b.length - a.length;
	    }
	
	    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
	        i, mom, minp, shortp, longp;
	    for (i = 0; i < 7; i++) {
	        // make the regex if we don't have it already
	        mom = createUTC([2000, 1]).day(i);
	        minp = this.weekdaysMin(mom, '');
	        shortp = this.weekdaysShort(mom, '');
	        longp = this.weekdays(mom, '');
	        minPieces.push(minp);
	        shortPieces.push(shortp);
	        longPieces.push(longp);
	        mixedPieces.push(minp);
	        mixedPieces.push(shortp);
	        mixedPieces.push(longp);
	    }
	    // Sorting makes sure if one weekday (or abbr) is a prefix of another it
	    // will match the longer piece.
	    minPieces.sort(cmpLenRev);
	    shortPieces.sort(cmpLenRev);
	    longPieces.sort(cmpLenRev);
	    mixedPieces.sort(cmpLenRev);
	    for (i = 0; i < 7; i++) {
	        shortPieces[i] = regexEscape(shortPieces[i]);
	        longPieces[i] = regexEscape(longPieces[i]);
	        mixedPieces[i] = regexEscape(mixedPieces[i]);
	    }
	
	    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	    this._weekdaysShortRegex = this._weekdaysRegex;
	    this._weekdaysMinRegex = this._weekdaysRegex;
	
	    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
	}
	
	// FORMATTING
	
	function hFormat() {
	    return this.hours() % 12 || 12;
	}
	
	function kFormat() {
	    return this.hours() || 24;
	}
	
	addFormatToken('H', ['HH', 2], 0, 'hour');
	addFormatToken('h', ['hh', 2], 0, hFormat);
	addFormatToken('k', ['kk', 2], 0, kFormat);
	
	addFormatToken('hmm', 0, 0, function () {
	    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
	});
	
	addFormatToken('hmmss', 0, 0, function () {
	    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
	        zeroFill(this.seconds(), 2);
	});
	
	addFormatToken('Hmm', 0, 0, function () {
	    return '' + this.hours() + zeroFill(this.minutes(), 2);
	});
	
	addFormatToken('Hmmss', 0, 0, function () {
	    return '' + this.hours() + zeroFill(this.minutes(), 2) +
	        zeroFill(this.seconds(), 2);
	});
	
	function meridiem (token, lowercase) {
	    addFormatToken(token, 0, 0, function () {
	        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
	    });
	}
	
	meridiem('a', true);
	meridiem('A', false);
	
	// ALIASES
	
	addUnitAlias('hour', 'h');
	
	// PRIORITY
	addUnitPriority('hour', 13);
	
	// PARSING
	
	function matchMeridiem (isStrict, locale) {
	    return locale._meridiemParse;
	}
	
	addRegexToken('a',  matchMeridiem);
	addRegexToken('A',  matchMeridiem);
	addRegexToken('H',  match1to2);
	addRegexToken('h',  match1to2);
	addRegexToken('k',  match1to2);
	addRegexToken('HH', match1to2, match2);
	addRegexToken('hh', match1to2, match2);
	addRegexToken('kk', match1to2, match2);
	
	addRegexToken('hmm', match3to4);
	addRegexToken('hmmss', match5to6);
	addRegexToken('Hmm', match3to4);
	addRegexToken('Hmmss', match5to6);
	
	addParseToken(['H', 'HH'], HOUR);
	addParseToken(['k', 'kk'], function (input, array, config) {
	    var kInput = toInt(input);
	    array[HOUR] = kInput === 24 ? 0 : kInput;
	});
	addParseToken(['a', 'A'], function (input, array, config) {
	    config._isPm = config._locale.isPM(input);
	    config._meridiem = input;
	});
	addParseToken(['h', 'hh'], function (input, array, config) {
	    array[HOUR] = toInt(input);
	    getParsingFlags(config).bigHour = true;
	});
	addParseToken('hmm', function (input, array, config) {
	    var pos = input.length - 2;
	    array[HOUR] = toInt(input.substr(0, pos));
	    array[MINUTE] = toInt(input.substr(pos));
	    getParsingFlags(config).bigHour = true;
	});
	addParseToken('hmmss', function (input, array, config) {
	    var pos1 = input.length - 4;
	    var pos2 = input.length - 2;
	    array[HOUR] = toInt(input.substr(0, pos1));
	    array[MINUTE] = toInt(input.substr(pos1, 2));
	    array[SECOND] = toInt(input.substr(pos2));
	    getParsingFlags(config).bigHour = true;
	});
	addParseToken('Hmm', function (input, array, config) {
	    var pos = input.length - 2;
	    array[HOUR] = toInt(input.substr(0, pos));
	    array[MINUTE] = toInt(input.substr(pos));
	});
	addParseToken('Hmmss', function (input, array, config) {
	    var pos1 = input.length - 4;
	    var pos2 = input.length - 2;
	    array[HOUR] = toInt(input.substr(0, pos1));
	    array[MINUTE] = toInt(input.substr(pos1, 2));
	    array[SECOND] = toInt(input.substr(pos2));
	});
	
	// LOCALES
	
	function localeIsPM (input) {
	    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	    // Using charAt should be more compatible.
	    return ((input + '').toLowerCase().charAt(0) === 'p');
	}
	
	var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
	function localeMeridiem (hours, minutes, isLower) {
	    if (hours > 11) {
	        return isLower ? 'pm' : 'PM';
	    } else {
	        return isLower ? 'am' : 'AM';
	    }
	}
	
	
	// MOMENTS
	
	// Setting the hour should keep the time, because the user explicitly
	// specified which hour he wants. So trying to maintain the same hour (in
	// a new timezone) makes sense. Adding/subtracting hours does not follow
	// this rule.
	var getSetHour = makeGetSet('Hours', true);
	
	// months
	// week
	// weekdays
	// meridiem
	var baseConfig = {
	    calendar: defaultCalendar,
	    longDateFormat: defaultLongDateFormat,
	    invalidDate: defaultInvalidDate,
	    ordinal: defaultOrdinal,
	    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
	    relativeTime: defaultRelativeTime,
	
	    months: defaultLocaleMonths,
	    monthsShort: defaultLocaleMonthsShort,
	
	    week: defaultLocaleWeek,
	
	    weekdays: defaultLocaleWeekdays,
	    weekdaysMin: defaultLocaleWeekdaysMin,
	    weekdaysShort: defaultLocaleWeekdaysShort,
	
	    meridiemParse: defaultLocaleMeridiemParse
	};
	
	// internal storage for locale config files
	var locales = {};
	var localeFamilies = {};
	var globalLocale;
	
	function normalizeLocale(key) {
	    return key ? key.toLowerCase().replace('_', '-') : key;
	}
	
	// pick the locale from the array
	// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	function chooseLocale(names) {
	    var i = 0, j, next, locale, split;
	
	    while (i < names.length) {
	        split = normalizeLocale(names[i]).split('-');
	        j = split.length;
	        next = normalizeLocale(names[i + 1]);
	        next = next ? next.split('-') : null;
	        while (j > 0) {
	            locale = loadLocale(split.slice(0, j).join('-'));
	            if (locale) {
	                return locale;
	            }
	            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
	                //the next array item is better than a shallower substring of this one
	                break;
	            }
	            j--;
	        }
	        i++;
	    }
	    return null;
	}
	
	function loadLocale(name) {
	    var oldLocale = null;
	    // TODO: Find a better way to register and load all the locales in Node
	    if (!locales[name] && (typeof module !== 'undefined') &&
	            module && module.exports) {
	        try {
	            oldLocale = globalLocale._abbr;
	            var aliasedRequire = require;
	            __webpack_require__(537)("./" + name);
	            getSetGlobalLocale(oldLocale);
	        } catch (e) {}
	    }
	    return locales[name];
	}
	
	// This function will load locale and then set the global locale.  If
	// no arguments are passed in, it will simply return the current global
	// locale key.
	function getSetGlobalLocale (key, values) {
	    var data;
	    if (key) {
	        if (isUndefined(values)) {
	            data = getLocale(key);
	        }
	        else {
	            data = defineLocale(key, values);
	        }
	
	        if (data) {
	            // moment.duration._locale = moment._locale = data;
	            globalLocale = data;
	        }
	    }
	
	    return globalLocale._abbr;
	}
	
	function defineLocale (name, config) {
	    if (config !== null) {
	        var parentConfig = baseConfig;
	        config.abbr = name;
	        if (locales[name] != null) {
	            deprecateSimple('defineLocaleOverride',
	                    'use moment.updateLocale(localeName, config) to change ' +
	                    'an existing locale. moment.defineLocale(localeName, ' +
	                    'config) should only be used for creating a new locale ' +
	                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
	            parentConfig = locales[name]._config;
	        } else if (config.parentLocale != null) {
	            if (locales[config.parentLocale] != null) {
	                parentConfig = locales[config.parentLocale]._config;
	            } else {
	                if (!localeFamilies[config.parentLocale]) {
	                    localeFamilies[config.parentLocale] = [];
	                }
	                localeFamilies[config.parentLocale].push({
	                    name: name,
	                    config: config
	                });
	                return null;
	            }
	        }
	        locales[name] = new Locale(mergeConfigs(parentConfig, config));
	
	        if (localeFamilies[name]) {
	            localeFamilies[name].forEach(function (x) {
	                defineLocale(x.name, x.config);
	            });
	        }
	
	        // backwards compat for now: also set the locale
	        // make sure we set the locale AFTER all child locales have been
	        // created, so we won't end up with the child locale set.
	        getSetGlobalLocale(name);
	
	
	        return locales[name];
	    } else {
	        // useful for testing
	        delete locales[name];
	        return null;
	    }
	}
	
	function updateLocale(name, config) {
	    if (config != null) {
	        var locale, tmpLocale, parentConfig = baseConfig;
	        // MERGE
	        tmpLocale = loadLocale(name);
	        if (tmpLocale != null) {
	            parentConfig = tmpLocale._config;
	        }
	        config = mergeConfigs(parentConfig, config);
	        locale = new Locale(config);
	        locale.parentLocale = locales[name];
	        locales[name] = locale;
	
	        // backwards compat for now: also set the locale
	        getSetGlobalLocale(name);
	    } else {
	        // pass null for config to unupdate, useful for tests
	        if (locales[name] != null) {
	            if (locales[name].parentLocale != null) {
	                locales[name] = locales[name].parentLocale;
	            } else if (locales[name] != null) {
	                delete locales[name];
	            }
	        }
	    }
	    return locales[name];
	}
	
	// returns locale data
	function getLocale (key) {
	    var locale;
	
	    if (key && key._locale && key._locale._abbr) {
	        key = key._locale._abbr;
	    }
	
	    if (!key) {
	        return globalLocale;
	    }
	
	    if (!isArray(key)) {
	        //short-circuit everything else
	        locale = loadLocale(key);
	        if (locale) {
	            return locale;
	        }
	        key = [key];
	    }
	
	    return chooseLocale(key);
	}
	
	function listLocales() {
	    return keys(locales);
	}
	
	function checkOverflow (m) {
	    var overflow;
	    var a = m._a;
	
	    if (a && getParsingFlags(m).overflow === -2) {
	        overflow =
	            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
	            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
	            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
	            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
	            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
	            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
	            -1;
	
	        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
	            overflow = DATE;
	        }
	        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
	            overflow = WEEK;
	        }
	        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
	            overflow = WEEKDAY;
	        }
	
	        getParsingFlags(m).overflow = overflow;
	    }
	
	    return m;
	}
	
	// Pick the first defined of two or three arguments.
	function defaults(a, b, c) {
	    if (a != null) {
	        return a;
	    }
	    if (b != null) {
	        return b;
	    }
	    return c;
	}
	
	function currentDateArray(config) {
	    // hooks is actually the exported moment object
	    var nowValue = new Date(hooks.now());
	    if (config._useUTC) {
	        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
	    }
	    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
	}
	
	// convert an array to a date.
	// the array should mirror the parameters below
	// note: all values past the year are optional and will default to the lowest possible value.
	// [year, month, day , hour, minute, second, millisecond]
	function configFromArray (config) {
	    var i, date, input = [], currentDate, expectedWeekday, yearToUse;
	
	    if (config._d) {
	        return;
	    }
	
	    currentDate = currentDateArray(config);
	
	    //compute day of the year from weeks and weekdays
	    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	        dayOfYearFromWeekInfo(config);
	    }
	
	    //if the day of the year is set, figure out what it is
	    if (config._dayOfYear != null) {
	        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);
	
	        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
	            getParsingFlags(config)._overflowDayOfYear = true;
	        }
	
	        date = createUTCDate(yearToUse, 0, config._dayOfYear);
	        config._a[MONTH] = date.getUTCMonth();
	        config._a[DATE] = date.getUTCDate();
	    }
	
	    // Default to current date.
	    // * if no year, month, day of month are given, default to today
	    // * if day of month is given, default month and year
	    // * if month is given, default only year
	    // * if year is given, don't default anything
	    for (i = 0; i < 3 && config._a[i] == null; ++i) {
	        config._a[i] = input[i] = currentDate[i];
	    }
	
	    // Zero out whatever was not defaulted, including time
	    for (; i < 7; i++) {
	        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
	    }
	
	    // Check for 24:00:00.000
	    if (config._a[HOUR] === 24 &&
	            config._a[MINUTE] === 0 &&
	            config._a[SECOND] === 0 &&
	            config._a[MILLISECOND] === 0) {
	        config._nextDay = true;
	        config._a[HOUR] = 0;
	    }
	
	    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
	    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();
	
	    // Apply timezone offset from input. The actual utcOffset can be changed
	    // with parseZone.
	    if (config._tzm != null) {
	        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	    }
	
	    if (config._nextDay) {
	        config._a[HOUR] = 24;
	    }
	
	    // check for mismatching day of week
	    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
	        getParsingFlags(config).weekdayMismatch = true;
	    }
	}
	
	function dayOfYearFromWeekInfo(config) {
	    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;
	
	    w = config._w;
	    if (w.GG != null || w.W != null || w.E != null) {
	        dow = 1;
	        doy = 4;
	
	        // TODO: We need to take the current isoWeekYear, but that depends on
	        // how we interpret now (local, utc, fixed offset). So create
	        // a now version of current config (take local/utc/offset flags, and
	        // create now).
	        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
	        week = defaults(w.W, 1);
	        weekday = defaults(w.E, 1);
	        if (weekday < 1 || weekday > 7) {
	            weekdayOverflow = true;
	        }
	    } else {
	        dow = config._locale._week.dow;
	        doy = config._locale._week.doy;
	
	        var curWeek = weekOfYear(createLocal(), dow, doy);
	
	        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);
	
	        // Default to current week.
	        week = defaults(w.w, curWeek.week);
	
	        if (w.d != null) {
	            // weekday -- low day numbers are considered next week
	            weekday = w.d;
	            if (weekday < 0 || weekday > 6) {
	                weekdayOverflow = true;
	            }
	        } else if (w.e != null) {
	            // local weekday -- counting starts from begining of week
	            weekday = w.e + dow;
	            if (w.e < 0 || w.e > 6) {
	                weekdayOverflow = true;
	            }
	        } else {
	            // default to begining of week
	            weekday = dow;
	        }
	    }
	    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
	        getParsingFlags(config)._overflowWeeks = true;
	    } else if (weekdayOverflow != null) {
	        getParsingFlags(config)._overflowWeekday = true;
	    } else {
	        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
	        config._a[YEAR] = temp.year;
	        config._dayOfYear = temp.dayOfYear;
	    }
	}
	
	// iso 8601 regex
	// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
	var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
	
	var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
	
	var isoDates = [
	    ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
	    ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
	    ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
	    ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
	    ['YYYY-DDD', /\d{4}-\d{3}/],
	    ['YYYY-MM', /\d{4}-\d\d/, false],
	    ['YYYYYYMMDD', /[+-]\d{10}/],
	    ['YYYYMMDD', /\d{8}/],
	    // YYYYMM is NOT allowed by the standard
	    ['GGGG[W]WWE', /\d{4}W\d{3}/],
	    ['GGGG[W]WW', /\d{4}W\d{2}/, false],
	    ['YYYYDDD', /\d{7}/]
	];
	
	// iso time formats and regexes
	var isoTimes = [
	    ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
	    ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
	    ['HH:mm:ss', /\d\d:\d\d:\d\d/],
	    ['HH:mm', /\d\d:\d\d/],
	    ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
	    ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
	    ['HHmmss', /\d\d\d\d\d\d/],
	    ['HHmm', /\d\d\d\d/],
	    ['HH', /\d\d/]
	];
	
	var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;
	
	// date from iso format
	function configFromISO(config) {
	    var i, l,
	        string = config._i,
	        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
	        allowTime, dateFormat, timeFormat, tzFormat;
	
	    if (match) {
	        getParsingFlags(config).iso = true;
	
	        for (i = 0, l = isoDates.length; i < l; i++) {
	            if (isoDates[i][1].exec(match[1])) {
	                dateFormat = isoDates[i][0];
	                allowTime = isoDates[i][2] !== false;
	                break;
	            }
	        }
	        if (dateFormat == null) {
	            config._isValid = false;
	            return;
	        }
	        if (match[3]) {
	            for (i = 0, l = isoTimes.length; i < l; i++) {
	                if (isoTimes[i][1].exec(match[3])) {
	                    // match[2] should be 'T' or space
	                    timeFormat = (match[2] || ' ') + isoTimes[i][0];
	                    break;
	                }
	            }
	            if (timeFormat == null) {
	                config._isValid = false;
	                return;
	            }
	        }
	        if (!allowTime && timeFormat != null) {
	            config._isValid = false;
	            return;
	        }
	        if (match[4]) {
	            if (tzRegex.exec(match[4])) {
	                tzFormat = 'Z';
	            } else {
	                config._isValid = false;
	                return;
	            }
	        }
	        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
	        configFromStringAndFormat(config);
	    } else {
	        config._isValid = false;
	    }
	}
	
	// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
	var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
	
	function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
	    var result = [
	        untruncateYear(yearStr),
	        defaultLocaleMonthsShort.indexOf(monthStr),
	        parseInt(dayStr, 10),
	        parseInt(hourStr, 10),
	        parseInt(minuteStr, 10)
	    ];
	
	    if (secondStr) {
	        result.push(parseInt(secondStr, 10));
	    }
	
	    return result;
	}
	
	function untruncateYear(yearStr) {
	    var year = parseInt(yearStr, 10);
	    if (year <= 49) {
	        return 2000 + year;
	    } else if (year <= 999) {
	        return 1900 + year;
	    }
	    return year;
	}
	
	function preprocessRFC2822(s) {
	    // Remove comments and folding whitespace and replace multiple-spaces with a single space
	    return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').trim();
	}
	
	function checkWeekday(weekdayStr, parsedInput, config) {
	    if (weekdayStr) {
	        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
	        var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
	            weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
	        if (weekdayProvided !== weekdayActual) {
	            getParsingFlags(config).weekdayMismatch = true;
	            config._isValid = false;
	            return false;
	        }
	    }
	    return true;
	}
	
	var obsOffsets = {
	    UT: 0,
	    GMT: 0,
	    EDT: -4 * 60,
	    EST: -5 * 60,
	    CDT: -5 * 60,
	    CST: -6 * 60,
	    MDT: -6 * 60,
	    MST: -7 * 60,
	    PDT: -7 * 60,
	    PST: -8 * 60
	};
	
	function calculateOffset(obsOffset, militaryOffset, numOffset) {
	    if (obsOffset) {
	        return obsOffsets[obsOffset];
	    } else if (militaryOffset) {
	        // the only allowed military tz is Z
	        return 0;
	    } else {
	        var hm = parseInt(numOffset, 10);
	        var m = hm % 100, h = (hm - m) / 100;
	        return h * 60 + m;
	    }
	}
	
	// date and time from ref 2822 format
	function configFromRFC2822(config) {
	    var match = rfc2822.exec(preprocessRFC2822(config._i));
	    if (match) {
	        var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
	        if (!checkWeekday(match[1], parsedArray, config)) {
	            return;
	        }
	
	        config._a = parsedArray;
	        config._tzm = calculateOffset(match[8], match[9], match[10]);
	
	        config._d = createUTCDate.apply(null, config._a);
	        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	
	        getParsingFlags(config).rfc2822 = true;
	    } else {
	        config._isValid = false;
	    }
	}
	
	// date from iso format or fallback
	function configFromString(config) {
	    var matched = aspNetJsonRegex.exec(config._i);
	
	    if (matched !== null) {
	        config._d = new Date(+matched[1]);
	        return;
	    }
	
	    configFromISO(config);
	    if (config._isValid === false) {
	        delete config._isValid;
	    } else {
	        return;
	    }
	
	    configFromRFC2822(config);
	    if (config._isValid === false) {
	        delete config._isValid;
	    } else {
	        return;
	    }
	
	    // Final attempt, use Input Fallback
	    hooks.createFromInputFallback(config);
	}
	
	hooks.createFromInputFallback = deprecate(
	    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
	    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
	    'discouraged and will be removed in an upcoming major release. Please refer to ' +
	    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
	    function (config) {
	        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	    }
	);
	
	// constant that refers to the ISO standard
	hooks.ISO_8601 = function () {};
	
	// constant that refers to the RFC 2822 form
	hooks.RFC_2822 = function () {};
	
	// date from string and format string
	function configFromStringAndFormat(config) {
	    // TODO: Move this to another part of the creation flow to prevent circular deps
	    if (config._f === hooks.ISO_8601) {
	        configFromISO(config);
	        return;
	    }
	    if (config._f === hooks.RFC_2822) {
	        configFromRFC2822(config);
	        return;
	    }
	    config._a = [];
	    getParsingFlags(config).empty = true;
	
	    // This array is used to make a Date, either with `new Date` or `Date.UTC`
	    var string = '' + config._i,
	        i, parsedInput, tokens, token, skipped,
	        stringLength = string.length,
	        totalParsedInputLength = 0;
	
	    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];
	
	    for (i = 0; i < tokens.length; i++) {
	        token = tokens[i];
	        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
	        // console.log('token', token, 'parsedInput', parsedInput,
	        //         'regex', getParseRegexForToken(token, config));
	        if (parsedInput) {
	            skipped = string.substr(0, string.indexOf(parsedInput));
	            if (skipped.length > 0) {
	                getParsingFlags(config).unusedInput.push(skipped);
	            }
	            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
	            totalParsedInputLength += parsedInput.length;
	        }
	        // don't parse if it's not a known token
	        if (formatTokenFunctions[token]) {
	            if (parsedInput) {
	                getParsingFlags(config).empty = false;
	            }
	            else {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	            addTimeToArrayFromToken(token, parsedInput, config);
	        }
	        else if (config._strict && !parsedInput) {
	            getParsingFlags(config).unusedTokens.push(token);
	        }
	    }
	
	    // add remaining unparsed input length to the string
	    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
	    if (string.length > 0) {
	        getParsingFlags(config).unusedInput.push(string);
	    }
	
	    // clear _12h flag if hour is <= 12
	    if (config._a[HOUR] <= 12 &&
	        getParsingFlags(config).bigHour === true &&
	        config._a[HOUR] > 0) {
	        getParsingFlags(config).bigHour = undefined;
	    }
	
	    getParsingFlags(config).parsedDateParts = config._a.slice(0);
	    getParsingFlags(config).meridiem = config._meridiem;
	    // handle meridiem
	    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
	
	    configFromArray(config);
	    checkOverflow(config);
	}
	
	
	function meridiemFixWrap (locale, hour, meridiem) {
	    var isPm;
	
	    if (meridiem == null) {
	        // nothing to do
	        return hour;
	    }
	    if (locale.meridiemHour != null) {
	        return locale.meridiemHour(hour, meridiem);
	    } else if (locale.isPM != null) {
	        // Fallback
	        isPm = locale.isPM(meridiem);
	        if (isPm && hour < 12) {
	            hour += 12;
	        }
	        if (!isPm && hour === 12) {
	            hour = 0;
	        }
	        return hour;
	    } else {
	        // this is not supposed to happen
	        return hour;
	    }
	}
	
	// date from string and array of format strings
	function configFromStringAndArray(config) {
	    var tempConfig,
	        bestMoment,
	
	        scoreToBeat,
	        i,
	        currentScore;
	
	    if (config._f.length === 0) {
	        getParsingFlags(config).invalidFormat = true;
	        config._d = new Date(NaN);
	        return;
	    }
	
	    for (i = 0; i < config._f.length; i++) {
	        currentScore = 0;
	        tempConfig = copyConfig({}, config);
	        if (config._useUTC != null) {
	            tempConfig._useUTC = config._useUTC;
	        }
	        tempConfig._f = config._f[i];
	        configFromStringAndFormat(tempConfig);
	
	        if (!isValid(tempConfig)) {
	            continue;
	        }
	
	        // if there is any input that was not parsed add a penalty for that format
	        currentScore += getParsingFlags(tempConfig).charsLeftOver;
	
	        //or tokens
	        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
	
	        getParsingFlags(tempConfig).score = currentScore;
	
	        if (scoreToBeat == null || currentScore < scoreToBeat) {
	            scoreToBeat = currentScore;
	            bestMoment = tempConfig;
	        }
	    }
	
	    extend(config, bestMoment || tempConfig);
	}
	
	function configFromObject(config) {
	    if (config._d) {
	        return;
	    }
	
	    var i = normalizeObjectUnits(config._i);
	    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
	        return obj && parseInt(obj, 10);
	    });
	
	    configFromArray(config);
	}
	
	function createFromConfig (config) {
	    var res = new Moment(checkOverflow(prepareConfig(config)));
	    if (res._nextDay) {
	        // Adding is smart enough around DST
	        res.add(1, 'd');
	        res._nextDay = undefined;
	    }
	
	    return res;
	}
	
	function prepareConfig (config) {
	    var input = config._i,
	        format = config._f;
	
	    config._locale = config._locale || getLocale(config._l);
	
	    if (input === null || (format === undefined && input === '')) {
	        return createInvalid({nullInput: true});
	    }
	
	    if (typeof input === 'string') {
	        config._i = input = config._locale.preparse(input);
	    }
	
	    if (isMoment(input)) {
	        return new Moment(checkOverflow(input));
	    } else if (isDate(input)) {
	        config._d = input;
	    } else if (isArray(format)) {
	        configFromStringAndArray(config);
	    } else if (format) {
	        configFromStringAndFormat(config);
	    }  else {
	        configFromInput(config);
	    }
	
	    if (!isValid(config)) {
	        config._d = null;
	    }
	
	    return config;
	}
	
	function configFromInput(config) {
	    var input = config._i;
	    if (isUndefined(input)) {
	        config._d = new Date(hooks.now());
	    } else if (isDate(input)) {
	        config._d = new Date(input.valueOf());
	    } else if (typeof input === 'string') {
	        configFromString(config);
	    } else if (isArray(input)) {
	        config._a = map(input.slice(0), function (obj) {
	            return parseInt(obj, 10);
	        });
	        configFromArray(config);
	    } else if (isObject(input)) {
	        configFromObject(config);
	    } else if (isNumber(input)) {
	        // from milliseconds
	        config._d = new Date(input);
	    } else {
	        hooks.createFromInputFallback(config);
	    }
	}
	
	function createLocalOrUTC (input, format, locale, strict, isUTC) {
	    var c = {};
	
	    if (locale === true || locale === false) {
	        strict = locale;
	        locale = undefined;
	    }
	
	    if ((isObject(input) && isObjectEmpty(input)) ||
	            (isArray(input) && input.length === 0)) {
	        input = undefined;
	    }
	    // object construction must be done this way.
	    // https://github.com/moment/moment/issues/1423
	    c._isAMomentObject = true;
	    c._useUTC = c._isUTC = isUTC;
	    c._l = locale;
	    c._i = input;
	    c._f = format;
	    c._strict = strict;
	
	    return createFromConfig(c);
	}
	
	function createLocal (input, format, locale, strict) {
	    return createLocalOrUTC(input, format, locale, strict, false);
	}
	
	var prototypeMin = deprecate(
	    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
	    function () {
	        var other = createLocal.apply(null, arguments);
	        if (this.isValid() && other.isValid()) {
	            return other < this ? this : other;
	        } else {
	            return createInvalid();
	        }
	    }
	);
	
	var prototypeMax = deprecate(
	    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
	    function () {
	        var other = createLocal.apply(null, arguments);
	        if (this.isValid() && other.isValid()) {
	            return other > this ? this : other;
	        } else {
	            return createInvalid();
	        }
	    }
	);
	
	// Pick a moment m from moments so that m[fn](other) is true for all
	// other. This relies on the function fn to be transitive.
	//
	// moments should either be an array of moment objects or an array, whose
	// first element is an array of moment objects.
	function pickBy(fn, moments) {
	    var res, i;
	    if (moments.length === 1 && isArray(moments[0])) {
	        moments = moments[0];
	    }
	    if (!moments.length) {
	        return createLocal();
	    }
	    res = moments[0];
	    for (i = 1; i < moments.length; ++i) {
	        if (!moments[i].isValid() || moments[i][fn](res)) {
	            res = moments[i];
	        }
	    }
	    return res;
	}
	
	// TODO: Use [].sort instead?
	function min () {
	    var args = [].slice.call(arguments, 0);
	
	    return pickBy('isBefore', args);
	}
	
	function max () {
	    var args = [].slice.call(arguments, 0);
	
	    return pickBy('isAfter', args);
	}
	
	var now = function () {
	    return Date.now ? Date.now() : +(new Date());
	};
	
	var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];
	
	function isDurationValid(m) {
	    for (var key in m) {
	        if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
	            return false;
	        }
	    }
	
	    var unitHasDecimal = false;
	    for (var i = 0; i < ordering.length; ++i) {
	        if (m[ordering[i]]) {
	            if (unitHasDecimal) {
	                return false; // only allow non-integers for smallest unit
	            }
	            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
	                unitHasDecimal = true;
	            }
	        }
	    }
	
	    return true;
	}
	
	function isValid$1() {
	    return this._isValid;
	}
	
	function createInvalid$1() {
	    return createDuration(NaN);
	}
	
	function Duration (duration) {
	    var normalizedInput = normalizeObjectUnits(duration),
	        years = normalizedInput.year || 0,
	        quarters = normalizedInput.quarter || 0,
	        months = normalizedInput.month || 0,
	        weeks = normalizedInput.week || 0,
	        days = normalizedInput.day || 0,
	        hours = normalizedInput.hour || 0,
	        minutes = normalizedInput.minute || 0,
	        seconds = normalizedInput.second || 0,
	        milliseconds = normalizedInput.millisecond || 0;
	
	    this._isValid = isDurationValid(normalizedInput);
	
	    // representation for dateAddRemove
	    this._milliseconds = +milliseconds +
	        seconds * 1e3 + // 1000
	        minutes * 6e4 + // 1000 * 60
	        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
	    // Because of dateAddRemove treats 24 hours as different from a
	    // day when working around DST, we need to store them separately
	    this._days = +days +
	        weeks * 7;
	    // It is impossible to translate months into days without knowing
	    // which months you are are talking about, so we have to store
	    // it separately.
	    this._months = +months +
	        quarters * 3 +
	        years * 12;
	
	    this._data = {};
	
	    this._locale = getLocale();
	
	    this._bubble();
	}
	
	function isDuration (obj) {
	    return obj instanceof Duration;
	}
	
	function absRound (number) {
	    if (number < 0) {
	        return Math.round(-1 * number) * -1;
	    } else {
	        return Math.round(number);
	    }
	}
	
	// FORMATTING
	
	function offset (token, separator) {
	    addFormatToken(token, 0, 0, function () {
	        var offset = this.utcOffset();
	        var sign = '+';
	        if (offset < 0) {
	            offset = -offset;
	            sign = '-';
	        }
	        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
	    });
	}
	
	offset('Z', ':');
	offset('ZZ', '');
	
	// PARSING
	
	addRegexToken('Z',  matchShortOffset);
	addRegexToken('ZZ', matchShortOffset);
	addParseToken(['Z', 'ZZ'], function (input, array, config) {
	    config._useUTC = true;
	    config._tzm = offsetFromString(matchShortOffset, input);
	});
	
	// HELPERS
	
	// timezone chunker
	// '+10:00' > ['10',  '00']
	// '-1530'  > ['-15', '30']
	var chunkOffset = /([\+\-]|\d\d)/gi;
	
	function offsetFromString(matcher, string) {
	    var matches = (string || '').match(matcher);
	
	    if (matches === null) {
	        return null;
	    }
	
	    var chunk   = matches[matches.length - 1] || [];
	    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	    var minutes = +(parts[1] * 60) + toInt(parts[2]);
	
	    return minutes === 0 ?
	      0 :
	      parts[0] === '+' ? minutes : -minutes;
	}
	
	// Return a moment from input, that is local/utc/zone equivalent to model.
	function cloneWithOffset(input, model) {
	    var res, diff;
	    if (model._isUTC) {
	        res = model.clone();
	        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
	        // Use low-level api, because this fn is low-level api.
	        res._d.setTime(res._d.valueOf() + diff);
	        hooks.updateOffset(res, false);
	        return res;
	    } else {
	        return createLocal(input).local();
	    }
	}
	
	function getDateOffset (m) {
	    // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	    // https://github.com/moment/moment/pull/1871
	    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
	}
	
	// HOOKS
	
	// This function will be called whenever a moment is mutated.
	// It is intended to keep the offset in sync with the timezone.
	hooks.updateOffset = function () {};
	
	// MOMENTS
	
	// keepLocalTime = true means only change the timezone, without
	// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	// +0200, so we adjust the time as needed, to be valid.
	//
	// Keeping the time actually adds/subtracts (one hour)
	// from the actual represented time. That is why we call updateOffset
	// a second time. In case it wants us to change the offset again
	// _changeInProgress == true case, then we have to adjust, because
	// there is no such time in the given timezone.
	function getSetOffset (input, keepLocalTime, keepMinutes) {
	    var offset = this._offset || 0,
	        localAdjust;
	    if (!this.isValid()) {
	        return input != null ? this : NaN;
	    }
	    if (input != null) {
	        if (typeof input === 'string') {
	            input = offsetFromString(matchShortOffset, input);
	            if (input === null) {
	                return this;
	            }
	        } else if (Math.abs(input) < 16 && !keepMinutes) {
	            input = input * 60;
	        }
	        if (!this._isUTC && keepLocalTime) {
	            localAdjust = getDateOffset(this);
	        }
	        this._offset = input;
	        this._isUTC = true;
	        if (localAdjust != null) {
	            this.add(localAdjust, 'm');
	        }
	        if (offset !== input) {
	            if (!keepLocalTime || this._changeInProgress) {
	                addSubtract(this, createDuration(input - offset, 'm'), 1, false);
	            } else if (!this._changeInProgress) {
	                this._changeInProgress = true;
	                hooks.updateOffset(this, true);
	                this._changeInProgress = null;
	            }
	        }
	        return this;
	    } else {
	        return this._isUTC ? offset : getDateOffset(this);
	    }
	}
	
	function getSetZone (input, keepLocalTime) {
	    if (input != null) {
	        if (typeof input !== 'string') {
	            input = -input;
	        }
	
	        this.utcOffset(input, keepLocalTime);
	
	        return this;
	    } else {
	        return -this.utcOffset();
	    }
	}
	
	function setOffsetToUTC (keepLocalTime) {
	    return this.utcOffset(0, keepLocalTime);
	}
	
	function setOffsetToLocal (keepLocalTime) {
	    if (this._isUTC) {
	        this.utcOffset(0, keepLocalTime);
	        this._isUTC = false;
	
	        if (keepLocalTime) {
	            this.subtract(getDateOffset(this), 'm');
	        }
	    }
	    return this;
	}
	
	function setOffsetToParsedOffset () {
	    if (this._tzm != null) {
	        this.utcOffset(this._tzm, false, true);
	    } else if (typeof this._i === 'string') {
	        var tZone = offsetFromString(matchOffset, this._i);
	        if (tZone != null) {
	            this.utcOffset(tZone);
	        }
	        else {
	            this.utcOffset(0, true);
	        }
	    }
	    return this;
	}
	
	function hasAlignedHourOffset (input) {
	    if (!this.isValid()) {
	        return false;
	    }
	    input = input ? createLocal(input).utcOffset() : 0;
	
	    return (this.utcOffset() - input) % 60 === 0;
	}
	
	function isDaylightSavingTime () {
	    return (
	        this.utcOffset() > this.clone().month(0).utcOffset() ||
	        this.utcOffset() > this.clone().month(5).utcOffset()
	    );
	}
	
	function isDaylightSavingTimeShifted () {
	    if (!isUndefined(this._isDSTShifted)) {
	        return this._isDSTShifted;
	    }
	
	    var c = {};
	
	    copyConfig(c, this);
	    c = prepareConfig(c);
	
	    if (c._a) {
	        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
	        this._isDSTShifted = this.isValid() &&
	            compareArrays(c._a, other.toArray()) > 0;
	    } else {
	        this._isDSTShifted = false;
	    }
	
	    return this._isDSTShifted;
	}
	
	function isLocal () {
	    return this.isValid() ? !this._isUTC : false;
	}
	
	function isUtcOffset () {
	    return this.isValid() ? this._isUTC : false;
	}
	
	function isUtc () {
	    return this.isValid() ? this._isUTC && this._offset === 0 : false;
	}
	
	// ASP.NET json date format regex
	var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;
	
	// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	// and further modified to allow for strings containing both week and day
	var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
	
	function createDuration (input, key) {
	    var duration = input,
	        // matching against regexp is expensive, do it on demand
	        match = null,
	        sign,
	        ret,
	        diffRes;
	
	    if (isDuration(input)) {
	        duration = {
	            ms : input._milliseconds,
	            d  : input._days,
	            M  : input._months
	        };
	    } else if (isNumber(input)) {
	        duration = {};
	        if (key) {
	            duration[key] = input;
	        } else {
	            duration.milliseconds = input;
	        }
	    } else if (!!(match = aspNetRegex.exec(input))) {
	        sign = (match[1] === '-') ? -1 : 1;
	        duration = {
	            y  : 0,
	            d  : toInt(match[DATE])                         * sign,
	            h  : toInt(match[HOUR])                         * sign,
	            m  : toInt(match[MINUTE])                       * sign,
	            s  : toInt(match[SECOND])                       * sign,
	            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
	        };
	    } else if (!!(match = isoRegex.exec(input))) {
	        sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;
	        duration = {
	            y : parseIso(match[2], sign),
	            M : parseIso(match[3], sign),
	            w : parseIso(match[4], sign),
	            d : parseIso(match[5], sign),
	            h : parseIso(match[6], sign),
	            m : parseIso(match[7], sign),
	            s : parseIso(match[8], sign)
	        };
	    } else if (duration == null) {// checks for null or undefined
	        duration = {};
	    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
	        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));
	
	        duration = {};
	        duration.ms = diffRes.milliseconds;
	        duration.M = diffRes.months;
	    }
	
	    ret = new Duration(duration);
	
	    if (isDuration(input) && hasOwnProp(input, '_locale')) {
	        ret._locale = input._locale;
	    }
	
	    return ret;
	}
	
	createDuration.fn = Duration.prototype;
	createDuration.invalid = createInvalid$1;
	
	function parseIso (inp, sign) {
	    // We'd normally use ~~inp for this, but unfortunately it also
	    // converts floats to ints.
	    // inp may be undefined, so careful calling replace on it.
	    var res = inp && parseFloat(inp.replace(',', '.'));
	    // apply sign while we're at it
	    return (isNaN(res) ? 0 : res) * sign;
	}
	
	function positiveMomentsDifference(base, other) {
	    var res = {milliseconds: 0, months: 0};
	
	    res.months = other.month() - base.month() +
	        (other.year() - base.year()) * 12;
	    if (base.clone().add(res.months, 'M').isAfter(other)) {
	        --res.months;
	    }
	
	    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));
	
	    return res;
	}
	
	function momentsDifference(base, other) {
	    var res;
	    if (!(base.isValid() && other.isValid())) {
	        return {milliseconds: 0, months: 0};
	    }
	
	    other = cloneWithOffset(other, base);
	    if (base.isBefore(other)) {
	        res = positiveMomentsDifference(base, other);
	    } else {
	        res = positiveMomentsDifference(other, base);
	        res.milliseconds = -res.milliseconds;
	        res.months = -res.months;
	    }
	
	    return res;
	}
	
	// TODO: remove 'name' arg after deprecation is removed
	function createAdder(direction, name) {
	    return function (val, period) {
	        var dur, tmp;
	        //invert the arguments, but complain about it
	        if (period !== null && !isNaN(+period)) {
	            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
	            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
	            tmp = val; val = period; period = tmp;
	        }
	
	        val = typeof val === 'string' ? +val : val;
	        dur = createDuration(val, period);
	        addSubtract(this, dur, direction);
	        return this;
	    };
	}
	
	function addSubtract (mom, duration, isAdding, updateOffset) {
	    var milliseconds = duration._milliseconds,
	        days = absRound(duration._days),
	        months = absRound(duration._months);
	
	    if (!mom.isValid()) {
	        // No op
	        return;
	    }
	
	    updateOffset = updateOffset == null ? true : updateOffset;
	
	    if (months) {
	        setMonth(mom, get(mom, 'Month') + months * isAdding);
	    }
	    if (days) {
	        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
	    }
	    if (milliseconds) {
	        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
	    }
	    if (updateOffset) {
	        hooks.updateOffset(mom, days || months);
	    }
	}
	
	var add      = createAdder(1, 'add');
	var subtract = createAdder(-1, 'subtract');
	
	function getCalendarFormat(myMoment, now) {
	    var diff = myMoment.diff(now, 'days', true);
	    return diff < -6 ? 'sameElse' :
	            diff < -1 ? 'lastWeek' :
	            diff < 0 ? 'lastDay' :
	            diff < 1 ? 'sameDay' :
	            diff < 2 ? 'nextDay' :
	            diff < 7 ? 'nextWeek' : 'sameElse';
	}
	
	function calendar$1 (time, formats) {
	    // We want to compare the start of today, vs this.
	    // Getting start-of-today depends on whether we're local/utc/offset or not.
	    var now = time || createLocal(),
	        sod = cloneWithOffset(now, this).startOf('day'),
	        format = hooks.calendarFormat(this, sod) || 'sameElse';
	
	    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);
	
	    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
	}
	
	function clone () {
	    return new Moment(this);
	}
	
	function isAfter (input, units) {
	    var localInput = isMoment(input) ? input : createLocal(input);
	    if (!(this.isValid() && localInput.isValid())) {
	        return false;
	    }
	    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
	    if (units === 'millisecond') {
	        return this.valueOf() > localInput.valueOf();
	    } else {
	        return localInput.valueOf() < this.clone().startOf(units).valueOf();
	    }
	}
	
	function isBefore (input, units) {
	    var localInput = isMoment(input) ? input : createLocal(input);
	    if (!(this.isValid() && localInput.isValid())) {
	        return false;
	    }
	    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
	    if (units === 'millisecond') {
	        return this.valueOf() < localInput.valueOf();
	    } else {
	        return this.clone().endOf(units).valueOf() < localInput.valueOf();
	    }
	}
	
	function isBetween (from, to, units, inclusivity) {
	    inclusivity = inclusivity || '()';
	    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
	        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
	}
	
	function isSame (input, units) {
	    var localInput = isMoment(input) ? input : createLocal(input),
	        inputMs;
	    if (!(this.isValid() && localInput.isValid())) {
	        return false;
	    }
	    units = normalizeUnits(units || 'millisecond');
	    if (units === 'millisecond') {
	        return this.valueOf() === localInput.valueOf();
	    } else {
	        inputMs = localInput.valueOf();
	        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
	    }
	}
	
	function isSameOrAfter (input, units) {
	    return this.isSame(input, units) || this.isAfter(input,units);
	}
	
	function isSameOrBefore (input, units) {
	    return this.isSame(input, units) || this.isBefore(input,units);
	}
	
	function diff (input, units, asFloat) {
	    var that,
	        zoneDelta,
	        delta, output;
	
	    if (!this.isValid()) {
	        return NaN;
	    }
	
	    that = cloneWithOffset(input, this);
	
	    if (!that.isValid()) {
	        return NaN;
	    }
	
	    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
	
	    units = normalizeUnits(units);
	
	    switch (units) {
	        case 'year': output = monthDiff(this, that) / 12; break;
	        case 'month': output = monthDiff(this, that); break;
	        case 'quarter': output = monthDiff(this, that) / 3; break;
	        case 'second': output = (this - that) / 1e3; break; // 1000
	        case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
	        case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
	        case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
	        case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
	        default: output = this - that;
	    }
	
	    return asFloat ? output : absFloor(output);
	}
	
	function monthDiff (a, b) {
	    // difference in months
	    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
	        // b is in (anchor - 1 month, anchor + 1 month)
	        anchor = a.clone().add(wholeMonthDiff, 'months'),
	        anchor2, adjust;
	
	    if (b - anchor < 0) {
	        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	        // linear across the month
	        adjust = (b - anchor) / (anchor - anchor2);
	    } else {
	        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	        // linear across the month
	        adjust = (b - anchor) / (anchor2 - anchor);
	    }
	
	    //check for negative zero, return zero if negative zero
	    return -(wholeMonthDiff + adjust) || 0;
	}
	
	hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
	hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';
	
	function toString () {
	    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	}
	
	function toISOString(keepOffset) {
	    if (!this.isValid()) {
	        return null;
	    }
	    var utc = keepOffset !== true;
	    var m = utc ? this.clone().utc() : this;
	    if (m.year() < 0 || m.year() > 9999) {
	        return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
	    }
	    if (isFunction(Date.prototype.toISOString)) {
	        // native implementation is ~50x faster, use it when we can
	        if (utc) {
	            return this.toDate().toISOString();
	        } else {
	            return new Date(this._d.valueOf()).toISOString().replace('Z', formatMoment(m, 'Z'));
	        }
	    }
	    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
	}
	
	/**
	 * Return a human readable representation of a moment that can
	 * also be evaluated to get a new moment which is the same
	 *
	 * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
	 */
	function inspect () {
	    if (!this.isValid()) {
	        return 'moment.invalid(/* ' + this._i + ' */)';
	    }
	    var func = 'moment';
	    var zone = '';
	    if (!this.isLocal()) {
	        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
	        zone = 'Z';
	    }
	    var prefix = '[' + func + '("]';
	    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
	    var datetime = '-MM-DD[T]HH:mm:ss.SSS';
	    var suffix = zone + '[")]';
	
	    return this.format(prefix + year + datetime + suffix);
	}
	
	function format (inputString) {
	    if (!inputString) {
	        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
	    }
	    var output = formatMoment(this, inputString);
	    return this.localeData().postformat(output);
	}
	
	function from (time, withoutSuffix) {
	    if (this.isValid() &&
	            ((isMoment(time) && time.isValid()) ||
	             createLocal(time).isValid())) {
	        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
	    } else {
	        return this.localeData().invalidDate();
	    }
	}
	
	function fromNow (withoutSuffix) {
	    return this.from(createLocal(), withoutSuffix);
	}
	
	function to (time, withoutSuffix) {
	    if (this.isValid() &&
	            ((isMoment(time) && time.isValid()) ||
	             createLocal(time).isValid())) {
	        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
	    } else {
	        return this.localeData().invalidDate();
	    }
	}
	
	function toNow (withoutSuffix) {
	    return this.to(createLocal(), withoutSuffix);
	}
	
	// If passed a locale key, it will set the locale for this
	// instance.  Otherwise, it will return the locale configuration
	// variables for this instance.
	function locale (key) {
	    var newLocaleData;
	
	    if (key === undefined) {
	        return this._locale._abbr;
	    } else {
	        newLocaleData = getLocale(key);
	        if (newLocaleData != null) {
	            this._locale = newLocaleData;
	        }
	        return this;
	    }
	}
	
	var lang = deprecate(
	    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	    function (key) {
	        if (key === undefined) {
	            return this.localeData();
	        } else {
	            return this.locale(key);
	        }
	    }
	);
	
	function localeData () {
	    return this._locale;
	}
	
	function startOf (units) {
	    units = normalizeUnits(units);
	    // the following switch intentionally omits break keywords
	    // to utilize falling through the cases.
	    switch (units) {
	        case 'year':
	            this.month(0);
	            /* falls through */
	        case 'quarter':
	        case 'month':
	            this.date(1);
	            /* falls through */
	        case 'week':
	        case 'isoWeek':
	        case 'day':
	        case 'date':
	            this.hours(0);
	            /* falls through */
	        case 'hour':
	            this.minutes(0);
	            /* falls through */
	        case 'minute':
	            this.seconds(0);
	            /* falls through */
	        case 'second':
	            this.milliseconds(0);
	    }
	
	    // weeks are a special case
	    if (units === 'week') {
	        this.weekday(0);
	    }
	    if (units === 'isoWeek') {
	        this.isoWeekday(1);
	    }
	
	    // quarters are also special
	    if (units === 'quarter') {
	        this.month(Math.floor(this.month() / 3) * 3);
	    }
	
	    return this;
	}
	
	function endOf (units) {
	    units = normalizeUnits(units);
	    if (units === undefined || units === 'millisecond') {
	        return this;
	    }
	
	    // 'date' is an alias for 'day', so it should be considered as such.
	    if (units === 'date') {
	        units = 'day';
	    }
	
	    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
	}
	
	function valueOf () {
	    return this._d.valueOf() - ((this._offset || 0) * 60000);
	}
	
	function unix () {
	    return Math.floor(this.valueOf() / 1000);
	}
	
	function toDate () {
	    return new Date(this.valueOf());
	}
	
	function toArray () {
	    var m = this;
	    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
	}
	
	function toObject () {
	    var m = this;
	    return {
	        years: m.year(),
	        months: m.month(),
	        date: m.date(),
	        hours: m.hours(),
	        minutes: m.minutes(),
	        seconds: m.seconds(),
	        milliseconds: m.milliseconds()
	    };
	}
	
	function toJSON () {
	    // new Date(NaN).toJSON() === null
	    return this.isValid() ? this.toISOString() : null;
	}
	
	function isValid$2 () {
	    return isValid(this);
	}
	
	function parsingFlags () {
	    return extend({}, getParsingFlags(this));
	}
	
	function invalidAt () {
	    return getParsingFlags(this).overflow;
	}
	
	function creationData() {
	    return {
	        input: this._i,
	        format: this._f,
	        locale: this._locale,
	        isUTC: this._isUTC,
	        strict: this._strict
	    };
	}
	
	// FORMATTING
	
	addFormatToken(0, ['gg', 2], 0, function () {
	    return this.weekYear() % 100;
	});
	
	addFormatToken(0, ['GG', 2], 0, function () {
	    return this.isoWeekYear() % 100;
	});
	
	function addWeekYearFormatToken (token, getter) {
	    addFormatToken(0, [token, token.length], 0, getter);
	}
	
	addWeekYearFormatToken('gggg',     'weekYear');
	addWeekYearFormatToken('ggggg',    'weekYear');
	addWeekYearFormatToken('GGGG',  'isoWeekYear');
	addWeekYearFormatToken('GGGGG', 'isoWeekYear');
	
	// ALIASES
	
	addUnitAlias('weekYear', 'gg');
	addUnitAlias('isoWeekYear', 'GG');
	
	// PRIORITY
	
	addUnitPriority('weekYear', 1);
	addUnitPriority('isoWeekYear', 1);
	
	
	// PARSING
	
	addRegexToken('G',      matchSigned);
	addRegexToken('g',      matchSigned);
	addRegexToken('GG',     match1to2, match2);
	addRegexToken('gg',     match1to2, match2);
	addRegexToken('GGGG',   match1to4, match4);
	addRegexToken('gggg',   match1to4, match4);
	addRegexToken('GGGGG',  match1to6, match6);
	addRegexToken('ggggg',  match1to6, match6);
	
	addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
	    week[token.substr(0, 2)] = toInt(input);
	});
	
	addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	    week[token] = hooks.parseTwoDigitYear(input);
	});
	
	// MOMENTS
	
	function getSetWeekYear (input) {
	    return getSetWeekYearHelper.call(this,
	            input,
	            this.week(),
	            this.weekday(),
	            this.localeData()._week.dow,
	            this.localeData()._week.doy);
	}
	
	function getSetISOWeekYear (input) {
	    return getSetWeekYearHelper.call(this,
	            input, this.isoWeek(), this.isoWeekday(), 1, 4);
	}
	
	function getISOWeeksInYear () {
	    return weeksInYear(this.year(), 1, 4);
	}
	
	function getWeeksInYear () {
	    var weekInfo = this.localeData()._week;
	    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	}
	
	function getSetWeekYearHelper(input, week, weekday, dow, doy) {
	    var weeksTarget;
	    if (input == null) {
	        return weekOfYear(this, dow, doy).year;
	    } else {
	        weeksTarget = weeksInYear(input, dow, doy);
	        if (week > weeksTarget) {
	            week = weeksTarget;
	        }
	        return setWeekAll.call(this, input, week, weekday, dow, doy);
	    }
	}
	
	function setWeekAll(weekYear, week, weekday, dow, doy) {
	    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
	        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
	
	    this.year(date.getUTCFullYear());
	    this.month(date.getUTCMonth());
	    this.date(date.getUTCDate());
	    return this;
	}
	
	// FORMATTING
	
	addFormatToken('Q', 0, 'Qo', 'quarter');
	
	// ALIASES
	
	addUnitAlias('quarter', 'Q');
	
	// PRIORITY
	
	addUnitPriority('quarter', 7);
	
	// PARSING
	
	addRegexToken('Q', match1);
	addParseToken('Q', function (input, array) {
	    array[MONTH] = (toInt(input) - 1) * 3;
	});
	
	// MOMENTS
	
	function getSetQuarter (input) {
	    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
	}
	
	// FORMATTING
	
	addFormatToken('D', ['DD', 2], 'Do', 'date');
	
	// ALIASES
	
	addUnitAlias('date', 'D');
	
	// PRIOROITY
	addUnitPriority('date', 9);
	
	// PARSING
	
	addRegexToken('D',  match1to2);
	addRegexToken('DD', match1to2, match2);
	addRegexToken('Do', function (isStrict, locale) {
	    // TODO: Remove "ordinalParse" fallback in next major release.
	    return isStrict ?
	      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
	      locale._dayOfMonthOrdinalParseLenient;
	});
	
	addParseToken(['D', 'DD'], DATE);
	addParseToken('Do', function (input, array) {
	    array[DATE] = toInt(input.match(match1to2)[0]);
	});
	
	// MOMENTS
	
	var getSetDayOfMonth = makeGetSet('Date', true);
	
	// FORMATTING
	
	addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');
	
	// ALIASES
	
	addUnitAlias('dayOfYear', 'DDD');
	
	// PRIORITY
	addUnitPriority('dayOfYear', 4);
	
	// PARSING
	
	addRegexToken('DDD',  match1to3);
	addRegexToken('DDDD', match3);
	addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	    config._dayOfYear = toInt(input);
	});
	
	// HELPERS
	
	// MOMENTS
	
	function getSetDayOfYear (input) {
	    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
	    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
	}
	
	// FORMATTING
	
	addFormatToken('m', ['mm', 2], 0, 'minute');
	
	// ALIASES
	
	addUnitAlias('minute', 'm');
	
	// PRIORITY
	
	addUnitPriority('minute', 14);
	
	// PARSING
	
	addRegexToken('m',  match1to2);
	addRegexToken('mm', match1to2, match2);
	addParseToken(['m', 'mm'], MINUTE);
	
	// MOMENTS
	
	var getSetMinute = makeGetSet('Minutes', false);
	
	// FORMATTING
	
	addFormatToken('s', ['ss', 2], 0, 'second');
	
	// ALIASES
	
	addUnitAlias('second', 's');
	
	// PRIORITY
	
	addUnitPriority('second', 15);
	
	// PARSING
	
	addRegexToken('s',  match1to2);
	addRegexToken('ss', match1to2, match2);
	addParseToken(['s', 'ss'], SECOND);
	
	// MOMENTS
	
	var getSetSecond = makeGetSet('Seconds', false);
	
	// FORMATTING
	
	addFormatToken('S', 0, 0, function () {
	    return ~~(this.millisecond() / 100);
	});
	
	addFormatToken(0, ['SS', 2], 0, function () {
	    return ~~(this.millisecond() / 10);
	});
	
	addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	addFormatToken(0, ['SSSS', 4], 0, function () {
	    return this.millisecond() * 10;
	});
	addFormatToken(0, ['SSSSS', 5], 0, function () {
	    return this.millisecond() * 100;
	});
	addFormatToken(0, ['SSSSSS', 6], 0, function () {
	    return this.millisecond() * 1000;
	});
	addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	    return this.millisecond() * 10000;
	});
	addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	    return this.millisecond() * 100000;
	});
	addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	    return this.millisecond() * 1000000;
	});
	
	
	// ALIASES
	
	addUnitAlias('millisecond', 'ms');
	
	// PRIORITY
	
	addUnitPriority('millisecond', 16);
	
	// PARSING
	
	addRegexToken('S',    match1to3, match1);
	addRegexToken('SS',   match1to3, match2);
	addRegexToken('SSS',  match1to3, match3);
	
	var token;
	for (token = 'SSSS'; token.length <= 9; token += 'S') {
	    addRegexToken(token, matchUnsigned);
	}
	
	function parseMs(input, array) {
	    array[MILLISECOND] = toInt(('0.' + input) * 1000);
	}
	
	for (token = 'S'; token.length <= 9; token += 'S') {
	    addParseToken(token, parseMs);
	}
	// MOMENTS
	
	var getSetMillisecond = makeGetSet('Milliseconds', false);
	
	// FORMATTING
	
	addFormatToken('z',  0, 0, 'zoneAbbr');
	addFormatToken('zz', 0, 0, 'zoneName');
	
	// MOMENTS
	
	function getZoneAbbr () {
	    return this._isUTC ? 'UTC' : '';
	}
	
	function getZoneName () {
	    return this._isUTC ? 'Coordinated Universal Time' : '';
	}
	
	var proto = Moment.prototype;
	
	proto.add               = add;
	proto.calendar          = calendar$1;
	proto.clone             = clone;
	proto.diff              = diff;
	proto.endOf             = endOf;
	proto.format            = format;
	proto.from              = from;
	proto.fromNow           = fromNow;
	proto.to                = to;
	proto.toNow             = toNow;
	proto.get               = stringGet;
	proto.invalidAt         = invalidAt;
	proto.isAfter           = isAfter;
	proto.isBefore          = isBefore;
	proto.isBetween         = isBetween;
	proto.isSame            = isSame;
	proto.isSameOrAfter     = isSameOrAfter;
	proto.isSameOrBefore    = isSameOrBefore;
	proto.isValid           = isValid$2;
	proto.lang              = lang;
	proto.locale            = locale;
	proto.localeData        = localeData;
	proto.max               = prototypeMax;
	proto.min               = prototypeMin;
	proto.parsingFlags      = parsingFlags;
	proto.set               = stringSet;
	proto.startOf           = startOf;
	proto.subtract          = subtract;
	proto.toArray           = toArray;
	proto.toObject          = toObject;
	proto.toDate            = toDate;
	proto.toISOString       = toISOString;
	proto.inspect           = inspect;
	proto.toJSON            = toJSON;
	proto.toString          = toString;
	proto.unix              = unix;
	proto.valueOf           = valueOf;
	proto.creationData      = creationData;
	
	// Year
	proto.year       = getSetYear;
	proto.isLeapYear = getIsLeapYear;
	
	// Week Year
	proto.weekYear    = getSetWeekYear;
	proto.isoWeekYear = getSetISOWeekYear;
	
	// Quarter
	proto.quarter = proto.quarters = getSetQuarter;
	
	// Month
	proto.month       = getSetMonth;
	proto.daysInMonth = getDaysInMonth;
	
	// Week
	proto.week           = proto.weeks        = getSetWeek;
	proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
	proto.weeksInYear    = getWeeksInYear;
	proto.isoWeeksInYear = getISOWeeksInYear;
	
	// Day
	proto.date       = getSetDayOfMonth;
	proto.day        = proto.days             = getSetDayOfWeek;
	proto.weekday    = getSetLocaleDayOfWeek;
	proto.isoWeekday = getSetISODayOfWeek;
	proto.dayOfYear  = getSetDayOfYear;
	
	// Hour
	proto.hour = proto.hours = getSetHour;
	
	// Minute
	proto.minute = proto.minutes = getSetMinute;
	
	// Second
	proto.second = proto.seconds = getSetSecond;
	
	// Millisecond
	proto.millisecond = proto.milliseconds = getSetMillisecond;
	
	// Offset
	proto.utcOffset            = getSetOffset;
	proto.utc                  = setOffsetToUTC;
	proto.local                = setOffsetToLocal;
	proto.parseZone            = setOffsetToParsedOffset;
	proto.hasAlignedHourOffset = hasAlignedHourOffset;
	proto.isDST                = isDaylightSavingTime;
	proto.isLocal              = isLocal;
	proto.isUtcOffset          = isUtcOffset;
	proto.isUtc                = isUtc;
	proto.isUTC                = isUtc;
	
	// Timezone
	proto.zoneAbbr = getZoneAbbr;
	proto.zoneName = getZoneName;
	
	// Deprecations
	proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
	proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
	proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
	proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
	proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);
	
	function createUnix (input) {
	    return createLocal(input * 1000);
	}
	
	function createInZone () {
	    return createLocal.apply(null, arguments).parseZone();
	}
	
	function preParsePostFormat (string) {
	    return string;
	}
	
	var proto$1 = Locale.prototype;
	
	proto$1.calendar        = calendar;
	proto$1.longDateFormat  = longDateFormat;
	proto$1.invalidDate     = invalidDate;
	proto$1.ordinal         = ordinal;
	proto$1.preparse        = preParsePostFormat;
	proto$1.postformat      = preParsePostFormat;
	proto$1.relativeTime    = relativeTime;
	proto$1.pastFuture      = pastFuture;
	proto$1.set             = set;
	
	// Month
	proto$1.months            =        localeMonths;
	proto$1.monthsShort       =        localeMonthsShort;
	proto$1.monthsParse       =        localeMonthsParse;
	proto$1.monthsRegex       = monthsRegex;
	proto$1.monthsShortRegex  = monthsShortRegex;
	
	// Week
	proto$1.week = localeWeek;
	proto$1.firstDayOfYear = localeFirstDayOfYear;
	proto$1.firstDayOfWeek = localeFirstDayOfWeek;
	
	// Day of Week
	proto$1.weekdays       =        localeWeekdays;
	proto$1.weekdaysMin    =        localeWeekdaysMin;
	proto$1.weekdaysShort  =        localeWeekdaysShort;
	proto$1.weekdaysParse  =        localeWeekdaysParse;
	
	proto$1.weekdaysRegex       =        weekdaysRegex;
	proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
	proto$1.weekdaysMinRegex    =        weekdaysMinRegex;
	
	// Hours
	proto$1.isPM = localeIsPM;
	proto$1.meridiem = localeMeridiem;
	
	function get$1 (format, index, field, setter) {
	    var locale = getLocale();
	    var utc = createUTC().set(setter, index);
	    return locale[field](utc, format);
	}
	
	function listMonthsImpl (format, index, field) {
	    if (isNumber(format)) {
	        index = format;
	        format = undefined;
	    }
	
	    format = format || '';
	
	    if (index != null) {
	        return get$1(format, index, field, 'month');
	    }
	
	    var i;
	    var out = [];
	    for (i = 0; i < 12; i++) {
	        out[i] = get$1(format, i, field, 'month');
	    }
	    return out;
	}
	
	// ()
	// (5)
	// (fmt, 5)
	// (fmt)
	// (true)
	// (true, 5)
	// (true, fmt, 5)
	// (true, fmt)
	function listWeekdaysImpl (localeSorted, format, index, field) {
	    if (typeof localeSorted === 'boolean') {
	        if (isNumber(format)) {
	            index = format;
	            format = undefined;
	        }
	
	        format = format || '';
	    } else {
	        format = localeSorted;
	        index = format;
	        localeSorted = false;
	
	        if (isNumber(format)) {
	            index = format;
	            format = undefined;
	        }
	
	        format = format || '';
	    }
	
	    var locale = getLocale(),
	        shift = localeSorted ? locale._week.dow : 0;
	
	    if (index != null) {
	        return get$1(format, (index + shift) % 7, field, 'day');
	    }
	
	    var i;
	    var out = [];
	    for (i = 0; i < 7; i++) {
	        out[i] = get$1(format, (i + shift) % 7, field, 'day');
	    }
	    return out;
	}
	
	function listMonths (format, index) {
	    return listMonthsImpl(format, index, 'months');
	}
	
	function listMonthsShort (format, index) {
	    return listMonthsImpl(format, index, 'monthsShort');
	}
	
	function listWeekdays (localeSorted, format, index) {
	    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
	}
	
	function listWeekdaysShort (localeSorted, format, index) {
	    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
	}
	
	function listWeekdaysMin (localeSorted, format, index) {
	    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
	}
	
	getSetGlobalLocale('en', {
	    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (toInt(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    }
	});
	
	// Side effect imports
	hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
	hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);
	
	var mathAbs = Math.abs;
	
	function abs () {
	    var data           = this._data;
	
	    this._milliseconds = mathAbs(this._milliseconds);
	    this._days         = mathAbs(this._days);
	    this._months       = mathAbs(this._months);
	
	    data.milliseconds  = mathAbs(data.milliseconds);
	    data.seconds       = mathAbs(data.seconds);
	    data.minutes       = mathAbs(data.minutes);
	    data.hours         = mathAbs(data.hours);
	    data.months        = mathAbs(data.months);
	    data.years         = mathAbs(data.years);
	
	    return this;
	}
	
	function addSubtract$1 (duration, input, value, direction) {
	    var other = createDuration(input, value);
	
	    duration._milliseconds += direction * other._milliseconds;
	    duration._days         += direction * other._days;
	    duration._months       += direction * other._months;
	
	    return duration._bubble();
	}
	
	// supports only 2.0-style add(1, 's') or add(duration)
	function add$1 (input, value) {
	    return addSubtract$1(this, input, value, 1);
	}
	
	// supports only 2.0-style subtract(1, 's') or subtract(duration)
	function subtract$1 (input, value) {
	    return addSubtract$1(this, input, value, -1);
	}
	
	function absCeil (number) {
	    if (number < 0) {
	        return Math.floor(number);
	    } else {
	        return Math.ceil(number);
	    }
	}
	
	function bubble () {
	    var milliseconds = this._milliseconds;
	    var days         = this._days;
	    var months       = this._months;
	    var data         = this._data;
	    var seconds, minutes, hours, years, monthsFromDays;
	
	    // if we have a mix of positive and negative values, bubble down first
	    // check: https://github.com/moment/moment/issues/2166
	    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
	            (milliseconds <= 0 && days <= 0 && months <= 0))) {
	        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	        days = 0;
	        months = 0;
	    }
	
	    // The following code bubbles up values, see the tests for
	    // examples of what that means.
	    data.milliseconds = milliseconds % 1000;
	
	    seconds           = absFloor(milliseconds / 1000);
	    data.seconds      = seconds % 60;
	
	    minutes           = absFloor(seconds / 60);
	    data.minutes      = minutes % 60;
	
	    hours             = absFloor(minutes / 60);
	    data.hours        = hours % 24;
	
	    days += absFloor(hours / 24);
	
	    // convert days to months
	    monthsFromDays = absFloor(daysToMonths(days));
	    months += monthsFromDays;
	    days -= absCeil(monthsToDays(monthsFromDays));
	
	    // 12 months -> 1 year
	    years = absFloor(months / 12);
	    months %= 12;
	
	    data.days   = days;
	    data.months = months;
	    data.years  = years;
	
	    return this;
	}
	
	function daysToMonths (days) {
	    // 400 years have 146097 days (taking into account leap year rules)
	    // 400 years have 12 months === 4800
	    return days * 4800 / 146097;
	}
	
	function monthsToDays (months) {
	    // the reverse of daysToMonths
	    return months * 146097 / 4800;
	}
	
	function as (units) {
	    if (!this.isValid()) {
	        return NaN;
	    }
	    var days;
	    var months;
	    var milliseconds = this._milliseconds;
	
	    units = normalizeUnits(units);
	
	    if (units === 'month' || units === 'year') {
	        days   = this._days   + milliseconds / 864e5;
	        months = this._months + daysToMonths(days);
	        return units === 'month' ? months : months / 12;
	    } else {
	        // handle milliseconds separately because of floating point math errors (issue #1867)
	        days = this._days + Math.round(monthsToDays(this._months));
	        switch (units) {
	            case 'week'   : return days / 7     + milliseconds / 6048e5;
	            case 'day'    : return days         + milliseconds / 864e5;
	            case 'hour'   : return days * 24    + milliseconds / 36e5;
	            case 'minute' : return days * 1440  + milliseconds / 6e4;
	            case 'second' : return days * 86400 + milliseconds / 1000;
	            // Math.floor prevents floating point math errors here
	            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
	            default: throw new Error('Unknown unit ' + units);
	        }
	    }
	}
	
	// TODO: Use this.as('ms')?
	function valueOf$1 () {
	    if (!this.isValid()) {
	        return NaN;
	    }
	    return (
	        this._milliseconds +
	        this._days * 864e5 +
	        (this._months % 12) * 2592e6 +
	        toInt(this._months / 12) * 31536e6
	    );
	}
	
	function makeAs (alias) {
	    return function () {
	        return this.as(alias);
	    };
	}
	
	var asMilliseconds = makeAs('ms');
	var asSeconds      = makeAs('s');
	var asMinutes      = makeAs('m');
	var asHours        = makeAs('h');
	var asDays         = makeAs('d');
	var asWeeks        = makeAs('w');
	var asMonths       = makeAs('M');
	var asYears        = makeAs('y');
	
	function clone$1 () {
	    return createDuration(this);
	}
	
	function get$2 (units) {
	    units = normalizeUnits(units);
	    return this.isValid() ? this[units + 's']() : NaN;
	}
	
	function makeGetter(name) {
	    return function () {
	        return this.isValid() ? this._data[name] : NaN;
	    };
	}
	
	var milliseconds = makeGetter('milliseconds');
	var seconds      = makeGetter('seconds');
	var minutes      = makeGetter('minutes');
	var hours        = makeGetter('hours');
	var days         = makeGetter('days');
	var months       = makeGetter('months');
	var years        = makeGetter('years');
	
	function weeks () {
	    return absFloor(this.days() / 7);
	}
	
	var round = Math.round;
	var thresholds = {
	    ss: 44,         // a few seconds to seconds
	    s : 45,         // seconds to minute
	    m : 45,         // minutes to hour
	    h : 22,         // hours to day
	    d : 26,         // days to month
	    M : 11          // months to year
	};
	
	// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	}
	
	function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
	    var duration = createDuration(posNegDuration).abs();
	    var seconds  = round(duration.as('s'));
	    var minutes  = round(duration.as('m'));
	    var hours    = round(duration.as('h'));
	    var days     = round(duration.as('d'));
	    var months   = round(duration.as('M'));
	    var years    = round(duration.as('y'));
	
	    var a = seconds <= thresholds.ss && ['s', seconds]  ||
	            seconds < thresholds.s   && ['ss', seconds] ||
	            minutes <= 1             && ['m']           ||
	            minutes < thresholds.m   && ['mm', minutes] ||
	            hours   <= 1             && ['h']           ||
	            hours   < thresholds.h   && ['hh', hours]   ||
	            days    <= 1             && ['d']           ||
	            days    < thresholds.d   && ['dd', days]    ||
	            months  <= 1             && ['M']           ||
	            months  < thresholds.M   && ['MM', months]  ||
	            years   <= 1             && ['y']           || ['yy', years];
	
	    a[2] = withoutSuffix;
	    a[3] = +posNegDuration > 0;
	    a[4] = locale;
	    return substituteTimeAgo.apply(null, a);
	}
	
	// This function allows you to set the rounding function for relative time strings
	function getSetRelativeTimeRounding (roundingFunction) {
	    if (roundingFunction === undefined) {
	        return round;
	    }
	    if (typeof(roundingFunction) === 'function') {
	        round = roundingFunction;
	        return true;
	    }
	    return false;
	}
	
	// This function allows you to set a threshold for relative time strings
	function getSetRelativeTimeThreshold (threshold, limit) {
	    if (thresholds[threshold] === undefined) {
	        return false;
	    }
	    if (limit === undefined) {
	        return thresholds[threshold];
	    }
	    thresholds[threshold] = limit;
	    if (threshold === 's') {
	        thresholds.ss = limit - 1;
	    }
	    return true;
	}
	
	function humanize (withSuffix) {
	    if (!this.isValid()) {
	        return this.localeData().invalidDate();
	    }
	
	    var locale = this.localeData();
	    var output = relativeTime$1(this, !withSuffix, locale);
	
	    if (withSuffix) {
	        output = locale.pastFuture(+this, output);
	    }
	
	    return locale.postformat(output);
	}
	
	var abs$1 = Math.abs;
	
	function sign(x) {
	    return ((x > 0) - (x < 0)) || +x;
	}
	
	function toISOString$1() {
	    // for ISO strings we do not use the normal bubbling rules:
	    //  * milliseconds bubble up until they become hours
	    //  * days do not bubble at all
	    //  * months bubble up until they become years
	    // This is because there is no context-free conversion between hours and days
	    // (think of clock changes)
	    // and also not between days and months (28-31 days per month)
	    if (!this.isValid()) {
	        return this.localeData().invalidDate();
	    }
	
	    var seconds = abs$1(this._milliseconds) / 1000;
	    var days         = abs$1(this._days);
	    var months       = abs$1(this._months);
	    var minutes, hours, years;
	
	    // 3600 seconds -> 60 minutes -> 1 hour
	    minutes           = absFloor(seconds / 60);
	    hours             = absFloor(minutes / 60);
	    seconds %= 60;
	    minutes %= 60;
	
	    // 12 months -> 1 year
	    years  = absFloor(months / 12);
	    months %= 12;
	
	
	    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	    var Y = years;
	    var M = months;
	    var D = days;
	    var h = hours;
	    var m = minutes;
	    var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
	    var total = this.asSeconds();
	
	    if (!total) {
	        // this is the same as C#'s (Noda) and python (isodate)...
	        // but not other JS (goog.date)
	        return 'P0D';
	    }
	
	    var totalSign = total < 0 ? '-' : '';
	    var ymSign = sign(this._months) !== sign(total) ? '-' : '';
	    var daysSign = sign(this._days) !== sign(total) ? '-' : '';
	    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';
	
	    return totalSign + 'P' +
	        (Y ? ymSign + Y + 'Y' : '') +
	        (M ? ymSign + M + 'M' : '') +
	        (D ? daysSign + D + 'D' : '') +
	        ((h || m || s) ? 'T' : '') +
	        (h ? hmsSign + h + 'H' : '') +
	        (m ? hmsSign + m + 'M' : '') +
	        (s ? hmsSign + s + 'S' : '');
	}
	
	var proto$2 = Duration.prototype;
	
	proto$2.isValid        = isValid$1;
	proto$2.abs            = abs;
	proto$2.add            = add$1;
	proto$2.subtract       = subtract$1;
	proto$2.as             = as;
	proto$2.asMilliseconds = asMilliseconds;
	proto$2.asSeconds      = asSeconds;
	proto$2.asMinutes      = asMinutes;
	proto$2.asHours        = asHours;
	proto$2.asDays         = asDays;
	proto$2.asWeeks        = asWeeks;
	proto$2.asMonths       = asMonths;
	proto$2.asYears        = asYears;
	proto$2.valueOf        = valueOf$1;
	proto$2._bubble        = bubble;
	proto$2.clone          = clone$1;
	proto$2.get            = get$2;
	proto$2.milliseconds   = milliseconds;
	proto$2.seconds        = seconds;
	proto$2.minutes        = minutes;
	proto$2.hours          = hours;
	proto$2.days           = days;
	proto$2.weeks          = weeks;
	proto$2.months         = months;
	proto$2.years          = years;
	proto$2.humanize       = humanize;
	proto$2.toISOString    = toISOString$1;
	proto$2.toString       = toISOString$1;
	proto$2.toJSON         = toISOString$1;
	proto$2.locale         = locale;
	proto$2.localeData     = localeData;
	
	// Deprecations
	proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
	proto$2.lang = lang;
	
	// Side effect imports
	
	// FORMATTING
	
	addFormatToken('X', 0, 0, 'unix');
	addFormatToken('x', 0, 0, 'valueOf');
	
	// PARSING
	
	addRegexToken('x', matchSigned);
	addRegexToken('X', matchTimestamp);
	addParseToken('X', function (input, array, config) {
	    config._d = new Date(parseFloat(input, 10) * 1000);
	});
	addParseToken('x', function (input, array, config) {
	    config._d = new Date(toInt(input));
	});
	
	// Side effect imports
	
	
	hooks.version = '2.20.1';
	
	setHookCallback(createLocal);
	
	hooks.fn                    = proto;
	hooks.min                   = min;
	hooks.max                   = max;
	hooks.now                   = now;
	hooks.utc                   = createUTC;
	hooks.unix                  = createUnix;
	hooks.months                = listMonths;
	hooks.isDate                = isDate;
	hooks.locale                = getSetGlobalLocale;
	hooks.invalid               = createInvalid;
	hooks.duration              = createDuration;
	hooks.isMoment              = isMoment;
	hooks.weekdays              = listWeekdays;
	hooks.parseZone             = createInZone;
	hooks.localeData            = getLocale;
	hooks.isDuration            = isDuration;
	hooks.monthsShort           = listMonthsShort;
	hooks.weekdaysMin           = listWeekdaysMin;
	hooks.defineLocale          = defineLocale;
	hooks.updateLocale          = updateLocale;
	hooks.locales               = listLocales;
	hooks.weekdaysShort         = listWeekdaysShort;
	hooks.normalizeUnits        = normalizeUnits;
	hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
	hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
	hooks.calendarFormat        = getCalendarFormat;
	hooks.prototype             = proto;
	
	// currently HTML5 input type only supports 24-hour formats
	hooks.HTML5_FMT = {
	    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
	    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
	    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
	    DATE: 'YYYY-MM-DD',                             // <input type="date" />
	    TIME: 'HH:mm',                                  // <input type="time" />
	    TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
	    TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
	    WEEK: 'YYYY-[W]WW',                             // <input type="week" />
	    MONTH: 'YYYY-MM'                                // <input type="month" />
	};
	
	return hooks;
	
	})));
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(327)(module)))

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(48);


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.setPropertyType = exports.removeNRIC = undefined;
	exports.removeBillingProof = exports.removeKrisOrAsia = exports.errorUploadFile = exports.getUserStatus = exports.getEncryptionParams = exports.validateUsername = exports.setDrawSignatureDirtyToFalse = exports.closeDialogModal = exports.setSignatureStatusToTrue = exports.getBankList = exports.getTenorTableData = exports.collapseTableRow = exports.expandTableRow = exports.selectTableRow = exports.getPendingApplications = exports.checkPendingApplication = exports.removePendingApplication = exports.selectPendingApplication = exports.editKrisflyerLastname = exports.editKrisflyerFirstname = exports.editKrisflyerMembershipNumber = exports.closeAccordian = exports.openAccordian = exports.setRightPanelExpanded = exports.removeCrossProduct = exports.addCrossProductUnsecuredLoan = exports.addCrossProductCards = exports.addSAVJSProduct = exports.addCrossProductCasa = exports.setDrawSignatureIsTouched = exports.setSignatureImageHeight = exports.setSignatureImageWidth = exports.setSignatureImageY = exports.setSignatureImageX = exports.setSignatureImageRotation = exports.setSignatureImageScale = exports.setSignatureTmpImagContent = exports.clearSignatureImageContent = exports.setSignatureImageContent = exports.toggleSameStatus = exports.removeInputToUIState = exports.addInputToUIState = exports.initAccountDetailsWithCards = exports.initAccountDetailsWithCasa = exports.showGenericErrorMessage = exports.clearGenericErrorMessage = exports.submitFullApplication = exports.getMyInfo = exports.showErrorMsg = exports.removeValidFlag = exports.addValidFlag = exports.updateCountryOfFundsForFx = exports.updateSourceOfFundsForFx = exports.updatePurposeOfFundsForFx = exports.updateCountryOfFundsForAll = exports.updateCountryOfFunds = exports.updateSourceOfFundsForAll = exports.updateSourceOfFunds = exports.updatePurposeOfFundsForAll = exports.updatePurposeOfFunds = exports.removeTaxResidency = exports.addTaxResidency = exports.updateTaxResidencyId = exports.updateTaxResidencyReason = exports.updateTaxResidencyCountry = exports.updateUploadProgress = exports.editPostalCode = exports.validateTIN = exports.getAddress = exports.getOTPPrefix = exports.postOTP = exports.postPartialApplication = exports.onCheck = exports.uploadFile = exports.editDropDownSearchInput = exports.editMultipleAtmAccess = exports.updateCreditLimit = exports.updateDailyCardLimit = exports.editMultipleNameOnCard = exports.removeSummaryStepFromShownSteps = exports.scrollSummaryToStep = exports.editSingtelMembershipNumber = exports.editAsiaMilesMembershipNumber = exports.editInputByPath = exports.editInput = exports.endChangeStep = exports.startChangeStep = exports.updateProductId = exports.selectDropdownItem = exports.updateCurrencies = exports.toggleClick = exports.editDropdownByPath = exports.closeDropdown = exports.openDropdown = exports.chooseGender = exports.addSection = exports.onToggleSamePurpose = exports.onToggle = exports.onBlurInput = exports.onFocusInput = undefined;
	
	var _actionsConstant = __webpack_require__(22);
	
	var constants = _interopRequireWildcard(_actionsConstant);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var onFocusInput = exports.onFocusInput = function onFocusInput(step, inputId, value) {
	    return { type: constants.ACTION_ON_FOCUS_INPUT, step: step, inputId: inputId, value: value };
	};
	
	var onBlurInput = exports.onBlurInput = function onBlurInput(step, inputId, value) {
	    return { type: constants.ACTION_ON_BLUR_INPUT, step: step, inputId: inputId, value: value };
	};
	
	var onToggle = exports.onToggle = function onToggle(step, inputId, value) {
	    return { type: constants.ACTION_TOGGLE_BUTTON, step: step, inputId: inputId, value: value };
	};
	
	var onToggleSamePurpose = exports.onToggleSamePurpose = function onToggleSamePurpose(value) {
	    return { type: constants.ACTION_TOGGLE_BUTTON_SAME_PURPOSE, value: value };
	};
	
	var addSection = exports.addSection = function addSection(value) {
	    return { type: constants.ACTION_ADD_SECTION, value: value };
	};
	
	var chooseGender = exports.chooseGender = function chooseGender(gender, step, inputId, path) {
	    return {
	        type: constants.ACTION_CHOOSE_GENDER,
	        gender: gender,
	        step: step,
	        inputId: inputId,
	        path: path
	    };
	};
	
	var openDropdown = exports.openDropdown = function openDropdown(inputId) {
	    return { type: constants.ACTION_OPEN_DROPDOWN, inputId: inputId };
	};
	
	var closeDropdown = exports.closeDropdown = function closeDropdown(inputId) {
	    return { type: constants.ACTION_CLOSE_DROPDOWN, inputId: inputId };
	};
	
	var editDropdownByPath = exports.editDropdownByPath = function editDropdownByPath(step, inputId, path, value, status) {
	    return {
	        type: constants.ACTION_EDIT_DROPDOWN_BY_PATH,
	        step: step,
	        inputId: inputId,
	        path: path,
	        value: value,
	        status: status
	    };
	};
	
	var toggleClick = exports.toggleClick = function toggleClick(path, value) {
	    return { type: constants.ACTION_TOGGLE_CLICK, path: path, value: value };
	};
	
	var updateCurrencies = exports.updateCurrencies = function updateCurrencies(currency, step, inputId, pid) {
	    return {
	        type: constants.ACTION_UPDATE_CURRENCIES,
	        currency: currency,
	        step: step,
	        inputId: inputId,
	        pid: pid
	    };
	};
	
	var selectDropdownItem = exports.selectDropdownItem = function selectDropdownItem(inputId, value) {
	    return { type: constants.ACTION_SELECT_DROPDOWN_ITEM, inputId: inputId, value: value };
	};
	
	var updateProductId = exports.updateProductId = function updateProductId(productID) {
	    return { type: constants.ACTION_UPDATE_PRODUCT_ID, productID: productID };
	};
	
	var startChangeStep = exports.startChangeStep = function startChangeStep(transitFrom, transitTo) {
	    return {
	        type: constants.ACTION_START_CHANGE_STEP,
	        transitFrom: transitFrom,
	        transitTo: transitTo
	    };
	};
	
	var endChangeStep = exports.endChangeStep = function endChangeStep(value) {
	    return { type: constants.ACTION_END_CHANGE_STEP, value: value };
	};
	
	var editInput = exports.editInput = function editInput(inputId, value, status, step) {
	    return {
	        type: constants.ACTION_EDIT_INPUT,
	        inputId: inputId,
	        value: value,
	        status: status,
	        step: step
	    };
	};
	
	var editInputByPath = exports.editInputByPath = function editInputByPath(step, inputId, path, value, status) {
	    return {
	        type: constants.ACTION_EDIT_INPUT_BY_PATH,
	        step: step,
	        inputId: inputId,
	        path: path,
	        value: value,
	        status: status
	    };
	};
	
	var editAsiaMilesMembershipNumber = exports.editAsiaMilesMembershipNumber = function editAsiaMilesMembershipNumber(pid, value) {
	    return {
	        type: constants.ACTION_EDIT_ASIA_MILES_MEMBERSHIP_NUMBER,
	        pid: pid,
	        value: value
	    };
	};
	
	var editSingtelMembershipNumber = exports.editSingtelMembershipNumber = function editSingtelMembershipNumber(pid, value) {
	    return {
	        type: constants.ACTION_EDIT_SINGTEL_MEMBERSHIP_NUMBER,
	        pid: pid,
	        value: value
	    };
	};
	
	var scrollSummaryToStep = exports.scrollSummaryToStep = function scrollSummaryToStep(value, step) {
	    return {
	        type: constants.ACTION_SCROLL_SUMMARY_TO_STEP,
	        value: value,
	        step: step
	    };
	};
	
	var removeSummaryStepFromShownSteps = exports.removeSummaryStepFromShownSteps = function removeSummaryStepFromShownSteps() {
	    return {
	        type: constants.ACTION_REMOVE_SUMMARY_STEP_FROM_SHOWN_STEP
	    };
	};
	
	var editMultipleNameOnCard = exports.editMultipleNameOnCard = function editMultipleNameOnCard(inputIds, cardType, value, status, step) {
	    return {
	        type: constants.ACTION_EDIT_MULTIPLE_NAME_ON_CARD,
	        inputIds: inputIds,
	        cardType: cardType,
	        value: value,
	        status: status,
	        step: step
	    };
	};
	
	var updateDailyCardLimit = exports.updateDailyCardLimit = function updateDailyCardLimit(inputIds, cardType, value) {
	    return {
	        type: constants.ACTION_UPDATE_DAILY_CARD_LIMIT,
	        inputIds: inputIds,
	        cardType: cardType,
	        value: value
	    };
	};
	
	var updateCreditLimit = exports.updateCreditLimit = function updateCreditLimit(inputIds, cardType, value) {
	    return {
	        type: constants.ACTION_UPDATE_CREDIT_LIMIT,
	        inputIds: inputIds,
	        cardType: cardType,
	        value: value
	    };
	};
	
	var editMultipleAtmAccess = exports.editMultipleAtmAccess = function editMultipleAtmAccess(inputIds, cardType, value) {
	    return {
	        type: constants.ACTION_EDIT_MULTIPLE_ATM_ACCESS,
	        inputIds: inputIds,
	        cardType: cardType,
	        value: value
	    };
	};
	
	var editDropDownSearchInput = exports.editDropDownSearchInput = function editDropDownSearchInput(step, inputId, value) {
	    return {
	        type: constants.ACTION_DROPDOWN_SEARCH,
	        step: step,
	        inputId: inputId,
	        value: value
	    };
	};
	
	var uploadFile = exports.uploadFile = function uploadFile(step, inputId, value, size, status) {
	    return {
	        type: constants.ACTION_UPLOAD_FILE,
	        step: step,
	        inputId: inputId,
	        value: value,
	        size: size,
	        status: status
	    };
	};
	
	var onCheck = exports.onCheck = function onCheck(inputId, step, value) {
	    return { type: constants.ACTION_ON_CHECK, inputId: inputId, value: value, step: step };
	};
	
	var postPartialApplication = exports.postPartialApplication = function postPartialApplication(currentStep, nextStep, productsData) {
	    return {
	        type: constants.ACTION_POST_PARTIAL_APPLICATION,
	        currentStep: currentStep,
	        nextStep: nextStep,
	        productsData: productsData,
	        async: true
	    };
	};
	
	var postOTP = exports.postOTP = function postOTP(currentStep, nextStep, otp) {
	    return {
	        type: constants.ACTION_POST_OTP,
	        payload: { otp: otp },
	        async: true,
	        currentStep: currentStep,
	        nextStep: nextStep
	    };
	};
	
	var getOTPPrefix = exports.getOTPPrefix = function getOTPPrefix(mobileNumber) {
	    return { type: constants.ACTION_GET_OTP_PREFIX, async: true, mobileNumber: mobileNumber };
	};
	
	var getAddress = exports.getAddress = function getAddress(postal, inputId) {
	    return {
	        type: constants.ACTION_GET_ADDRESS,
	        payload: { postal: postal },
	        async: true,
	        inputId: inputId
	    };
	};
	
	var validateTIN = exports.validateTIN = function validateTIN(country, id, index, formData) {
	    return {
	        type: constants.ACTION_VALIDATE_TIN,
	        country: country,
	        id: id,
	        index: index,
	        formData: formData,
	        async: true
	    };
	};
	
	var editPostalCode = exports.editPostalCode = function editPostalCode(inputId, value, status, step) {
	    return {
	        type: constants.ACTION_EDIT_POSTAL_CODE,
	        inputId: inputId,
	        value: value,
	        status: status,
	        step: step
	    };
	};
	
	var updateUploadProgress = exports.updateUploadProgress = function updateUploadProgress(step, inputId, progress) {
	    return {
	        type: constants.ACTION_UPDATE_UPLOAD_PROGRESS,
	        step: step,
	        inputId: inputId,
	        progress: progress
	    };
	};
	
	var updateTaxResidencyCountry = exports.updateTaxResidencyCountry = function updateTaxResidencyCountry(countryIndex, country, formData) {
	    return {
	        type: constants.ACTION_UPDATE_TAX_RESIDENCY_COUNTRY,
	        countryIndex: countryIndex,
	        country: country,
	        formData: formData
	    };
	};
	
	var updateTaxResidencyReason = exports.updateTaxResidencyReason = function updateTaxResidencyReason(countryIndex, reasonCode, formData) {
	    return {
	        type: constants.ACTION_UPDATE_TAX_RESIDENCY_REASON,
	        countryIndex: countryIndex,
	        reasonCode: reasonCode,
	        formData: formData
	    };
	};
	
	var updateTaxResidencyId = exports.updateTaxResidencyId = function updateTaxResidencyId(countryIndex, id, status, formData) {
	    return {
	        type: constants.ACTION_UPDATE_TAX_RESIDENCY_ID,
	        countryIndex: countryIndex,
	        id: id,
	        status: status,
	        formData: formData
	    };
	};
	
	var addTaxResidency = exports.addTaxResidency = function addTaxResidency(newCountryIndex, country, id, formData, reasonCode) {
	    return {
	        type: constants.ACTION_ADD_TAX_RESIDENCY,
	        newCountryIndex: newCountryIndex,
	        country: country,
	        id: id,
	        formData: formData,
	        reasonCode: reasonCode
	    };
	};
	
	var removeTaxResidency = exports.removeTaxResidency = function removeTaxResidency(countryIndex) {
	    return {
	        type: constants.ACTION_REMOVE_TAX_RESIDENCY,
	        countryIndex: countryIndex
	    };
	};
	
	var updatePurposeOfFunds = exports.updatePurposeOfFunds = function updatePurposeOfFunds(currency, value, pid, familyType) {
	    return {
	        type: constants.ACTION_UPDATE_PURPOSE_OF_FUNDS,
	        currency: currency,
	        value: value,
	        pid: pid,
	        familyType: familyType
	    };
	};
	
	var updatePurposeOfFundsForAll = exports.updatePurposeOfFundsForAll = function updatePurposeOfFundsForAll(value) {
	    return {
	        type: constants.ACTION_UPDATE_PURPOSE_OF_FUNDS_FOR_ALL,
	        value: value
	    };
	};
	
	var updateSourceOfFunds = exports.updateSourceOfFunds = function updateSourceOfFunds(currency, value, pid, familyType) {
	    return {
	        type: constants.ACTION_UPDATE_SOURCE_OF_FUNDS,
	        currency: currency,
	        value: value,
	        pid: pid,
	        familyType: familyType
	    };
	};
	
	var updateSourceOfFundsForAll = exports.updateSourceOfFundsForAll = function updateSourceOfFundsForAll(value) {
	    return {
	        type: constants.ACTION_UPDATE_SOURCE_OF_FUNDS_FOR_ALL,
	        value: value
	    };
	};
	
	var updateCountryOfFunds = exports.updateCountryOfFunds = function updateCountryOfFunds(currency, value, pid, familyType) {
	    return {
	        type: constants.ACTION_UPDATE_COUNTRY_OF_FUNDS,
	        currency: currency,
	        value: value,
	        pid: pid,
	        familyType: familyType
	    };
	};
	
	var updateCountryOfFundsForAll = exports.updateCountryOfFundsForAll = function updateCountryOfFundsForAll(value) {
	    return {
	        type: constants.ACTION_UPDATE_COUNTRY_OF_FUNDS_FOR_ALL,
	        value: value
	    };
	};
	
	var updatePurposeOfFundsForFx = exports.updatePurposeOfFundsForFx = function updatePurposeOfFundsForFx(value, pid) {
	    return {
	        type: constants.ACTION_UPDATE_PURPOSE_OF_FUNDS_FOR_FX,
	        value: value,
	        pid: pid
	    };
	};
	
	var updateSourceOfFundsForFx = exports.updateSourceOfFundsForFx = function updateSourceOfFundsForFx(value, pid) {
	    return {
	        type: constants.ACTION_UPDATE_SOURCE_OF_FUNDS_FOR_FX,
	        value: value,
	        pid: pid
	    };
	};
	
	var updateCountryOfFundsForFx = exports.updateCountryOfFundsForFx = function updateCountryOfFundsForFx(value, pid) {
	    return {
	        type: constants.ACTION_UPDATE_COUNTRY_OF_FUNDS_FOR_FX,
	        value: value,
	        pid: pid
	    };
	};
	
	var addValidFlag = exports.addValidFlag = function addValidFlag(step, inputId) {
	    return { type: constants.ACTION_ADD_VALID_FLAG, step: step, inputId: inputId };
	};
	
	var removeValidFlag = exports.removeValidFlag = function removeValidFlag(step, inputId) {
	    return { type: constants.ACTION_REMOVE_VALID_FLAG, step: step, inputId: inputId };
	};
	
	var showErrorMsg = exports.showErrorMsg = function showErrorMsg(step, inputId, msg) {
	    return { type: constants.ACTION_SHOW_ERROR_MSG, step: step, inputId: inputId, msg: msg };
	};
	
	var getMyInfo = exports.getMyInfo = function getMyInfo(productsData, formData) {
	    return {
	        type: constants.ACTION_GET_MY_INFO,
	        async: true,
	        productsData: productsData,
	        formData: formData
	    };
	};
	
	var submitFullApplication = exports.submitFullApplication = function submitFullApplication() {
	    return { type: constants.ACTION_SUBMIT_FULL_APPLICATION, async: true };
	};
	
	var clearGenericErrorMessage = exports.clearGenericErrorMessage = function clearGenericErrorMessage() {
	    return { type: constants.ACTION_CLEAR_GENERIC_ERROR_MESSAGE };
	};
	
	var showGenericErrorMessage = exports.showGenericErrorMessage = function showGenericErrorMessage(errorMsg) {
	    return { type: constants.ACTION_SHOW_GENERIC_ERROR_MESSAGE, errorMsg: errorMsg };
	};
	
	var initAccountDetailsWithCasa = exports.initAccountDetailsWithCasa = function initAccountDetailsWithCasa(pid, productCurrencies, familyType, cardDetails, defaultValues) {
	    return {
	        type: constants.ACTION_INIT_ACCOUNT_DETAILS_WITH_CASA,
	        pid: pid,
	        productCurrencies: productCurrencies,
	        familyType: familyType,
	        cardDetails: cardDetails,
	        defaultValues: defaultValues
	    };
	};
	
	var initAccountDetailsWithCards = exports.initAccountDetailsWithCards = function initAccountDetailsWithCards(pid, familyType, name, limit, activateAtms) {
	    return {
	        type: constants.ACTION_INIT_ACCOUNT_DETAILS_WITH_CARDS,
	        pid: pid,
	        familyType: familyType,
	        name: name,
	        limit: limit,
	        activateAtms: activateAtms
	    };
	};
	
	var addInputToUIState = exports.addInputToUIState = function addInputToUIState(step, inputId) {
	    return { type: constants.ACTION_ADD_INPUT_TO_UI_STATE, step: step, inputId: inputId };
	};
	
	var removeInputToUIState = exports.removeInputToUIState = function removeInputToUIState(step, inputId) {
	    return {
	        type: constants.ACTION_REMOVE_INPUT_TO_UI_STATE,
	        step: step,
	        inputId: inputId
	    };
	};
	
	var toggleSameStatus = exports.toggleSameStatus = function toggleSameStatus(toggleValue, values, pid, currency) {
	    return {
	        type: constants.ACTION_TOGGLE_SAME_STATUS,
	        toggleValue: toggleValue,
	        values: values,
	        pid: pid,
	        currency: currency
	    };
	};
	
	var setSignatureImageContent = exports.setSignatureImageContent = function setSignatureImageContent(step, inputId, value) {
	    return {
	        type: constants.ACTION_SET_SIGNATURE_IMAGE_CONTENT,
	        step: step,
	        inputId: inputId,
	        value: value
	    };
	};
	
	var clearSignatureImageContent = exports.clearSignatureImageContent = function clearSignatureImageContent(step, inputId, value) {
	    return {
	        type: constants.ACTION_CLEAR_SIGNATURE_IMAGE_CONTENT,
	        step: step,
	        inputId: inputId,
	        value: value
	    };
	};
	
	var setSignatureTmpImagContent = exports.setSignatureTmpImagContent = function setSignatureTmpImagContent(step, inputId, value) {
	    return {
	        type: constants.ACTION_SET_TMP_SIGNATURE_IMAGE_CONTENT,
	        step: step,
	        inputId: inputId,
	        value: value
	    };
	};
	
	var setSignatureImageScale = exports.setSignatureImageScale = function setSignatureImageScale(step, inputId, value) {
	    return {
	        type: constants.ACTION_SET_SIGNATURE_IMAGE_SCALE,
	        step: step,
	        inputId: inputId,
	        value: value
	    };
	};
	
	var setSignatureImageRotation = exports.setSignatureImageRotation = function setSignatureImageRotation(step, inputId, value) {
	    return {
	        type: constants.ACTION_SET_SIGNATURE_IMAGE_ROTATION,
	        step: step,
	        inputId: inputId,
	        value: value
	    };
	};
	
	var setSignatureImageX = exports.setSignatureImageX = function setSignatureImageX(step, inputId, value) {
	    return {
	        type: constants.ACTION_SET_SIGNATURE_IMAGE_X,
	        step: step,
	        inputId: inputId,
	        value: value
	    };
	};
	
	var setSignatureImageY = exports.setSignatureImageY = function setSignatureImageY(step, inputId, value) {
	    return {
	        type: constants.ACTION_SET_SIGNATURE_IMAGE_Y,
	        step: step,
	        inputId: inputId,
	        value: value
	    };
	};
	
	var setSignatureImageWidth = exports.setSignatureImageWidth = function setSignatureImageWidth(step, inputId, value) {
	    return {
	        type: constants.ACTION_SET_SIGNATURE_IMAGE_WIDTH,
	        step: step,
	        inputId: inputId,
	        value: value
	    };
	};
	
	var setSignatureImageHeight = exports.setSignatureImageHeight = function setSignatureImageHeight(step, inputId, value) {
	    return {
	        type: constants.ACTION_SET_SIGNATURE_IMAGE_HEIGHT,
	        step: step,
	        inputId: inputId,
	        value: value
	    };
	};
	
	var setDrawSignatureIsTouched = exports.setDrawSignatureIsTouched = function setDrawSignatureIsTouched(step, inputId, value) {
	    return {
	        type: constants.ACTION_SET_CANVAS_TOUCHED,
	        step: step,
	        inputId: inputId,
	        value: value
	    };
	};
	
	var addCrossProductCasa = exports.addCrossProductCasa = function addCrossProductCasa(pid, productCurrencies, familyType, cardDetails, defaultValues) {
	    return {
	        type: constants.ACTION_ADD_CROSS_PRODUCT_CASA,
	        pid: pid,
	        productCurrencies: productCurrencies,
	        familyType: familyType,
	        cardDetails: cardDetails,
	        defaultValues: defaultValues
	    };
	};
	
	var addSAVJSProduct = exports.addSAVJSProduct = function addSAVJSProduct(pid, productCurrencies, familyType, defaultValues) {
	    return {
	        type: constants.ACTION_ADD_SAVJS,
	        pid: pid,
	        productCurrencies: productCurrencies,
	        familyType: familyType,
	        defaultValues: defaultValues
	    };
	};
	
	var addCrossProductCards = exports.addCrossProductCards = function addCrossProductCards(pid, familyType, name, preferedDailyLimit, activateAtms) {
	    return {
	        type: constants.ACTION_ADD_CROSS_PRODUCT_CARDS,
	        pid: pid,
	        familyType: familyType,
	        name: name,
	        preferedDailyLimit: preferedDailyLimit,
	        activateAtms: activateAtms
	    };
	};
	
	var addCrossProductUnsecuredLoan = exports.addCrossProductUnsecuredLoan = function addCrossProductUnsecuredLoan(pid) {
	    return {
	        type: constants.ACTION_ADD_CROSS_PRODUCT_UNSECURED_LOAN,
	        pid: pid
	    };
	};
	
	var removeCrossProduct = exports.removeCrossProduct = function removeCrossProduct(pid) {
	    return { type: constants.ACTION_REMOVE_CROSS_PRODUCT, pid: pid };
	};
	
	var setRightPanelExpanded = exports.setRightPanelExpanded = function setRightPanelExpanded(value) {
	    return { type: constants.ACTION_SET_RIGHT_PANEL_EXPANDED, value: value };
	};
	var openAccordian = exports.openAccordian = function openAccordian(step, inputId) {
	    return { type: constants.ACTION_OPEN_ACCORDIAN, step: step, inputId: inputId };
	};
	var closeAccordian = exports.closeAccordian = function closeAccordian(step, inputId) {
	    return { type: constants.ACTION_CLOSE_ACCORDIAN, step: step, inputId: inputId };
	};
	
	var editKrisflyerMembershipNumber = exports.editKrisflyerMembershipNumber = function editKrisflyerMembershipNumber(step, inputId, pid, value, status) {
	    return {
	        type: constants.ACTION_EDIT_KRISFLYER_MEMBERSHIP_NUMBER,
	        step: step,
	        inputId: inputId,
	        pid: pid,
	        value: value,
	        status: status
	    };
	};
	
	var editKrisflyerFirstname = exports.editKrisflyerFirstname = function editKrisflyerFirstname(step, inputId, pid, value, status) {
	    return {
	        type: constants.ACTION_EDIT_KRISFLYER_FIRSTNAME,
	        step: step,
	        inputId: inputId,
	        pid: pid,
	        value: value,
	        status: status
	    };
	};
	
	var editKrisflyerLastname = exports.editKrisflyerLastname = function editKrisflyerLastname(step, inputId, pid, value, status) {
	    return {
	        type: constants.ACTION_EDIT_KRISFLYER_LASTNAME,
	        step: step,
	        inputId: inputId,
	        pid: pid,
	        value: value,
	        status: status
	    };
	};
	
	var selectPendingApplication = exports.selectPendingApplication = function selectPendingApplication(inputId, pid, applicationNo) {
	    return {
	        type: constants.ACTION_SELECT_PENDING_APPLICATION,
	        inputId: inputId,
	        pid: pid,
	        applicationNo: applicationNo
	    };
	};
	
	var removePendingApplication = exports.removePendingApplication = function removePendingApplication(inputId, applicationNumber) {
	    return {
	        type: constants.ACTION_REMOVE_PENDING_APPLICATION,
	        inputId: inputId,
	        applicationNumber: applicationNumber
	    };
	};
	
	var checkPendingApplication = exports.checkPendingApplication = function checkPendingApplication(currentStep, payload, productsData) {
	    return {
	        type: constants.ACTION_CHECK_PENDING_APPLICATION,
	        currentStep: currentStep,
	        payload: payload,
	        productsData: productsData,
	        async: true
	    };
	};
	
	var getPendingApplications = exports.getPendingApplications = function getPendingApplications(productsData) {
	    return {
	        type: constants.ACTION_GET_PENDING_APPLICATION,
	        productsData: productsData,
	        async: true
	    };
	};
	
	var selectTableRow = exports.selectTableRow = function selectTableRow(inputId, pid, promotionCode, tenor) {
	    return {
	        type: constants.ACTION_SELECT_TABLE_ROW,
	        inputId: inputId,
	        promotionCode: promotionCode,
	        tenor: tenor,
	        pid: pid
	    };
	};
	
	var expandTableRow = exports.expandTableRow = function expandTableRow(inputId, index) {
	    return {
	        type: constants.ACTION_EXPAND_TABLE_ROW,
	        inputId: inputId,
	        index: index
	    };
	};
	
	var collapseTableRow = exports.collapseTableRow = function collapseTableRow(inputId, index) {
	    return {
	        type: constants.ACTION_COLLAPSE_TABLE_ROW,
	        inputId: inputId,
	        index: index
	    };
	};
	
	var getTenorTableData = exports.getTenorTableData = function getTenorTableData(pid, promotionType) {
	    return {
	        type: constants.ACTION_GET_TENOR_TABLE_DATA,
	        pid: pid,
	        promotionType: promotionType,
	        async: true
	    };
	};
	
	var getBankList = exports.getBankList = function getBankList() {
	    return {
	        type: constants.ACTION_GET_BANK_LIST,
	        async: true
	    };
	};
	
	var setSignatureStatusToTrue = exports.setSignatureStatusToTrue = function setSignatureStatusToTrue(step, inputId) {
	    return {
	        type: constants.ACTION_SET_SIGNATURE_STATUS_TO_TRUE,
	        step: step,
	        inputId: inputId
	    };
	};
	
	var closeDialogModal = exports.closeDialogModal = function closeDialogModal(dialogType) {
	    return {
	        type: constants.ACTION_CLOSE_DIALOG_MODEL,
	        dialogType: dialogType
	    };
	};
	
	var setDrawSignatureDirtyToFalse = exports.setDrawSignatureDirtyToFalse = function setDrawSignatureDirtyToFalse(step, inputId) {
	    return {
	        type: constants.ACTION_SET_DRAW_SIGNATURE_DIRTY_TO_FALSE,
	        step: step,
	        inputId: inputId
	    };
	};
	
	var validateUsername = exports.validateUsername = function validateUsername(username, formData, successCallback, errorCallback) {
	    return {
	        type: constants.ACTION_VALIDATE_USERNAME,
	        username: username,
	        formData: formData,
	        successCallback: successCallback,
	        errorCallback: errorCallback,
	        async: true
	    };
	};
	
	var getEncryptionParams = exports.getEncryptionParams = function getEncryptionParams(nextStep) {
	    return {
	        type: constants.ACTION_GET_ENCRYPTION_PARAMS,
	        nextStep: nextStep,
	        async: true
	    };
	};
	
	var getUserStatus = exports.getUserStatus = function getUserStatus(nextStep) {
	    return {
	        type: constants.ACTION_GET_USER_STATUS,
	        nextStep: nextStep,
	        async: true
	    };
	};
	
	var errorUploadFile = exports.errorUploadFile = function errorUploadFile(error, step, inputId) {
	    return {
	        type: constants.ACTION_ERROR_UPLOAD_FILE,
	        error: error,
	        step: step,
	        inputId: inputId
	    };
	};
	
	var removeKrisOrAsia = exports.removeKrisOrAsia = function removeKrisOrAsia(path, step, inputId, value) {
	    return {
	        type: constants.ACTION_REMOVE_KRIS_OR_ASIA,
	        path: path,
	        step: step,
	        inputId: inputId,
	        value: value
	    };
	};
	
	var removeBillingProof = exports.removeBillingProof = function removeBillingProof(step, inputId, value) {
	    return {
	        type: constants.ACTION_REMOVE_BILLING_PROOF,
	        step: step,
	        inputId: inputId,
	        value: value
	    };
	};
	
	var removeNRIC = exports.removeNRIC = function removeNRIC() {
	    return { type: constants.ACTION_REMOVE_NRIC };
	};
	var setPropertyType = exports.setPropertyType = function setPropertyType(inputId, value) {
	    return {
	        type: constants.ACTION_SET_PROPERTY_TYPE,
	        inputId: inputId,
	        value: value
	    };
	};

/***/ },
/* 4 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	// BASE PATH
	var app = exports.app = ["app"];
	var ui = exports.ui = ["ui"];
	var uiProcess = exports.uiProcess = ["uiProcess"];
	var data = exports.data = ["data"];
	
	// APP PATHS
	var productIdPath = exports.productIdPath = function productIdPath() {
	  return [].concat(app, ["productId"]);
	};
	var currentStepPath = exports.currentStepPath = function currentStepPath() {
	  return [].concat(app, ["currentStep"]);
	};
	var transitToPath = exports.transitToPath = function transitToPath() {
	  return [].concat(app, ["transitToStep"]);
	};
	var transitFromPath = exports.transitFromPath = function transitFromPath() {
	  return [].concat(app, ["transitFromStep"]);
	};
	var shownStepsPath = exports.shownStepsPath = function shownStepsPath() {
	  return [].concat(app, ["shownSteps"]);
	};
	var uploadFileSizePath = exports.uploadFileSizePath = function uploadFileSizePath(inputId) {
	  return [].concat(app, [inputId, "fileSize"]);
	};
	// export const uiStructurePath = () => [...app, "structure"];
	var isOTPVerifiedPath = exports.isOTPVerifiedPath = function isOTPVerifiedPath() {
	  return [].concat(app, ["isOtpVerified"]);
	};
	var isPartialApplicationSubmittedPath = exports.isPartialApplicationSubmittedPath = function isPartialApplicationSubmittedPath(step) {
	  return [].concat(app, ["partialApplicationSubmitted", step]);
	};
	var genericErrorPath = exports.genericErrorPath = function genericErrorPath() {
	  return [].concat(app, ["genericError"]);
	};
	var otpPrefixPath = exports.otpPrefixPath = function otpPrefixPath() {
	  return [].concat(app, ["otpPrefix"]);
	};
	var readOnlyPath = exports.readOnlyPath = function readOnlyPath() {
	  return [].concat(app, ["readOnly"]);
	};
	var rightPanelExpandedPath = exports.rightPanelExpandedPath = function rightPanelExpandedPath() {
	  return [].concat(app, ["responsiveRightPanelExpanded"]);
	};
	var productsAppliedPath = exports.productsAppliedPath = function productsAppliedPath() {
	  return [].concat(app, ["productsApplied"]);
	};
	var flowPath = exports.flowPath = function flowPath() {
	  return [].concat(app, ["flow"]);
	};
	var myInfoFlagPath = exports.myInfoFlagPath = function myInfoFlagPath() {
	  return [].concat(app, ["myInfo"]);
	};
	var annualIncomeNotAvailFlagPath = exports.annualIncomeNotAvailFlagPath = function annualIncomeNotAvailFlagPath() {
	  return [].concat(app, ["annualIncomeNotAvail"]);
	};
	var uiIsSpinnerActivePath = exports.uiIsSpinnerActivePath = function uiIsSpinnerActivePath(step) {
	  return [].concat(app, [step, "spinnerLoading", "isSpinning"]);
	};
	var postalCodeSpinnerPath = exports.postalCodeSpinnerPath = function postalCodeSpinnerPath() {
	  return [].concat(app, ["postalCodeInput", "isSpinning"]);
	};
	var postalCodeServiceStatusPath = exports.postalCodeServiceStatusPath = function postalCodeServiceStatusPath() {
	  return [].concat(app, ["postalServiceStatus", "isUp"]);
	};
	var postalCodeCountExceededPath = exports.postalCodeCountExceededPath = function postalCodeCountExceededPath(inputId) {
	  return [].concat(app, ["isPostalServiceCountExceeded", inputId]);
	};
	var postalCodeSearchCount = exports.postalCodeSearchCount = function postalCodeSearchCount(inputId) {
	  return [].concat(app, ["postalCodeSearchCount", inputId]);
	};
	var isFinalSubmitPath = exports.isFinalSubmitPath = function isFinalSubmitPath() {
	  return [].concat(app, ["finalSubmit"]);
	};
	var pendingApplicationPath = exports.pendingApplicationPath = function pendingApplicationPath() {
	  return [].concat(app, ["pendingApplications"]);
	};
	var tenorTableDataPath = exports.tenorTableDataPath = function tenorTableDataPath(inputId) {
	  return [].concat(app, ["tenorData", inputId]);
	};
	var bankListDataPath = exports.bankListDataPath = function bankListDataPath() {
	  return [].concat(app, ["bankList"]);
	};
	var cpfDataPath = exports.cpfDataPath = function cpfDataPath() {
	  return [].concat(app, ["cpf"]);
	};
	var dialogModalPath = exports.dialogModalPath = function dialogModalPath(dialogType) {
	  return [].concat(app, [dialogType]);
	};
	var pageLoadingPath = exports.pageLoadingPath = function pageLoadingPath() {
	  return [].concat(app, ["pageLoading"]);
	};
	
	// UI PATHS
	var uiStepPath = exports.uiStepPath = function uiStepPath(step) {
	  return [].concat(ui, [step]);
	};
	var uiProcessStepPath = exports.uiProcessStepPath = function uiProcessStepPath(step) {
	  return [].concat(uiProcess, [step]);
	};
	var uiInputPath = exports.uiInputPath = function uiInputPath(step, inputId) {
	  return [].concat(_toConsumableArray(uiStepPath(step)), [inputId]);
	};
	var uiFocusPath = exports.uiFocusPath = function uiFocusPath(step, inputId) {
	  return [].concat(_toConsumableArray(uiStepPath(step)), [inputId, "isFocus"]);
	};
	var uiIsDirtyPath = exports.uiIsDirtyPath = function uiIsDirtyPath(step, inputId) {
	  return [].concat(_toConsumableArray(uiStepPath(step)), [inputId, "isDirty"]);
	};
	var uiIsValidPath = exports.uiIsValidPath = function uiIsValidPath(step, inputId) {
	  return [].concat(_toConsumableArray(uiStepPath(step)), [inputId, "isValid"]);
	};
	var uiUploadStatusPath = exports.uiUploadStatusPath = function uiUploadStatusPath(step, inputId) {
	  return [].concat(_toConsumableArray(uiStepPath(step)), [inputId, "upload"]);
	};
	var uiErrorMsgPath = exports.uiErrorMsgPath = function uiErrorMsgPath(step, inputId) {
	  return [].concat(_toConsumableArray(uiStepPath(step)), [inputId, "errorMsg"]);
	};
	var uiUploadProgressPath = exports.uiUploadProgressPath = function uiUploadProgressPath(step, inputId) {
	  return [].concat(_toConsumableArray(uiProcessStepPath(step)), [inputId, "progress"]);
	};
	var uiInProgressPath = exports.uiInProgressPath = function uiInProgressPath(step, inputId) {
	  return [].concat(_toConsumableArray(uiProcessStepPath(step)), [inputId, "progress"]);
	};
	var uiDropDownSearchValuePath = exports.uiDropDownSearchValuePath = function uiDropDownSearchValuePath(step, inputId) {
	  return [].concat(_toConsumableArray(uiStepPath(step)), [inputId, "searchValue"]);
	};
	var isReadOnlyPath = exports.isReadOnlyPath = function isReadOnlyPath(step, inputId) {
	  return [].concat(_toConsumableArray(uiStepPath(step)), [inputId, "readOnly"]);
	};
	var uiSignatureImageInitialContentPath = exports.uiSignatureImageInitialContentPath = function uiSignatureImageInitialContentPath(step, inputId) {
	  return [step, inputId, "signatureImageInitialContent"];
	};
	var uiSignatureImageContentPath = exports.uiSignatureImageContentPath = function uiSignatureImageContentPath(step, inputId) {
	  return [step, inputId, "signatureImageContent"];
	};
	var uiSignatureImageTmpContentPath = exports.uiSignatureImageTmpContentPath = function uiSignatureImageTmpContentPath(step, inputId) {
	  return [step, inputId, "signatureImageTmpContent"];
	};
	var uiSignatureImageScalePath = exports.uiSignatureImageScalePath = function uiSignatureImageScalePath(step, inputId) {
	  return [step, inputId, "signatureImageScale"];
	};
	var uiSignatureImageRotationPath = exports.uiSignatureImageRotationPath = function uiSignatureImageRotationPath(step, inputId) {
	  return [step, inputId, "signatureImageRotation"];
	};
	var uiSignatureImageXPath = exports.uiSignatureImageXPath = function uiSignatureImageXPath(step, inputId) {
	  return [step, inputId, "signatureImageX"];
	};
	var uiSignatureImageYPath = exports.uiSignatureImageYPath = function uiSignatureImageYPath(step, inputId) {
	  return [step, inputId, "signatureImageY"];
	};
	var uiSignatureImageWidthPath = exports.uiSignatureImageWidthPath = function uiSignatureImageWidthPath(step, inputId) {
	  return [step, inputId, "signatureImageWidth"];
	};
	var uiSignatureImageHeightPath = exports.uiSignatureImageHeightPath = function uiSignatureImageHeightPath(step, inputId) {
	  return [step, inputId, "signatureImageHeight"];
	};
	var uiDrawSignatureIsTouchedPath = exports.uiDrawSignatureIsTouchedPath = function uiDrawSignatureIsTouchedPath(step, inputId) {
	  return [step, inputId, "drawSignatureIsTouched"];
	};
	var uiDrawSignatureIsEditablePath = exports.uiDrawSignatureIsEditablePath = function uiDrawSignatureIsEditablePath(step, inputId) {
	  return [step, inputId, "drawSignatureIsEditable"];
	};
	
	// DATA PATHS
	var appDataPath = exports.appDataPath = function appDataPath(path) {
	  return [].concat(app, _toConsumableArray(path));
	};
	
	// DATA PATHS
	var dataPath = exports.dataPath = function dataPath(path) {
	  return [].concat(data, _toConsumableArray(path));
	};
	
	// ACCORDIAN PATH
	var accordianPath = exports.accordianPath = function accordianPath(step, inputId) {
	  return ["accordian", step, inputId];
	};
	
	// TABLE STATE PATH
	var tableStatePath = exports.tableStatePath = function tableStatePath(inputId, index) {
	  return ["table", inputId, index];
	};
	var allTableStatePath = exports.allTableStatePath = function allTableStatePath(inputId) {
	  return ["table", inputId];
	};
	
	// PRODUCT DATA PATH
	var productsDataPath = exports.productsDataPath = function productsDataPath() {
	  return ["productsData"];
	};
	
	var formLabelsPath = exports.formLabelsPath = function formLabelsPath() {
	  return ["formLabels"];
	};

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * This is a straight rip-off of the React.js ReactPropTypes.js proptype validators,
	 * modified to make it possible to validate Immutable.js data.
	 *     ImmutableTypes.listOf is patterned after React.PropTypes.arrayOf, but for Immutable.List
	 *     ImmutableTypes.shape  is based on React.PropTypes.shape, but for any Immutable.Iterable
	 */
	"use strict";
	
	var Immutable = __webpack_require__(13);
	
	var ANONYMOUS = "<<anonymous>>";
	
	var ImmutablePropTypes = {
	  listOf: createListOfTypeChecker,
	  mapOf: createMapOfTypeChecker,
	  orderedMapOf: createOrderedMapOfTypeChecker,
	  setOf: createSetOfTypeChecker,
	  orderedSetOf: createOrderedSetOfTypeChecker,
	  stackOf: createStackOfTypeChecker,
	  iterableOf: createIterableOfTypeChecker,
	  recordOf: createRecordOfTypeChecker,
	  shape: createShapeChecker,
	  contains: createShapeChecker,
	  mapContains: createMapContainsChecker,
	  // Primitive Types
	  list: createImmutableTypeChecker("List", Immutable.List.isList),
	  map: createImmutableTypeChecker("Map", Immutable.Map.isMap),
	  orderedMap: createImmutableTypeChecker("OrderedMap", Immutable.OrderedMap.isOrderedMap),
	  set: createImmutableTypeChecker("Set", Immutable.Set.isSet),
	  orderedSet: createImmutableTypeChecker("OrderedSet", Immutable.OrderedSet.isOrderedSet),
	  stack: createImmutableTypeChecker("Stack", Immutable.Stack.isStack),
	  seq: createImmutableTypeChecker("Seq", Immutable.Seq.isSeq),
	  record: createImmutableTypeChecker("Record", function (isRecord) {
	    return isRecord instanceof Immutable.Record;
	  }),
	  iterable: createImmutableTypeChecker("Iterable", Immutable.Iterable.isIterable)
	};
	
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return "array";
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return "object";
	  }
	  if (propValue instanceof Immutable.Iterable) {
	    return "Immutable." + propValue.toSource().split(" ")[0];
	  }
	  return propType;
	}
	
	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    for (var _len = arguments.length, rest = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {
	      rest[_key - 6] = arguments[_key];
	    }
	
	    propFullName = propFullName || propName;
	    componentName = componentName || ANONYMOUS;
	    if (props[propName] == null) {
	      var locationName = location;
	      if (isRequired) {
	        return new Error("Required " + locationName + " `" + propFullName + "` was not specified in " + ("`" + componentName + "`."));
	      }
	    } else {
	      return validate.apply(undefined, [props, propName, componentName, location, propFullName].concat(rest));
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createImmutableTypeChecker(immutableClassName, immutableClassTypeValidator) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!immutableClassTypeValidator(propValue)) {
	      var propType = getPropType(propValue);
	      return new Error("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `" + immutableClassName + "`."));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createIterableTypeChecker(typeChecker, immutableClassName, immutableClassTypeValidator) {
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
	      rest[_key - 5] = arguments[_key];
	    }
	
	    var propValue = props[propName];
	    if (!immutableClassTypeValidator(propValue)) {
	      var locationName = location;
	      var propType = getPropType(propValue);
	      return new Error("Invalid " + locationName + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an Immutable.js " + immutableClassName + "."));
	    }
	
	    if (typeof typeChecker !== "function") {
	      return new Error("Invalid typeChecker supplied to `" + componentName + "` " + ("for propType `" + propFullName + "`, expected a function."));
	    }
	
	    var propValues = propValue.toArray();
	    for (var i = 0, len = propValues.length; i < len; i++) {
	      var error = typeChecker.apply(undefined, [propValues, i, componentName, location, "" + propFullName + "[" + i + "]"].concat(rest));
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createKeysTypeChecker(typeChecker) {
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
	      rest[_key - 5] = arguments[_key];
	    }
	
	    var propValue = props[propName];
	    if (typeof typeChecker !== "function") {
	      return new Error("Invalid keysTypeChecker (optional second argument) supplied to `" + componentName + "` " + ("for propType `" + propFullName + "`, expected a function."));
	    }
	
	    var keys = propValue.keySeq().toArray();
	    for (var i = 0, len = keys.length; i < len; i++) {
	      var error = typeChecker.apply(undefined, [keys, i, componentName, location, "" + propFullName + " -> key(" + keys[i] + ")"].concat(rest));
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createListOfTypeChecker(typeChecker) {
	  return createIterableTypeChecker(typeChecker, "List", Immutable.List.isList);
	}
	
	function createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, immutableClassName, immutableClassTypeValidator) {
	  function validate() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return createIterableTypeChecker(valuesTypeChecker, immutableClassName, immutableClassTypeValidator).apply(undefined, args) || keysTypeChecker && createKeysTypeChecker(keysTypeChecker).apply(undefined, args);
	  }
	
	  return createChainableTypeChecker(validate);
	}
	
	function createMapOfTypeChecker(valuesTypeChecker, keysTypeChecker) {
	  return createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, "Map", Immutable.Map.isMap);
	}
	
	function createOrderedMapOfTypeChecker(valuesTypeChecker, keysTypeChecker) {
	  return createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, "OrderedMap", Immutable.OrderedMap.isOrderedMap);
	}
	
	function createSetOfTypeChecker(typeChecker) {
	  return createIterableTypeChecker(typeChecker, "Set", Immutable.Set.isSet);
	}
	
	function createOrderedSetOfTypeChecker(typeChecker) {
	  return createIterableTypeChecker(typeChecker, "OrderedSet", Immutable.OrderedSet.isOrderedSet);
	}
	
	function createStackOfTypeChecker(typeChecker) {
	  return createIterableTypeChecker(typeChecker, "Stack", Immutable.Stack.isStack);
	}
	
	function createIterableOfTypeChecker(typeChecker) {
	  return createIterableTypeChecker(typeChecker, "Iterable", Immutable.Iterable.isIterable);
	}
	
	function createRecordOfTypeChecker(recordKeys) {
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
	      rest[_key - 5] = arguments[_key];
	    }
	
	    var propValue = props[propName];
	    if (!(propValue instanceof Immutable.Record)) {
	      var propType = getPropType(propValue);
	      var locationName = location;
	      return new Error("Invalid " + locationName + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected an Immutable.js Record."));
	    }
	    for (var key in recordKeys) {
	      var checker = recordKeys[key];
	      if (!checker) {
	        continue;
	      }
	      var mutablePropValue = propValue.toObject();
	      var error = checker.apply(undefined, [mutablePropValue, key, componentName, location, "" + propFullName + "." + key].concat(rest));
	      if (error) {
	        return error;
	      }
	    }
	  }
	  return createChainableTypeChecker(validate);
	}
	
	// there is some irony in the fact that shapeTypes is a standard hash and not an immutable collection
	function createShapeTypeChecker(shapeTypes) {
	  var immutableClassName = arguments[1] === undefined ? "Iterable" : arguments[1];
	  var immutableClassTypeValidator = arguments[2] === undefined ? Immutable.Iterable.isIterable : arguments[2];
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
	      rest[_key - 5] = arguments[_key];
	    }
	
	    var propValue = props[propName];
	    if (!immutableClassTypeValidator(propValue)) {
	      var propType = getPropType(propValue);
	      var locationName = location;
	      return new Error("Invalid " + locationName + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected an Immutable.js " + immutableClassName + "."));
	    }
	    var mutablePropValue = propValue.toObject();
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker.apply(undefined, [mutablePropValue, key, componentName, location, "" + propFullName + "." + key].concat(rest));
	      if (error) {
	        return error;
	      }
	    }
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeChecker(shapeTypes) {
	  return createShapeTypeChecker(shapeTypes);
	}
	
	function createMapContainsChecker(shapeTypes) {
	  return createShapeTypeChecker(shapeTypes, "Map", Immutable.Map.isMap);
	}
	
	module.exports = ImmutablePropTypes;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;
	
	var _createStore = __webpack_require__(325);
	
	var _createStore2 = _interopRequireDefault(_createStore);
	
	var _combineReducers = __webpack_require__(656);
	
	var _combineReducers2 = _interopRequireDefault(_combineReducers);
	
	var _bindActionCreators = __webpack_require__(655);
	
	var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);
	
	var _applyMiddleware = __webpack_require__(654);
	
	var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);
	
	var _compose = __webpack_require__(324);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	var _warning = __webpack_require__(326);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/*
	* This is a dummy function to check if the function name has been altered by minification.
	* If the function has been minified and NODE_ENV !== 'production', warn the user.
	*/
	function isCrushed() {}
	
	if (false) {
	  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}
	
	exports.createStore = _createStore2['default'];
	exports.combineReducers = _combineReducers2['default'];
	exports.bindActionCreators = _bindActionCreators2['default'];
	exports.applyMiddleware = _applyMiddleware2['default'];
	exports.compose = _compose2['default'];

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.connect = exports.connectAdvanced = exports.Provider = undefined;
	
	var _Provider = __webpack_require__(608);
	
	var _Provider2 = _interopRequireDefault(_Provider);
	
	var _connectAdvanced = __webpack_require__(302);
	
	var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);
	
	var _connect = __webpack_require__(609);
	
	var _connect2 = _interopRequireDefault(_connect);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Provider = _Provider2.default;
	exports.connectAdvanced = _connectAdvanced2.default;
	exports.connect = _connect2.default;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var validateFormat = function validateFormat(format) {};
	
	if (false) {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}
	
	module.exports = invariant;

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.isExistCreditOrDebit = exports.sortByDefaultList = exports.addPrefixUOB = exports.checkItemInList = exports.getHighestRankProduct = exports.handleServerDown = exports.handleValidationMismatch = exports.handleSessionTimeout = exports.isValidOrNotDirty = exports.caltotalInterestPayable = exports.calMonthlyRepayments = exports.calProcessingFee = exports.convertDataURLToFile = exports.isSG = exports.sellinPersonalLoan = exports.sellinBalanceTransfer = exports.sellingCashPlus = exports.sellingCasa = exports.sellingCards = exports.detectPathName = exports.createFormClass = exports.getErrorMsg = exports.getInputStatesByPath = exports.getInputStates = exports.mapAPIJsonToStore = exports.removeInputFromState = exports.addNewInputToState = exports.addValidFlagToState = exports.bytesToSize = exports.fileUploadHelper = exports.createAsyncConstantTypes = exports.createTypes = exports.createActions = exports.swapMap = exports.checkRegExp = exports.variancePipe = exports.pipe = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _path = __webpack_require__(4);
	
	var _immutable = __webpack_require__(13);
	
	var _libphonenumberJs = __webpack_require__(100);
	
	var _reactRouterRedux = __webpack_require__(80);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	// import {addCrossProductCasa, addCrossProductCards, removeCrossProduct} from "./actions/actionCreators";
	
	var applyFn = function applyFn(state, fn) {
	    return fn(state);
	};
	var pipe = exports.pipe = function pipe(fns, state) {
	    return state.withMutations(function (s) {
	        return fns.reduce(applyFn, s);
	    });
	};
	var variancePipe = exports.variancePipe = function variancePipe(fns, state, step) {
	    return state.withMutations(function (s) {
	        return fns.reduce(function (currentState, fn) {
	            return fn(currentState, step);
	        }, s);
	    });
	};
	
	var checkRegExp = exports.checkRegExp = function checkRegExp(value, regexp) {
	    return regexp.test(value);
	};
	
	var swapMap = exports.swapMap = function swapMap(map) {
	    var ret = {};
	    for (var key in map) {
	        if (map.hasOwnProperty(key)) {
	            ret[map[key]] = key;
	        }
	    }
	    return ret;
	};
	
	var createActions = exports.createActions = function createActions(action, type) {
	    return Object.assign({}, action, { type: type, async: false });
	};
	var createTypes = exports.createTypes = function createTypes(type) {
	    return [type + "_PENDING", type + "_SUCCESS", type + "_ERROR", type + "_LOADING"];
	};
	var createAsyncConstantTypes = exports.createAsyncConstantTypes = function createAsyncConstantTypes(type) {
	    return [type].concat(_toConsumableArray(createTypes(type)));
	};
	var fileUploadHelper = exports.fileUploadHelper = function fileUploadHelper(file, url, inputId, _ref) {
	    var successDispatch = _ref.successDispatch;
	    var errorDispatch = _ref.errorDispatch;
	    var progressDispatch = _ref.progressDispatch;
	
	    var xhr = new window.XMLHttpRequest();
	    var formData = new window.FormData();
	    if (inputId === "signature" || inputId === "drawSignature") {
	        formData.append("file", file, "signature.png");
	    } else {
	        formData.append("file", file);
	    }
	    xhr.upload.addEventListener("progress", function (e) {
	        var percentage = e.loaded / e.total * 100;
	        progressDispatch(Math.round(percentage));
	    }, false);
	    xhr.onloadend = function (e) {
	        return e.target.status === 200 ? successDispatch(e.target.response) : errorDispatch(e.target.response);
	    };
	    xhr.open("POST", url + "?documentType=" + inputId);
	    xhr.send(formData);
	};
	
	var bytesToSize = exports.bytesToSize = function bytesToSize(bytes) {
	    var sizes = ["Bytes", "KB", "MB", "GB", "TB"];
	    if (bytes === 0) {
	        return "0 Byte";
	    }
	    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)), 10);
	    return Math.round(bytes / Math.pow(1024, i), 2) + " " + sizes[i];
	};
	
	var addValidFlagToState = exports.addValidFlagToState = function addValidFlagToState(inputIds, props) {
	    var dispatchAddValidFlag = props.dispatchAddValidFlag;
	    var state = props.state;
	    var step = props.step;
	
	    var inputsInStep = state.getIn((0, _path.uiStepPath)(step));
	    inputIds.forEach(function (x) {
	        if (!inputsInStep.get(x)) {
	            dispatchAddValidFlag(step, x);
	        }
	    });
	};
	
	var addNewInputToState = exports.addNewInputToState = function addNewInputToState(inputsToAdd, customStep) {
	    return function (state, step) {
	        var newStep = customStep || step;
	        var currentStepInputs = state.getIn((0, _path.uiStepPath)(newStep));
	        var uiDefaultState = (0, _immutable.Map)({
	            isFocus: false,
	            isDirty: false,
	            isValid: false,
	            errorMsg: ""
	        });
	        var addStepInputs = inputsToAdd.reduce(function (r, f) {
	            var previousValues = state.getIn((0, _path.uiInputPath)(newStep, f), uiDefaultState);
	            return r.set(f, previousValues);
	        }, (0, _immutable.Map)());
	        var newStepInputs = currentStepInputs.merge(addStepInputs);
	        return state.setIn((0, _path.uiStepPath)(newStep), newStepInputs);
	    };
	};
	
	var removeInputFromState = exports.removeInputFromState = function removeInputFromState(inputsToRemove, customStep) {
	    return function (state, step) {
	        var newStep = customStep || step;
	        var currentStepInputs = state.getIn((0, _path.uiStepPath)(newStep));
	        var newStepInputs = currentStepInputs.filter(function (v, k) {
	            return !inputsToRemove.includes(k);
	        });
	        // inputsToRemove.map(input => state.setIn(dataPath([input]), ""));
	        return state.setIn((0, _path.uiStepPath)(newStep), newStepInputs);
	    };
	};
	
	var mapAPIJsonToStore = exports.mapAPIJsonToStore = function mapAPIJsonToStore(apiJson) {
	    return apiJson.myInfo ? {
	        fullName: apiJson.myInfo.name.value,
	        nric: apiJson.myInfo.myinfolegalIdentity,
	        email: apiJson.myInfo.email.value,
	        mobileNumber: new _libphonenumberJs.asYouType().input("" + apiJson.myInfo.mobileno.prefix + apiJson.myInfo.mobileno.code + apiJson.myInfo.mobileno.nbr),
	        nameOntheCard: apiJson.myInfo.name.value,
	        hanYuPinYinName: apiJson.myInfo.hanyupinyinname.value,
	        aliasName: apiJson.myInfo.aliasname.value,
	        hanyuPinYinAliasName: apiJson.myInfo.hanyupinyinaliasname.value,
	        marriedName: apiJson.myInfo.marriedname.value,
	        username: apiJson.myInfo.username.value
	    } : {};
	};
	
	var getInputStates = exports.getInputStates = function getInputStates(state, step, inputID) {
	    // console.log(step, inputID);
	    var isFocus = state.getIn((0, _path.uiFocusPath)(step, inputID), false);
	    var isValid = state.getIn((0, _path.uiIsValidPath)(step, inputID));
	    var isDirty = state.getIn((0, _path.uiIsDirtyPath)(step, inputID), false);
	    var inputValue = state.getIn((0, _path.dataPath)([inputID]), "");
	    var errorMsg = state.getIn((0, _path.uiErrorMsgPath)(step, inputID), "");
	    return [isFocus, isValid, isDirty, errorMsg, inputValue];
	};
	
	var getInputStatesByPath = exports.getInputStatesByPath = function getInputStatesByPath(state, step, inputID, path) {
	    // console.log(step, inputID);
	    var isFocus = state.getIn((0, _path.uiFocusPath)(step, inputID), false);
	    var isValid = state.getIn((0, _path.uiIsValidPath)(step, inputID));
	    var isDirty = state.getIn((0, _path.uiIsDirtyPath)(step, inputID), false);
	    var inputValue = state.getIn(path, "");
	    var errorMsg = state.getIn((0, _path.uiErrorMsgPath)(step, inputID), "");
	    return [isFocus, isValid, isDirty, errorMsg, inputValue];
	};
	
	var getErrorMsg = exports.getErrorMsg = function getErrorMsg(type, config) {
	    return config["formInputErrorMessages"][type];
	};
	
	var createFormClass = exports.createFormClass = function createFormClass(config) {
	    return function () {
	        function FormConfig(step) {
	            _classCallCheck(this, FormConfig);
	
	            this.step = step;
	            this.title = config["formSteps"][step]["title"];
	            this.subtitle = config["formSteps"][step]["subtitle"];
	            this.inputLabels = config["formSteps"][step]["inputLabels"];
	            this.inputValues = config["formSteps"][step]["inputValues"] ? this.mapDropdownValues(config["formSteps"][step]["inputValues"]) : "";
	            this.inputDescriptions = config["formSteps"][step]["inputDescription"];
	            this.dropDownValues = config["formSteps"][step]["inputValues"];
	            this.termsAndConditions = config["formSteps"][step]["termsAndConditions"];
	            this.plTableRowTitles = config["formSteps"][step]["plTableRowTitles"];
	            this.btTableRowTitles = config["formSteps"][step]["btTableRowTitles"];
	            this.congratulation = config["formSteps"]["congratulation"];
	            this.errorPage = config["formSteps"]["errorPage"];
	            this.buttons = config["formSteps"]["accountDetails"]["buttons"];
	        }
	
	        _createClass(FormConfig, [{
	            key: "getPostMessage",
	            value: function getPostMessage(type) {
	                this.postMessage = config["formSteps"][this.step]["postInputsMessage"][type || "default"]["title"];
	                this.postMessageContent = config["formSteps"][this.step]["postInputsMessage"][type || "default"]["content"];
	                return [this.postMessage, this.postMessageContent];
	            }
	        }, {
	            key: "mapDropdownValues",
	            value: function mapDropdownValues(inputValues) {
	                var dropdownInputs = Object.keys(inputValues);
	                var dropdownValueAndLabel = dropdownInputs.map(function (x) {
	                    return inputValues[x];
	                }).map(function (valueAndLabel) {
	                    var value = Object.keys(valueAndLabel);
	                    return value.map(function (v) {
	                        return { value: v, label: valueAndLabel[v] };
	                    });
	                });
	                return dropdownInputs.reduce(function (dropdownConfig, inputId, i) {
	                    return (dropdownConfig[inputId] = dropdownValueAndLabel[i]) && dropdownConfig;
	                }, {});
	            }
	        }]);
	
	        return FormConfig;
	    }();
	};
	
	var detectPathName = exports.detectPathName = function detectPathName() {
	    var router = [];
	    var pn = window.location.pathname;
	    // TODO
	    return pn.replace(router.filter(function (a) {
	        return pn.indexOf(a) !== -1;
	    })[0], "");
	};
	
	var sellingCards = exports.sellingCards = function sellingCards(productIds, productConfig) {
	    return productIds.map(function (productId) {
	        return productConfig.products[productId].type;
	    }).includes("Card");
	};
	
	var sellingCasa = exports.sellingCasa = function sellingCasa(productIds, productConfig) {
	    return productIds.map(function (productId) {
	        return productConfig.products[productId].type;
	    }).includes("CASA");
	};
	
	var sellingCashPlus = exports.sellingCashPlus = function sellingCashPlus(productIds, productConfig) {
	    return productIds.map(function (productId) {
	        return productConfig.products[productId].type;
	    }).includes("CASH+");
	};
	
	var sellinBalanceTransfer = exports.sellinBalanceTransfer = function sellinBalanceTransfer(productIds, productConfig) {
	    return productIds.map(function (productId) {
	        return productConfig.products[productId].type;
	    }).includes("balanceTransfer");
	};
	
	var sellinPersonalLoan = exports.sellinPersonalLoan = function sellinPersonalLoan(productIds, productConfig) {
	    return productIds.map(function (productId) {
	        return productConfig.products[productId].type;
	    }).includes("personalLoan");
	};
	
	var isSG = exports.isSG = function isSG(ic) {
	    return ic.split("")[0] === "S";
	};
	
	var convertDataURLToFile = exports.convertDataURLToFile = function convertDataURLToFile(file, fileName) {
	    var blobBin = window.atob(file.split(",")[1]);
	    var array = [];
	    for (var i = 0; i < blobBin.length; i++) {
	        array.push(blobBin.charCodeAt(i));
	    }
	    return new window.File([new Uint8Array(array)], fileName, { type: "image/png" });
	};
	
	var PMT = function PMT(rate, nper, pv, fv, type) {
	    if (rate === 0) {
	        return -(pv + fv) / nper;
	    }
	
	    var pvif = Math.pow(1 + rate, nper);
	    var pmt = rate / (pvif - 1) * -(pv * pvif + fv);
	
	    if (type === 1) {
	        pmt /= 1 + rate;
	    }
	
	    return pmt;
	};
	
	var calProcessingFee = exports.calProcessingFee = function calProcessingFee(amt, processingFee) {
	    return (Number(processingFee) / 100 * Number(amt)).toFixed(2);
	};
	var calMonthlyRepayments = exports.calMonthlyRepayments = function calMonthlyRepayments(amt, interestRate, tenor) {
	    var interestRateInDec = interestRate / 100;
	    return PMT(interestRateInDec / 12, tenor, -amt, 0, 0).toFixed(2);
	};
	var caltotalInterestPayable = exports.caltotalInterestPayable = function caltotalInterestPayable(amt, interestRate, tenor) {
	    var interestRateInDec = interestRate / 100;
	    var pmt = PMT(interestRateInDec / 12, tenor, -amt, 0, 0);
	    return (pmt * tenor - amt).toFixed(2);
	};
	
	var isValidOrNotDirty = exports.isValidOrNotDirty = function isValidOrNotDirty(isValid, isDirty) {
	    return isValid || !isDirty;
	};
	
	var handleSessionTimeout = exports.handleSessionTimeout = function handleSessionTimeout(res, dispatch) {
	    return res.status === 401 ? dispatch((0, _reactRouterRedux.push)(detectPathName() + "error")) : res;
	};
	var handleValidationMismatch = exports.handleValidationMismatch = function handleValidationMismatch(res, dispatch) {
	    return res.status === 406 ? dispatch((0, _reactRouterRedux.push)(detectPathName() + "error")) : res;
	};
	var handleServerDown = exports.handleServerDown = function handleServerDown(res, dispatch) {
	    return res.status >= 500 ? dispatch((0, _reactRouterRedux.push)(detectPathName() + "error")) : res;
	};
	var getHighestRankProduct = exports.getHighestRankProduct = function getHighestRankProduct(productsInfo) {
	    return productsInfo.max(function (a, b) {
	        return a.get("rank", 0) > b.get("rank", 0);
	    });
	};
	
	var checkItemInList = exports.checkItemInList = function checkItemInList(items, targetList, isCheck) {
	    if (!isCheck) {
	        return false;
	    }
	    if (targetList && targetList.length === 0) {
	        return false;
	    }
	    var isExist = (items || []).map(function (item) {
	        return targetList.includes(item);
	    });
	    return isExist.first();
	};
	
	var addPrefixUOB = exports.addPrefixUOB = function addPrefixUOB(name, type) {
	    return ["CPPL", "CPBT", "CCPL", "CCBT"].indexOf(type) > -1 ? "UOB " + name : name;
	};
	
	var sortByDefaultList = exports.sortByDefaultList = function sortByDefaultList(defaultList, list) {
	    var arr = [];
	    if (list && list.count() === 0) {
	        return list;
	    }
	    (defaultList || []).forEach(function (entry) {
	        var filterList = list.filter(function (e) {
	            return e.get("pid") === entry;
	        });
	        if (filterList.count() > 0) {
	            arr.push(filterList.first());
	        }
	    });
	    return arr.length > 0 ? arr : list;
	};
	
	var isExistCreditOrDebit = exports.isExistCreditOrDebit = function isExistCreditOrDebit(productId, productIds, credits, debits) {
	    var typeCard = "";
	    if (debits.indexOf(productId) > -1) {
	        typeCard = "DEBIT";
	    }
	    if (credits.indexOf(productId) > -1) {
	        typeCard = "CREDIT";
	    }
	    if (!typeCard) {
	        return false;
	    }
	    var isFilter = productIds.filter(function (entry) {
	        if (typeCard === "DEBIT" && entry !== productId) {
	            return debits.includes(entry);
	        }
	        if (typeCard === "CREDIT" && entry !== productId) {
	            return credits.includes(entry);
	        }
	        return false;
	    });
	    return isFilter.count() > 0 ? true : false;
	};

/***/ },
/* 10 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// step 1 - Basic Info
	var FULL_NAME = exports.FULL_NAME = "fullName";
	var HAN_YU_PIN_YI_NAME = exports.HAN_YU_PIN_YI_NAME = "hanYuPinYinName";
	var ALIAS_NAME = exports.ALIAS_NAME = "aliasName";
	var HAN_YU_PIN_YI_ALIAS_NAME = exports.HAN_YU_PIN_YI_ALIAS_NAME = "hanyuPinYinAliasName";
	var MARRIED_NAME = exports.MARRIED_NAME = "marriedName";
	var NRIC = exports.NRIC = "nric";
	var EMAIL = exports.EMAIL = "email";
	var MOBILE_NUMBER = exports.MOBILE_NUMBER = "mobileNumber";
	var IS_SG = exports.IS_SG = "isSG";
	var PASSPORT_EXPIRY = exports.PASSPORT_EXPIRY = "passportExpiry";
	var PASSPORT = exports.PASSPORT = "passport";
	var PASSPORT_IDENTITY_COUNTRY = exports.PASSPORT_IDENTITY_COUNTRY = "passportIdentityCountry";
	var NRIC_ISSUE_DATE = exports.NRIC_ISSUE_DATE = "nricIssueDate";
	var NRIC_PR = exports.NRIC_PR = "nricPR";
	var NRIC_SC = exports.NRIC_SC = "nricSC";
	var LOAN_TRANFER_TYPES = exports.LOAN_TRANFER_TYPES = ["CCPL", "CPPL", "CCBT", "CPBT"];
	var RESIDENTIAL_STATUS = exports.RESIDENTIAL_STATUS = "residentialStatus";
	
	// step 2 - OTP
	var OTP = exports.OTP = "otp";
	
	// step 3 - Account Details
	var NAME_ON_CARD = exports.NAME_ON_CARD = "nameOntheCard";
	var CARD_LIMIT = exports.CARD_LIMIT = "cardLimit";
	var CREDIT_LIMIT = exports.CREDIT_LIMIT = "creditLimit";
	var CURRENCIES = exports.CURRENCIES = "currencies";
	var PURPOSE_OF_FUNDS = exports.PURPOSE_OF_FUNDS = "purposeOfFunds";
	var SOURCE_OF_FUNDS = exports.SOURCE_OF_FUNDS = "sourceOfFunds";
	var COUNTRY_OF_FUNDS = exports.COUNTRY_OF_FUNDS = "countryOfFunds";
	var ACTIVATE_ATM = exports.ACTIVATE_ATM = "activateAtms";
	var SAME_PURPOSE_OF_FUNDS = exports.SAME_PURPOSE_OF_FUNDS = "purposeOfFunds";
	var JUNIOR_SAVER = exports.JUNIOR_SAVER = "juniorSaver";
	var JUNIOR_SAVER_NAME = exports.JUNIOR_SAVER_NAME = JUNIOR_SAVER + "Name";
	var JUNIOR_SAVER_GENDER = exports.JUNIOR_SAVER_GENDER = JUNIOR_SAVER + "Gender";
	var JUNIOR_SAVER_DOB = exports.JUNIOR_SAVER_DOB = JUNIOR_SAVER + "DOB";
	var JUNIOR_SAVER_BIRTH_CERT = exports.JUNIOR_SAVER_BIRTH_CERT = JUNIOR_SAVER + "BirthCert";
	var JUNIOR_SAVER_NATIONALITY = exports.JUNIOR_SAVER_NATIONALITY = JUNIOR_SAVER + "Nationality";
	var JUNIOR_SAVER_COUNTRY_OF_BIRTH = exports.JUNIOR_SAVER_COUNTRY_OF_BIRTH = JUNIOR_SAVER + "CountryOfBirth";
	var MULTI = exports.MULTI = "multi";
	var KRYSFLYER_MEMBERSHIP_NUMBER = exports.KRYSFLYER_MEMBERSHIP_NUMBER = "krisflyerMembershipNumber";
	var IS_EXISTING_KRISFLYER_MEMBER = exports.IS_EXISTING_KRISFLYER_MEMBER = "krisflyerMembershipStatus";
	var KRISFLYER_FIRST_NAME = exports.KRISFLYER_FIRST_NAME = "krisflyerMembershipFName";
	var KRISFLYER_LAST_NAME = exports.KRISFLYER_LAST_NAME = "krisflyerMembershipLName";
	var ASIA_MILES_MEMBERSHIP_NUMBER = exports.ASIA_MILES_MEMBERSHIP_NUMBER = "asiaMilesMembershipNumber";
	var FLYER_MILES_MEMBERSHIP_NUMBER = exports.FLYER_MILES_MEMBERSHIP_NUMBER = "flyerMilesMembershipNumber";
	var SINGTEL_MEMBERSHIP_NUMBER = exports.SINGTEL_MEMBERSHIP_NUMBER = "singtelMembershipNumber";
	var UNSECURED_LOAN_AMOUNT = exports.UNSECURED_LOAN_AMOUNT = "unsecuredLoanAmount";
	var UNSECURED_LOAN_TENOR = exports.UNSECURED_LOAN_TENOR = "unsecuredLoanTenor";
	var UNSECURED_LOAN_BENEFICIARY_BANK = exports.UNSECURED_LOAN_BENEFICIARY_BANK = "unsecuredLoanBeneficiaryBank";
	var UNSECURED_LOAN_BENEFICIARY_BANK_NAME = exports.UNSECURED_LOAN_BENEFICIARY_BANK_NAME = "unsecuredLoanBeneficiaryBankName";
	var UNSECURED_LOAN_BENEFICIARY_ACCOUNT = exports.UNSECURED_LOAN_BENEFICIARY_ACCOUNT = "unsecuredLoanBeneficiaryAccount";
	var UNSECURED_LOAN_BENEFICIARY_NAME = exports.UNSECURED_LOAN_BENEFICIARY_NAME = "unsecuredLoanBeneficiaryName";
	var UNSECRUED_LOAN_TABLE = exports.UNSECRUED_LOAN_TABLE = "unsecuredLoanTable";
	var LINK_TO_FLYER_MILES = exports.LINK_TO_FLYER_MILES = "linkToFlyerMiles";
	var LINK_TO_ASIA_MILES = exports.LINK_TO_ASIA_MILES = "linkToAsiaMiles";
	var CREDIT_SURE = exports.CREDIT_SURE = "creditSure";
	var SAME_DAY_DELIVERY = exports.SAME_DAY_DELIVERY = "sameDayDelivery";
	
	// step 4 - Personal Info
	var DATE_OF_BIRTH = exports.DATE_OF_BIRTH = "dateOfBirth";
	var MARITAL_STATUS = exports.MARITAL_STATUS = "maritalStatus";
	var EDUCATION_LEVEL = exports.EDUCATION_LEVEL = "educationLevel";
	var NATIONALITY = exports.NATIONALITY = "nationality";
	var COUNTRY_OF_BIRTH = exports.COUNTRY_OF_BIRTH = "countryOfBirth";
	var COUNTRY_OF_RESIDENCE = exports.COUNTRY_OF_RESIDENCE = "countryOfResidence";
	var GENDER = exports.GENDER = "gender";
	
	// step 5 - Home Address
	var HOME = exports.HOME = "home";
	var MAILING = exports.MAILING = "mailing";
	var HOME_POSTAL_CODE = exports.HOME_POSTAL_CODE = HOME + "PostalCode";
	var HOME_BUILDING = exports.HOME_BUILDING = HOME + "Building";
	var HOME_HOME_BLOCK = exports.HOME_HOME_BLOCK = HOME + "Block";
	var HOME_STREET = exports.HOME_STREET = HOME + "Street";
	var HOME_LEVEL = exports.HOME_LEVEL = HOME + "Level";
	var HOME_UNIT_NUMBER = exports.HOME_UNIT_NUMBER = HOME + "UnitNumber";
	var MAILING_COUNTRY = exports.MAILING_COUNTRY = MAILING + "Country";
	var MAILING_POSTAL_CODE = exports.MAILING_POSTAL_CODE = MAILING + "PostalCode";
	var MAILING_HOME_BLOCK = exports.MAILING_HOME_BLOCK = MAILING + "Block";
	var MAILING_STREET = exports.MAILING_STREET = MAILING + "Street";
	var MAILING_BUILDING = exports.MAILING_BUILDING = MAILING + "Building";
	var MAILING_LEVEL = exports.MAILING_LEVEL = MAILING + "Level";
	var MAILING_UNIT_NUMBER = exports.MAILING_UNIT_NUMBER = MAILING + "UnitNumber";
	var SAME_HOME_AND_MAILING_ADD = exports.SAME_HOME_AND_MAILING_ADD = "sameHomeMailingAddress";
	var ADDRESS_ONE = exports.ADDRESS_ONE = MAILING + "Add1";
	var ADDRESS_TWO = exports.ADDRESS_TWO = MAILING + "Add2";
	var ADDRESS_THREE = exports.ADDRESS_THREE = MAILING + "Add3";
	var ADDRESS_FOUR = exports.ADDRESS_FOUR = MAILING + "Add4";
	var ADDRESS_CITY = exports.ADDRESS_CITY = MAILING + "City";
	var RESIDENCE_STATUS = exports.RESIDENCE_STATUS = "residenceStatus";
	var PROPERTY_TYPE = exports.PROPERTY_TYPE = "propertyType";
	var LENGTH_OF_RESIDENCY_YEARS = exports.LENGTH_OF_RESIDENCY_YEARS = "lengthOfResidencyYears";
	var LENGTH_OF_RESIDENCY_MONTHS = exports.LENGTH_OF_RESIDENCY_MONTHS = "lengthOfResidencyMonths";
	
	// step 6 - Work Info
	var NATURE_OF_EMPLOYMENT = exports.NATURE_OF_EMPLOYMENT = "natureOfEmployment";
	var OCCUPATION = exports.OCCUPATION = "occupation";
	var NAME_OF_EMPLOYER = exports.NAME_OF_EMPLOYER = "nameOfEmployer";
	var INDUSTRY = exports.INDUSTRY = "industry";
	var TYPE_OF_WORK_PASS = exports.TYPE_OF_WORK_PASS = "workPassType";
	var ANNUAL_INCOME = exports.ANNUAL_INCOME = "annualIncome";
	var COMPANY = exports.COMPANY = "company";
	var LENGTH_OF_EMPLOYMENT_YEARS = exports.LENGTH_OF_EMPLOYMENT_YEARS = "lengthOfEmploymentYears";
	var LENGTH_OF_EMPLOYMENT_MONTHS = exports.LENGTH_OF_EMPLOYMENT_MONTHS = "lengthOfEmploymentMonths";
	var EPASS_EXPIRY = exports.EPASS_EXPIRY = "ePassExpiry";
	var ASSESS_YEAR = exports.ASSESS_YEAR = "assessYear";
	
	// step 7 - Upload Documents
	var UPLOAD_BILLING_PROOF = exports.UPLOAD_BILLING_PROOF = "uploadDocumentsBillingProof";
	var UPLOAD_NRIC_FRONT = exports.UPLOAD_NRIC_FRONT = "uploadDocumentsNricFront";
	var UPLOAD_NRIC_BACK = exports.UPLOAD_NRIC_BACK = "uploadDocumentsNricBack";
	var UPLOAD_INCOME_PROOF = exports.UPLOAD_INCOME_PROOF = "uploadIncomeProof";
	var UPLOAD_PASSPORT = exports.UPLOAD_PASSPORT = "uploadPassportFront";
	var UPLOAD_PASSPORT_BACK = exports.UPLOAD_PASSPORT_BACK = "uploadPassportBack";
	var UPLOAD_WORK_PERMIT = exports.UPLOAD_WORK_PERMIT = "uploadWorkPermit";
	var UPLOAD_EMPLOYMENT_PROOF = exports.UPLOAD_EMPLOYMENT_PROOF = "uploadEmploymentProof";
	var SUBMIT_CPF_ONLINE = exports.SUBMIT_CPF_ONLINE = "submitCPFOnline";
	var SUBMIT_PR_1_TO_2_YEAR = exports.SUBMIT_PR_1_TO_2_YEAR = "submitPR1-2Year";
	
	// step 8 - Digital Services
	var USERNAME = exports.USERNAME = "username";
	var PASSWORD = exports.PASSWORD = "password";
	var CONFIRM_PASSWORD = exports.CONFIRM_PASSWORD = "confirmPassword";
	
	// step 9 - Declaration
	var US_RESIDENT = exports.US_RESIDENT = "usResident";
	var US_CITIZEN = exports.US_CITIZEN = "usCitizen";
	var RESIDENT_CARD_HOLDER = exports.RESIDENT_CARD_HOLDER = "residentCardHolder";
	var SIGNATURE = exports.SIGNATURE = "signature";
	var DRAW_SIGNATURE = exports.DRAW_SIGNATURE = "drawSignature";
	
	var NULL = exports.NULL = null;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(24);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (false) {
	  var printWarning = function printWarning(format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }
	
	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };
	
	  warning = function warning(condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	
	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }
	
	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }
	
	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}
	
	module.exports = warning;

/***/ },
/* 12 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';
	
	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 *  Copyright (c) 2014-2015, Facebook, Inc.
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree. An additional grant
	 *  of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	(function (global, factory) {
	   true ? module.exports = factory() :
	  typeof define === 'function' && define.amd ? define(factory) :
	  (global.Immutable = factory());
	}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;
	
	  function createClass(ctor, superClass) {
	    if (superClass) {
	      ctor.prototype = Object.create(superClass.prototype);
	    }
	    ctor.prototype.constructor = ctor;
	  }
	
	  function Iterable(value) {
	      return isIterable(value) ? value : Seq(value);
	    }
	
	
	  createClass(KeyedIterable, Iterable);
	    function KeyedIterable(value) {
	      return isKeyed(value) ? value : KeyedSeq(value);
	    }
	
	
	  createClass(IndexedIterable, Iterable);
	    function IndexedIterable(value) {
	      return isIndexed(value) ? value : IndexedSeq(value);
	    }
	
	
	  createClass(SetIterable, Iterable);
	    function SetIterable(value) {
	      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
	    }
	
	
	
	  function isIterable(maybeIterable) {
	    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
	  }
	
	  function isKeyed(maybeKeyed) {
	    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
	  }
	
	  function isIndexed(maybeIndexed) {
	    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
	  }
	
	  function isAssociative(maybeAssociative) {
	    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
	  }
	
	  function isOrdered(maybeOrdered) {
	    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
	  }
	
	  Iterable.isIterable = isIterable;
	  Iterable.isKeyed = isKeyed;
	  Iterable.isIndexed = isIndexed;
	  Iterable.isAssociative = isAssociative;
	  Iterable.isOrdered = isOrdered;
	
	  Iterable.Keyed = KeyedIterable;
	  Iterable.Indexed = IndexedIterable;
	  Iterable.Set = SetIterable;
	
	
	  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';
	
	  // Used for setting prototype methods that IE8 chokes on.
	  var DELETE = 'delete';
	
	  // Constants describing the size of trie nodes.
	  var SHIFT = 5; // Resulted in best performance after ______?
	  var SIZE = 1 << SHIFT;
	  var MASK = SIZE - 1;
	
	  // A consistent shared value representing "not set" which equals nothing other
	  // than itself, and nothing that could be provided externally.
	  var NOT_SET = {};
	
	  // Boolean references, Rough equivalent of `bool &`.
	  var CHANGE_LENGTH = { value: false };
	  var DID_ALTER = { value: false };
	
	  function MakeRef(ref) {
	    ref.value = false;
	    return ref;
	  }
	
	  function SetRef(ref) {
	    ref && (ref.value = true);
	  }
	
	  // A function which returns a value representing an "owner" for transient writes
	  // to tries. The return value will only ever equal itself, and will not equal
	  // the return of any subsequent call of this function.
	  function OwnerID() {}
	
	  // http://jsperf.com/copy-array-inline
	  function arrCopy(arr, offset) {
	    offset = offset || 0;
	    var len = Math.max(0, arr.length - offset);
	    var newArr = new Array(len);
	    for (var ii = 0; ii < len; ii++) {
	      newArr[ii] = arr[ii + offset];
	    }
	    return newArr;
	  }
	
	  function ensureSize(iter) {
	    if (iter.size === undefined) {
	      iter.size = iter.__iterate(returnTrue);
	    }
	    return iter.size;
	  }
	
	  function wrapIndex(iter, index) {
	    // This implements "is array index" which the ECMAString spec defines as:
	    //
	    //     A String property name P is an array index if and only if
	    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
	    //     to 2^32−1.
	    //
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
	    if (typeof index !== 'number') {
	      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
	      if ('' + uint32Index !== index || uint32Index === 4294967295) {
	        return NaN;
	      }
	      index = uint32Index;
	    }
	    return index < 0 ? ensureSize(iter) + index : index;
	  }
	
	  function returnTrue() {
	    return true;
	  }
	
	  function wholeSlice(begin, end, size) {
	    return (begin === 0 || (size !== undefined && begin <= -size)) &&
	      (end === undefined || (size !== undefined && end >= size));
	  }
	
	  function resolveBegin(begin, size) {
	    return resolveIndex(begin, size, 0);
	  }
	
	  function resolveEnd(end, size) {
	    return resolveIndex(end, size, size);
	  }
	
	  function resolveIndex(index, size, defaultIndex) {
	    return index === undefined ?
	      defaultIndex :
	      index < 0 ?
	        Math.max(0, size + index) :
	        size === undefined ?
	          index :
	          Math.min(size, index);
	  }
	
	  /* global Symbol */
	
	  var ITERATE_KEYS = 0;
	  var ITERATE_VALUES = 1;
	  var ITERATE_ENTRIES = 2;
	
	  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator';
	
	  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;
	
	
	  function Iterator(next) {
	      this.next = next;
	    }
	
	    Iterator.prototype.toString = function() {
	      return '[Iterator]';
	    };
	
	
	  Iterator.KEYS = ITERATE_KEYS;
	  Iterator.VALUES = ITERATE_VALUES;
	  Iterator.ENTRIES = ITERATE_ENTRIES;
	
	  Iterator.prototype.inspect =
	  Iterator.prototype.toSource = function () { return this.toString(); }
	  Iterator.prototype[ITERATOR_SYMBOL] = function () {
	    return this;
	  };
	
	
	  function iteratorValue(type, k, v, iteratorResult) {
	    var value = type === 0 ? k : type === 1 ? v : [k, v];
	    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {
	      value: value, done: false
	    });
	    return iteratorResult;
	  }
	
	  function iteratorDone() {
	    return { value: undefined, done: true };
	  }
	
	  function hasIterator(maybeIterable) {
	    return !!getIteratorFn(maybeIterable);
	  }
	
	  function isIterator(maybeIterator) {
	    return maybeIterator && typeof maybeIterator.next === 'function';
	  }
	
	  function getIterator(iterable) {
	    var iteratorFn = getIteratorFn(iterable);
	    return iteratorFn && iteratorFn.call(iterable);
	  }
	
	  function getIteratorFn(iterable) {
	    var iteratorFn = iterable && (
	      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||
	      iterable[FAUX_ITERATOR_SYMBOL]
	    );
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }
	
	  function isArrayLike(value) {
	    return value && typeof value.length === 'number';
	  }
	
	  createClass(Seq, Iterable);
	    function Seq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        isIterable(value) ? value.toSeq() : seqFromValue(value);
	    }
	
	    Seq.of = function(/*...values*/) {
	      return Seq(arguments);
	    };
	
	    Seq.prototype.toSeq = function() {
	      return this;
	    };
	
	    Seq.prototype.toString = function() {
	      return this.__toString('Seq {', '}');
	    };
	
	    Seq.prototype.cacheResult = function() {
	      if (!this._cache && this.__iterateUncached) {
	        this._cache = this.entrySeq().toArray();
	        this.size = this._cache.length;
	      }
	      return this;
	    };
	
	    // abstract __iterateUncached(fn, reverse)
	
	    Seq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, true);
	    };
	
	    // abstract __iteratorUncached(type, reverse)
	
	    Seq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, true);
	    };
	
	
	
	  createClass(KeyedSeq, Seq);
	    function KeyedSeq(value) {
	      return value === null || value === undefined ?
	        emptySequence().toKeyedSeq() :
	        isIterable(value) ?
	          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :
	          keyedSeqFromValue(value);
	    }
	
	    KeyedSeq.prototype.toKeyedSeq = function() {
	      return this;
	    };
	
	
	
	  createClass(IndexedSeq, Seq);
	    function IndexedSeq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
	    }
	
	    IndexedSeq.of = function(/*...values*/) {
	      return IndexedSeq(arguments);
	    };
	
	    IndexedSeq.prototype.toIndexedSeq = function() {
	      return this;
	    };
	
	    IndexedSeq.prototype.toString = function() {
	      return this.__toString('Seq [', ']');
	    };
	
	    IndexedSeq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, false);
	    };
	
	    IndexedSeq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, false);
	    };
	
	
	
	  createClass(SetSeq, Seq);
	    function SetSeq(value) {
	      return (
	        value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value
	      ).toSetSeq();
	    }
	
	    SetSeq.of = function(/*...values*/) {
	      return SetSeq(arguments);
	    };
	
	    SetSeq.prototype.toSetSeq = function() {
	      return this;
	    };
	
	
	
	  Seq.isSeq = isSeq;
	  Seq.Keyed = KeyedSeq;
	  Seq.Set = SetSeq;
	  Seq.Indexed = IndexedSeq;
	
	  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';
	
	  Seq.prototype[IS_SEQ_SENTINEL] = true;
	
	
	
	  createClass(ArraySeq, IndexedSeq);
	    function ArraySeq(array) {
	      this._array = array;
	      this.size = array.length;
	    }
	
	    ArraySeq.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
	    };
	
	    ArraySeq.prototype.__iterate = function(fn, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };
	
	    ArraySeq.prototype.__iterator = function(type, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      var ii = 0;
	      return new Iterator(function() 
	        {return ii > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}
	      );
	    };
	
	
	
	  createClass(ObjectSeq, KeyedSeq);
	    function ObjectSeq(object) {
	      var keys = Object.keys(object);
	      this._object = object;
	      this._keys = keys;
	      this.size = keys.length;
	    }
	
	    ObjectSeq.prototype.get = function(key, notSetValue) {
	      if (notSetValue !== undefined && !this.has(key)) {
	        return notSetValue;
	      }
	      return this._object[key];
	    };
	
	    ObjectSeq.prototype.has = function(key) {
	      return this._object.hasOwnProperty(key);
	    };
	
	    ObjectSeq.prototype.__iterate = function(fn, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        if (fn(object[key], key, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };
	
	    ObjectSeq.prototype.__iterator = function(type, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, key, object[key]);
	      });
	    };
	
	  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;
	
	
	  createClass(IterableSeq, IndexedSeq);
	    function IterableSeq(iterable) {
	      this._iterable = iterable;
	      this.size = iterable.length || iterable.size;
	    }
	
	    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      var iterations = 0;
	      if (isIterator(iterator)) {
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (fn(step.value, iterations++, this) === false) {
	            break;
	          }
	        }
	      }
	      return iterations;
	    };
	
	    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      if (!isIterator(iterator)) {
	        return new Iterator(iteratorDone);
	      }
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step : iteratorValue(type, iterations++, step.value);
	      });
	    };
	
	
	
	  createClass(IteratorSeq, IndexedSeq);
	    function IteratorSeq(iterator) {
	      this._iterator = iterator;
	      this._iteratorCache = [];
	    }
	
	    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      while (iterations < cache.length) {
	        if (fn(cache[iterations], iterations++, this) === false) {
	          return iterations;
	        }
	      }
	      var step;
	      while (!(step = iterator.next()).done) {
	        var val = step.value;
	        cache[iterations] = val;
	        if (fn(val, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };
	
	    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      return new Iterator(function()  {
	        if (iterations >= cache.length) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          cache[iterations] = step.value;
	        }
	        return iteratorValue(type, iterations, cache[iterations++]);
	      });
	    };
	
	
	
	
	  // # pragma Helper functions
	
	  function isSeq(maybeSeq) {
	    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
	  }
	
	  var EMPTY_SEQ;
	
	  function emptySequence() {
	    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
	  }
	
	  function keyedSeqFromValue(value) {
	    var seq =
	      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :
	      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :
	      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :
	      typeof value === 'object' ? new ObjectSeq(value) :
	      undefined;
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of [k, v] entries, '+
	        'or keyed object: ' + value
	      );
	    }
	    return seq;
	  }
	
	  function indexedSeqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value);
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values: ' + value
	      );
	    }
	    return seq;
	  }
	
	  function seqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value) ||
	      (typeof value === 'object' && new ObjectSeq(value));
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values, or keyed object: ' + value
	      );
	    }
	    return seq;
	  }
	
	  function maybeIndexedSeqFromValue(value) {
	    return (
	      isArrayLike(value) ? new ArraySeq(value) :
	      isIterator(value) ? new IteratorSeq(value) :
	      hasIterator(value) ? new IterableSeq(value) :
	      undefined
	    );
	  }
	
	  function seqIterate(seq, fn, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    }
	    return seq.__iterateUncached(fn, reverse);
	  }
	
	  function seqIterator(seq, type, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
	      });
	    }
	    return seq.__iteratorUncached(type, reverse);
	  }
	
	  function fromJS(json, converter) {
	    return converter ?
	      fromJSWith(converter, json, '', {'': json}) :
	      fromJSDefault(json);
	  }
	
	  function fromJSWith(converter, json, key, parentJSON) {
	    if (Array.isArray(json)) {
	      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    if (isPlainObj(json)) {
	      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    return json;
	  }
	
	  function fromJSDefault(json) {
	    if (Array.isArray(json)) {
	      return IndexedSeq(json).map(fromJSDefault).toList();
	    }
	    if (isPlainObj(json)) {
	      return KeyedSeq(json).map(fromJSDefault).toMap();
	    }
	    return json;
	  }
	
	  function isPlainObj(value) {
	    return value && (value.constructor === Object || value.constructor === undefined);
	  }
	
	  /**
	   * An extension of the "same-value" algorithm as [described for use by ES6 Map
	   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
	   *
	   * NaN is considered the same as NaN, however -0 and 0 are considered the same
	   * value, which is different from the algorithm described by
	   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
	   *
	   * This is extended further to allow Objects to describe the values they
	   * represent, by way of `valueOf` or `equals` (and `hashCode`).
	   *
	   * Note: because of this extension, the key equality of Immutable.Map and the
	   * value equality of Immutable.Set will differ from ES6 Map and Set.
	   *
	   * ### Defining custom values
	   *
	   * The easiest way to describe the value an object represents is by implementing
	   * `valueOf`. For example, `Date` represents a value by returning a unix
	   * timestamp for `valueOf`:
	   *
	   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
	   *     var date2 = new Date(1234567890000);
	   *     date1.valueOf(); // 1234567890000
	   *     assert( date1 !== date2 );
	   *     assert( Immutable.is( date1, date2 ) );
	   *
	   * Note: overriding `valueOf` may have other implications if you use this object
	   * where JavaScript expects a primitive, such as implicit string coercion.
	   *
	   * For more complex types, especially collections, implementing `valueOf` may
	   * not be performant. An alternative is to implement `equals` and `hashCode`.
	   *
	   * `equals` takes another object, presumably of similar type, and returns true
	   * if the it is equal. Equality is symmetrical, so the same result should be
	   * returned if this and the argument are flipped.
	   *
	   *     assert( a.equals(b) === b.equals(a) );
	   *
	   * `hashCode` returns a 32bit integer number representing the object which will
	   * be used to determine how to store the value object in a Map or Set. You must
	   * provide both or neither methods, one must not exist without the other.
	   *
	   * Also, an important relationship between these methods must be upheld: if two
	   * values are equal, they *must* return the same hashCode. If the values are not
	   * equal, they might have the same hashCode; this is called a hash collision,
	   * and while undesirable for performance reasons, it is acceptable.
	   *
	   *     if (a.equals(b)) {
	   *       assert( a.hashCode() === b.hashCode() );
	   *     }
	   *
	   * All Immutable collections implement `equals` and `hashCode`.
	   *
	   */
	  function is(valueA, valueB) {
	    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	      return true;
	    }
	    if (!valueA || !valueB) {
	      return false;
	    }
	    if (typeof valueA.valueOf === 'function' &&
	        typeof valueB.valueOf === 'function') {
	      valueA = valueA.valueOf();
	      valueB = valueB.valueOf();
	      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	        return true;
	      }
	      if (!valueA || !valueB) {
	        return false;
	      }
	    }
	    if (typeof valueA.equals === 'function' &&
	        typeof valueB.equals === 'function' &&
	        valueA.equals(valueB)) {
	      return true;
	    }
	    return false;
	  }
	
	  function deepEqual(a, b) {
	    if (a === b) {
	      return true;
	    }
	
	    if (
	      !isIterable(b) ||
	      a.size !== undefined && b.size !== undefined && a.size !== b.size ||
	      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||
	      isKeyed(a) !== isKeyed(b) ||
	      isIndexed(a) !== isIndexed(b) ||
	      isOrdered(a) !== isOrdered(b)
	    ) {
	      return false;
	    }
	
	    if (a.size === 0 && b.size === 0) {
	      return true;
	    }
	
	    var notAssociative = !isAssociative(a);
	
	    if (isOrdered(a)) {
	      var entries = a.entries();
	      return b.every(function(v, k)  {
	        var entry = entries.next().value;
	        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
	      }) && entries.next().done;
	    }
	
	    var flipped = false;
	
	    if (a.size === undefined) {
	      if (b.size === undefined) {
	        if (typeof a.cacheResult === 'function') {
	          a.cacheResult();
	        }
	      } else {
	        flipped = true;
	        var _ = a;
	        a = b;
	        b = _;
	      }
	    }
	
	    var allEqual = true;
	    var bSize = b.__iterate(function(v, k)  {
	      if (notAssociative ? !a.has(v) :
	          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
	        allEqual = false;
	        return false;
	      }
	    });
	
	    return allEqual && a.size === bSize;
	  }
	
	  createClass(Repeat, IndexedSeq);
	
	    function Repeat(value, times) {
	      if (!(this instanceof Repeat)) {
	        return new Repeat(value, times);
	      }
	      this._value = value;
	      this.size = times === undefined ? Infinity : Math.max(0, times);
	      if (this.size === 0) {
	        if (EMPTY_REPEAT) {
	          return EMPTY_REPEAT;
	        }
	        EMPTY_REPEAT = this;
	      }
	    }
	
	    Repeat.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Repeat []';
	      }
	      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
	    };
	
	    Repeat.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._value : notSetValue;
	    };
	
	    Repeat.prototype.includes = function(searchValue) {
	      return is(this._value, searchValue);
	    };
	
	    Repeat.prototype.slice = function(begin, end) {
	      var size = this.size;
	      return wholeSlice(begin, end, size) ? this :
	        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
	    };
	
	    Repeat.prototype.reverse = function() {
	      return this;
	    };
	
	    Repeat.prototype.indexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return 0;
	      }
	      return -1;
	    };
	
	    Repeat.prototype.lastIndexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return this.size;
	      }
	      return -1;
	    };
	
	    Repeat.prototype.__iterate = function(fn, reverse) {
	      for (var ii = 0; ii < this.size; ii++) {
	        if (fn(this._value, ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };
	
	    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      var ii = 0;
	      return new Iterator(function() 
	        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}
	      );
	    };
	
	    Repeat.prototype.equals = function(other) {
	      return other instanceof Repeat ?
	        is(this._value, other._value) :
	        deepEqual(other);
	    };
	
	
	  var EMPTY_REPEAT;
	
	  function invariant(condition, error) {
	    if (!condition) throw new Error(error);
	  }
	
	  createClass(Range, IndexedSeq);
	
	    function Range(start, end, step) {
	      if (!(this instanceof Range)) {
	        return new Range(start, end, step);
	      }
	      invariant(step !== 0, 'Cannot step a Range by 0');
	      start = start || 0;
	      if (end === undefined) {
	        end = Infinity;
	      }
	      step = step === undefined ? 1 : Math.abs(step);
	      if (end < start) {
	        step = -step;
	      }
	      this._start = start;
	      this._end = end;
	      this._step = step;
	      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
	      if (this.size === 0) {
	        if (EMPTY_RANGE) {
	          return EMPTY_RANGE;
	        }
	        EMPTY_RANGE = this;
	      }
	    }
	
	    Range.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Range []';
	      }
	      return 'Range [ ' +
	        this._start + '...' + this._end +
	        (this._step !== 1 ? ' by ' + this._step : '') +
	      ' ]';
	    };
	
	    Range.prototype.get = function(index, notSetValue) {
	      return this.has(index) ?
	        this._start + wrapIndex(this, index) * this._step :
	        notSetValue;
	    };
	
	    Range.prototype.includes = function(searchValue) {
	      var possibleIndex = (searchValue - this._start) / this._step;
	      return possibleIndex >= 0 &&
	        possibleIndex < this.size &&
	        possibleIndex === Math.floor(possibleIndex);
	    };
	
	    Range.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      begin = resolveBegin(begin, this.size);
	      end = resolveEnd(end, this.size);
	      if (end <= begin) {
	        return new Range(0, 0);
	      }
	      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
	    };
	
	    Range.prototype.indexOf = function(searchValue) {
	      var offsetValue = searchValue - this._start;
	      if (offsetValue % this._step === 0) {
	        var index = offsetValue / this._step;
	        if (index >= 0 && index < this.size) {
	          return index
	        }
	      }
	      return -1;
	    };
	
	    Range.prototype.lastIndexOf = function(searchValue) {
	      return this.indexOf(searchValue);
	    };
	
	    Range.prototype.__iterate = function(fn, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(value, ii, this) === false) {
	          return ii + 1;
	        }
	        value += reverse ? -step : step;
	      }
	      return ii;
	    };
	
	    Range.prototype.__iterator = function(type, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      var ii = 0;
	      return new Iterator(function()  {
	        var v = value;
	        value += reverse ? -step : step;
	        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
	      });
	    };
	
	    Range.prototype.equals = function(other) {
	      return other instanceof Range ?
	        this._start === other._start &&
	        this._end === other._end &&
	        this._step === other._step :
	        deepEqual(this, other);
	    };
	
	
	  var EMPTY_RANGE;
	
	  createClass(Collection, Iterable);
	    function Collection() {
	      throw TypeError('Abstract');
	    }
	
	
	  createClass(KeyedCollection, Collection);function KeyedCollection() {}
	
	  createClass(IndexedCollection, Collection);function IndexedCollection() {}
	
	  createClass(SetCollection, Collection);function SetCollection() {}
	
	
	  Collection.Keyed = KeyedCollection;
	  Collection.Indexed = IndexedCollection;
	  Collection.Set = SetCollection;
	
	  var imul =
	    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?
	    Math.imul :
	    function imul(a, b) {
	      a = a | 0; // int
	      b = b | 0; // int
	      var c = a & 0xffff;
	      var d = b & 0xffff;
	      // Shift by 0 fixes the sign on the high part.
	      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int
	    };
	
	  // v8 has an optimization for storing 31-bit signed numbers.
	  // Values which have either 00 or 11 as the high order bits qualify.
	  // This function drops the highest order bit in a signed number, maintaining
	  // the sign bit.
	  function smi(i32) {
	    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);
	  }
	
	  function hash(o) {
	    if (o === false || o === null || o === undefined) {
	      return 0;
	    }
	    if (typeof o.valueOf === 'function') {
	      o = o.valueOf();
	      if (o === false || o === null || o === undefined) {
	        return 0;
	      }
	    }
	    if (o === true) {
	      return 1;
	    }
	    var type = typeof o;
	    if (type === 'number') {
	      if (o !== o || o === Infinity) {
	        return 0;
	      }
	      var h = o | 0;
	      if (h !== o) {
	        h ^= o * 0xFFFFFFFF;
	      }
	      while (o > 0xFFFFFFFF) {
	        o /= 0xFFFFFFFF;
	        h ^= o;
	      }
	      return smi(h);
	    }
	    if (type === 'string') {
	      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
	    }
	    if (typeof o.hashCode === 'function') {
	      return o.hashCode();
	    }
	    if (type === 'object') {
	      return hashJSObj(o);
	    }
	    if (typeof o.toString === 'function') {
	      return hashString(o.toString());
	    }
	    throw new Error('Value type ' + type + ' cannot be hashed.');
	  }
	
	  function cachedHashString(string) {
	    var hash = stringHashCache[string];
	    if (hash === undefined) {
	      hash = hashString(string);
	      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
	        STRING_HASH_CACHE_SIZE = 0;
	        stringHashCache = {};
	      }
	      STRING_HASH_CACHE_SIZE++;
	      stringHashCache[string] = hash;
	    }
	    return hash;
	  }
	
	  // http://jsperf.com/hashing-strings
	  function hashString(string) {
	    // This is the hash from JVM
	    // The hash code for a string is computed as
	    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
	    // where s[i] is the ith character of the string and n is the length of
	    // the string. We "mod" the result to make it between 0 (inclusive) and 2^31
	    // (exclusive) by dropping high bits.
	    var hash = 0;
	    for (var ii = 0; ii < string.length; ii++) {
	      hash = 31 * hash + string.charCodeAt(ii) | 0;
	    }
	    return smi(hash);
	  }
	
	  function hashJSObj(obj) {
	    var hash;
	    if (usingWeakMap) {
	      hash = weakMap.get(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }
	
	    hash = obj[UID_HASH_KEY];
	    if (hash !== undefined) {
	      return hash;
	    }
	
	    if (!canDefineProperty) {
	      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
	      if (hash !== undefined) {
	        return hash;
	      }
	
	      hash = getIENodeHash(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }
	
	    hash = ++objHashUID;
	    if (objHashUID & 0x40000000) {
	      objHashUID = 0;
	    }
	
	    if (usingWeakMap) {
	      weakMap.set(obj, hash);
	    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
	      throw new Error('Non-extensible objects are not allowed as keys.');
	    } else if (canDefineProperty) {
	      Object.defineProperty(obj, UID_HASH_KEY, {
	        'enumerable': false,
	        'configurable': false,
	        'writable': false,
	        'value': hash
	      });
	    } else if (obj.propertyIsEnumerable !== undefined &&
	               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
	      // Since we can't define a non-enumerable property on the object
	      // we'll hijack one of the less-used non-enumerable properties to
	      // save our hash on it. Since this is a function it will not show up in
	      // `JSON.stringify` which is what we want.
	      obj.propertyIsEnumerable = function() {
	        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
	      };
	      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
	    } else if (obj.nodeType !== undefined) {
	      // At this point we couldn't get the IE `uniqueID` to use as a hash
	      // and we couldn't use a non-enumerable property to exploit the
	      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node
	      // itself.
	      obj[UID_HASH_KEY] = hash;
	    } else {
	      throw new Error('Unable to set a non-enumerable property on object.');
	    }
	
	    return hash;
	  }
	
	  // Get references to ES5 object methods.
	  var isExtensible = Object.isExtensible;
	
	  // True if Object.defineProperty works as expected. IE8 fails this test.
	  var canDefineProperty = (function() {
	    try {
	      Object.defineProperty({}, '@', {});
	      return true;
	    } catch (e) {
	      return false;
	    }
	  }());
	
	  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
	  // and avoid memory leaks from the IE cloneNode bug.
	  function getIENodeHash(node) {
	    if (node && node.nodeType > 0) {
	      switch (node.nodeType) {
	        case 1: // Element
	          return node.uniqueID;
	        case 9: // Document
	          return node.documentElement && node.documentElement.uniqueID;
	      }
	    }
	  }
	
	  // If possible, use a WeakMap.
	  var usingWeakMap = typeof WeakMap === 'function';
	  var weakMap;
	  if (usingWeakMap) {
	    weakMap = new WeakMap();
	  }
	
	  var objHashUID = 0;
	
	  var UID_HASH_KEY = '__immutablehash__';
	  if (typeof Symbol === 'function') {
	    UID_HASH_KEY = Symbol(UID_HASH_KEY);
	  }
	
	  var STRING_HASH_CACHE_MIN_STRLEN = 16;
	  var STRING_HASH_CACHE_MAX_SIZE = 255;
	  var STRING_HASH_CACHE_SIZE = 0;
	  var stringHashCache = {};
	
	  function assertNotInfinite(size) {
	    invariant(
	      size !== Infinity,
	      'Cannot perform this action with an infinite size.'
	    );
	  }
	
	  createClass(Map, KeyedCollection);
	
	    // @pragma Construction
	
	    function Map(value) {
	      return value === null || value === undefined ? emptyMap() :
	        isMap(value) && !isOrdered(value) ? value :
	        emptyMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }
	
	    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);
	      return emptyMap().withMutations(function(map ) {
	        for (var i = 0; i < keyValues.length; i += 2) {
	          if (i + 1 >= keyValues.length) {
	            throw new Error('Missing value for key: ' + keyValues[i]);
	          }
	          map.set(keyValues[i], keyValues[i + 1]);
	        }
	      });
	    };
	
	    Map.prototype.toString = function() {
	      return this.__toString('Map {', '}');
	    };
	
	    // @pragma Access
	
	    Map.prototype.get = function(k, notSetValue) {
	      return this._root ?
	        this._root.get(0, undefined, k, notSetValue) :
	        notSetValue;
	    };
	
	    // @pragma Modification
	
	    Map.prototype.set = function(k, v) {
	      return updateMap(this, k, v);
	    };
	
	    Map.prototype.setIn = function(keyPath, v) {
	      return this.updateIn(keyPath, NOT_SET, function()  {return v});
	    };
	
	    Map.prototype.remove = function(k) {
	      return updateMap(this, k, NOT_SET);
	    };
	
	    Map.prototype.deleteIn = function(keyPath) {
	      return this.updateIn(keyPath, function()  {return NOT_SET});
	    };
	
	    Map.prototype.update = function(k, notSetValue, updater) {
	      return arguments.length === 1 ?
	        k(this) :
	        this.updateIn([k], notSetValue, updater);
	    };
	
	    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {
	      if (!updater) {
	        updater = notSetValue;
	        notSetValue = undefined;
	      }
	      var updatedValue = updateInDeepMap(
	        this,
	        forceIterator(keyPath),
	        notSetValue,
	        updater
	      );
	      return updatedValue === NOT_SET ? undefined : updatedValue;
	    };
	
	    Map.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._root = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyMap();
	    };
	
	    // @pragma Composition
	
	    Map.prototype.merge = function(/*...iters*/) {
	      return mergeIntoMapWith(this, undefined, arguments);
	    };
	
	    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, merger, iters);
	    };
	
	    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.merge === 'function' ?
	          m.merge.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };
	
	    Map.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoMapWith(this, deepMerger, arguments);
	    };
	
	    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, deepMergerWith(merger), iters);
	    };
	
	    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.mergeDeep === 'function' ?
	          m.mergeDeep.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };
	
	    Map.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator));
	    };
	
	    Map.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator, mapper));
	    };
	
	    // @pragma Mutability
	
	    Map.prototype.withMutations = function(fn) {
	      var mutable = this.asMutable();
	      fn(mutable);
	      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
	    };
	
	    Map.prototype.asMutable = function() {
	      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
	    };
	
	    Map.prototype.asImmutable = function() {
	      return this.__ensureOwner();
	    };
	
	    Map.prototype.wasAltered = function() {
	      return this.__altered;
	    };
	
	    Map.prototype.__iterator = function(type, reverse) {
	      return new MapIterator(this, type, reverse);
	    };
	
	    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      this._root && this._root.iterate(function(entry ) {
	        iterations++;
	        return fn(entry[1], entry[0], this$0);
	      }, reverse);
	      return iterations;
	    };
	
	    Map.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeMap(this.size, this._root, ownerID, this.__hash);
	    };
	
	
	  function isMap(maybeMap) {
	    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
	  }
	
	  Map.isMap = isMap;
	
	  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';
	
	  var MapPrototype = Map.prototype;
	  MapPrototype[IS_MAP_SENTINEL] = true;
	  MapPrototype[DELETE] = MapPrototype.remove;
	  MapPrototype.removeIn = MapPrototype.deleteIn;
	
	
	  // #pragma Trie Nodes
	
	
	
	    function ArrayMapNode(ownerID, entries) {
	      this.ownerID = ownerID;
	      this.entries = entries;
	    }
	
	    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };
	
	    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;
	
	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;
	
	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }
	
	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);
	
	      if (removed && entries.length === 1) {
	        return; // undefined
	      }
	
	      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
	        return createNodes(ownerID, entries, key, value);
	      }
	
	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);
	
	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }
	
	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }
	
	      return new ArrayMapNode(ownerID, newEntries);
	    };
	
	
	
	
	    function BitmapIndexedNode(ownerID, bitmap, nodes) {
	      this.ownerID = ownerID;
	      this.bitmap = bitmap;
	      this.nodes = nodes;
	    }
	
	    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));
	      var bitmap = this.bitmap;
	      return (bitmap & bit) === 0 ? notSetValue :
	        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);
	    };
	
	    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var bit = 1 << keyHashFrag;
	      var bitmap = this.bitmap;
	      var exists = (bitmap & bit) !== 0;
	
	      if (!exists && value === NOT_SET) {
	        return this;
	      }
	
	      var idx = popCount(bitmap & (bit - 1));
	      var nodes = this.nodes;
	      var node = exists ? nodes[idx] : undefined;
	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
	
	      if (newNode === node) {
	        return this;
	      }
	
	      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
	        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
	      }
	
	      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
	        return nodes[idx ^ 1];
	      }
	
	      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
	        return newNode;
	      }
	
	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
	      var newNodes = exists ? newNode ?
	        setIn(nodes, idx, newNode, isEditable) :
	        spliceOut(nodes, idx, isEditable) :
	        spliceIn(nodes, idx, newNode, isEditable);
	
	      if (isEditable) {
	        this.bitmap = newBitmap;
	        this.nodes = newNodes;
	        return this;
	      }
	
	      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
	    };
	
	
	
	
	    function HashArrayMapNode(ownerID, count, nodes) {
	      this.ownerID = ownerID;
	      this.count = count;
	      this.nodes = nodes;
	    }
	
	    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var node = this.nodes[idx];
	      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
	    };
	
	    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var removed = value === NOT_SET;
	      var nodes = this.nodes;
	      var node = nodes[idx];
	
	      if (removed && !node) {
	        return this;
	      }
	
	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
	      if (newNode === node) {
	        return this;
	      }
	
	      var newCount = this.count;
	      if (!node) {
	        newCount++;
	      } else if (!newNode) {
	        newCount--;
	        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
	          return packNodes(ownerID, nodes, newCount, idx);
	        }
	      }
	
	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newNodes = setIn(nodes, idx, newNode, isEditable);
	
	      if (isEditable) {
	        this.count = newCount;
	        this.nodes = newNodes;
	        return this;
	      }
	
	      return new HashArrayMapNode(ownerID, newCount, newNodes);
	    };
	
	
	
	
	    function HashCollisionNode(ownerID, keyHash, entries) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entries = entries;
	    }
	
	    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };
	
	    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	
	      var removed = value === NOT_SET;
	
	      if (keyHash !== this.keyHash) {
	        if (removed) {
	          return this;
	        }
	        SetRef(didAlter);
	        SetRef(didChangeSize);
	        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
	      }
	
	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;
	
	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }
	
	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);
	
	      if (removed && len === 2) {
	        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
	      }
	
	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);
	
	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }
	
	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }
	
	      return new HashCollisionNode(ownerID, this.keyHash, newEntries);
	    };
	
	
	
	
	    function ValueNode(ownerID, keyHash, entry) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entry = entry;
	    }
	
	    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
	    };
	
	    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;
	      var keyMatch = is(key, this.entry[0]);
	      if (keyMatch ? value === this.entry[1] : removed) {
	        return this;
	      }
	
	      SetRef(didAlter);
	
	      if (removed) {
	        SetRef(didChangeSize);
	        return; // undefined
	      }
	
	      if (keyMatch) {
	        if (ownerID && ownerID === this.ownerID) {
	          this.entry[1] = value;
	          return this;
	        }
	        return new ValueNode(ownerID, this.keyHash, [key, value]);
	      }
	
	      SetRef(didChangeSize);
	      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
	    };
	
	
	
	  // #pragma Iterators
	
	  ArrayMapNode.prototype.iterate =
	  HashCollisionNode.prototype.iterate = function (fn, reverse) {
	    var entries = this.entries;
	    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
	      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
	        return false;
	      }
	    }
	  }
	
	  BitmapIndexedNode.prototype.iterate =
	  HashArrayMapNode.prototype.iterate = function (fn, reverse) {
	    var nodes = this.nodes;
	    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
	      var node = nodes[reverse ? maxIndex - ii : ii];
	      if (node && node.iterate(fn, reverse) === false) {
	        return false;
	      }
	    }
	  }
	
	  ValueNode.prototype.iterate = function (fn, reverse) {
	    return fn(this.entry);
	  }
	
	  createClass(MapIterator, Iterator);
	
	    function MapIterator(map, type, reverse) {
	      this._type = type;
	      this._reverse = reverse;
	      this._stack = map._root && mapIteratorFrame(map._root);
	    }
	
	    MapIterator.prototype.next = function() {
	      var type = this._type;
	      var stack = this._stack;
	      while (stack) {
	        var node = stack.node;
	        var index = stack.index++;
	        var maxIndex;
	        if (node.entry) {
	          if (index === 0) {
	            return mapIteratorValue(type, node.entry);
	          }
	        } else if (node.entries) {
	          maxIndex = node.entries.length - 1;
	          if (index <= maxIndex) {
	            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
	          }
	        } else {
	          maxIndex = node.nodes.length - 1;
	          if (index <= maxIndex) {
	            var subNode = node.nodes[this._reverse ? maxIndex - index : index];
	            if (subNode) {
	              if (subNode.entry) {
	                return mapIteratorValue(type, subNode.entry);
	              }
	              stack = this._stack = mapIteratorFrame(subNode, stack);
	            }
	            continue;
	          }
	        }
	        stack = this._stack = this._stack.__prev;
	      }
	      return iteratorDone();
	    };
	
	
	  function mapIteratorValue(type, entry) {
	    return iteratorValue(type, entry[0], entry[1]);
	  }
	
	  function mapIteratorFrame(node, prev) {
	    return {
	      node: node,
	      index: 0,
	      __prev: prev
	    };
	  }
	
	  function makeMap(size, root, ownerID, hash) {
	    var map = Object.create(MapPrototype);
	    map.size = size;
	    map._root = root;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }
	
	  var EMPTY_MAP;
	  function emptyMap() {
	    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
	  }
	
	  function updateMap(map, k, v) {
	    var newRoot;
	    var newSize;
	    if (!map._root) {
	      if (v === NOT_SET) {
	        return map;
	      }
	      newSize = 1;
	      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
	    } else {
	      var didChangeSize = MakeRef(CHANGE_LENGTH);
	      var didAlter = MakeRef(DID_ALTER);
	      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
	      if (!didAlter.value) {
	        return map;
	      }
	      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
	    }
	    if (map.__ownerID) {
	      map.size = newSize;
	      map._root = newRoot;
	      map.__hash = undefined;
	      map.__altered = true;
	      return map;
	    }
	    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
	  }
	
	  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	    if (!node) {
	      if (value === NOT_SET) {
	        return node;
	      }
	      SetRef(didAlter);
	      SetRef(didChangeSize);
	      return new ValueNode(ownerID, keyHash, [key, value]);
	    }
	    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
	  }
	
	  function isLeafNode(node) {
	    return node.constructor === ValueNode || node.constructor === HashCollisionNode;
	  }
	
	  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
	    if (node.keyHash === keyHash) {
	      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
	    }
	
	    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
	    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	
	    var newNode;
	    var nodes = idx1 === idx2 ?
	      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :
	      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);
	
	    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);
	  }
	
	  function createNodes(ownerID, entries, key, value) {
	    if (!ownerID) {
	      ownerID = new OwnerID();
	    }
	    var node = new ValueNode(ownerID, hash(key), [key, value]);
	    for (var ii = 0; ii < entries.length; ii++) {
	      var entry = entries[ii];
	      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
	    }
	    return node;
	  }
	
	  function packNodes(ownerID, nodes, count, excluding) {
	    var bitmap = 0;
	    var packedII = 0;
	    var packedNodes = new Array(count);
	    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
	      var node = nodes[ii];
	      if (node !== undefined && ii !== excluding) {
	        bitmap |= bit;
	        packedNodes[packedII++] = node;
	      }
	    }
	    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
	  }
	
	  function expandNodes(ownerID, nodes, bitmap, including, node) {
	    var count = 0;
	    var expandedNodes = new Array(SIZE);
	    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
	      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
	    }
	    expandedNodes[including] = node;
	    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
	  }
	
	  function mergeIntoMapWith(map, merger, iterables) {
	    var iters = [];
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = KeyedIterable(value);
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    return mergeIntoCollectionWith(map, merger, iters);
	  }
	
	  function deepMerger(existing, value, key) {
	    return existing && existing.mergeDeep && isIterable(value) ?
	      existing.mergeDeep(value) :
	      is(existing, value) ? existing : value;
	  }
	
	  function deepMergerWith(merger) {
	    return function(existing, value, key)  {
	      if (existing && existing.mergeDeepWith && isIterable(value)) {
	        return existing.mergeDeepWith(merger, value);
	      }
	      var nextValue = merger(existing, value, key);
	      return is(existing, nextValue) ? existing : nextValue;
	    };
	  }
	
	  function mergeIntoCollectionWith(collection, merger, iters) {
	    iters = iters.filter(function(x ) {return x.size !== 0});
	    if (iters.length === 0) {
	      return collection;
	    }
	    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
	      return collection.constructor(iters[0]);
	    }
	    return collection.withMutations(function(collection ) {
	      var mergeIntoMap = merger ?
	        function(value, key)  {
	          collection.update(key, NOT_SET, function(existing )
	            {return existing === NOT_SET ? value : merger(existing, value, key)}
	          );
	        } :
	        function(value, key)  {
	          collection.set(key, value);
	        }
	      for (var ii = 0; ii < iters.length; ii++) {
	        iters[ii].forEach(mergeIntoMap);
	      }
	    });
	  }
	
	  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
	    var isNotSet = existing === NOT_SET;
	    var step = keyPathIter.next();
	    if (step.done) {
	      var existingValue = isNotSet ? notSetValue : existing;
	      var newValue = updater(existingValue);
	      return newValue === existingValue ? existing : newValue;
	    }
	    invariant(
	      isNotSet || (existing && existing.set),
	      'invalid keyPath'
	    );
	    var key = step.value;
	    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
	    var nextUpdated = updateInDeepMap(
	      nextExisting,
	      keyPathIter,
	      notSetValue,
	      updater
	    );
	    return nextUpdated === nextExisting ? existing :
	      nextUpdated === NOT_SET ? existing.remove(key) :
	      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
	  }
	
	  function popCount(x) {
	    x = x - ((x >> 1) & 0x55555555);
	    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
	    x = (x + (x >> 4)) & 0x0f0f0f0f;
	    x = x + (x >> 8);
	    x = x + (x >> 16);
	    return x & 0x7f;
	  }
	
	  function setIn(array, idx, val, canEdit) {
	    var newArray = canEdit ? array : arrCopy(array);
	    newArray[idx] = val;
	    return newArray;
	  }
	
	  function spliceIn(array, idx, val, canEdit) {
	    var newLen = array.length + 1;
	    if (canEdit && idx + 1 === newLen) {
	      array[idx] = val;
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        newArray[ii] = val;
	        after = -1;
	      } else {
	        newArray[ii] = array[ii + after];
	      }
	    }
	    return newArray;
	  }
	
	  function spliceOut(array, idx, canEdit) {
	    var newLen = array.length - 1;
	    if (canEdit && idx === newLen) {
	      array.pop();
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        after = 1;
	      }
	      newArray[ii] = array[ii + after];
	    }
	    return newArray;
	  }
	
	  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
	  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
	  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;
	
	  createClass(List, IndexedCollection);
	
	    // @pragma Construction
	
	    function List(value) {
	      var empty = emptyList();
	      if (value === null || value === undefined) {
	        return empty;
	      }
	      if (isList(value)) {
	        return value;
	      }
	      var iter = IndexedIterable(value);
	      var size = iter.size;
	      if (size === 0) {
	        return empty;
	      }
	      assertNotInfinite(size);
	      if (size > 0 && size < SIZE) {
	        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
	      }
	      return empty.withMutations(function(list ) {
	        list.setSize(size);
	        iter.forEach(function(v, i)  {return list.set(i, v)});
	      });
	    }
	
	    List.of = function(/*...values*/) {
	      return this(arguments);
	    };
	
	    List.prototype.toString = function() {
	      return this.__toString('List [', ']');
	    };
	
	    // @pragma Access
	
	    List.prototype.get = function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      if (index >= 0 && index < this.size) {
	        index += this._origin;
	        var node = listNodeFor(this, index);
	        return node && node.array[index & MASK];
	      }
	      return notSetValue;
	    };
	
	    // @pragma Modification
	
	    List.prototype.set = function(index, value) {
	      return updateList(this, index, value);
	    };
	
	    List.prototype.remove = function(index) {
	      return !this.has(index) ? this :
	        index === 0 ? this.shift() :
	        index === this.size - 1 ? this.pop() :
	        this.splice(index, 1);
	    };
	
	    List.prototype.insert = function(index, value) {
	      return this.splice(index, 0, value);
	    };
	
	    List.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = this._origin = this._capacity = 0;
	        this._level = SHIFT;
	        this._root = this._tail = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyList();
	    };
	
	    List.prototype.push = function(/*...values*/) {
	      var values = arguments;
	      var oldSize = this.size;
	      return this.withMutations(function(list ) {
	        setListBounds(list, 0, oldSize + values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(oldSize + ii, values[ii]);
	        }
	      });
	    };
	
	    List.prototype.pop = function() {
	      return setListBounds(this, 0, -1);
	    };
	
	    List.prototype.unshift = function(/*...values*/) {
	      var values = arguments;
	      return this.withMutations(function(list ) {
	        setListBounds(list, -values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(ii, values[ii]);
	        }
	      });
	    };
	
	    List.prototype.shift = function() {
	      return setListBounds(this, 1);
	    };
	
	    // @pragma Composition
	
	    List.prototype.merge = function(/*...iters*/) {
	      return mergeIntoListWith(this, undefined, arguments);
	    };
	
	    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, merger, iters);
	    };
	
	    List.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoListWith(this, deepMerger, arguments);
	    };
	
	    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, deepMergerWith(merger), iters);
	    };
	
	    List.prototype.setSize = function(size) {
	      return setListBounds(this, 0, size);
	    };
	
	    // @pragma Iteration
	
	    List.prototype.slice = function(begin, end) {
	      var size = this.size;
	      if (wholeSlice(begin, end, size)) {
	        return this;
	      }
	      return setListBounds(
	        this,
	        resolveBegin(begin, size),
	        resolveEnd(end, size)
	      );
	    };
	
	    List.prototype.__iterator = function(type, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      return new Iterator(function()  {
	        var value = values();
	        return value === DONE ?
	          iteratorDone() :
	          iteratorValue(type, index++, value);
	      });
	    };
	
	    List.prototype.__iterate = function(fn, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      var value;
	      while ((value = values()) !== DONE) {
	        if (fn(value, index++, this) === false) {
	          break;
	        }
	      }
	      return index;
	    };
	
	    List.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        return this;
	      }
	      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
	    };
	
	
	  function isList(maybeList) {
	    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
	  }
	
	  List.isList = isList;
	
	  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';
	
	  var ListPrototype = List.prototype;
	  ListPrototype[IS_LIST_SENTINEL] = true;
	  ListPrototype[DELETE] = ListPrototype.remove;
	  ListPrototype.setIn = MapPrototype.setIn;
	  ListPrototype.deleteIn =
	  ListPrototype.removeIn = MapPrototype.removeIn;
	  ListPrototype.update = MapPrototype.update;
	  ListPrototype.updateIn = MapPrototype.updateIn;
	  ListPrototype.mergeIn = MapPrototype.mergeIn;
	  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  ListPrototype.withMutations = MapPrototype.withMutations;
	  ListPrototype.asMutable = MapPrototype.asMutable;
	  ListPrototype.asImmutable = MapPrototype.asImmutable;
	  ListPrototype.wasAltered = MapPrototype.wasAltered;
	
	
	
	    function VNode(array, ownerID) {
	      this.array = array;
	      this.ownerID = ownerID;
	    }
	
	    // TODO: seems like these methods are very similar
	
	    VNode.prototype.removeBefore = function(ownerID, level, index) {
	      if (index === level ? 1 << level : 0 || this.array.length === 0) {
	        return this;
	      }
	      var originIndex = (index >>> level) & MASK;
	      if (originIndex >= this.array.length) {
	        return new VNode([], ownerID);
	      }
	      var removingFirst = originIndex === 0;
	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[originIndex];
	        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && removingFirst) {
	          return this;
	        }
	      }
	      if (removingFirst && !newChild) {
	        return this;
	      }
	      var editable = editableVNode(this, ownerID);
	      if (!removingFirst) {
	        for (var ii = 0; ii < originIndex; ii++) {
	          editable.array[ii] = undefined;
	        }
	      }
	      if (newChild) {
	        editable.array[originIndex] = newChild;
	      }
	      return editable;
	    };
	
	    VNode.prototype.removeAfter = function(ownerID, level, index) {
	      if (index === (level ? 1 << level : 0) || this.array.length === 0) {
	        return this;
	      }
	      var sizeIndex = ((index - 1) >>> level) & MASK;
	      if (sizeIndex >= this.array.length) {
	        return this;
	      }
	
	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[sizeIndex];
	        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && sizeIndex === this.array.length - 1) {
	          return this;
	        }
	      }
	
	      var editable = editableVNode(this, ownerID);
	      editable.array.splice(sizeIndex + 1);
	      if (newChild) {
	        editable.array[sizeIndex] = newChild;
	      }
	      return editable;
	    };
	
	
	
	  var DONE = {};
	
	  function iterateList(list, reverse) {
	    var left = list._origin;
	    var right = list._capacity;
	    var tailPos = getTailOffset(right);
	    var tail = list._tail;
	
	    return iterateNodeOrLeaf(list._root, list._level, 0);
	
	    function iterateNodeOrLeaf(node, level, offset) {
	      return level === 0 ?
	        iterateLeaf(node, offset) :
	        iterateNode(node, level, offset);
	    }
	
	    function iterateLeaf(node, offset) {
	      var array = offset === tailPos ? tail && tail.array : node && node.array;
	      var from = offset > left ? 0 : left - offset;
	      var to = right - offset;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        if (from === to) {
	          return DONE;
	        }
	        var idx = reverse ? --to : from++;
	        return array && array[idx];
	      };
	    }
	
	    function iterateNode(node, level, offset) {
	      var values;
	      var array = node && node.array;
	      var from = offset > left ? 0 : (left - offset) >> level;
	      var to = ((right - offset) >> level) + 1;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        do {
	          if (values) {
	            var value = values();
	            if (value !== DONE) {
	              return value;
	            }
	            values = null;
	          }
	          if (from === to) {
	            return DONE;
	          }
	          var idx = reverse ? --to : from++;
	          values = iterateNodeOrLeaf(
	            array && array[idx], level - SHIFT, offset + (idx << level)
	          );
	        } while (true);
	      };
	    }
	  }
	
	  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
	    var list = Object.create(ListPrototype);
	    list.size = capacity - origin;
	    list._origin = origin;
	    list._capacity = capacity;
	    list._level = level;
	    list._root = root;
	    list._tail = tail;
	    list.__ownerID = ownerID;
	    list.__hash = hash;
	    list.__altered = false;
	    return list;
	  }
	
	  var EMPTY_LIST;
	  function emptyList() {
	    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
	  }
	
	  function updateList(list, index, value) {
	    index = wrapIndex(list, index);
	
	    if (index !== index) {
	      return list;
	    }
	
	    if (index >= list.size || index < 0) {
	      return list.withMutations(function(list ) {
	        index < 0 ?
	          setListBounds(list, index).set(0, value) :
	          setListBounds(list, 0, index + 1).set(index, value)
	      });
	    }
	
	    index += list._origin;
	
	    var newTail = list._tail;
	    var newRoot = list._root;
	    var didAlter = MakeRef(DID_ALTER);
	    if (index >= getTailOffset(list._capacity)) {
	      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
	    } else {
	      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
	    }
	
	    if (!didAlter.value) {
	      return list;
	    }
	
	    if (list.__ownerID) {
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
	  }
	
	  function updateVNode(node, ownerID, level, index, value, didAlter) {
	    var idx = (index >>> level) & MASK;
	    var nodeHas = node && idx < node.array.length;
	    if (!nodeHas && value === undefined) {
	      return node;
	    }
	
	    var newNode;
	
	    if (level > 0) {
	      var lowerNode = node && node.array[idx];
	      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
	      if (newLowerNode === lowerNode) {
	        return node;
	      }
	      newNode = editableVNode(node, ownerID);
	      newNode.array[idx] = newLowerNode;
	      return newNode;
	    }
	
	    if (nodeHas && node.array[idx] === value) {
	      return node;
	    }
	
	    SetRef(didAlter);
	
	    newNode = editableVNode(node, ownerID);
	    if (value === undefined && idx === newNode.array.length - 1) {
	      newNode.array.pop();
	    } else {
	      newNode.array[idx] = value;
	    }
	    return newNode;
	  }
	
	  function editableVNode(node, ownerID) {
	    if (ownerID && node && ownerID === node.ownerID) {
	      return node;
	    }
	    return new VNode(node ? node.array.slice() : [], ownerID);
	  }
	
	  function listNodeFor(list, rawIndex) {
	    if (rawIndex >= getTailOffset(list._capacity)) {
	      return list._tail;
	    }
	    if (rawIndex < 1 << (list._level + SHIFT)) {
	      var node = list._root;
	      var level = list._level;
	      while (node && level > 0) {
	        node = node.array[(rawIndex >>> level) & MASK];
	        level -= SHIFT;
	      }
	      return node;
	    }
	  }
	
	  function setListBounds(list, begin, end) {
	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      end = end | 0;
	    }
	    var owner = list.__ownerID || new OwnerID();
	    var oldOrigin = list._origin;
	    var oldCapacity = list._capacity;
	    var newOrigin = oldOrigin + begin;
	    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
	    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
	      return list;
	    }
	
	    // If it's going to end after it starts, it's empty.
	    if (newOrigin >= newCapacity) {
	      return list.clear();
	    }
	
	    var newLevel = list._level;
	    var newRoot = list._root;
	
	    // New origin might need creating a higher root.
	    var offsetShift = 0;
	    while (newOrigin + offsetShift < 0) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
	      newLevel += SHIFT;
	      offsetShift += 1 << newLevel;
	    }
	    if (offsetShift) {
	      newOrigin += offsetShift;
	      oldOrigin += offsetShift;
	      newCapacity += offsetShift;
	      oldCapacity += offsetShift;
	    }
	
	    var oldTailOffset = getTailOffset(oldCapacity);
	    var newTailOffset = getTailOffset(newCapacity);
	
	    // New size might need creating a higher root.
	    while (newTailOffset >= 1 << (newLevel + SHIFT)) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
	      newLevel += SHIFT;
	    }
	
	    // Locate or create the new tail.
	    var oldTail = list._tail;
	    var newTail = newTailOffset < oldTailOffset ?
	      listNodeFor(list, newCapacity - 1) :
	      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;
	
	    // Merge Tail into tree.
	    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
	      newRoot = editableVNode(newRoot, owner);
	      var node = newRoot;
	      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
	        var idx = (oldTailOffset >>> level) & MASK;
	        node = node.array[idx] = editableVNode(node.array[idx], owner);
	      }
	      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;
	    }
	
	    // If the size has been reduced, there's a chance the tail needs to be trimmed.
	    if (newCapacity < oldCapacity) {
	      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
	    }
	
	    // If the new origin is within the tail, then we do not need a root.
	    if (newOrigin >= newTailOffset) {
	      newOrigin -= newTailOffset;
	      newCapacity -= newTailOffset;
	      newLevel = SHIFT;
	      newRoot = null;
	      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);
	
	    // Otherwise, if the root has been trimmed, garbage collect.
	    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
	      offsetShift = 0;
	
	      // Identify the new top root node of the subtree of the old root.
	      while (newRoot) {
	        var beginIndex = (newOrigin >>> newLevel) & MASK;
	        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {
	          break;
	        }
	        if (beginIndex) {
	          offsetShift += (1 << newLevel) * beginIndex;
	        }
	        newLevel -= SHIFT;
	        newRoot = newRoot.array[beginIndex];
	      }
	
	      // Trim the new sides of the new root.
	      if (newRoot && newOrigin > oldOrigin) {
	        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
	      }
	      if (newRoot && newTailOffset < oldTailOffset) {
	        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
	      }
	      if (offsetShift) {
	        newOrigin -= offsetShift;
	        newCapacity -= offsetShift;
	      }
	    }
	
	    if (list.__ownerID) {
	      list.size = newCapacity - newOrigin;
	      list._origin = newOrigin;
	      list._capacity = newCapacity;
	      list._level = newLevel;
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
	  }
	
	  function mergeIntoListWith(list, merger, iterables) {
	    var iters = [];
	    var maxSize = 0;
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = IndexedIterable(value);
	      if (iter.size > maxSize) {
	        maxSize = iter.size;
	      }
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    if (maxSize > list.size) {
	      list = list.setSize(maxSize);
	    }
	    return mergeIntoCollectionWith(list, merger, iters);
	  }
	
	  function getTailOffset(size) {
	    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);
	  }
	
	  createClass(OrderedMap, Map);
	
	    // @pragma Construction
	
	    function OrderedMap(value) {
	      return value === null || value === undefined ? emptyOrderedMap() :
	        isOrderedMap(value) ? value :
	        emptyOrderedMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }
	
	    OrderedMap.of = function(/*...values*/) {
	      return this(arguments);
	    };
	
	    OrderedMap.prototype.toString = function() {
	      return this.__toString('OrderedMap {', '}');
	    };
	
	    // @pragma Access
	
	    OrderedMap.prototype.get = function(k, notSetValue) {
	      var index = this._map.get(k);
	      return index !== undefined ? this._list.get(index)[1] : notSetValue;
	    };
	
	    // @pragma Modification
	
	    OrderedMap.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._map.clear();
	        this._list.clear();
	        return this;
	      }
	      return emptyOrderedMap();
	    };
	
	    OrderedMap.prototype.set = function(k, v) {
	      return updateOrderedMap(this, k, v);
	    };
	
	    OrderedMap.prototype.remove = function(k) {
	      return updateOrderedMap(this, k, NOT_SET);
	    };
	
	    OrderedMap.prototype.wasAltered = function() {
	      return this._map.wasAltered() || this._list.wasAltered();
	    };
	
	    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._list.__iterate(
	        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},
	        reverse
	      );
	    };
	
	    OrderedMap.prototype.__iterator = function(type, reverse) {
	      return this._list.fromEntrySeq().__iterator(type, reverse);
	    };
	
	    OrderedMap.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      var newList = this._list.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        this._list = newList;
	        return this;
	      }
	      return makeOrderedMap(newMap, newList, ownerID, this.__hash);
	    };
	
	
	  function isOrderedMap(maybeOrderedMap) {
	    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
	  }
	
	  OrderedMap.isOrderedMap = isOrderedMap;
	
	  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
	  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;
	
	
	
	  function makeOrderedMap(map, list, ownerID, hash) {
	    var omap = Object.create(OrderedMap.prototype);
	    omap.size = map ? map.size : 0;
	    omap._map = map;
	    omap._list = list;
	    omap.__ownerID = ownerID;
	    omap.__hash = hash;
	    return omap;
	  }
	
	  var EMPTY_ORDERED_MAP;
	  function emptyOrderedMap() {
	    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
	  }
	
	  function updateOrderedMap(omap, k, v) {
	    var map = omap._map;
	    var list = omap._list;
	    var i = map.get(k);
	    var has = i !== undefined;
	    var newMap;
	    var newList;
	    if (v === NOT_SET) { // removed
	      if (!has) {
	        return omap;
	      }
	      if (list.size >= SIZE && list.size >= map.size * 2) {
	        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});
	        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();
	        if (omap.__ownerID) {
	          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
	        }
	      } else {
	        newMap = map.remove(k);
	        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
	      }
	    } else {
	      if (has) {
	        if (v === list.get(i)[1]) {
	          return omap;
	        }
	        newMap = map;
	        newList = list.set(i, [k, v]);
	      } else {
	        newMap = map.set(k, list.size);
	        newList = list.set(list.size, [k, v]);
	      }
	    }
	    if (omap.__ownerID) {
	      omap.size = newMap.size;
	      omap._map = newMap;
	      omap._list = newList;
	      omap.__hash = undefined;
	      return omap;
	    }
	    return makeOrderedMap(newMap, newList);
	  }
	
	  createClass(ToKeyedSequence, KeyedSeq);
	    function ToKeyedSequence(indexed, useKeys) {
	      this._iter = indexed;
	      this._useKeys = useKeys;
	      this.size = indexed.size;
	    }
	
	    ToKeyedSequence.prototype.get = function(key, notSetValue) {
	      return this._iter.get(key, notSetValue);
	    };
	
	    ToKeyedSequence.prototype.has = function(key) {
	      return this._iter.has(key);
	    };
	
	    ToKeyedSequence.prototype.valueSeq = function() {
	      return this._iter.valueSeq();
	    };
	
	    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;
	      var reversedSequence = reverseFactory(this, true);
	      if (!this._useKeys) {
	        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};
	      }
	      return reversedSequence;
	    };
	
	    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;
	      var mappedSequence = mapFactory(this, mapper, context);
	      if (!this._useKeys) {
	        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};
	      }
	      return mappedSequence;
	    };
	
	    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var ii;
	      return this._iter.__iterate(
	        this._useKeys ?
	          function(v, k)  {return fn(v, k, this$0)} :
	          ((ii = reverse ? resolveSize(this) : 0),
	            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),
	        reverse
	      );
	    };
	
	    ToKeyedSequence.prototype.__iterator = function(type, reverse) {
	      if (this._useKeys) {
	        return this._iter.__iterator(type, reverse);
	      }
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var ii = reverse ? resolveSize(this) : 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, reverse ? --ii : ii++, step.value, step);
	      });
	    };
	
	  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;
	
	
	  createClass(ToIndexedSequence, IndexedSeq);
	    function ToIndexedSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }
	
	    ToIndexedSequence.prototype.includes = function(value) {
	      return this._iter.includes(value);
	    };
	
	    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);
	    };
	
	    ToIndexedSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, iterations++, step.value, step)
	      });
	    };
	
	
	
	  createClass(ToSetSequence, SetSeq);
	    function ToSetSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }
	
	    ToSetSequence.prototype.has = function(key) {
	      return this._iter.includes(key);
	    };
	
	    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);
	    };
	
	    ToSetSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, step.value, step.value, step);
	      });
	    };
	
	
	
	  createClass(FromEntriesSequence, KeyedSeq);
	    function FromEntriesSequence(entries) {
	      this._iter = entries;
	      this.size = entries.size;
	    }
	
	    FromEntriesSequence.prototype.entrySeq = function() {
	      return this._iter.toSeq();
	    };
	
	    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(entry ) {
	        // Check if entry exists first so array access doesn't throw for holes
	        // in the parent iteration.
	        if (entry) {
	          validateEntry(entry);
	          var indexedIterable = isIterable(entry);
	          return fn(
	            indexedIterable ? entry.get(1) : entry[1],
	            indexedIterable ? entry.get(0) : entry[0],
	            this$0
	          );
	        }
	      }, reverse);
	    };
	
	    FromEntriesSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          // Check if entry exists first so array access doesn't throw for holes
	          // in the parent iteration.
	          if (entry) {
	            validateEntry(entry);
	            var indexedIterable = isIterable(entry);
	            return iteratorValue(
	              type,
	              indexedIterable ? entry.get(0) : entry[0],
	              indexedIterable ? entry.get(1) : entry[1],
	              step
	            );
	          }
	        }
	      });
	    };
	
	
	  ToIndexedSequence.prototype.cacheResult =
	  ToKeyedSequence.prototype.cacheResult =
	  ToSetSequence.prototype.cacheResult =
	  FromEntriesSequence.prototype.cacheResult =
	    cacheResultThrough;
	
	
	  function flipFactory(iterable) {
	    var flipSequence = makeSequence(iterable);
	    flipSequence._iter = iterable;
	    flipSequence.size = iterable.size;
	    flipSequence.flip = function()  {return iterable};
	    flipSequence.reverse = function () {
	      var reversedSequence = iterable.reverse.apply(this); // super.reverse()
	      reversedSequence.flip = function()  {return iterable.reverse()};
	      return reversedSequence;
	    };
	    flipSequence.has = function(key ) {return iterable.includes(key)};
	    flipSequence.includes = function(key ) {return iterable.has(key)};
	    flipSequence.cacheResult = cacheResultThrough;
	    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);
	    }
	    flipSequence.__iteratorUncached = function(type, reverse) {
	      if (type === ITERATE_ENTRIES) {
	        var iterator = iterable.__iterator(type, reverse);
	        return new Iterator(function()  {
	          var step = iterator.next();
	          if (!step.done) {
	            var k = step.value[0];
	            step.value[0] = step.value[1];
	            step.value[1] = k;
	          }
	          return step;
	        });
	      }
	      return iterable.__iterator(
	        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,
	        reverse
	      );
	    }
	    return flipSequence;
	  }
	
	
	  function mapFactory(iterable, mapper, context) {
	    var mappedSequence = makeSequence(iterable);
	    mappedSequence.size = iterable.size;
	    mappedSequence.has = function(key ) {return iterable.has(key)};
	    mappedSequence.get = function(key, notSetValue)  {
	      var v = iterable.get(key, NOT_SET);
	      return v === NOT_SET ?
	        notSetValue :
	        mapper.call(context, v, key, iterable);
	    };
	    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(
	        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},
	        reverse
	      );
	    }
	    mappedSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var key = entry[0];
	        return iteratorValue(
	          type,
	          key,
	          mapper.call(context, entry[1], key, iterable),
	          step
	        );
	      });
	    }
	    return mappedSequence;
	  }
	
	
	  function reverseFactory(iterable, useKeys) {
	    var reversedSequence = makeSequence(iterable);
	    reversedSequence._iter = iterable;
	    reversedSequence.size = iterable.size;
	    reversedSequence.reverse = function()  {return iterable};
	    if (iterable.flip) {
	      reversedSequence.flip = function () {
	        var flipSequence = flipFactory(iterable);
	        flipSequence.reverse = function()  {return iterable.flip()};
	        return flipSequence;
	      };
	    }
	    reversedSequence.get = function(key, notSetValue) 
	      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};
	    reversedSequence.has = function(key )
	      {return iterable.has(useKeys ? key : -1 - key)};
	    reversedSequence.includes = function(value ) {return iterable.includes(value)};
	    reversedSequence.cacheResult = cacheResultThrough;
	    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);
	    };
	    reversedSequence.__iterator =
	      function(type, reverse)  {return iterable.__iterator(type, !reverse)};
	    return reversedSequence;
	  }
	
	
	  function filterFactory(iterable, predicate, context, useKeys) {
	    var filterSequence = makeSequence(iterable);
	    if (useKeys) {
	      filterSequence.has = function(key ) {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
	      };
	      filterSequence.get = function(key, notSetValue)  {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?
	          v : notSetValue;
	      };
	    }
	    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      }, reverse);
	      return iterations;
	    };
	    filterSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          var key = entry[0];
	          var value = entry[1];
	          if (predicate.call(context, value, key, iterable)) {
	            return iteratorValue(type, useKeys ? key : iterations++, value, step);
	          }
	        }
	      });
	    }
	    return filterSequence;
	  }
	
	
	  function countByFactory(iterable, grouper, context) {
	    var groups = Map().asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        0,
	        function(a ) {return a + 1}
	      );
	    });
	    return groups.asImmutable();
	  }
	
	
	  function groupByFactory(iterable, grouper, context) {
	    var isKeyedIter = isKeyed(iterable);
	    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}
	      );
	    });
	    var coerce = iterableClass(iterable);
	    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});
	  }
	
	
	  function sliceFactory(iterable, begin, end, useKeys) {
	    var originalSize = iterable.size;
	
	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      if (end === Infinity) {
	        end = originalSize;
	      } else {
	        end = end | 0;
	      }
	    }
	
	    if (wholeSlice(begin, end, originalSize)) {
	      return iterable;
	    }
	
	    var resolvedBegin = resolveBegin(begin, originalSize);
	    var resolvedEnd = resolveEnd(end, originalSize);
	
	    // begin or end will be NaN if they were provided as negative numbers and
	    // this iterable's size is unknown. In that case, cache first so there is
	    // a known size and these do not resolve to NaN.
	    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
	      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
	    }
	
	    // Note: resolvedEnd is undefined when the original sequence's length is
	    // unknown and this slice did not supply an end and should contain all
	    // elements after resolvedBegin.
	    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.
	    var resolvedSize = resolvedEnd - resolvedBegin;
	    var sliceSize;
	    if (resolvedSize === resolvedSize) {
	      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
	    }
	
	    var sliceSeq = makeSequence(iterable);
	
	    // If iterable.size is undefined, the size of the realized sliceSeq is
	    // unknown at this point unless the number of items to slice is 0
	    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;
	
	    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
	      sliceSeq.get = function (index, notSetValue) {
	        index = wrapIndex(this, index);
	        return index >= 0 && index < sliceSize ?
	          iterable.get(index + resolvedBegin, notSetValue) :
	          notSetValue;
	      }
	    }
	
	    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (sliceSize === 0) {
	        return 0;
	      }
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var skipped = 0;
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k)  {
	        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&
	                 iterations !== sliceSize;
	        }
	      });
	      return iterations;
	    };
	
	    sliceSeq.__iteratorUncached = function(type, reverse) {
	      if (sliceSize !== 0 && reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      // Don't bother instantiating parent iterator if taking 0.
	      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
	      var skipped = 0;
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (skipped++ < resolvedBegin) {
	          iterator.next();
	        }
	        if (++iterations > sliceSize) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (useKeys || type === ITERATE_VALUES) {
	          return step;
	        } else if (type === ITERATE_KEYS) {
	          return iteratorValue(type, iterations - 1, undefined, step);
	        } else {
	          return iteratorValue(type, iterations - 1, step.value[1], step);
	        }
	      });
	    }
	
	    return sliceSeq;
	  }
	
	
	  function takeWhileFactory(iterable, predicate, context) {
	    var takeSequence = makeSequence(iterable);
	    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c) 
	        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}
	      );
	      return iterations;
	    };
	    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterating = true;
	      return new Iterator(function()  {
	        if (!iterating) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var k = entry[0];
	        var v = entry[1];
	        if (!predicate.call(context, v, k, this$0)) {
	          iterating = false;
	          return iteratorDone();
	        }
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return takeSequence;
	  }
	
	
	  function skipWhileFactory(iterable, predicate, context, useKeys) {
	    var skipSequence = makeSequence(iterable);
	    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      });
	      return iterations;
	    };
	    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var skipping = true;
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step, k, v;
	        do {
	          step = iterator.next();
	          if (step.done) {
	            if (useKeys || type === ITERATE_VALUES) {
	              return step;
	            } else if (type === ITERATE_KEYS) {
	              return iteratorValue(type, iterations++, undefined, step);
	            } else {
	              return iteratorValue(type, iterations++, step.value[1], step);
	            }
	          }
	          var entry = step.value;
	          k = entry[0];
	          v = entry[1];
	          skipping && (skipping = predicate.call(context, v, k, this$0));
	        } while (skipping);
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return skipSequence;
	  }
	
	
	  function concatFactory(iterable, values) {
	    var isKeyedIterable = isKeyed(iterable);
	    var iters = [iterable].concat(values).map(function(v ) {
	      if (!isIterable(v)) {
	        v = isKeyedIterable ?
	          keyedSeqFromValue(v) :
	          indexedSeqFromValue(Array.isArray(v) ? v : [v]);
	      } else if (isKeyedIterable) {
	        v = KeyedIterable(v);
	      }
	      return v;
	    }).filter(function(v ) {return v.size !== 0});
	
	    if (iters.length === 0) {
	      return iterable;
	    }
	
	    if (iters.length === 1) {
	      var singleton = iters[0];
	      if (singleton === iterable ||
	          isKeyedIterable && isKeyed(singleton) ||
	          isIndexed(iterable) && isIndexed(singleton)) {
	        return singleton;
	      }
	    }
	
	    var concatSeq = new ArraySeq(iters);
	    if (isKeyedIterable) {
	      concatSeq = concatSeq.toKeyedSeq();
	    } else if (!isIndexed(iterable)) {
	      concatSeq = concatSeq.toSetSeq();
	    }
	    concatSeq = concatSeq.flatten(true);
	    concatSeq.size = iters.reduce(
	      function(sum, seq)  {
	        if (sum !== undefined) {
	          var size = seq.size;
	          if (size !== undefined) {
	            return sum + size;
	          }
	        }
	      },
	      0
	    );
	    return concatSeq;
	  }
	
	
	  function flattenFactory(iterable, depth, useKeys) {
	    var flatSequence = makeSequence(iterable);
	    flatSequence.__iterateUncached = function(fn, reverse) {
	      var iterations = 0;
	      var stopped = false;
	      function flatDeep(iter, currentDepth) {var this$0 = this;
	        iter.__iterate(function(v, k)  {
	          if ((!depth || currentDepth < depth) && isIterable(v)) {
	            flatDeep(v, currentDepth + 1);
	          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
	            stopped = true;
	          }
	          return !stopped;
	        }, reverse);
	      }
	      flatDeep(iterable, 0);
	      return iterations;
	    }
	    flatSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(type, reverse);
	      var stack = [];
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (iterator) {
	          var step = iterator.next();
	          if (step.done !== false) {
	            iterator = stack.pop();
	            continue;
	          }
	          var v = step.value;
	          if (type === ITERATE_ENTRIES) {
	            v = v[1];
	          }
	          if ((!depth || stack.length < depth) && isIterable(v)) {
	            stack.push(iterator);
	            iterator = v.__iterator(type, reverse);
	          } else {
	            return useKeys ? step : iteratorValue(type, iterations++, v, step);
	          }
	        }
	        return iteratorDone();
	      });
	    }
	    return flatSequence;
	  }
	
	
	  function flatMapFactory(iterable, mapper, context) {
	    var coerce = iterableClass(iterable);
	    return iterable.toSeq().map(
	      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}
	    ).flatten(true);
	  }
	
	
	  function interposeFactory(iterable, separator) {
	    var interposedSequence = makeSequence(iterable);
	    interposedSequence.size = iterable.size && iterable.size * 2 -1;
	    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k) 
	        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&
	        fn(v, iterations++, this$0) !== false},
	        reverse
	      );
	      return iterations;
	    };
	    interposedSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      var step;
	      return new Iterator(function()  {
	        if (!step || iterations % 2) {
	          step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	        }
	        return iterations % 2 ?
	          iteratorValue(type, iterations++, separator) :
	          iteratorValue(type, iterations++, step.value, step);
	      });
	    };
	    return interposedSequence;
	  }
	
	
	  function sortFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    var isKeyedIterable = isKeyed(iterable);
	    var index = 0;
	    var entries = iterable.toSeq().map(
	      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}
	    ).toArray();
	    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(
	      isKeyedIterable ?
	      function(v, i)  { entries[i].length = 2; } :
	      function(v, i)  { entries[i] = v[1]; }
	    );
	    return isKeyedIterable ? KeyedSeq(entries) :
	      isIndexed(iterable) ? IndexedSeq(entries) :
	      SetSeq(entries);
	  }
	
	
	  function maxFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    if (mapper) {
	      var entry = iterable.toSeq()
	        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})
	        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});
	      return entry && entry[0];
	    } else {
	      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});
	    }
	  }
	
	  function maxCompare(comparator, a, b) {
	    var comp = comparator(b, a);
	    // b is considered the new max if the comparator declares them equal, but
	    // they are not equal and b is in fact a nullish value.
	    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;
	  }
	
	
	  function zipWithFactory(keyIter, zipper, iters) {
	    var zipSequence = makeSequence(keyIter);
	    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();
	    // Note: this a generic base implementation of __iterate in terms of
	    // __iterator which may be more generically useful in the future.
	    zipSequence.__iterate = function(fn, reverse) {
	      /* generic:
	      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        iterations++;
	        if (fn(step.value[1], step.value[0], this) === false) {
	          break;
	        }
	      }
	      return iterations;
	      */
	      // indexed:
	      var iterator = this.__iterator(ITERATE_VALUES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        if (fn(step.value, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };
	    zipSequence.__iteratorUncached = function(type, reverse) {
	      var iterators = iters.map(function(i )
	        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}
	      );
	      var iterations = 0;
	      var isDone = false;
	      return new Iterator(function()  {
	        var steps;
	        if (!isDone) {
	          steps = iterators.map(function(i ) {return i.next()});
	          isDone = steps.some(function(s ) {return s.done});
	        }
	        if (isDone) {
	          return iteratorDone();
	        }
	        return iteratorValue(
	          type,
	          iterations++,
	          zipper.apply(null, steps.map(function(s ) {return s.value}))
	        );
	      });
	    };
	    return zipSequence
	  }
	
	
	  // #pragma Helper Functions
	
	  function reify(iter, seq) {
	    return isSeq(iter) ? seq : iter.constructor(seq);
	  }
	
	  function validateEntry(entry) {
	    if (entry !== Object(entry)) {
	      throw new TypeError('Expected [K, V] tuple: ' + entry);
	    }
	  }
	
	  function resolveSize(iter) {
	    assertNotInfinite(iter.size);
	    return ensureSize(iter);
	  }
	
	  function iterableClass(iterable) {
	    return isKeyed(iterable) ? KeyedIterable :
	      isIndexed(iterable) ? IndexedIterable :
	      SetIterable;
	  }
	
	  function makeSequence(iterable) {
	    return Object.create(
	      (
	        isKeyed(iterable) ? KeyedSeq :
	        isIndexed(iterable) ? IndexedSeq :
	        SetSeq
	      ).prototype
	    );
	  }
	
	  function cacheResultThrough() {
	    if (this._iter.cacheResult) {
	      this._iter.cacheResult();
	      this.size = this._iter.size;
	      return this;
	    } else {
	      return Seq.prototype.cacheResult.call(this);
	    }
	  }
	
	  function defaultComparator(a, b) {
	    return a > b ? 1 : a < b ? -1 : 0;
	  }
	
	  function forceIterator(keyPath) {
	    var iter = getIterator(keyPath);
	    if (!iter) {
	      // Array might not be iterable in this environment, so we need a fallback
	      // to our wrapped type.
	      if (!isArrayLike(keyPath)) {
	        throw new TypeError('Expected iterable or array-like: ' + keyPath);
	      }
	      iter = getIterator(Iterable(keyPath));
	    }
	    return iter;
	  }
	
	  createClass(Record, KeyedCollection);
	
	    function Record(defaultValues, name) {
	      var hasInitialized;
	
	      var RecordType = function Record(values) {
	        if (values instanceof RecordType) {
	          return values;
	        }
	        if (!(this instanceof RecordType)) {
	          return new RecordType(values);
	        }
	        if (!hasInitialized) {
	          hasInitialized = true;
	          var keys = Object.keys(defaultValues);
	          setProps(RecordTypePrototype, keys);
	          RecordTypePrototype.size = keys.length;
	          RecordTypePrototype._name = name;
	          RecordTypePrototype._keys = keys;
	          RecordTypePrototype._defaultValues = defaultValues;
	        }
	        this._map = Map(values);
	      };
	
	      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
	      RecordTypePrototype.constructor = RecordType;
	
	      return RecordType;
	    }
	
	    Record.prototype.toString = function() {
	      return this.__toString(recordName(this) + ' {', '}');
	    };
	
	    // @pragma Access
	
	    Record.prototype.has = function(k) {
	      return this._defaultValues.hasOwnProperty(k);
	    };
	
	    Record.prototype.get = function(k, notSetValue) {
	      if (!this.has(k)) {
	        return notSetValue;
	      }
	      var defaultVal = this._defaultValues[k];
	      return this._map ? this._map.get(k, defaultVal) : defaultVal;
	    };
	
	    // @pragma Modification
	
	    Record.prototype.clear = function() {
	      if (this.__ownerID) {
	        this._map && this._map.clear();
	        return this;
	      }
	      var RecordType = this.constructor;
	      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
	    };
	
	    Record.prototype.set = function(k, v) {
	      if (!this.has(k)) {
	        throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
	      }
	      if (this._map && !this._map.has(k)) {
	        var defaultVal = this._defaultValues[k];
	        if (v === defaultVal) {
	          return this;
	        }
	      }
	      var newMap = this._map && this._map.set(k, v);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };
	
	    Record.prototype.remove = function(k) {
	      if (!this.has(k)) {
	        return this;
	      }
	      var newMap = this._map && this._map.remove(k);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };
	
	    Record.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };
	
	    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);
	    };
	
	    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);
	    };
	
	    Record.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map && this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return makeRecord(this, newMap, ownerID);
	    };
	
	
	  var RecordPrototype = Record.prototype;
	  RecordPrototype[DELETE] = RecordPrototype.remove;
	  RecordPrototype.deleteIn =
	  RecordPrototype.removeIn = MapPrototype.removeIn;
	  RecordPrototype.merge = MapPrototype.merge;
	  RecordPrototype.mergeWith = MapPrototype.mergeWith;
	  RecordPrototype.mergeIn = MapPrototype.mergeIn;
	  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
	  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
	  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  RecordPrototype.setIn = MapPrototype.setIn;
	  RecordPrototype.update = MapPrototype.update;
	  RecordPrototype.updateIn = MapPrototype.updateIn;
	  RecordPrototype.withMutations = MapPrototype.withMutations;
	  RecordPrototype.asMutable = MapPrototype.asMutable;
	  RecordPrototype.asImmutable = MapPrototype.asImmutable;
	
	
	  function makeRecord(likeRecord, map, ownerID) {
	    var record = Object.create(Object.getPrototypeOf(likeRecord));
	    record._map = map;
	    record.__ownerID = ownerID;
	    return record;
	  }
	
	  function recordName(record) {
	    return record._name || record.constructor.name || 'Record';
	  }
	
	  function setProps(prototype, names) {
	    try {
	      names.forEach(setProp.bind(undefined, prototype));
	    } catch (error) {
	      // Object.defineProperty failed. Probably IE8.
	    }
	  }
	
	  function setProp(prototype, name) {
	    Object.defineProperty(prototype, name, {
	      get: function() {
	        return this.get(name);
	      },
	      set: function(value) {
	        invariant(this.__ownerID, 'Cannot set on an immutable record.');
	        this.set(name, value);
	      }
	    });
	  }
	
	  createClass(Set, SetCollection);
	
	    // @pragma Construction
	
	    function Set(value) {
	      return value === null || value === undefined ? emptySet() :
	        isSet(value) && !isOrdered(value) ? value :
	        emptySet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }
	
	    Set.of = function(/*...values*/) {
	      return this(arguments);
	    };
	
	    Set.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };
	
	    Set.prototype.toString = function() {
	      return this.__toString('Set {', '}');
	    };
	
	    // @pragma Access
	
	    Set.prototype.has = function(value) {
	      return this._map.has(value);
	    };
	
	    // @pragma Modification
	
	    Set.prototype.add = function(value) {
	      return updateSet(this, this._map.set(value, true));
	    };
	
	    Set.prototype.remove = function(value) {
	      return updateSet(this, this._map.remove(value));
	    };
	
	    Set.prototype.clear = function() {
	      return updateSet(this, this._map.clear());
	    };
	
	    // @pragma Composition
	
	    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);
	      iters = iters.filter(function(x ) {return x.size !== 0});
	      if (iters.length === 0) {
	        return this;
	      }
	      if (this.size === 0 && !this.__ownerID && iters.length === 1) {
	        return this.constructor(iters[0]);
	      }
	      return this.withMutations(function(set ) {
	        for (var ii = 0; ii < iters.length; ii++) {
	          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});
	        }
	      });
	    };
	
	    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (!iters.every(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };
	
	    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (iters.some(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };
	
	    Set.prototype.merge = function() {
	      return this.union.apply(this, arguments);
	    };
	
	    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return this.union.apply(this, iters);
	    };
	
	    Set.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator));
	    };
	
	    Set.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator, mapper));
	    };
	
	    Set.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };
	
	    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);
	    };
	
	    Set.prototype.__iterator = function(type, reverse) {
	      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);
	    };
	
	    Set.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return this.__make(newMap, ownerID);
	    };
	
	
	  function isSet(maybeSet) {
	    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
	  }
	
	  Set.isSet = isSet;
	
	  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';
	
	  var SetPrototype = Set.prototype;
	  SetPrototype[IS_SET_SENTINEL] = true;
	  SetPrototype[DELETE] = SetPrototype.remove;
	  SetPrototype.mergeDeep = SetPrototype.merge;
	  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
	  SetPrototype.withMutations = MapPrototype.withMutations;
	  SetPrototype.asMutable = MapPrototype.asMutable;
	  SetPrototype.asImmutable = MapPrototype.asImmutable;
	
	  SetPrototype.__empty = emptySet;
	  SetPrototype.__make = makeSet;
	
	  function updateSet(set, newMap) {
	    if (set.__ownerID) {
	      set.size = newMap.size;
	      set._map = newMap;
	      return set;
	    }
	    return newMap === set._map ? set :
	      newMap.size === 0 ? set.__empty() :
	      set.__make(newMap);
	  }
	
	  function makeSet(map, ownerID) {
	    var set = Object.create(SetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }
	
	  var EMPTY_SET;
	  function emptySet() {
	    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
	  }
	
	  createClass(OrderedSet, Set);
	
	    // @pragma Construction
	
	    function OrderedSet(value) {
	      return value === null || value === undefined ? emptyOrderedSet() :
	        isOrderedSet(value) ? value :
	        emptyOrderedSet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }
	
	    OrderedSet.of = function(/*...values*/) {
	      return this(arguments);
	    };
	
	    OrderedSet.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };
	
	    OrderedSet.prototype.toString = function() {
	      return this.__toString('OrderedSet {', '}');
	    };
	
	
	  function isOrderedSet(maybeOrderedSet) {
	    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
	  }
	
	  OrderedSet.isOrderedSet = isOrderedSet;
	
	  var OrderedSetPrototype = OrderedSet.prototype;
	  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;
	
	  OrderedSetPrototype.__empty = emptyOrderedSet;
	  OrderedSetPrototype.__make = makeOrderedSet;
	
	  function makeOrderedSet(map, ownerID) {
	    var set = Object.create(OrderedSetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }
	
	  var EMPTY_ORDERED_SET;
	  function emptyOrderedSet() {
	    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
	  }
	
	  createClass(Stack, IndexedCollection);
	
	    // @pragma Construction
	
	    function Stack(value) {
	      return value === null || value === undefined ? emptyStack() :
	        isStack(value) ? value :
	        emptyStack().unshiftAll(value);
	    }
	
	    Stack.of = function(/*...values*/) {
	      return this(arguments);
	    };
	
	    Stack.prototype.toString = function() {
	      return this.__toString('Stack [', ']');
	    };
	
	    // @pragma Access
	
	    Stack.prototype.get = function(index, notSetValue) {
	      var head = this._head;
	      index = wrapIndex(this, index);
	      while (head && index--) {
	        head = head.next;
	      }
	      return head ? head.value : notSetValue;
	    };
	
	    Stack.prototype.peek = function() {
	      return this._head && this._head.value;
	    };
	
	    // @pragma Modification
	
	    Stack.prototype.push = function(/*...values*/) {
	      if (arguments.length === 0) {
	        return this;
	      }
	      var newSize = this.size + arguments.length;
	      var head = this._head;
	      for (var ii = arguments.length - 1; ii >= 0; ii--) {
	        head = {
	          value: arguments[ii],
	          next: head
	        };
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };
	
	    Stack.prototype.pushAll = function(iter) {
	      iter = IndexedIterable(iter);
	      if (iter.size === 0) {
	        return this;
	      }
	      assertNotInfinite(iter.size);
	      var newSize = this.size;
	      var head = this._head;
	      iter.reverse().forEach(function(value ) {
	        newSize++;
	        head = {
	          value: value,
	          next: head
	        };
	      });
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };
	
	    Stack.prototype.pop = function() {
	      return this.slice(1);
	    };
	
	    Stack.prototype.unshift = function(/*...values*/) {
	      return this.push.apply(this, arguments);
	    };
	
	    Stack.prototype.unshiftAll = function(iter) {
	      return this.pushAll(iter);
	    };
	
	    Stack.prototype.shift = function() {
	      return this.pop.apply(this, arguments);
	    };
	
	    Stack.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._head = undefined;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyStack();
	    };
	
	    Stack.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      var resolvedBegin = resolveBegin(begin, this.size);
	      var resolvedEnd = resolveEnd(end, this.size);
	      if (resolvedEnd !== this.size) {
	        // super.slice(begin, end);
	        return IndexedCollection.prototype.slice.call(this, begin, end);
	      }
	      var newSize = this.size - resolvedBegin;
	      var head = this._head;
	      while (resolvedBegin--) {
	        head = head.next;
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };
	
	    // @pragma Mutability
	
	    Stack.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeStack(this.size, this._head, ownerID, this.__hash);
	    };
	
	    // @pragma Iteration
	
	    Stack.prototype.__iterate = function(fn, reverse) {
	      if (reverse) {
	        return this.reverse().__iterate(fn);
	      }
	      var iterations = 0;
	      var node = this._head;
	      while (node) {
	        if (fn(node.value, iterations++, this) === false) {
	          break;
	        }
	        node = node.next;
	      }
	      return iterations;
	    };
	
	    Stack.prototype.__iterator = function(type, reverse) {
	      if (reverse) {
	        return this.reverse().__iterator(type);
	      }
	      var iterations = 0;
	      var node = this._head;
	      return new Iterator(function()  {
	        if (node) {
	          var value = node.value;
	          node = node.next;
	          return iteratorValue(type, iterations++, value);
	        }
	        return iteratorDone();
	      });
	    };
	
	
	  function isStack(maybeStack) {
	    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
	  }
	
	  Stack.isStack = isStack;
	
	  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';
	
	  var StackPrototype = Stack.prototype;
	  StackPrototype[IS_STACK_SENTINEL] = true;
	  StackPrototype.withMutations = MapPrototype.withMutations;
	  StackPrototype.asMutable = MapPrototype.asMutable;
	  StackPrototype.asImmutable = MapPrototype.asImmutable;
	  StackPrototype.wasAltered = MapPrototype.wasAltered;
	
	
	  function makeStack(size, head, ownerID, hash) {
	    var map = Object.create(StackPrototype);
	    map.size = size;
	    map._head = head;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }
	
	  var EMPTY_STACK;
	  function emptyStack() {
	    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
	  }
	
	  /**
	   * Contributes additional methods to a constructor
	   */
	  function mixin(ctor, methods) {
	    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };
	    Object.keys(methods).forEach(keyCopier);
	    Object.getOwnPropertySymbols &&
	      Object.getOwnPropertySymbols(methods).forEach(keyCopier);
	    return ctor;
	  }
	
	  Iterable.Iterator = Iterator;
	
	  mixin(Iterable, {
	
	    // ### Conversion to other types
	
	    toArray: function() {
	      assertNotInfinite(this.size);
	      var array = new Array(this.size || 0);
	      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });
	      return array;
	    },
	
	    toIndexedSeq: function() {
	      return new ToIndexedSequence(this);
	    },
	
	    toJS: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}
	      ).__toJS();
	    },
	
	    toJSON: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}
	      ).__toJS();
	    },
	
	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, true);
	    },
	
	    toMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Map(this.toKeyedSeq());
	    },
	
	    toObject: function() {
	      assertNotInfinite(this.size);
	      var object = {};
	      this.__iterate(function(v, k)  { object[k] = v; });
	      return object;
	    },
	
	    toOrderedMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedMap(this.toKeyedSeq());
	    },
	
	    toOrderedSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
	    },
	
	    toSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Set(isKeyed(this) ? this.valueSeq() : this);
	    },
	
	    toSetSeq: function() {
	      return new ToSetSequence(this);
	    },
	
	    toSeq: function() {
	      return isIndexed(this) ? this.toIndexedSeq() :
	        isKeyed(this) ? this.toKeyedSeq() :
	        this.toSetSeq();
	    },
	
	    toStack: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Stack(isKeyed(this) ? this.valueSeq() : this);
	    },
	
	    toList: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return List(isKeyed(this) ? this.valueSeq() : this);
	    },
	
	
	    // ### Common JavaScript methods and properties
	
	    toString: function() {
	      return '[Iterable]';
	    },
	
	    __toString: function(head, tail) {
	      if (this.size === 0) {
	        return head + tail;
	      }
	      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
	    },
	
	
	    // ### ES6 Collection methods (ES6 Array and Map)
	
	    concat: function() {var values = SLICE$0.call(arguments, 0);
	      return reify(this, concatFactory(this, values));
	    },
	
	    includes: function(searchValue) {
	      return this.some(function(value ) {return is(value, searchValue)});
	    },
	
	    entries: function() {
	      return this.__iterator(ITERATE_ENTRIES);
	    },
	
	    every: function(predicate, context) {
	      assertNotInfinite(this.size);
	      var returnValue = true;
	      this.__iterate(function(v, k, c)  {
	        if (!predicate.call(context, v, k, c)) {
	          returnValue = false;
	          return false;
	        }
	      });
	      return returnValue;
	    },
	
	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, true));
	    },
	
	    find: function(predicate, context, notSetValue) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[1] : notSetValue;
	    },
	
	    forEach: function(sideEffect, context) {
	      assertNotInfinite(this.size);
	      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
	    },
	
	    join: function(separator) {
	      assertNotInfinite(this.size);
	      separator = separator !== undefined ? '' + separator : ',';
	      var joined = '';
	      var isFirst = true;
	      this.__iterate(function(v ) {
	        isFirst ? (isFirst = false) : (joined += separator);
	        joined += v !== null && v !== undefined ? v.toString() : '';
	      });
	      return joined;
	    },
	
	    keys: function() {
	      return this.__iterator(ITERATE_KEYS);
	    },
	
	    map: function(mapper, context) {
	      return reify(this, mapFactory(this, mapper, context));
	    },
	
	    reduce: function(reducer, initialReduction, context) {
	      assertNotInfinite(this.size);
	      var reduction;
	      var useFirst;
	      if (arguments.length < 2) {
	        useFirst = true;
	      } else {
	        reduction = initialReduction;
	      }
	      this.__iterate(function(v, k, c)  {
	        if (useFirst) {
	          useFirst = false;
	          reduction = v;
	        } else {
	          reduction = reducer.call(context, reduction, v, k, c);
	        }
	      });
	      return reduction;
	    },
	
	    reduceRight: function(reducer, initialReduction, context) {
	      var reversed = this.toKeyedSeq().reverse();
	      return reversed.reduce.apply(reversed, arguments);
	    },
	
	    reverse: function() {
	      return reify(this, reverseFactory(this, true));
	    },
	
	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, true));
	    },
	
	    some: function(predicate, context) {
	      return !this.every(not(predicate), context);
	    },
	
	    sort: function(comparator) {
	      return reify(this, sortFactory(this, comparator));
	    },
	
	    values: function() {
	      return this.__iterator(ITERATE_VALUES);
	    },
	
	
	    // ### More sequential methods
	
	    butLast: function() {
	      return this.slice(0, -1);
	    },
	
	    isEmpty: function() {
	      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});
	    },
	
	    count: function(predicate, context) {
	      return ensureSize(
	        predicate ? this.toSeq().filter(predicate, context) : this
	      );
	    },
	
	    countBy: function(grouper, context) {
	      return countByFactory(this, grouper, context);
	    },
	
	    equals: function(other) {
	      return deepEqual(this, other);
	    },
	
	    entrySeq: function() {
	      var iterable = this;
	      if (iterable._cache) {
	        // We cache as an entries array, so we can just return the cache!
	        return new ArraySeq(iterable._cache);
	      }
	      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
	      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};
	      return entriesSequence;
	    },
	
	    filterNot: function(predicate, context) {
	      return this.filter(not(predicate), context);
	    },
	
	    findEntry: function(predicate, context, notSetValue) {
	      var found = notSetValue;
	      this.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          found = [k, v];
	          return false;
	        }
	      });
	      return found;
	    },
	
	    findKey: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry && entry[0];
	    },
	
	    findLast: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
	    },
	
	    findLastEntry: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);
	    },
	
	    findLastKey: function(predicate, context) {
	      return this.toKeyedSeq().reverse().findKey(predicate, context);
	    },
	
	    first: function() {
	      return this.find(returnTrue);
	    },
	
	    flatMap: function(mapper, context) {
	      return reify(this, flatMapFactory(this, mapper, context));
	    },
	
	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, true));
	    },
	
	    fromEntrySeq: function() {
	      return new FromEntriesSequence(this);
	    },
	
	    get: function(searchKey, notSetValue) {
	      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);
	    },
	
	    getIn: function(searchKeyPath, notSetValue) {
	      var nested = this;
	      // Note: in an ES6 environment, we would prefer:
	      // for (var key of searchKeyPath) {
	      var iter = forceIterator(searchKeyPath);
	      var step;
	      while (!(step = iter.next()).done) {
	        var key = step.value;
	        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
	        if (nested === NOT_SET) {
	          return notSetValue;
	        }
	      }
	      return nested;
	    },
	
	    groupBy: function(grouper, context) {
	      return groupByFactory(this, grouper, context);
	    },
	
	    has: function(searchKey) {
	      return this.get(searchKey, NOT_SET) !== NOT_SET;
	    },
	
	    hasIn: function(searchKeyPath) {
	      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
	    },
	
	    isSubset: function(iter) {
	      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
	      return this.every(function(value ) {return iter.includes(value)});
	    },
	
	    isSuperset: function(iter) {
	      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
	      return iter.isSubset(this);
	    },
	
	    keyOf: function(searchValue) {
	      return this.findKey(function(value ) {return is(value, searchValue)});
	    },
	
	    keySeq: function() {
	      return this.toSeq().map(keyMapper).toIndexedSeq();
	    },
	
	    last: function() {
	      return this.toSeq().reverse().first();
	    },
	
	    lastKeyOf: function(searchValue) {
	      return this.toKeyedSeq().reverse().keyOf(searchValue);
	    },
	
	    max: function(comparator) {
	      return maxFactory(this, comparator);
	    },
	
	    maxBy: function(mapper, comparator) {
	      return maxFactory(this, comparator, mapper);
	    },
	
	    min: function(comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
	    },
	
	    minBy: function(mapper, comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
	    },
	
	    rest: function() {
	      return this.slice(1);
	    },
	
	    skip: function(amount) {
	      return this.slice(Math.max(0, amount));
	    },
	
	    skipLast: function(amount) {
	      return reify(this, this.toSeq().reverse().skip(amount).reverse());
	    },
	
	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, true));
	    },
	
	    skipUntil: function(predicate, context) {
	      return this.skipWhile(not(predicate), context);
	    },
	
	    sortBy: function(mapper, comparator) {
	      return reify(this, sortFactory(this, comparator, mapper));
	    },
	
	    take: function(amount) {
	      return this.slice(0, Math.max(0, amount));
	    },
	
	    takeLast: function(amount) {
	      return reify(this, this.toSeq().reverse().take(amount).reverse());
	    },
	
	    takeWhile: function(predicate, context) {
	      return reify(this, takeWhileFactory(this, predicate, context));
	    },
	
	    takeUntil: function(predicate, context) {
	      return this.takeWhile(not(predicate), context);
	    },
	
	    valueSeq: function() {
	      return this.toIndexedSeq();
	    },
	
	
	    // ### Hashable Object
	
	    hashCode: function() {
	      return this.__hash || (this.__hash = hashIterable(this));
	    }
	
	
	    // ### Internal
	
	    // abstract __iterate(fn, reverse)
	
	    // abstract __iterator(type, reverse)
	  });
	
	  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';
	
	  var IterablePrototype = Iterable.prototype;
	  IterablePrototype[IS_ITERABLE_SENTINEL] = true;
	  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
	  IterablePrototype.__toJS = IterablePrototype.toArray;
	  IterablePrototype.__toStringMapper = quoteString;
	  IterablePrototype.inspect =
	  IterablePrototype.toSource = function() { return this.toString(); };
	  IterablePrototype.chain = IterablePrototype.flatMap;
	  IterablePrototype.contains = IterablePrototype.includes;
	
	  mixin(KeyedIterable, {
	
	    // ### More sequential methods
	
	    flip: function() {
	      return reify(this, flipFactory(this));
	    },
	
	    mapEntries: function(mapper, context) {var this$0 = this;
	      var iterations = 0;
	      return reify(this,
	        this.toSeq().map(
	          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}
	        ).fromEntrySeq()
	      );
	    },
	
	    mapKeys: function(mapper, context) {var this$0 = this;
	      return reify(this,
	        this.toSeq().flip().map(
	          function(k, v)  {return mapper.call(context, k, v, this$0)}
	        ).flip()
	      );
	    }
	
	  });
	
	  var KeyedIterablePrototype = KeyedIterable.prototype;
	  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
	  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
	  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
	  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};
	
	
	
	  mixin(IndexedIterable, {
	
	    // ### Conversion to other types
	
	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, false);
	    },
	
	
	    // ### ES6 Collection methods (ES6 Array and Map)
	
	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, false));
	    },
	
	    findIndex: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },
	
	    indexOf: function(searchValue) {
	      var key = this.keyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },
	
	    lastIndexOf: function(searchValue) {
	      var key = this.lastKeyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },
	
	    reverse: function() {
	      return reify(this, reverseFactory(this, false));
	    },
	
	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, false));
	    },
	
	    splice: function(index, removeNum /*, ...values*/) {
	      var numArgs = arguments.length;
	      removeNum = Math.max(removeNum | 0, 0);
	      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {
	        return this;
	      }
	      // If index is negative, it should resolve relative to the size of the
	      // collection. However size may be expensive to compute if not cached, so
	      // only call count() if the number is in fact negative.
	      index = resolveBegin(index, index < 0 ? this.count() : this.size);
	      var spliced = this.slice(0, index);
	      return reify(
	        this,
	        numArgs === 1 ?
	          spliced :
	          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))
	      );
	    },
	
	
	    // ### More collection methods
	
	    findLastIndex: function(predicate, context) {
	      var entry = this.findLastEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },
	
	    first: function() {
	      return this.get(0);
	    },
	
	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, false));
	    },
	
	    get: function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      return (index < 0 || (this.size === Infinity ||
	          (this.size !== undefined && index > this.size))) ?
	        notSetValue :
	        this.find(function(_, key)  {return key === index}, undefined, notSetValue);
	    },
	
	    has: function(index) {
	      index = wrapIndex(this, index);
	      return index >= 0 && (this.size !== undefined ?
	        this.size === Infinity || index < this.size :
	        this.indexOf(index) !== -1
	      );
	    },
	
	    interpose: function(separator) {
	      return reify(this, interposeFactory(this, separator));
	    },
	
	    interleave: function(/*...iterables*/) {
	      var iterables = [this].concat(arrCopy(arguments));
	      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
	      var interleaved = zipped.flatten(true);
	      if (zipped.size) {
	        interleaved.size = zipped.size * iterables.length;
	      }
	      return reify(this, interleaved);
	    },
	
	    keySeq: function() {
	      return Range(0, this.size);
	    },
	
	    last: function() {
	      return this.get(-1);
	    },
	
	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, false));
	    },
	
	    zip: function(/*, ...iterables */) {
	      var iterables = [this].concat(arrCopy(arguments));
	      return reify(this, zipWithFactory(this, defaultZipper, iterables));
	    },
	
	    zipWith: function(zipper/*, ...iterables */) {
	      var iterables = arrCopy(arguments);
	      iterables[0] = this;
	      return reify(this, zipWithFactory(this, zipper, iterables));
	    }
	
	  });
	
	  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
	  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;
	
	
	
	  mixin(SetIterable, {
	
	    // ### ES6 Collection methods (ES6 Array and Map)
	
	    get: function(value, notSetValue) {
	      return this.has(value) ? value : notSetValue;
	    },
	
	    includes: function(value) {
	      return this.has(value);
	    },
	
	
	    // ### More sequential methods
	
	    keySeq: function() {
	      return this.valueSeq();
	    }
	
	  });
	
	  SetIterable.prototype.has = IterablePrototype.includes;
	  SetIterable.prototype.contains = SetIterable.prototype.includes;
	
	
	  // Mixin subclasses
	
	  mixin(KeyedSeq, KeyedIterable.prototype);
	  mixin(IndexedSeq, IndexedIterable.prototype);
	  mixin(SetSeq, SetIterable.prototype);
	
	  mixin(KeyedCollection, KeyedIterable.prototype);
	  mixin(IndexedCollection, IndexedIterable.prototype);
	  mixin(SetCollection, SetIterable.prototype);
	
	
	  // #pragma Helper functions
	
	  function keyMapper(v, k) {
	    return k;
	  }
	
	  function entryMapper(v, k) {
	    return [k, v];
	  }
	
	  function not(predicate) {
	    return function() {
	      return !predicate.apply(this, arguments);
	    }
	  }
	
	  function neg(predicate) {
	    return function() {
	      return -predicate.apply(this, arguments);
	    }
	  }
	
	  function quoteString(value) {
	    return typeof value === 'string' ? JSON.stringify(value) : String(value);
	  }
	
	  function defaultZipper() {
	    return arrCopy(arguments);
	  }
	
	  function defaultNegComparator(a, b) {
	    return a < b ? 1 : a > b ? -1 : 0;
	  }
	
	  function hashIterable(iterable) {
	    if (iterable.size === Infinity) {
	      return 0;
	    }
	    var ordered = isOrdered(iterable);
	    var keyed = isKeyed(iterable);
	    var h = ordered ? 1 : 0;
	    var size = iterable.__iterate(
	      keyed ?
	        ordered ?
	          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :
	          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :
	        ordered ?
	          function(v ) { h = 31 * h + hash(v) | 0; } :
	          function(v ) { h = h + hash(v) | 0; }
	    );
	    return murmurHashOfSize(size, h);
	  }
	
	  function murmurHashOfSize(size, h) {
	    h = imul(h, 0xCC9E2D51);
	    h = imul(h << 15 | h >>> -15, 0x1B873593);
	    h = imul(h << 13 | h >>> -13, 5);
	    h = (h + 0xE6546B64 | 0) ^ size;
	    h = imul(h ^ h >>> 16, 0x85EBCA6B);
	    h = imul(h ^ h >>> 13, 0xC2B2AE35);
	    h = smi(h ^ h >>> 16);
	    return h;
	  }
	
	  function hashMerge(a, b) {
	    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int
	  }
	
	  var Immutable = {
	
	    Iterable: Iterable,
	
	    Seq: Seq,
	    Collection: Collection,
	    Map: Map,
	    OrderedMap: OrderedMap,
	    List: List,
	    Stack: Stack,
	    Set: Set,
	    OrderedSet: OrderedSet,
	
	    Record: Record,
	    Range: Range,
	    Repeat: Repeat,
	
	    is: is,
	    fromJS: fromJS
	
	  };
	
	  return Immutable;
	
	}));

/***/ },
/* 14 */
/***/ function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
	
	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var DOMProperty = __webpack_require__(44);
	var ReactDOMComponentFlags = __webpack_require__(285);
	
	var invariant = __webpack_require__(8);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;
	
	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
	
	/**
	 * Check if a given node should be cached.
	 */
	function shouldPrecacheNode(node, nodeID) {
	  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
	}
	
	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}
	
	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}
	
	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}
	
	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (shouldPrecacheNode(childNode, childID)) {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}
	
	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }
	
	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }
	
	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }
	
	  return closest;
	}
	
	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}
	
	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  if (inst._hostNode) {
	    return inst._hostNode;
	  }
	
	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }
	
	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }
	
	  return inst._hostNode;
	}
	
	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};
	
	module.exports = ReactDOMComponentTree;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};
	
	module.exports = invariant;


/***/ },
/* 17 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.validateSameAddress = exports.validatePassword = exports.validateConfirmPassword = exports.checkUsername = exports.checkpassword = exports.plBtMaxAmount = exports.balanceTransferMinAmount = exports.personalLoanMinAmount = exports.checkMaxMonths = exports.onlyAlphanumeric = exports.onlyLettersAndSpace = exports.checkAsiaMiles = exports.checkKrisFlyer = exports.noValidation = exports.checkMaximumAge = exports.expiredMonth = exports.checkDateIsOverTodayDate = exports.checkDateNotOverTodayDate = exports.checkMinimumAge = exports.checkRange = exports.checkAnualIncome = exports.checkMaxSizeComponent = exports.checkSize = exports.compareWithDate = exports.checkMinSize = exports.checkMaxSize = exports.checkDateFormat = exports.checkDateOfBirthFormat = exports.checkEmail = exports.checkAddress = exports.checkNumbers = exports.checkFullName = exports.validateFilledInput = exports.validatePhoneNumber = exports.validateOnlYTNRIC = exports.validateNRICAndPassport = undefined;
	
	var _libphonenumberJs = __webpack_require__(100);
	
	var _utils = __webpack_require__(9);
	
	var _moment = __webpack_require__(1);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _path = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var sumOfICWithWeightFactor = function sumOfICWithWeightFactor(icNoArray) {
	    var weight = [2, 7, 6, 5, 4, 3, 2];
	    return icNoArray.map(function (x, i) {
	        return x * weight[i];
	    }).reduce(function (s, v) {
	        return s + v;
	    }, 0);
	};
	
	var getICLastLetter = function getICLastLetter(icArray) {
	    var mapLetter = ["J", "A", "B", "C", "D", "E", "F", "G", "H", "I", "Z", "J"];
	    var icNoArray = icArray.slice(1, -1);
	    var total = icArray[0] === "S" ? sumOfICWithWeightFactor(icNoArray) : sumOfICWithWeightFactor(icNoArray) + 4;
	    var checkDigit = 11 - total % 11;
	    return mapLetter[checkDigit];
	};
	
	var validateNRIC = function validateNRIC(ic) {
	    var icArray = ic.split("");
	    var icLastLetter = getICLastLetter(icArray);
	    var icRegExp = new RegExp("[S|T][0-9]{7}[" + icLastLetter + "]", "g");
	    return icRegExp.test(ic);
	};
	
	var isNRIC = function isNRIC(ic) {
	    var firstLetter = ic.substr(0, 1);
	    return ["S", "T"].indexOf(firstLetter) > -1;
	};
	
	var validateTNRIC = function validateTNRIC(ic) {
	    var icArray = ic.split("");
	    var icLastLetter = getICLastLetter(icArray);
	    var icRegExp = new RegExp("[T][0-9]{7}[" + icLastLetter + "]", "g");
	    return icRegExp.test(ic);
	};
	
	var validateNRICAndPassport = exports.validateNRICAndPassport = function validateNRICAndPassport(config) {
	    return function (value) {
	        var status = false;
	        if (isNRIC(value)) {
	            status = validateNRIC(value);
	        }
	        var errorMsg = status ? "" : (0, _utils.getErrorMsg)("invalidNRIC", config);
	        return { status: status, errorMsg: errorMsg };
	    };
	};
	var validateOnlYTNRIC = exports.validateOnlYTNRIC = function validateOnlYTNRIC(config) {
	    return function (value) {
	        var status = validateTNRIC(value);
	        var errorMsg = status ? "" : (0, _utils.getErrorMsg)("invalidNRIC", config);
	        return { status: status, errorMsg: errorMsg };
	    };
	};
	var validatePhoneNumber = exports.validatePhoneNumber = function validatePhoneNumber(config) {
	    return function (value) {
	        var status = (0, _libphonenumberJs.isValidNumber)(value);
	        var errorMsg = status ? "" : (0, _utils.getErrorMsg)("invalidPhone", config);
	        return { status: status, errorMsg: errorMsg };
	    };
	};
	var validateFilledInput = exports.validateFilledInput = function validateFilledInput(config) {
	    return function (value) {
	        var status = value.trim().length > 0;
	        var errorMsg = status ? "" : (0, _utils.getErrorMsg)("fieldEmpty", config);
	        return { status: status, errorMsg: errorMsg };
	    };
	};
	
	var checkFullName = exports.checkFullName = function checkFullName(config) {
	    return function (value) {
	        var regex = /^([a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-])+$/;
	
	        var testRegexp = regex.test(value);
	        var errorMsg = testRegexp ? "" : (0, _utils.getErrorMsg)("invalidName", config);
	
	        return { status: testRegexp, errorMsg: errorMsg };
	    };
	};
	
	var checkNumbers = exports.checkNumbers = function checkNumbers(config) {
	    return function (value) {
	        var regex = /^([0-9])+$/;
	        var testRegexp = value.length === 0 || regex.test(value);
	        var errorMsg = testRegexp ? "" : (0, _utils.getErrorMsg)("numbersOnly", config);
	
	        return { status: testRegexp, errorMsg: errorMsg };
	    };
	};
	
	var checkAddress = exports.checkAddress = function checkAddress(config) {
	    return function (value) {
	        var regex = /^([0-9 a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-])+$/;
	
	        var testRegexp = regex.test(value);
	        var errorMsg = testRegexp ? "" : (0, _utils.getErrorMsg)("invalidAddress", config);
	
	        return { status: testRegexp, errorMsg: errorMsg };
	    };
	};
	
	var checkEmail = exports.checkEmail = function checkEmail(config) {
	    return function (value) {
	        var regex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
	
	        var testRegexp = regex.test(value);
	        var errorMsg = testRegexp ? "" : (0, _utils.getErrorMsg)("invalidEmail", config);
	
	        return { status: testRegexp, errorMsg: errorMsg };
	    };
	};
	
	var checkDateOfBirthFormat = exports.checkDateOfBirthFormat = function checkDateOfBirthFormat(config) {
	    return function (value) {
	        var regex = /^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[1,3-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)\d{2})$/;
	        var testRegexp = regex.test(value);
	        var errorMsg = testRegexp ? "" : (0, _utils.getErrorMsg)("invalidDate", config);
	
	        return { status: testRegexp, errorMsg: errorMsg };
	    };
	};
	
	var checkDateFormat = exports.checkDateFormat = function checkDateFormat(config) {
	    return function (value) {
	        var regex = /(^\d{2}\/\d{2}\/\d{4}$)/;
	        var testRegexp = regex.test(value);
	        var errorMsg = testRegexp ? "" : (0, _utils.getErrorMsg)("invalidDate", config);
	
	        return { status: testRegexp, errorMsg: errorMsg };
	    };
	};
	
	var checkMaxSize = exports.checkMaxSize = function checkMaxSize(maxSize) {
	    return function (config) {
	        return function (value) {
	            var status = value.length <= maxSize;
	            var errorMsg = status ? "" : (0, _utils.getErrorMsg)("invalidMaxSize", config).replace("{size}", maxSize);
	
	            return { status: status, errorMsg: errorMsg };
	        };
	    };
	};
	
	var checkMinSize = exports.checkMinSize = function checkMinSize(minSize) {
	    return function (config) {
	        return function (value) {
	            var status = value.length >= minSize;
	            var errorMsg = status ? "" : (0, _utils.getErrorMsg)("invalidMinSize", config).replace("{size}", minSize);
	            return { status: status, errorMsg: errorMsg };
	        };
	    };
	};
	
	var compareWithDate = exports.compareWithDate = function compareWithDate(date, title) {
	    return function (config) {
	        return function (value) {
	            var status = true;
	            var errorMsg = "";
	            if (date.length === 10 && value.length === 10) {
	                status = (0, _moment2.default)(value, "DD-MM-YYYY") > (0, _moment2.default)(date, "DD-MM-YYYY");
	                errorMsg = status ? "" : (0, _utils.getErrorMsg)("plMinAmount", config).replace("{minAmt}", title);
	            }
	            return { status: status, errorMsg: errorMsg };
	        };
	    };
	};
	
	var checkSize = exports.checkSize = function checkSize(maxSize) {
	    return function (config) {
	        return function (value) {
	            var status = value.length === maxSize;
	            var errorMsg = status ? "" : (0, _utils.getErrorMsg)("exactSize", config).replace("{size}", maxSize);
	
	            return { status: status, errorMsg: errorMsg };
	        };
	    };
	};
	
	/* eslint-disable */
	var checkMaxSizeComponent = exports.checkMaxSizeComponent = function checkMaxSizeComponent(props, editInput, id, valueComponent, maxSize) {
	    return function (config) {
	        return function (value) {
	            var status = valueComponent.length < maxSize;
	            var errorMsg = status ? "" : (0, _utils.getErrorMsg)("invalidMaxSize", config).replace("{size}", maxSize);
	            props.dispatch(editInput(id, valueComponent, status ? [] : [{ status: status, errorMsg: errorMsg }], props.step));
	
	            status = true;
	            errorMsg = "";
	            return { status: status, errorMsg: errorMsg };
	        };
	    };
	};
	
	var checkAnualIncome = exports.checkAnualIncome = function checkAnualIncome(typeLists, type, minIncome, maxIncome) {
	    return function (config) {
	        return function (value) {
	            var status = true;
	            var errorMsg = "";
	            if (typeLists.indexOf(type) > -1) {
	                status = value >= minIncome && value < (maxIncome || 100000000000);
	                errorMsg = status ? "" : (0, _utils.getErrorMsg)("plMinAmount", config).replace("{minAmt}", minIncome.toLocaleString());
	            }
	            return { status: status, errorMsg: errorMsg };
	        };
	    };
	};
	
	var checkRange = exports.checkRange = function checkRange(minSize, maxSize) {
	    return function (config) {
	        return function (value) {
	            var status = value.length >= minSize && value.length <= maxSize;
	            var errorMsg = status ? "" : (0, _utils.getErrorMsg)("invalidRange", config).replace("{minSize}", minSize).replace("{maxSize}", maxSize);
	
	            return { status: status, errorMsg: errorMsg };
	        };
	    };
	};
	
	var checkMinimumAge = exports.checkMinimumAge = function checkMinimumAge(minAge) {
	    return function (config) {
	        return function (value) {
	            var dob = (0, _moment2.default)(value, "DD-MM-YYYY");
	            var benchmarkDate = (0, _moment2.default)().subtract(minAge, "years");
	            var status = dob.isSameOrBefore(benchmarkDate, "days");
	            var errorMsg = status ? "" : (0, _utils.getErrorMsg)("minAge", config).replace("{minAge}", minAge);
	
	            return { status: status, errorMsg: errorMsg };
	        };
	    };
	};
	
	var checkDateNotOverTodayDate = exports.checkDateNotOverTodayDate = function checkDateNotOverTodayDate(config) {
	    return function (value) {
	        var dateEntered = (0, _moment2.default)(value, "DD-MM-YYYY").format("YYYY-MM-DD");
	        var dateNow = (0, _moment2.default)().format("YYYY-MM-DD");
	        var status = (0, _moment2.default)(dateEntered).isSameOrBefore(dateNow);
	        var errorMsg = status ? "" : (0, _utils.getErrorMsg)("yearExceeded", config);
	
	        return { status: status, errorMsg: errorMsg };
	    };
	};
	
	var checkDateIsOverTodayDate = exports.checkDateIsOverTodayDate = function checkDateIsOverTodayDate(config) {
	    return function (value) {
	        var dateEntered = (0, _moment2.default)(value, "DD-MM-YYYY").format("YYYY-MM-DD");
	        var dateNow = (0, _moment2.default)().format("YYYY-MM-DD");
	        var status = (0, _moment2.default)(dateEntered).isSameOrAfter(dateNow);
	        var errorMsg = status ? "" : (0, _utils.getErrorMsg)("expiredYear", config);
	
	        return { status: status, errorMsg: errorMsg };
	    };
	};
	
	var expiredMonth = exports.expiredMonth = function expiredMonth(maxMonth) {
	    return function (config) {
	        return function (value) {
	            var status = false;
	            var errorMsg = "";
	            if (value.length !== 10) {
	                status = true;
	                return { status: status, errorMsg: errorMsg };
	            }
	            var dateEntered = (0, _moment2.default)(value, "DD-MM-YYYY").format("YYYY-MM-DD");
	            var currentDate = new Date();
	            currentDate.setMonth(currentDate.getMonth() + maxMonth);
	            status = (0, _moment2.default)(dateEntered) > currentDate;
	            errorMsg = status ? "" : (0, _utils.getErrorMsg)("expiredMaxMonth", config).replace("{maxMonth}", maxMonth);
	
	            return { status: status, errorMsg: errorMsg };
	        };
	    };
	};
	
	var checkMaximumAge = exports.checkMaximumAge = function checkMaximumAge(maxAge) {
	    return function (config) {
	        return function (value) {
	            var dob = (0, _moment2.default)(value, "DD-MM-YYYY").add(maxAge, "years");
	            var benchmarkDate = (0, _moment2.default)();
	            var status = dob.isSameOrAfter(benchmarkDate);
	            var errorMsg = status ? "" : (0, _utils.getErrorMsg)("maxAge", config).replace("{maxAge}", maxAge);
	
	            return { status: status, errorMsg: errorMsg };
	        };
	    };
	};
	
	var noValidation = exports.noValidation = function noValidation(config) {
	    return function (value) {
	        var status = value.length === 0 || value.length > 0 && value.trim().length === value.length;
	        var errorMsg = status ? "" : (0, _utils.getErrorMsg)("noSpaceAllowed", config);
	        return { status: status, errorMsg: errorMsg };
	    };
	};
	
	var checkKrisFlyer = exports.checkKrisFlyer = function checkKrisFlyer(config) {
	    return function (number) {
	        var modulus = parseInt(number.substr(0, 9), 10) % 7 + 3;
	        var lastNumber = parseInt(number.substr(9, number.length), 10);
	        var status = modulus === lastNumber;
	        var errorMsg = status ? "" : (0, _utils.getErrorMsg)("invalidKrisFlyer", config);
	
	        return { status: status, errorMsg: errorMsg };
	    };
	};
	
	var checkAsiaMiles = exports.checkAsiaMiles = function checkAsiaMiles(config) {
	    return function (number) {
	        var status = false;
	        var errorMsg = "";
	        if (number.length === 10) {
	            var arr = number.split("");
	            var sum = 0;
	            for (var i = 0; i < number.length - 1; i++) {
	                sum += arr[i] * (i + 1);
	            }
	            status = sum % 10 === parseInt(arr[9]);
	            errorMsg = status ? "" : (0, _utils.getErrorMsg)("invalidKrisFlyer", config);
	        }
	        return { status: status, errorMsg: errorMsg };
	    };
	};
	
	var onlyLettersAndSpace = exports.onlyLettersAndSpace = function onlyLettersAndSpace(config) {
	    return function (value) {
	        var regex = /^[a-zA-Z\s]*$/;
	        var testRegexp = value.length === 0 || regex.test(value);
	        var errorMsg = testRegexp ? "" : (0, _utils.getErrorMsg)("invalidCharacters", config);
	
	        return { status: testRegexp, errorMsg: errorMsg };
	    };
	};
	
	var onlyAlphanumeric = exports.onlyAlphanumeric = function onlyAlphanumeric(config) {
	    return function (value) {
	        var regex = /^[a-z0-9\s]+$/i;
	        var testRegexp = value.length === 0 || regex.test(value);
	        var errorMsg = testRegexp ? "" : (0, _utils.getErrorMsg)("onlyAlphanumeric", config);
	
	        return { status: testRegexp, errorMsg: errorMsg };
	    };
	};
	
	var checkMaxMonths = exports.checkMaxMonths = function checkMaxMonths(config) {
	    return function (value) {
	        var status = value <= 11;
	        var errorMsg = status ? "" : (0, _utils.getErrorMsg)("maxMonth", config);
	
	        return { status: status, errorMsg: errorMsg };
	    };
	};
	
	var personalLoanMinAmount = exports.personalLoanMinAmount = function personalLoanMinAmount(minAmt) {
	    return function (config) {
	        return function (value) {
	            var status = Number(value) >= (minAmt || 10000);
	            var errorMsg = status ? "" : (0, _utils.getErrorMsg)("plMinAmount", config).replace("{minAmt}", minAmt || 10000);
	
	            return { status: status, errorMsg: errorMsg };
	        };
	    };
	};
	
	var balanceTransferMinAmount = exports.balanceTransferMinAmount = function balanceTransferMinAmount(minAmt) {
	    return function (config) {
	        return function (value) {
	            var status = Number(value) >= (minAmt || 10000);
	            var errorMsg = status ? "" : (0, _utils.getErrorMsg)("btMinAmount", config).replace("{minAmt}", minAmt || 10000);
	
	            return { status: status, errorMsg: errorMsg };
	        };
	    };
	};
	
	var plBtMaxAmount = exports.plBtMaxAmount = function plBtMaxAmount(maxAmt) {
	    return function (config) {
	        return function (value) {
	            var status = Number(value) <= (maxAmt || 500000);
	            var errorMsg = status ? "" : (0, _utils.getErrorMsg)("plbtMaxAmount", config).replace("{maxAmt}", maxAmt || 500000);
	
	            return { status: status, errorMsg: errorMsg };
	        };
	    };
	};
	
	var checkpassword = exports.checkpassword = function checkpassword(config) {
	    return function (value) {
	        var regex = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/;
	        var testRegexp = regex.test(value);
	        var errorMsg = testRegexp ? "" : (0, _utils.getErrorMsg)("alphanumeric", config);
	        return { status: testRegexp, errorMsg: errorMsg };
	    };
	};
	
	var checkUsername = exports.checkUsername = function checkUsername(config) {
	    return function (value) {
	        var regex = /^[a-z0-9\_]+$/i;
	        var testRegexp = regex.test(value);
	        var errorMsg = testRegexp ? "" : (0, _utils.getErrorMsg)("checkUsername", config);
	        return { status: testRegexp, errorMsg: errorMsg };
	    };
	};
	
	var validateConfirmPassword = exports.validateConfirmPassword = function validateConfirmPassword(pwd) {
	    return function (config) {
	        return function (value) {
	            var isMatch = pwd === value;
	            var errorMsg = isMatch ? "" : (0, _utils.getErrorMsg)("passwordMismatch", config);
	            return { status: isMatch, errorMsg: errorMsg };
	        };
	    };
	};
	
	var validatePassword = exports.validatePassword = function validatePassword(username) {
	    return function (config) {
	        return function (value) {
	            var isMatch = username !== value;
	            var errorMsg = isMatch ? "" : (0, _utils.getErrorMsg)("passwordEqualsUsername", config);
	            return { status: isMatch, errorMsg: errorMsg };
	        };
	    };
	};
	
	var validateSameAddress = exports.validateSameAddress = function validateSameAddress(field, state) {
	    return function (config) {
	        return function (value) {
	            var homePostalCode = field === _inputsConstant.HOME_POSTAL_CODE ? value : state.getIn((0, _path.dataPath)([_inputsConstant.HOME_POSTAL_CODE]), "");
	            var homeLevel = field === _inputsConstant.HOME_LEVEL ? value : state.getIn((0, _path.dataPath)([_inputsConstant.HOME_LEVEL]), "");
	            var homeUnitNumber = field === _inputsConstant.HOME_UNIT_NUMBER ? value : state.getIn((0, _path.dataPath)([_inputsConstant.HOME_UNIT_NUMBER]), "");
	
	            var mailingPostalCode = field === _inputsConstant.MAILING_POSTAL_CODE ? value : state.getIn((0, _path.dataPath)([_inputsConstant.MAILING_POSTAL_CODE]), "");
	            var mailingLevel = field === _inputsConstant.MAILING_LEVEL ? value : state.getIn((0, _path.dataPath)([_inputsConstant.MAILING_LEVEL]), "");
	            var mailingUnitNumber = field === _inputsConstant.MAILING_UNIT_NUMBER ? value : state.getIn((0, _path.dataPath)([_inputsConstant.MAILING_UNIT_NUMBER]), "");
	
	            var isSamePostCode = homePostalCode === mailingPostalCode;
	            var isSameUnit = homeUnitNumber === mailingUnitNumber;
	            var isSameLevel = homeLevel === mailingLevel;
	
	            var isMatch = isSamePostCode && isSameUnit && isSameLevel;
	            var errorMsg = !isMatch ? "" : (0, _utils.getErrorMsg)("sameHomeMailingAddress", config);
	            return { status: !isMatch, errorMsg: errorMsg };
	        };
	    };
	};

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	__webpack_require__(452);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Accordian = function Accordian(props) {
	    var title = props.title;
	    var content = props.content;
	
	    var isAccordianOpen = props.state.getIn((0, _path.accordianPath)(props.step, props.inputID), false);
	    var accordianContentState = isAccordianOpen ? "--open" : "--close";
	    var readMoreLess = isAccordianOpen ? " Read Less" : " Read More";
	    var hasContent = content ? "--with-content" : "";
	
	    return _react2.default.createElement(
	        "div",
	        { className: "accordian--block" },
	        _react2.default.createElement(
	            "div",
	            {
	                className: "accordian--block-header-container" + hasContent,
	                onClick: function onClick() {
	                    return isAccordianOpen ? props.dispatchCloseAccordian(props.step, props.inputID) : props.dispatchOpenAccordian(props.step, props.inputID);
	                }
	            },
	            _react2.default.createElement(
	                "div",
	                { className: "accordian--block-header-title" },
	                _react2.default.createElement(
	                    "span",
	                    null,
	                    title,
	                    " ",
	                    content && _react2.default.createElement(
	                        "span",
	                        { style: { textDecoration: "underline" } },
	                        readMoreLess
	                    )
	                )
	            )
	        ),
	        content && _react2.default.createElement(
	            "div",
	            { className: "accordian--block-content-container" + accordianContentState },
	            isAccordianOpen && _react2.default.createElement("div", { className: "accordian--block-content", dangerouslySetInnerHTML: { __html: content } })
	        )
	    );
	};
	
	Accordian.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    title: _react.PropTypes.any.isRequired,
	    content: _react.PropTypes.string,
	    inputID: _react.PropTypes.string.isRequired,
	    dispatchOpenAccordian: _react.PropTypes.func.isRequired,
	    dispatchCloseAccordian: _react.PropTypes.func.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchOpenAccordian: (0, _redux.bindActionCreators)(_actionCreators.openAccordian, dispatch),
	        dispatchCloseAccordian: (0, _redux.bindActionCreators)(_actionCreators.closeAccordian, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(Accordian);

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.validatorHOC = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _actionCreators = __webpack_require__(3);
	
	var _inputsConstant = __webpack_require__(10);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var validatorHOC = exports.validatorHOC = function validatorHOC(WrappedComponent) {
	    var Validator = function (_Component) {
	        _inherits(Validator, _Component);
	
	        function Validator() {
	            _classCallCheck(this, Validator);
	
	            return _possibleConstructorReturn(this, (Validator.__proto__ || Object.getPrototypeOf(Validator)).apply(this, arguments));
	        }
	
	        _createClass(Validator, [{
	            key: "componentDidMount",
	            value: function componentDidMount() {
	                var inputToExclude = [_inputsConstant.ADDRESS_TWO, _inputsConstant.ADDRESS_THREE, _inputsConstant.ADDRESS_FOUR, _inputsConstant.MAILING_LEVEL, _inputsConstant.MAILING_UNIT_NUMBER, _inputsConstant.HOME_LEVEL, _inputsConstant.HOME_UNIT_NUMBER, _inputsConstant.MAILING_COUNTRY, _inputsConstant.HOME_BUILDING, _inputsConstant.MAILING_BUILDING, _inputsConstant.NAME_OF_EMPLOYER, _inputsConstant.SUBMIT_PR_1_TO_2_YEAR];
	                if (!inputToExclude.includes(this.props.inputID)) {
	                    this.props.dispatch((0, _actionCreators.addInputToUIState)(this.props.step, this.props.inputID));
	                }
	            }
	        }, {
	            key: "componentWillUnmount",
	            value: function componentWillUnmount() {
	                this.props.dispatch((0, _actionCreators.removeInputToUIState)(this.props.step, this.props.inputID));
	                if ([_inputsConstant.UPLOAD_INCOME_PROOF, _inputsConstant.UPLOAD_NRIC_BACK].indexOf(this.props.inputID) > -1) {
	                    this.props.dispatch((0, _actionCreators.updateUploadProgress)(this.props.step, this.props.inputID, 0));
	                }
	            }
	        }, {
	            key: "render",
	            value: function render() {
	                return _react2.default.createElement(WrappedComponent, this.props);
	            }
	        }]);
	
	        return Validator;
	    }(_react.Component);
	
	    Validator.propTypes = {
	        state: _reactImmutableProptypes2.default.map,
	        inputID: _react.PropTypes.string,
	        step: _react.PropTypes.string.isRequired,
	        dispatch: _react.PropTypes.func.isRequired
	    };
	
	    return Validator;
	};

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _EditableTextInput = __webpack_require__(126);
	
	var _EditableTextInput2 = _interopRequireDefault(_EditableTextInput);
	
	var _ReadOnlyTextInput = __webpack_require__(53);
	
	var _ReadOnlyTextInput2 = _interopRequireDefault(_ReadOnlyTextInput);
	
	var _PostalCodeInput = __webpack_require__(129);
	
	var _PostalCodeInput2 = _interopRequireDefault(_PostalCodeInput);
	
	var _PrependTextInput = __webpack_require__(84);
	
	var _PrependTextInput2 = _interopRequireDefault(_PrependTextInput);
	
	var _PhoneInput = __webpack_require__(83);
	
	var _PhoneInput2 = _interopRequireDefault(_PhoneInput);
	
	var _path = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TextInput = function TextInput(props) {
	    var isReadOnly = props.state.getIn((0, _path.isReadOnlyPath)(props.step, props.inputID), false) || props.readOnly;
	    var textInputs = {
	        Phone: _react2.default.createElement(_PhoneInput2.default, props),
	        Postal: _react2.default.createElement(_PostalCodeInput2.default, props),
	        Prepend: _react2.default.createElement(_PrependTextInput2.default, props)
	    };
	    var input = props.type ? textInputs[props.type] : _react2.default.createElement(_EditableTextInput2.default, props);
	    return isReadOnly ? _react2.default.createElement(_ReadOnlyTextInput2.default, props) : input;
	};
	
	TextInput.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    inputID: _react.PropTypes.string.isRequired,
	    readOnly: _react.PropTypes.bool,
	    type: _react.PropTypes.string
	};
	
	exports.default = TextInput;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ACTION_SET_PROPERTY_TYPE = exports.ACTION_REMOVE_NRIC = exports.ACTION_REMOVE_BILLING_PROOF = exports.ACTION_REMOVE_KRIS_OR_ASIA = exports.ACTION_UPDATE_TAX_RESIDENCY_REASON = exports.ACTION_UPDATE_COUNTRY_OF_FUNDS_FOR_FX = exports.ACTION_UPDATE_SOURCE_OF_FUNDS_FOR_FX = exports.ACTION_UPDATE_PURPOSE_OF_FUNDS_FOR_FX = exports.ACTION_ERROR_UPLOAD_FILE = exports.ACTION_SET_DRAW_SIGNATURE_DIRTY_TO_FALSE = exports.ACTION_CLEAR_SIGNATURE_IMAGE_CONTENT = exports.ACTION_CLOSE_DIALOG_MODEL = exports.ACTION_SET_SIGNATURE_STATUS_TO_TRUE = exports.ACTION_ADD_SAVJS = exports.ACTION_SHOW_GENERIC_ERROR_MESSAGE = exports.ACTION_COLLAPSE_TABLE_ROW = exports.ACTION_EXPAND_TABLE_ROW = exports.ACTION_SELECT_TABLE_ROW = exports.ACTION_REMOVE_PENDING_APPLICATION = exports.ACTION_SELECT_PENDING_APPLICATION = exports.ACTION_SET_RIGHT_PANEL_EXPANDED = exports.ACTION_CLOSE_ACCORDIAN = exports.ACTION_OPEN_ACCORDIAN = exports.ACTION_EDIT_SINGTEL_MEMBERSHIP_NUMBER = exports.ACTION_EDIT_KRISFLYER_LASTNAME = exports.ACTION_EDIT_KRISFLYER_FIRSTNAME = exports.ACTION_EDIT_KRISFLYER_MEMBERSHIP_NUMBER = exports.ACTION_EDIT_ASIA_MILES_MEMBERSHIP_NUMBER = exports.ACTION_SET_CANVAS_TOUCHED = exports.ACTION_TOGGLE_SAME_STATUS = exports.ACTION_REMOVE_CROSS_PRODUCT = exports.ACTION_ADD_CROSS_PRODUCT_UNSECURED_LOAN = exports.ACTION_ADD_CROSS_PRODUCT_CARDS = exports.ACTION_ADD_CROSS_PRODUCT_CASA = exports.ACTION_REMOVE_INPUT_TO_UI_STATE = exports.ACTION_ADD_INPUT_TO_UI_STATE = exports.ACTION_INIT_ACCOUNT_DETAILS_WITH_CARDS = exports.ACTION_INIT_ACCOUNT_DETAILS_WITH_CASA = exports.ACTION_SET_SIGNATURE_IMAGE_HEIGHT = exports.ACTION_SET_SIGNATURE_IMAGE_WIDTH = exports.ACTION_SET_SIGNATURE_IMAGE_Y = exports.ACTION_SET_SIGNATURE_IMAGE_X = exports.ACTION_SET_SIGNATURE_IMAGE_ROTATION = exports.ACTION_SET_SIGNATURE_IMAGE_SCALE = exports.ACTION_SET_TMP_SIGNATURE_IMAGE_CONTENT = exports.ACTION_SET_SIGNATURE_IMAGE_CONTENT = exports.ACTION_CLEAR_GENERIC_ERROR_MESSAGE = undefined;
	exports.ACTION_REMOVE_SUMMARY_STEP_FROM_SHOWN_STEP = exports.ACTION_SCROLL_SUMMARY_TO_STEP = exports.ACTION_UPDATE_CREDIT_LIMIT = exports.ACTION_UPDATE_DAILY_CARD_LIMIT = exports.ACTION_UPDATE_COUNTRY_OF_FUNDS_FOR_ALL = exports.ACTION_UPDATE_COUNTRY_OF_FUNDS = exports.ACTION_UPDATE_SOURCE_OF_FUNDS_FOR_ALL = exports.ACTION_UPDATE_SOURCE_OF_FUNDS = exports.ACTION_UPDATE_PURPOSE_OF_FUNDS_FOR_ALL = exports.ACTION_UPDATE_PURPOSE_OF_FUNDS = exports.ACTION_DROPDOWN_SEARCH = exports.ACTION_SHOW_ERROR_MSG = exports.ACTION_REMOVE_VALID_FLAG = exports.ACTION_ADD_VALID_FLAG = exports.ACTION_REMOVE_TAX_RESIDENCY = exports.ACTION_ADD_TAX_RESIDENCY = exports.ACTION_UPDATE_TAX_RESIDENCY_ID = exports.ACTION_UPDATE_TAX_RESIDENCY_COUNTRY = exports.ACTION_UPDATE_UPLOAD_PROGRESS = exports.ACTION_UPLOAD_FILE = exports.ACTION_GET_USER_STATUS_ERROR = exports.ACTION_GET_USER_STATUS_SUCCESS = exports.ACTION_GET_USER_STATUS_PENDING = exports.ACTION_GET_USER_STATUS = exports.ACTION_GET_ENCRYPTION_PARAMS_ERROR = exports.ACTION_GET_ENCRYPTION_PARAMS_SUCCESS = exports.ACTION_GET_ENCRYPTION_PARAMS_PENDING = exports.ACTION_GET_ENCRYPTION_PARAMS = exports.ACTION_VALIDATE_USERNAME_ERROR = exports.ACTION_VALIDATE_USERNAME_SUCCESS = exports.ACTION_VALIDATE_USERNAME_PENDING = exports.ACTION_VALIDATE_USERNAME = exports.ACTION_VALIDATE_TIN_ERROR = exports.ACTION_VALIDATE_TIN_SUCCESS = exports.ACTION_VALIDATE_TIN_PENDING = exports.ACTION_VALIDATE_TIN = exports.ACTION_GET_BANK_LIST_ERROR = exports.ACTION_GET_BANK_LIST_SUCCESS = exports.ACTION_GET_BANK_LIST_PENDING = exports.ACTION_GET_BANK_LIST = exports.ACTION_GET_TENOR_TABLE_DATA_ERROR = exports.ACTION_GET_TENOR_TABLE_DATA_SUCCESS = exports.ACTION_GET_TENOR_TABLE_DATA_PENDING = exports.ACTION_GET_TENOR_TABLE_DATA = exports.ACTION_GET_PENDING_APPLICATION_ERROR = exports.ACTION_GET_PENDING_APPLICATION_SUCCESS = exports.ACTION_GET_PENDING_APPLICATION_PENDING = exports.ACTION_GET_PENDING_APPLICATION = exports.ACTION_CHECK_PENDING_APPLICATION_ERROR = exports.ACTION_CHECK_PENDING_APPLICATION_SUCCESS = exports.ACTION_CHECK_PENDING_APPLICATION_PENDING = exports.ACTION_CHECK_PENDING_APPLICATION = exports.ACTION_SUBMIT_FULL_APPLICATION_ERROR = exports.ACTION_SUBMIT_FULL_APPLICATION_SUCCESS = exports.ACTION_SUBMIT_FULL_APPLICATION_PENDING = exports.ACTION_SUBMIT_FULL_APPLICATION = exports.ACTION_GET_MY_INFO_ERROR = exports.ACTION_GET_MY_INFO_SUCCESS = exports.ACTION_GET_MY_INFO_PENDING = exports.ACTION_GET_MY_INFO = exports.ACTION_POST_PARTIAL_APPLICATION_LOADING = exports.ACTION_POST_PARTIAL_APPLICATION_ERROR = exports.ACTION_POST_PARTIAL_APPLICATION_SUCCESS = exports.ACTION_POST_PARTIAL_APPLICATION_PENDING = exports.ACTION_POST_PARTIAL_APPLICATION = exports.ACTION_GET_ADDRESS_ERROR = exports.ACTION_GET_ADDRESS_SUCCESS = exports.ACTION_GET_ADDRESS_PENDING = exports.ACTION_GET_ADDRESS = exports.ACTION_GET_OTP_PREFIX_ERROR = exports.ACTION_GET_OTP_PREFIX_SUCCESS = exports.ACTION_GET_OTP_PREFIX_PENDING = exports.ACTION_GET_OTP_PREFIX = exports.ACTION_POST_OTP_ERROR = exports.ACTION_POST_OTP_SUCCESS = exports.ACTION_POST_OTP_PENDING = exports.ACTION_POST_OTP = exports.ACTION_EDIT_POSTAL_CODE = exports.ACTION_ON_CHECK = exports.ACTION_TOGGLE_BUTTON_SAME_PURPOSE = exports.ACTION_TOGGLE_BUTTON = exports.ACTION_END_CHANGE_STEP = exports.ACTION_START_CHANGE_STEP = exports.ACTION_UPDATE_PRODUCT_ID = exports.ACTION_SELECT_DROPDOWN_ITEM = exports.ACTION_UPDATE_CURRENCIES = exports.ACTION_TOGGLE_CLICK = exports.ACTION_EDIT_DROPDOWN_BY_PATH = exports.ACTION_CLOSE_DROPDOWN = exports.ACTION_OPEN_DROPDOWN = exports.ACTION_CHOOSE_GENDER = exports.ACTION_ADD_SECTION = exports.ACTION_ON_BLUR_INPUT = exports.ACTION_ON_FOCUS_INPUT = exports.ACTION_EDIT_MULTIPLE_ATM_ACCESS = exports.ACTION_EDIT_MULTIPLE_NAME_ON_CARD = exports.ACTION_EDIT_INPUT_BY_PATH = exports.ACTION_EDIT_INPUT = exports.ACTION_ADD_CREDITCARD = exports.ERROR = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _utils = __webpack_require__(9);
	
	var ERROR = exports.ERROR = "ERROR";
	var ACTION_ADD_CREDITCARD = exports.ACTION_ADD_CREDITCARD = "ADD_CREDITCARD";
	var ACTION_EDIT_INPUT = exports.ACTION_EDIT_INPUT = "EDIT_INPUT";
	var ACTION_EDIT_INPUT_BY_PATH = exports.ACTION_EDIT_INPUT_BY_PATH = "EDIT_INPUT_BY_PATH";
	var ACTION_EDIT_MULTIPLE_NAME_ON_CARD = exports.ACTION_EDIT_MULTIPLE_NAME_ON_CARD = "EDIT_MULTIPLE_NAME_ON_CARD";
	var ACTION_EDIT_MULTIPLE_ATM_ACCESS = exports.ACTION_EDIT_MULTIPLE_ATM_ACCESS = "EDIT_MULTIPLE_ATM_ACCESS";
	var ACTION_ON_FOCUS_INPUT = exports.ACTION_ON_FOCUS_INPUT = "ON_FOCUS_INPUT";
	var ACTION_ON_BLUR_INPUT = exports.ACTION_ON_BLUR_INPUT = "ON_BLUR_INPUT";
	var ACTION_ADD_SECTION = exports.ACTION_ADD_SECTION = "ADD_SECTION";
	var ACTION_CHOOSE_GENDER = exports.ACTION_CHOOSE_GENDER = "CHOOSE_GENDER";
	var ACTION_OPEN_DROPDOWN = exports.ACTION_OPEN_DROPDOWN = "OPEN_DROPDOWN";
	var ACTION_CLOSE_DROPDOWN = exports.ACTION_CLOSE_DROPDOWN = "CLOSE_DROPDOWN";
	var ACTION_EDIT_DROPDOWN_BY_PATH = exports.ACTION_EDIT_DROPDOWN_BY_PATH = "EDIT_DROPDOWN_BY_PATH";
	var ACTION_TOGGLE_CLICK = exports.ACTION_TOGGLE_CLICK = "TOGGLE_CLICK";
	var ACTION_UPDATE_CURRENCIES = exports.ACTION_UPDATE_CURRENCIES = "UPDATE_CURRENCIES";
	var ACTION_SELECT_DROPDOWN_ITEM = exports.ACTION_SELECT_DROPDOWN_ITEM = "SELECT_DROPDOWN_ITEM";
	var ACTION_UPDATE_PRODUCT_ID = exports.ACTION_UPDATE_PRODUCT_ID = "UPDATE_PRODUCT_ID";
	var ACTION_START_CHANGE_STEP = exports.ACTION_START_CHANGE_STEP = "START_CHANGE_STEP";
	var ACTION_END_CHANGE_STEP = exports.ACTION_END_CHANGE_STEP = "END_CHANGE_STEP";
	var ACTION_TOGGLE_BUTTON = exports.ACTION_TOGGLE_BUTTON = "BUTTON_TOGGLE";
	var ACTION_TOGGLE_BUTTON_SAME_PURPOSE = exports.ACTION_TOGGLE_BUTTON_SAME_PURPOSE = "BUTTON_TOGGLE_SAME_PURPOSE";
	var ACTION_ON_CHECK = exports.ACTION_ON_CHECK = "ON_CHECK";
	var ACTION_EDIT_POSTAL_CODE = exports.ACTION_EDIT_POSTAL_CODE = "EDIT_POSTAL_CODE";
	
	var _createAsyncConstantT = (0, _utils.createAsyncConstantTypes)("POST_OTP");
	
	var _createAsyncConstantT2 = _slicedToArray(_createAsyncConstantT, 4);
	
	var ACTION_POST_OTP = _createAsyncConstantT2[0];
	var ACTION_POST_OTP_PENDING = _createAsyncConstantT2[1];
	var ACTION_POST_OTP_SUCCESS = _createAsyncConstantT2[2];
	var ACTION_POST_OTP_ERROR = _createAsyncConstantT2[3];
	exports.ACTION_POST_OTP = ACTION_POST_OTP;
	exports.ACTION_POST_OTP_PENDING = ACTION_POST_OTP_PENDING;
	exports.ACTION_POST_OTP_SUCCESS = ACTION_POST_OTP_SUCCESS;
	exports.ACTION_POST_OTP_ERROR = ACTION_POST_OTP_ERROR;
	
	var _createAsyncConstantT3 = (0, _utils.createAsyncConstantTypes)("GET_OTP_PREFIX");
	
	var _createAsyncConstantT4 = _slicedToArray(_createAsyncConstantT3, 4);
	
	var ACTION_GET_OTP_PREFIX = _createAsyncConstantT4[0];
	var ACTION_GET_OTP_PREFIX_PENDING = _createAsyncConstantT4[1];
	var ACTION_GET_OTP_PREFIX_SUCCESS = _createAsyncConstantT4[2];
	var ACTION_GET_OTP_PREFIX_ERROR = _createAsyncConstantT4[3];
	exports.ACTION_GET_OTP_PREFIX = ACTION_GET_OTP_PREFIX;
	exports.ACTION_GET_OTP_PREFIX_PENDING = ACTION_GET_OTP_PREFIX_PENDING;
	exports.ACTION_GET_OTP_PREFIX_SUCCESS = ACTION_GET_OTP_PREFIX_SUCCESS;
	exports.ACTION_GET_OTP_PREFIX_ERROR = ACTION_GET_OTP_PREFIX_ERROR;
	
	var _createAsyncConstantT5 = (0, _utils.createAsyncConstantTypes)("GET_ADDRESS");
	
	var _createAsyncConstantT6 = _slicedToArray(_createAsyncConstantT5, 4);
	
	var ACTION_GET_ADDRESS = _createAsyncConstantT6[0];
	var ACTION_GET_ADDRESS_PENDING = _createAsyncConstantT6[1];
	var ACTION_GET_ADDRESS_SUCCESS = _createAsyncConstantT6[2];
	var ACTION_GET_ADDRESS_ERROR = _createAsyncConstantT6[3];
	exports.ACTION_GET_ADDRESS = ACTION_GET_ADDRESS;
	exports.ACTION_GET_ADDRESS_PENDING = ACTION_GET_ADDRESS_PENDING;
	exports.ACTION_GET_ADDRESS_SUCCESS = ACTION_GET_ADDRESS_SUCCESS;
	exports.ACTION_GET_ADDRESS_ERROR = ACTION_GET_ADDRESS_ERROR;
	
	var _createAsyncConstantT7 = (0, _utils.createAsyncConstantTypes)("POST_PARTIAL_APPLICATION");
	
	var _createAsyncConstantT8 = _slicedToArray(_createAsyncConstantT7, 5);
	
	var ACTION_POST_PARTIAL_APPLICATION = _createAsyncConstantT8[0];
	var ACTION_POST_PARTIAL_APPLICATION_PENDING = _createAsyncConstantT8[1];
	var ACTION_POST_PARTIAL_APPLICATION_SUCCESS = _createAsyncConstantT8[2];
	var ACTION_POST_PARTIAL_APPLICATION_ERROR = _createAsyncConstantT8[3];
	var ACTION_POST_PARTIAL_APPLICATION_LOADING = _createAsyncConstantT8[4];
	exports.ACTION_POST_PARTIAL_APPLICATION = ACTION_POST_PARTIAL_APPLICATION;
	exports.ACTION_POST_PARTIAL_APPLICATION_PENDING = ACTION_POST_PARTIAL_APPLICATION_PENDING;
	exports.ACTION_POST_PARTIAL_APPLICATION_SUCCESS = ACTION_POST_PARTIAL_APPLICATION_SUCCESS;
	exports.ACTION_POST_PARTIAL_APPLICATION_ERROR = ACTION_POST_PARTIAL_APPLICATION_ERROR;
	exports.ACTION_POST_PARTIAL_APPLICATION_LOADING = ACTION_POST_PARTIAL_APPLICATION_LOADING;
	
	var _createAsyncConstantT9 = (0, _utils.createAsyncConstantTypes)("GET_MY_INFO");
	
	var _createAsyncConstantT10 = _slicedToArray(_createAsyncConstantT9, 4);
	
	var ACTION_GET_MY_INFO = _createAsyncConstantT10[0];
	var ACTION_GET_MY_INFO_PENDING = _createAsyncConstantT10[1];
	var ACTION_GET_MY_INFO_SUCCESS = _createAsyncConstantT10[2];
	var ACTION_GET_MY_INFO_ERROR = _createAsyncConstantT10[3];
	exports.ACTION_GET_MY_INFO = ACTION_GET_MY_INFO;
	exports.ACTION_GET_MY_INFO_PENDING = ACTION_GET_MY_INFO_PENDING;
	exports.ACTION_GET_MY_INFO_SUCCESS = ACTION_GET_MY_INFO_SUCCESS;
	exports.ACTION_GET_MY_INFO_ERROR = ACTION_GET_MY_INFO_ERROR;
	
	var _createAsyncConstantT11 = (0, _utils.createAsyncConstantTypes)("SUBMIT_FULL_APPLICATION");
	
	var _createAsyncConstantT12 = _slicedToArray(_createAsyncConstantT11, 4);
	
	var ACTION_SUBMIT_FULL_APPLICATION = _createAsyncConstantT12[0];
	var ACTION_SUBMIT_FULL_APPLICATION_PENDING = _createAsyncConstantT12[1];
	var ACTION_SUBMIT_FULL_APPLICATION_SUCCESS = _createAsyncConstantT12[2];
	var ACTION_SUBMIT_FULL_APPLICATION_ERROR = _createAsyncConstantT12[3];
	exports.ACTION_SUBMIT_FULL_APPLICATION = ACTION_SUBMIT_FULL_APPLICATION;
	exports.ACTION_SUBMIT_FULL_APPLICATION_PENDING = ACTION_SUBMIT_FULL_APPLICATION_PENDING;
	exports.ACTION_SUBMIT_FULL_APPLICATION_SUCCESS = ACTION_SUBMIT_FULL_APPLICATION_SUCCESS;
	exports.ACTION_SUBMIT_FULL_APPLICATION_ERROR = ACTION_SUBMIT_FULL_APPLICATION_ERROR;
	
	var _createAsyncConstantT13 = (0, _utils.createAsyncConstantTypes)("CHECK_PENDING_APPLICATION");
	
	var _createAsyncConstantT14 = _slicedToArray(_createAsyncConstantT13, 4);
	
	var ACTION_CHECK_PENDING_APPLICATION = _createAsyncConstantT14[0];
	var ACTION_CHECK_PENDING_APPLICATION_PENDING = _createAsyncConstantT14[1];
	var ACTION_CHECK_PENDING_APPLICATION_SUCCESS = _createAsyncConstantT14[2];
	var ACTION_CHECK_PENDING_APPLICATION_ERROR = _createAsyncConstantT14[3];
	exports.ACTION_CHECK_PENDING_APPLICATION = ACTION_CHECK_PENDING_APPLICATION;
	exports.ACTION_CHECK_PENDING_APPLICATION_PENDING = ACTION_CHECK_PENDING_APPLICATION_PENDING;
	exports.ACTION_CHECK_PENDING_APPLICATION_SUCCESS = ACTION_CHECK_PENDING_APPLICATION_SUCCESS;
	exports.ACTION_CHECK_PENDING_APPLICATION_ERROR = ACTION_CHECK_PENDING_APPLICATION_ERROR;
	
	var _createAsyncConstantT15 = (0, _utils.createAsyncConstantTypes)("GET_PENDING_APPLICATION");
	
	var _createAsyncConstantT16 = _slicedToArray(_createAsyncConstantT15, 4);
	
	var ACTION_GET_PENDING_APPLICATION = _createAsyncConstantT16[0];
	var ACTION_GET_PENDING_APPLICATION_PENDING = _createAsyncConstantT16[1];
	var ACTION_GET_PENDING_APPLICATION_SUCCESS = _createAsyncConstantT16[2];
	var ACTION_GET_PENDING_APPLICATION_ERROR = _createAsyncConstantT16[3];
	exports.ACTION_GET_PENDING_APPLICATION = ACTION_GET_PENDING_APPLICATION;
	exports.ACTION_GET_PENDING_APPLICATION_PENDING = ACTION_GET_PENDING_APPLICATION_PENDING;
	exports.ACTION_GET_PENDING_APPLICATION_SUCCESS = ACTION_GET_PENDING_APPLICATION_SUCCESS;
	exports.ACTION_GET_PENDING_APPLICATION_ERROR = ACTION_GET_PENDING_APPLICATION_ERROR;
	
	var _createAsyncConstantT17 = (0, _utils.createAsyncConstantTypes)("GET_TENOR_TABLE_DATA");
	
	var _createAsyncConstantT18 = _slicedToArray(_createAsyncConstantT17, 4);
	
	var ACTION_GET_TENOR_TABLE_DATA = _createAsyncConstantT18[0];
	var ACTION_GET_TENOR_TABLE_DATA_PENDING = _createAsyncConstantT18[1];
	var ACTION_GET_TENOR_TABLE_DATA_SUCCESS = _createAsyncConstantT18[2];
	var ACTION_GET_TENOR_TABLE_DATA_ERROR = _createAsyncConstantT18[3];
	exports.ACTION_GET_TENOR_TABLE_DATA = ACTION_GET_TENOR_TABLE_DATA;
	exports.ACTION_GET_TENOR_TABLE_DATA_PENDING = ACTION_GET_TENOR_TABLE_DATA_PENDING;
	exports.ACTION_GET_TENOR_TABLE_DATA_SUCCESS = ACTION_GET_TENOR_TABLE_DATA_SUCCESS;
	exports.ACTION_GET_TENOR_TABLE_DATA_ERROR = ACTION_GET_TENOR_TABLE_DATA_ERROR;
	
	var _createAsyncConstantT19 = (0, _utils.createAsyncConstantTypes)("GET_BANK_LIST");
	
	var _createAsyncConstantT20 = _slicedToArray(_createAsyncConstantT19, 4);
	
	var ACTION_GET_BANK_LIST = _createAsyncConstantT20[0];
	var ACTION_GET_BANK_LIST_PENDING = _createAsyncConstantT20[1];
	var ACTION_GET_BANK_LIST_SUCCESS = _createAsyncConstantT20[2];
	var ACTION_GET_BANK_LIST_ERROR = _createAsyncConstantT20[3];
	exports.ACTION_GET_BANK_LIST = ACTION_GET_BANK_LIST;
	exports.ACTION_GET_BANK_LIST_PENDING = ACTION_GET_BANK_LIST_PENDING;
	exports.ACTION_GET_BANK_LIST_SUCCESS = ACTION_GET_BANK_LIST_SUCCESS;
	exports.ACTION_GET_BANK_LIST_ERROR = ACTION_GET_BANK_LIST_ERROR;
	
	var _createAsyncConstantT21 = (0, _utils.createAsyncConstantTypes)("ACTION_VALIDATE_TIN");
	
	var _createAsyncConstantT22 = _slicedToArray(_createAsyncConstantT21, 4);
	
	var ACTION_VALIDATE_TIN = _createAsyncConstantT22[0];
	var ACTION_VALIDATE_TIN_PENDING = _createAsyncConstantT22[1];
	var ACTION_VALIDATE_TIN_SUCCESS = _createAsyncConstantT22[2];
	var ACTION_VALIDATE_TIN_ERROR = _createAsyncConstantT22[3];
	exports.ACTION_VALIDATE_TIN = ACTION_VALIDATE_TIN;
	exports.ACTION_VALIDATE_TIN_PENDING = ACTION_VALIDATE_TIN_PENDING;
	exports.ACTION_VALIDATE_TIN_SUCCESS = ACTION_VALIDATE_TIN_SUCCESS;
	exports.ACTION_VALIDATE_TIN_ERROR = ACTION_VALIDATE_TIN_ERROR;
	
	var _createAsyncConstantT23 = (0, _utils.createAsyncConstantTypes)("ACTION_VALIDATE_USERNAME");
	
	var _createAsyncConstantT24 = _slicedToArray(_createAsyncConstantT23, 4);
	
	var ACTION_VALIDATE_USERNAME = _createAsyncConstantT24[0];
	var ACTION_VALIDATE_USERNAME_PENDING = _createAsyncConstantT24[1];
	var ACTION_VALIDATE_USERNAME_SUCCESS = _createAsyncConstantT24[2];
	var ACTION_VALIDATE_USERNAME_ERROR = _createAsyncConstantT24[3];
	exports.ACTION_VALIDATE_USERNAME = ACTION_VALIDATE_USERNAME;
	exports.ACTION_VALIDATE_USERNAME_PENDING = ACTION_VALIDATE_USERNAME_PENDING;
	exports.ACTION_VALIDATE_USERNAME_SUCCESS = ACTION_VALIDATE_USERNAME_SUCCESS;
	exports.ACTION_VALIDATE_USERNAME_ERROR = ACTION_VALIDATE_USERNAME_ERROR;
	
	var _createAsyncConstantT25 = (0, _utils.createAsyncConstantTypes)("ACTION_GET_ENCRYPTION_PARAMS");
	
	var _createAsyncConstantT26 = _slicedToArray(_createAsyncConstantT25, 4);
	
	var ACTION_GET_ENCRYPTION_PARAMS = _createAsyncConstantT26[0];
	var ACTION_GET_ENCRYPTION_PARAMS_PENDING = _createAsyncConstantT26[1];
	var ACTION_GET_ENCRYPTION_PARAMS_SUCCESS = _createAsyncConstantT26[2];
	var ACTION_GET_ENCRYPTION_PARAMS_ERROR = _createAsyncConstantT26[3];
	exports.ACTION_GET_ENCRYPTION_PARAMS = ACTION_GET_ENCRYPTION_PARAMS;
	exports.ACTION_GET_ENCRYPTION_PARAMS_PENDING = ACTION_GET_ENCRYPTION_PARAMS_PENDING;
	exports.ACTION_GET_ENCRYPTION_PARAMS_SUCCESS = ACTION_GET_ENCRYPTION_PARAMS_SUCCESS;
	exports.ACTION_GET_ENCRYPTION_PARAMS_ERROR = ACTION_GET_ENCRYPTION_PARAMS_ERROR;
	
	var _createAsyncConstantT27 = (0, _utils.createAsyncConstantTypes)("ACTION_GET_USER_STATUS");
	
	var _createAsyncConstantT28 = _slicedToArray(_createAsyncConstantT27, 4);
	
	var ACTION_GET_USER_STATUS = _createAsyncConstantT28[0];
	var ACTION_GET_USER_STATUS_PENDING = _createAsyncConstantT28[1];
	var ACTION_GET_USER_STATUS_SUCCESS = _createAsyncConstantT28[2];
	var ACTION_GET_USER_STATUS_ERROR = _createAsyncConstantT28[3];
	exports.ACTION_GET_USER_STATUS = ACTION_GET_USER_STATUS;
	exports.ACTION_GET_USER_STATUS_PENDING = ACTION_GET_USER_STATUS_PENDING;
	exports.ACTION_GET_USER_STATUS_SUCCESS = ACTION_GET_USER_STATUS_SUCCESS;
	exports.ACTION_GET_USER_STATUS_ERROR = ACTION_GET_USER_STATUS_ERROR;
	var ACTION_UPLOAD_FILE = exports.ACTION_UPLOAD_FILE = "UPLOAD_FILE";
	var ACTION_UPDATE_UPLOAD_PROGRESS = exports.ACTION_UPDATE_UPLOAD_PROGRESS = "UPDATE_UPLOAD_PROGRESS";
	var ACTION_UPDATE_TAX_RESIDENCY_COUNTRY = exports.ACTION_UPDATE_TAX_RESIDENCY_COUNTRY = "UPDATE_TAX_RESIDENCY_COUNTRY";
	var ACTION_UPDATE_TAX_RESIDENCY_ID = exports.ACTION_UPDATE_TAX_RESIDENCY_ID = "UPDATE_TAX_RESIDENCY_ID";
	var ACTION_ADD_TAX_RESIDENCY = exports.ACTION_ADD_TAX_RESIDENCY = "ADD_TAX_RESIDENCY";
	var ACTION_REMOVE_TAX_RESIDENCY = exports.ACTION_REMOVE_TAX_RESIDENCY = "REMOVE_TAX_RESIDENCY";
	var ACTION_ADD_VALID_FLAG = exports.ACTION_ADD_VALID_FLAG = "ADD_VALID_FLAG";
	var ACTION_REMOVE_VALID_FLAG = exports.ACTION_REMOVE_VALID_FLAG = "REMOVE_VALID_FLAG";
	var ACTION_SHOW_ERROR_MSG = exports.ACTION_SHOW_ERROR_MSG = "SHOW_ERROR_MS";
	var ACTION_DROPDOWN_SEARCH = exports.ACTION_DROPDOWN_SEARCH = "DROPDOWN_SEARCH";
	var ACTION_UPDATE_PURPOSE_OF_FUNDS = exports.ACTION_UPDATE_PURPOSE_OF_FUNDS = "UPDATE_PURPOSE_OF_FUNDS";
	var ACTION_UPDATE_PURPOSE_OF_FUNDS_FOR_ALL = exports.ACTION_UPDATE_PURPOSE_OF_FUNDS_FOR_ALL = "UPDATE_PURPOSE_OF_FUNDS_FOR_ALL";
	var ACTION_UPDATE_SOURCE_OF_FUNDS = exports.ACTION_UPDATE_SOURCE_OF_FUNDS = "UPDATE_SOURCE_OF_FUNDS";
	var ACTION_UPDATE_SOURCE_OF_FUNDS_FOR_ALL = exports.ACTION_UPDATE_SOURCE_OF_FUNDS_FOR_ALL = "UPDATE_SOURCE_OF_FUNDS_FOR_ALL";
	var ACTION_UPDATE_COUNTRY_OF_FUNDS = exports.ACTION_UPDATE_COUNTRY_OF_FUNDS = "UPDATE_COUNTRY_OF_FUNDS";
	var ACTION_UPDATE_COUNTRY_OF_FUNDS_FOR_ALL = exports.ACTION_UPDATE_COUNTRY_OF_FUNDS_FOR_ALL = "UPDATE_COUNTRY_OF_FUNDS_FOR_ALL";
	var ACTION_UPDATE_DAILY_CARD_LIMIT = exports.ACTION_UPDATE_DAILY_CARD_LIMIT = "UPDATE_DAILY_CARD_LIMIT";
	var ACTION_UPDATE_CREDIT_LIMIT = exports.ACTION_UPDATE_CREDIT_LIMIT = "UPDATE_CREDIT_LIMIT";
	var ACTION_SCROLL_SUMMARY_TO_STEP = exports.ACTION_SCROLL_SUMMARY_TO_STEP = "SCROLL_SUMMARY_TO_STEP";
	var ACTION_REMOVE_SUMMARY_STEP_FROM_SHOWN_STEP = exports.ACTION_REMOVE_SUMMARY_STEP_FROM_SHOWN_STEP = "REMOVE_SUMMARY_STEP_FROM_SHOWN_STEP";
	var ACTION_CLEAR_GENERIC_ERROR_MESSAGE = exports.ACTION_CLEAR_GENERIC_ERROR_MESSAGE = "CLEAR_GENERIC_ERROR_MESSAGE";
	var ACTION_SET_SIGNATURE_IMAGE_CONTENT = exports.ACTION_SET_SIGNATURE_IMAGE_CONTENT = "SET_SIGNATURE_IMAGE_CONTENT";
	var ACTION_SET_TMP_SIGNATURE_IMAGE_CONTENT = exports.ACTION_SET_TMP_SIGNATURE_IMAGE_CONTENT = "SET_TMP_SIGNATURE_IMAGE_CONTENT";
	var ACTION_SET_SIGNATURE_IMAGE_SCALE = exports.ACTION_SET_SIGNATURE_IMAGE_SCALE = "SET_SIGNATURE_IMAGE_SCALE";
	var ACTION_SET_SIGNATURE_IMAGE_ROTATION = exports.ACTION_SET_SIGNATURE_IMAGE_ROTATION = "SET_SIGNATURE_IMAGE_ROTATION";
	var ACTION_SET_SIGNATURE_IMAGE_X = exports.ACTION_SET_SIGNATURE_IMAGE_X = "SET_SIGNATURE_IMAGE_X";
	var ACTION_SET_SIGNATURE_IMAGE_Y = exports.ACTION_SET_SIGNATURE_IMAGE_Y = "SET_SIGNATURE_IMAGE_Y";
	var ACTION_SET_SIGNATURE_IMAGE_WIDTH = exports.ACTION_SET_SIGNATURE_IMAGE_WIDTH = "SET_SIGNATURE_IMAGE_WIDTH";
	var ACTION_SET_SIGNATURE_IMAGE_HEIGHT = exports.ACTION_SET_SIGNATURE_IMAGE_HEIGHT = "SET_SIGNATURE_IMAGE_HEIGHT";
	var ACTION_INIT_ACCOUNT_DETAILS_WITH_CASA = exports.ACTION_INIT_ACCOUNT_DETAILS_WITH_CASA = "INIT_ACCOUNT_DETAILS_WITH_CASA";
	var ACTION_INIT_ACCOUNT_DETAILS_WITH_CARDS = exports.ACTION_INIT_ACCOUNT_DETAILS_WITH_CARDS = "INIT_ACCOUNT_DETAILS_WITH_CARDS";
	var ACTION_ADD_INPUT_TO_UI_STATE = exports.ACTION_ADD_INPUT_TO_UI_STATE = "ADD_INPUT_TO_UI_STATE";
	var ACTION_REMOVE_INPUT_TO_UI_STATE = exports.ACTION_REMOVE_INPUT_TO_UI_STATE = "REMOVE_INPUT_TO_UI_STATE";
	var ACTION_ADD_CROSS_PRODUCT_CASA = exports.ACTION_ADD_CROSS_PRODUCT_CASA = "ADD_CROSS_PRODUCT_CASA";
	var ACTION_ADD_CROSS_PRODUCT_CARDS = exports.ACTION_ADD_CROSS_PRODUCT_CARDS = "ADD_CROSS_PRODUCT_CARDS";
	var ACTION_ADD_CROSS_PRODUCT_UNSECURED_LOAN = exports.ACTION_ADD_CROSS_PRODUCT_UNSECURED_LOAN = "ADD_CROSS_PRODUCT_UNSECURED_LOAN";
	var ACTION_REMOVE_CROSS_PRODUCT = exports.ACTION_REMOVE_CROSS_PRODUCT = "REMOVE_CROSS_PRODUCT";
	var ACTION_TOGGLE_SAME_STATUS = exports.ACTION_TOGGLE_SAME_STATUS = "TOGGLE_SAME_STATUS";
	var ACTION_SET_CANVAS_TOUCHED = exports.ACTION_SET_CANVAS_TOUCHED = "SET_CANVAS_TOUCHED";
	var ACTION_EDIT_ASIA_MILES_MEMBERSHIP_NUMBER = exports.ACTION_EDIT_ASIA_MILES_MEMBERSHIP_NUMBER = "EDIT_ASIA_MILES_MEMBERSHIP_NUMBER";
	var ACTION_EDIT_KRISFLYER_MEMBERSHIP_NUMBER = exports.ACTION_EDIT_KRISFLYER_MEMBERSHIP_NUMBER = "EDIT_KRISFLYER_MEMBERSHIP_NUMBER";
	var ACTION_EDIT_KRISFLYER_FIRSTNAME = exports.ACTION_EDIT_KRISFLYER_FIRSTNAME = "EDIT_KRISFLYER_FIRSTNAME";
	var ACTION_EDIT_KRISFLYER_LASTNAME = exports.ACTION_EDIT_KRISFLYER_LASTNAME = "EDIT_KRISFLYER_LASTNAME";
	var ACTION_EDIT_SINGTEL_MEMBERSHIP_NUMBER = exports.ACTION_EDIT_SINGTEL_MEMBERSHIP_NUMBER = "EDIT_SINGTEL_MEMBERSHIP_NUMBER";
	var ACTION_OPEN_ACCORDIAN = exports.ACTION_OPEN_ACCORDIAN = "OPEN_ACCORDIAN";
	var ACTION_CLOSE_ACCORDIAN = exports.ACTION_CLOSE_ACCORDIAN = "CLOSE_ACCORDIAN";
	var ACTION_SET_RIGHT_PANEL_EXPANDED = exports.ACTION_SET_RIGHT_PANEL_EXPANDED = "SET_RIGHT_PANEL_EXPANDED";
	var ACTION_SELECT_PENDING_APPLICATION = exports.ACTION_SELECT_PENDING_APPLICATION = "SELECT_PENDING_APPLICATION";
	var ACTION_REMOVE_PENDING_APPLICATION = exports.ACTION_REMOVE_PENDING_APPLICATION = "REMOVE_PENDING_APPLICATION";
	var ACTION_SELECT_TABLE_ROW = exports.ACTION_SELECT_TABLE_ROW = "SELECT_TABLE_ROW";
	var ACTION_EXPAND_TABLE_ROW = exports.ACTION_EXPAND_TABLE_ROW = "EXPAND_TABLE_ROW";
	var ACTION_COLLAPSE_TABLE_ROW = exports.ACTION_COLLAPSE_TABLE_ROW = "COLLAPSE_TABLE_ROW";
	var ACTION_SHOW_GENERIC_ERROR_MESSAGE = exports.ACTION_SHOW_GENERIC_ERROR_MESSAGE = "SHOW_GENERIC_ERROR_MESSAGE";
	var ACTION_ADD_SAVJS = exports.ACTION_ADD_SAVJS = "ADD_SAVJS";
	var ACTION_SET_SIGNATURE_STATUS_TO_TRUE = exports.ACTION_SET_SIGNATURE_STATUS_TO_TRUE = "SET_SIGNATURE_STATUS_TO_TRUE";
	var ACTION_CLOSE_DIALOG_MODEL = exports.ACTION_CLOSE_DIALOG_MODEL = "CLOSE_DIALOG_MODEL";
	var ACTION_CLEAR_SIGNATURE_IMAGE_CONTENT = exports.ACTION_CLEAR_SIGNATURE_IMAGE_CONTENT = "CLEAR_SIGNATURE_IMAGE_CONTENT";
	var ACTION_SET_DRAW_SIGNATURE_DIRTY_TO_FALSE = exports.ACTION_SET_DRAW_SIGNATURE_DIRTY_TO_FALSE = "SET_DRAW_SIGNATURE_DIRTY_TO_FALSE";
	var ACTION_ERROR_UPLOAD_FILE = exports.ACTION_ERROR_UPLOAD_FILE = "ERROR_UPLOAD_FILE";
	var ACTION_UPDATE_PURPOSE_OF_FUNDS_FOR_FX = exports.ACTION_UPDATE_PURPOSE_OF_FUNDS_FOR_FX = "UPDATE_PURPOSE_OF_FUNDS_FOR_FX";
	var ACTION_UPDATE_SOURCE_OF_FUNDS_FOR_FX = exports.ACTION_UPDATE_SOURCE_OF_FUNDS_FOR_FX = "UPDATE_SOURCE_OF_FUNDS_FOR_FX";
	var ACTION_UPDATE_COUNTRY_OF_FUNDS_FOR_FX = exports.ACTION_UPDATE_COUNTRY_OF_FUNDS_FOR_FX = "UPDATE_COUNTRY_OF_FUNDS_FOR_FX";
	var ACTION_UPDATE_TAX_RESIDENCY_REASON = exports.ACTION_UPDATE_TAX_RESIDENCY_REASON = "UPDATE_TAX_RESIDENCY_REASON";
	var ACTION_REMOVE_KRIS_OR_ASIA = exports.ACTION_REMOVE_KRIS_OR_ASIA = "REMOVE_KRIS_OR_ASIA";
	var ACTION_REMOVE_BILLING_PROOF = exports.ACTION_REMOVE_BILLING_PROOF = "REMOVE_BILLING_PROOF";
	var ACTION_REMOVE_NRIC = exports.ACTION_REMOVE_NRIC = "REMOVE_NRIC";
	var ACTION_SET_PROPERTY_TYPE = exports.ACTION_SET_PROPERTY_TYPE = "SET_PROPERTY_TYPE";

/***/ },
/* 23 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var countriesPhoneMap = exports.countriesPhoneMap = {
	    BD: "880",
	    BE: "32",
	    BF: "226",
	    BG: "359",
	    BA: "387",
	    BB: "+1-246",
	    WF: "681",
	    BL: "590",
	    BM: "+1-441",
	    BN: "673",
	    BO: "591",
	    BH: "973",
	    BI: "257",
	    BJ: "229",
	    BT: "975",
	    JM: "+1-876",
	    BW: "267",
	    WS: "685",
	    BQ: "599",
	    BR: "55",
	    BS: "+1-242",
	    JE: "+44-1534",
	    BY: "375",
	    BZ: "501",
	    RU: "7",
	    RW: "250",
	    RS: "381",
	    TL: "670",
	    RE: "262",
	    TM: "993",
	    TJ: "992",
	    RO: "40",
	    TK: "690",
	    GW: "245",
	    GU: "+1-671",
	    GT: "502",
	    GR: "30",
	    GQ: "240",
	    GP: "590",
	    JP: "81",
	    GY: "592",
	    GG: "+44-1481",
	    GF: "594",
	    GE: "995",
	    GD: "+1-473",
	    GB: "44",
	    GA: "241",
	    SV: "503",
	    GN: "224",
	    GM: "220",
	    GL: "299",
	    GI: "350",
	    GH: "233",
	    OM: "968",
	    TN: "216",
	    JO: "962",
	    HR: "385",
	    HT: "509",
	    HU: "36",
	    HK: "852",
	    HN: "504",
	    HM: " ",
	    VE: "58",
	    PR: "+1-787 and 1-939",
	    PS: "970",
	    PW: "680",
	    PT: "351",
	    SJ: "47",
	    PY: "595",
	    IQ: "964",
	    PA: "507",
	    PF: "689",
	    PG: "675",
	    PE: "51",
	    PK: "92",
	    PH: "63",
	    PN: "870",
	    PL: "48",
	    PM: "508",
	    ZM: "260",
	    EH: "212",
	    EE: "372",
	    EG: "20",
	    ZA: "27",
	    EC: "593",
	    IT: "39",
	    VN: "84",
	    SB: "677",
	    ET: "251",
	    SO: "252",
	    ZW: "263",
	    SA: "966",
	    ES: "34",
	    ER: "291",
	    ME: "382",
	    MD: "373",
	    MG: "261",
	    MF: "590",
	    MA: "212",
	    MC: "377",
	    UZ: "998",
	    MM: "95",
	    ML: "223",
	    MO: "853",
	    MN: "976",
	    MH: "692",
	    MK: "389",
	    MU: "230",
	    MT: "356",
	    MW: "265",
	    MV: "960",
	    MQ: "596",
	    MP: "+1-670",
	    MS: "+1-664",
	    MR: "222",
	    IM: "+44-1624",
	    UG: "256",
	    TZ: "255",
	    MY: "60",
	    MX: "52",
	    IL: "972",
	    FR: "33",
	    IO: "246",
	    SH: "290",
	    FI: "358",
	    FJ: "679",
	    FK: "500",
	    FM: "691",
	    FO: "298",
	    NI: "505",
	    NL: "31",
	    NO: "47",
	    NA: "264",
	    VU: "678",
	    NC: "687",
	    NE: "227",
	    NF: "672",
	    NG: "234",
	    NZ: "64",
	    NP: "977",
	    NR: "674",
	    NU: "683",
	    CK: "682",
	    CI: "225",
	    CH: "41",
	    CO: "57",
	    CN: "86",
	    CM: "237",
	    CL: "56",
	    CC: "61",
	    CA: "1",
	    CG: "242",
	    CF: "236",
	    CD: "243",
	    CZ: "420",
	    CY: "357",
	    CX: "61",
	    CR: "506",
	    CW: "599",
	    CV: "238",
	    CU: "53",
	    SZ: "268",
	    SY: "963",
	    SX: "599",
	    KG: "996",
	    KE: "254",
	    SS: "211",
	    SR: "597",
	    KI: "686",
	    KH: "855",
	    KN: "+1-869",
	    KM: "269",
	    ST: "239",
	    SK: "421",
	    KR: "82",
	    SI: "386",
	    KP: "850",
	    KW: "965",
	    SN: "221",
	    SM: "378",
	    SL: "232",
	    SC: "248",
	    KZ: "7",
	    KY: "+1-345",
	    SG: "65",
	    SE: "46",
	    SD: "249",
	    DO: "+1-809 and 1-829",
	    DM: "+1-767",
	    DJ: "253",
	    DK: "45",
	    VG: "+1-284",
	    DE: "49",
	    YE: "967",
	    DZ: "213",
	    US: "1",
	    UY: "598",
	    YT: "262",
	    UM: "1",
	    LB: "961",
	    LC: "+1-758",
	    LA: "856",
	    TV: "688",
	    TW: "886",
	    TT: "+1-868",
	    TR: "90",
	    LK: "94",
	    LI: "423",
	    LV: "371",
	    TO: "676",
	    LT: "370",
	    LU: "352",
	    LR: "231",
	    LS: "266",
	    TH: "66",
	    TG: "228",
	    TD: "235",
	    TC: "+1-649",
	    LY: "218",
	    VA: "379",
	    VC: "+1-784",
	    AE: "971",
	    AD: "376",
	    AG: "+1-268",
	    AF: "93",
	    AI: "+1-264",
	    VI: "+1-340",
	    IS: "354",
	    IR: "98",
	    AM: "374",
	    AL: "355",
	    AO: "244",
	    AS: "+1-684",
	    AR: "54",
	    AU: "61",
	    AT: "43",
	    AW: "297",
	    IN: "91",
	    AX: "+358-18",
	    AZ: "994",
	    IE: "353",
	    ID: "62",
	    UA: "380",
	    QA: "974",
	    MZ: "258"
	};
	
	var countriesNamesMap = exports.countriesNamesMap = {
	    SG: "Singapore",
	    BD: "Bangladesh",
	    BE: "Belgium",
	    BF: "Burkina Faso",
	    BG: "Bulgaria",
	    BA: "Bosnia and Herzegovina",
	    BB: "Barbados",
	    WF: "Wallis and Futuna",
	    BL: "Saint Barthelemy",
	    BM: "Bermuda",
	    BN: "Brunei",
	    BO: "Bolivia",
	    BH: "Bahrain",
	    BI: "Burundi",
	    BJ: "Benin",
	    BT: "Bhutan",
	    JM: "Jamaica",
	    BV: "Bouvet Island",
	    BW: "Botswana",
	    WS: "Samoa",
	    BQ: "Bonaire, Saint Eustatius and Saba ",
	    BR: "Brazil",
	    BS: "Bahamas",
	    JE: "Jersey",
	    BY: "Belarus",
	    BZ: "Belize",
	    RU: "Russia",
	    RW: "Rwanda",
	    RS: "Serbia",
	    TL: "East Timor",
	    RE: "Reunion",
	    TM: "Turkmenistan",
	    TJ: "Tajikistan",
	    RO: "Romania",
	    TK: "Tokelau",
	    GW: "Guinea-Bissau",
	    GU: "Guam",
	    GT: "Guatemala",
	    GS: "South Georgia and the South Sandwich Islands",
	    GR: "Greece",
	    GQ: "Equatorial Guinea",
	    GP: "Guadeloupe",
	    JP: "Japan",
	    GY: "Guyana",
	    GG: "Guernsey",
	    GF: "French Guiana",
	    GE: "Georgia",
	    GD: "Grenada",
	    GB: "United Kingdom",
	    GA: "Gabon",
	    SV: "El Salvador",
	    GN: "Guinea",
	    GM: "Gambia",
	    GL: "Greenland",
	    GI: "Gibraltar",
	    GH: "Ghana",
	    OM: "Oman",
	    TN: "Tunisia",
	    JO: "Jordan",
	    HR: "Croatia",
	    HT: "Haiti",
	    HU: "Hungary",
	    HK: "Hong Kong",
	    HN: "Honduras",
	    HM: "Heard Island and McDonald Islands",
	    VE: "Venezuela",
	    PR: "Puerto Rico",
	    PS: "Palestinian Territory",
	    PW: "Palau",
	    PT: "Portugal",
	    SJ: "Svalbard and Jan Mayen",
	    PY: "Paraguay",
	    IQ: "Iraq",
	    PA: "Panama",
	    PF: "French Polynesia",
	    PG: "Papua New Guinea",
	    PE: "Peru",
	    PK: "Pakistan",
	    PH: "Philippines",
	    PN: "Pitcairn",
	    PL: "Poland",
	    PM: "Saint Pierre and Miquelon",
	    ZM: "Zambia",
	    EH: "Western Sahara",
	    EE: "Estonia",
	    EG: "Egypt",
	    ZA: "South Africa",
	    EC: "Ecuador",
	    IT: "Italy",
	    VN: "Vietnam",
	    SB: "Solomon Islands",
	    ET: "Ethiopia",
	    SO: "Somalia",
	    ZW: "Zimbabwe",
	    SA: "Saudi Arabia",
	    ES: "Spain",
	    ER: "Eritrea",
	    ME: "Montenegro",
	    MD: "Moldova",
	    MG: "Madagascar",
	    MF: "Saint Martin",
	    MA: "Morocco",
	    MC: "Monaco",
	    UZ: "Uzbekistan",
	    MM: "Myanmar",
	    ML: "Mali",
	    MO: "Macao",
	    MN: "Mongolia",
	    MH: "Marshall Islands",
	    MK: "Macedonia",
	    MU: "Mauritius",
	    MT: "Malta",
	    MW: "Malawi",
	    MV: "Maldives",
	    MQ: "Martinique",
	    MP: "Northern Mariana Islands",
	    MS: "Montserrat",
	    MR: "Mauritania",
	    IM: "Isle of Man",
	    UG: "Uganda",
	    TZ: "Tanzania",
	    MY: "Malaysia",
	    MX: "Mexico",
	    IL: "Israel",
	    FR: "France",
	    IO: "British Indian Ocean Territory",
	    SH: "Saint Helena",
	    FI: "Finland",
	    FJ: "Fiji",
	    FK: "Falkland Islands",
	    FM: "Micronesia",
	    FO: "Faroe Islands",
	    NI: "Nicaragua",
	    NL: "Netherlands",
	    NO: "Norway",
	    NA: "Namibia",
	    VU: "Vanuatu",
	    NC: "New Caledonia",
	    NE: "Niger",
	    NF: "Norfolk Island",
	    NG: "Nigeria",
	    NZ: "New Zealand",
	    NP: "Nepal",
	    NR: "Nauru",
	    NU: "Niue",
	    CK: "Cook Islands",
	    XK: "Kosovo",
	    CI: "Ivory Coast",
	    CH: "Switzerland",
	    CO: "Colombia",
	    CN: "China",
	    CM: "Cameroon",
	    CL: "Chile",
	    CC: "Cocos Islands",
	    CA: "Canada",
	    CG: "Republic of the Congo",
	    CF: "Central African Republic",
	    CD: "Democratic Republic of the Congo",
	    CZ: "Czech Republic",
	    CY: "Cyprus",
	    CX: "Christmas Island",
	    CR: "Costa Rica",
	    CW: "Curacao",
	    CV: "Cape Verde",
	    CU: "Cuba",
	    SZ: "Swaziland",
	    SY: "Syria",
	    SX: "Sint Maarten",
	    KG: "Kyrgyzstan",
	    KE: "Kenya",
	    SS: "South Sudan",
	    SR: "Suriname",
	    KI: "Kiribati",
	    KH: "Cambodia",
	    KN: "Saint Kitts and Nevis",
	    KM: "Comoros",
	    ST: "Sao Tome and Principe",
	    SK: "Slovakia",
	    KR: "South Korea",
	    SI: "Slovenia",
	    KP: "North Korea",
	    KW: "Kuwait",
	    SN: "Senegal",
	    SM: "San Marino",
	    SL: "Sierra Leone",
	    SC: "Seychelles",
	    KZ: "Kazakhstan",
	    KY: "Cayman Islands",
	    SE: "Sweden",
	    SD: "Sudan",
	    DO: "Dominican Republic",
	    DM: "Dominica",
	    DJ: "Djibouti",
	    DK: "Denmark",
	    VG: "British Virgin Islands",
	    DE: "Germany",
	    YE: "Yemen",
	    DZ: "Algeria",
	    US: "United States of America",
	    UY: "Uruguay",
	    YT: "Mayotte",
	    UM: "United States Minor Outlying Islands",
	    LB: "Lebanon",
	    LC: "Saint Lucia",
	    LA: "Laos",
	    TV: "Tuvalu",
	    TW: "Taiwan",
	    TT: "Trinidad and Tobago",
	    TR: "Turkey",
	    LK: "Sri Lanka",
	    LI: "Liechtenstein",
	    LV: "Latvia",
	    TO: "Tonga",
	    LT: "Lithuania",
	    LU: "Luxembourg",
	    LR: "Liberia",
	    LS: "Lesotho",
	    TH: "Thailand",
	    TF: "French Southern Territories",
	    TG: "Togo",
	    TD: "Chad",
	    TC: "Turks and Caicos Islands",
	    LY: "Libya",
	    VA: "Vatican",
	    VC: "Saint Vincent and the Grenadines",
	    AE: "United Arab Emirates",
	    AD: "Andorra",
	    AG: "Antigua and Barbuda",
	    AF: "Afghanistan",
	    AI: "Anguilla",
	    VI: "U.S. Virgin Islands",
	    IS: "Iceland",
	    IR: "Iran",
	    AM: "Armenia",
	    AL: "Albania",
	    AO: "Angola",
	    AQ: "Antarctica",
	    AS: "American Samoa",
	    AR: "Argentina",
	    AU: "Australia",
	    AT: "Austria",
	    AW: "Aruba",
	    IN: "India",
	    AX: "Aland Islands",
	    AZ: "Azerbaijan",
	    IE: "Ireland",
	    ID: "Indonesia",
	    UA: "Ukraine",
	    QA: "Qatar",
	    MZ: "Mozambique"
	};
	
	var countriesLabelValue = exports.countriesLabelValue = [{ label: "Singapore", value: "SG" }, { label: "Afghanistan", value: "AF" },
	// {"label": "Aland Islands", "value": "AX"},
	{ label: "Albania", value: "AL" }, { label: "Algeria", value: "DZ" }, { label: "American Samoa", value: "AS" }, { label: "Andorra", value: "AD" }, { label: "Angola", value: "AO" }, { label: "Anguilla", value: "AI" }, { label: "Antarctica", value: "AQ" }, { label: "Antigua and Barbuda", value: "AG" }, { label: "Argentina", value: "AR" }, { label: "Armenia", value: "AM" }, { label: "Aruba", value: "AW" }, { label: "Australia", value: "AU" }, { label: "Austria", value: "AT" }, { label: "Azerbaijan", value: "AZ" }, { label: "Bahamas", value: "BS" }, { label: "Bahrain", value: "BH" }, { label: "Bangladesh", value: "BD" }, { label: "Barbados", value: "BB" }, { label: "Belarus", value: "BY" }, { label: "Belgium", value: "BE" }, { label: "Belize", value: "BZ" }, { label: "Benin", value: "BJ" }, { label: "Bermuda", value: "BM" }, { label: "Bhutan", value: "BT" }, { label: "Bolivia", value: "BO" },
	// {"label": "Bonaire, Saint Eustatius and Saba ", "value": "BQ"},
	{ label: "Bosnia and Herzegovina", value: "BA" }, { label: "Botswana", value: "BW" }, { label: "Bouvet Island", value: "BV" }, { label: "Brazil", value: "BR" }, { label: "British Indian Ocean Territory", value: "IO" }, { label: "British Virgin Islands", value: "VG" }, { label: "Brunei Darussalam", value: "BN" }, { label: "Bulgaria", value: "BG" }, { label: "Burkina Faso", value: "BF" }, { label: "Burundi", value: "BI" }, { label: "Cambodia", value: "KH" }, { label: "Cameroon", value: "CM" }, { label: "Canada", value: "CA" }, { label: "Cape Verda", value: "CV" }, { label: "Cayman Islands", value: "KY" }, { label: "Central African Republic", value: "CF" }, { label: "Chad", value: "TD" }, { label: "Chile", value: "CL" }, { label: "China", value: "CN" }, { label: "Christmas Island", value: "CX" }, { label: "Cocos Islands", value: "CC" }, { label: "Colombia", value: "CO" }, { label: "Comoros", value: "KM" }, { label: "Congo", value: "CG" }, { label: "Congo Democratic", value: "CD" }, { label: "Cook Islands", value: "CK" }, { label: "Costa Rica", value: "CR" }, { label: "Cote d'Ivoire", value: "CI" }, { label: "Croatia", value: "HR" }, { label: "Cuba", value: "CU" },
	// {"label": "Curacao", "value": "CW"},
	{ label: "Cyprus", value: "CY" }, { label: "Czech Republic", value: "CZ" },
	
	// {"label": "Democratic Republic of the Congo", "value": "CD"},
	{ label: "Denmark", value: "DK" }, { label: "Djibouti", value: "DJ" }, { label: "Dominica", value: "DM" }, { label: "Dominican Republic", value: "DO" }, { label: "East Timor", value: "TL" }, { label: "Ecuador", value: "EC" }, { label: "Egypt", value: "EG" }, { label: "El Salvador", value: "SV" }, { label: "Equatorial Guinea", value: "GQ" }, { label: "Eritrea", value: "ER" }, { label: "Estonia", value: "EE" }, { label: "Ethiopia", value: "ET" },
	
	// {"label": "Falkland Islands", "value": "FK"},
	{ label: "Faroe Islands", value: "FO" }, { label: "Fiji", value: "FJ" }, { label: "Finland", value: "FI" }, { label: "France", value: "FR" }, { label: "French Guiana", value: "GF" }, { label: "French Polynesia", value: "PF" }, { label: "French Southern Territories", value: "TF" }, { label: "Gabon", value: "GA" }, { label: "Gambia", value: "GM" }, { label: "Georgia", value: "GE" }, { label: "Germany", value: "DE" }, { label: "Ghana", value: "GH" }, { label: "Gibraltar", value: "GI" }, { label: "Greece", value: "GR" }, { label: "Greenland", value: "GL" }, { label: "Grenada", value: "GD" }, { label: "Guadeloupe", value: "GP" }, { label: "Guam", "value": "GU" }, { label: "Guatemala", value: "GT" }, { label: "Guernsey CI", value: "GG" }, { label: "Guinea-Bissau", value: "GW" },
	// {"label": "Guinea", "value": "GN"},
	{ label: "Guyana", value: "GY" }, { label: "Haiti", value: "HT" }, { label: "Heard and McDonald Islands", value: "HM" }, { label: "Honduras", value: "HN" }, { label: "Hong Kong", value: "HK" }, { label: "Hungary", value: "HU" }, { label: "Iceland", value: "IS" }, { label: "India", value: "IN" }, { label: "Indonesia", value: "ID" }, { label: "Iran (Islamic Republic of)", value: "IR" }, { label: "Iraq", value: "IQ" }, { label: "Ireland", value: "IE" }, { label: "Isle of Man", value: "IM" }, { label: "Israel", value: "IL" }, { label: "Italy", value: "IT" },
	// {"label": "Ivory Coast", "value": "CI"},
	
	{ label: "Jamaica", value: "JM" }, { label: "Japan", value: "JP" }, { label: "Jersey, C.I.", value: "JE" }, { label: "Jordan", value: "JO" }, { label: "Kazakhstan", value: "KZ" }, { label: "Kenya", value: "KE" }, { label: "Kiribati", value: "KI" },
	// {"label": "Kosovo", "value": "XK"},
	{ label: "Korea, Democratic People's Republic of", value: "KP" }, { label: "Korea, Republic of", value: "KR" }, { label: "Kuwait", value: "KW" }, { label: "Kyrgyzstan", value: "KG" }, { label: "Lao People's Democratic Republic", value: "LA" }, { label: "Latvia", value: "LV" }, { label: "Lebanon", value: "LB" }, { label: "Lesotho", value: "LS" }, { label: "Liberia", value: "LR" }, { label: "Libyan Arab Jamahiriya", value: "LY" }, { label: "Liechtenstein", value: "LI" }, { label: "Lithuania", value: "LT" }, { label: "Luxembourg", value: "LU" }, { label: "Macau", value: "MO" }, { label: "Macedonia", value: "MK" }, { label: "Madagascar", value: "MG" }, { label: "Malawi", value: "MW" }, { label: "Malaysia", value: "MY" }, { label: "Maldives", value: "MV" }, { label: "Mali", value: "ML" }, { label: "Malta", value: "MT" }, { label: "Marshall Islands", value: "MH" }, { label: "Martinique", value: "MQ" }, { label: "Mauritania", value: "MR" }, { label: "Mauritius", value: "MU" }, { label: "Mayotte", value: "YT" }, { label: "Mexico", value: "MX" }, { label: "Micronesia (Federated States of)", value: "FM" }, { label: "Moldova, Republic of", value: "MD" }, { label: "Monaco", value: "MC" }, { label: "Mongolia", value: "MN" },
	// {"label": "Montenegro", "value": "ME"},
	{ label: "Montserrat", value: "MS" }, { label: "Morocco", value: "MA" }, { label: "Mozambique", value: "MZ" }, { label: "Myanmar", value: "MM" }, { label: "Namibia", value: "NA" }, { label: "Nauru", value: "NR" }, { label: "Nepal", value: "NP" }, { label: "Netherlands", value: "NL" }, { label: "Netherlands Antilles", value: "AN" }, { label: "Neutral Zone", value: "NT" }, { "label": "New Caledonia", "value": "NC" }, { label: "New Zealand", value: "NZ" }, { label: "Nicaragua", value: "NI" }, { label: "Niger", value: "NE" }, { label: "Nigeria", value: "NG" }, { label: "Niue", value: "NU" }, { label: "Norfolk Island", value: "NF" }, { label: "Northern Mariana Islands", value: "MP" },
	// {"label": "North Korea", "value": "KP"},
	{ label: "Norway", value: "NO" }, { label: "Oman", value: "OM" }, { label: "Pakistan", value: "PK" }, { label: "Palau", value: "PW" },
	// {"label": "Palestinian Territory", "value": "PS"},
	{ label: "Panama", value: "PA" }, { label: "Panama Canal Zone", value: "PZ" }, { label: "Papua New Guinea", value: "PG" }, { label: "Paraguay", value: "PY" }, { label: "Peru", value: "PE" }, { label: "Philippines", value: "PH" }, { label: "Pitcairn", value: "PN" }, { label: "Poland", value: "PL" }, { label: "Portugal", value: "PT" }, { label: "Puerto Rico", "value": "PR" }, { label: "Qatar", value: "QA" },
	
	// {"label": "Republic of the Congo", "value": "CG"},
	{ label: "Reunion", value: "RE" }, { label: "Romania", value: "RO" }, { label: "Russian Federation", value: "RU" }, { label: "Rwanda", value: "RW" },
	
	// {"label": "Saint Barthelemy", "value": "BL"},
	{ label: "Saint Kitts and Nevis", value: "KN" }, { label: "Saint Lucia", value: "LC" },
	// {"label": "Saint Martin", "value": "MF"},
	{ label: "Saint Vincent and the Grenadines", value: "VC" }, { label: "Samoa", value: "WS" }, { label: "San Marino", value: "SM" }, { label: "Sao Tome and Principe", value: "ST" }, { label: "Saudi Arabia", value: "SA" }, { label: "Senegal", value: "SN" },
	// {"label": "Serbia", "value": "RS"},
	{ label: "Seychelles", value: "SC" }, { label: "Sierra Leone", value: "SL" },
	// {"label": "Sint Maarten", "value": "SX"},
	{ label: "Slovakia", value: "SK" }, { label: "Slovenia", value: "SI" }, { label: "Solomon Islands", value: "SB" }, { label: "Somalia", value: "SO" }, { label: "South Africa", value: "ZA" }, { label: "South Georgia and the South Sandwich Islands", value: "GS" },
	// {"label": "South Korea", "value": "KR"},
	// {"label": "South Sudan", "value": "SS"},
	{ label: "Spain", value: "ES" }, { label: "Sri Lanka", value: "LK" }, { label: "St. Helena", value: "SH" }, { label: "St. Pierre and Miquelon", value: "PM" }, { label: "Sudan", value: "SD" }, { label: "Suriname", value: "SR" }, { label: "Svalbard and Jan Mayen", value: "SJ" }, { label: "Swaziland", value: "SZ" }, { label: "Sweden", value: "SE" }, { label: "Switzerland", value: "CH" }, { label: "Syrian Arab Republic", value: "SY" }, { label: "Taiwan", value: "TW" },
	// {"label": "Tajikistan", "value": "TJ"},
	{ label: "Tanzania, United Republic of", value: "TZ" }, { label: "Thailand", value: "TH" }, { label: "Togo", value: "TG" }, { label: "Tokelau", value: "TK" }, { label: "Tonga", value: "TO" }, { label: "Trinidad and Tobago", value: "TT" }, { label: "Tunisia", value: "TN" }, { label: "Turkey", value: "TR" }, { label: "Turkmenistan", value: "TM" }, { label: "Turks and Caicos Islands", value: "TC" }, { label: "Tuvalu", value: "TV" }, { label: "Uganda", value: "UG" }, { label: "Ukraine", value: "UA" }, { label: "United Arab Emirates", value: "AE" }, { label: "United Kingdom", value: "GB" }, { label: "United States of America", value: "US" },
	// {"label": "United States Minor Outlying Islands", "value": "UM"},
	{ label: "Uruguay", value: "UY" }, { label: "U.S. Virgin Islands", "value": "VI" }, { label: "Uzbekistan", value: "UZ" }, { label: "Vanuatu", value: "VU" }, { label: "Holy See (Vatican City State)", value: "VA" }, { label: "Venezuela", value: "VE" }, { label: "Vietnam", value: "VN" }, { label: "Wallis and Futuna", value: "WF" }, { label: "Western Sahara", value: "EH" }, { label: "Yemen", value: "YE" },
	// {"label": "Yugoslavia", "value": "YE"}, // MISSING COUNTRY
	
	{ label: "Zambia", value: "ZM" }, { label: "Zimbabwe", value: "ZW" }];
	
	var countries = exports.countries = ["Afghanistan", "Aland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antarctica", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bonaire, Saint Eustatius and Saba ", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos Islands", "Colombia", "Comoros", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Curacao", "Cyprus", "Czech Republic", "Democratic Republic of the Congo", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern Territories", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Isle of Man", "Israel", "Italy", "Ivory Coast", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati",
	// "Kosovo",
	"Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macao", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "North Korea", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestinian Territory", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of the Congo", "Reunion", "Romania", "Russia", "Rwanda", "Saint Barthelemy", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia and the South Sandwich Islands", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "U.S. Virgin Islands", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States Minor Outlying Islands", "United States of America", "Uruguay", "Uzbekistan", "Vanuatu", "Vatican", "Venezuela", "Vietnam", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe"];

/***/ },
/* 24 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	// Trust the developer to only use ReactInstrumentation with a __DEV__ check
	
	var debugTool = null;
	
	if (false) {
	  var ReactDebugTool = require('./ReactDebugTool');
	  debugTool = ReactDebugTool;
	}
	
	module.exports = { debugTool: debugTool };

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(14);
	
	var CallbackQueue = __webpack_require__(283);
	var PooledClass = __webpack_require__(36);
	var ReactFeatureFlags = __webpack_require__(288);
	var ReactReconciler = __webpack_require__(45);
	var Transaction = __webpack_require__(77);
	
	var invariant = __webpack_require__(8);
	
	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}
	
	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}
	
	_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.type.isReactTopLevelWrapper) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
	
	    if (markerName) {
	      console.timeEnd(markerName);
	    }
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(14);
	
	var PooledClass = __webpack_require__(36);
	
	var emptyFunction = __webpack_require__(24);
	var warning = __webpack_require__(11);
	
	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';
	
	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (false) {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }
	
	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (false) {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}
	
	_assign(SyntheticEvent.prototype, {
	
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else if (typeof event.returnValue !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }
	
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (false) {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (false) {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	if (false) {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();
	
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	
	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };
	
	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }
	
	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }
	
	  function warn(action, result) {
	    var warningCondition = false;
	     false ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

/***/ },
/* 28 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	__webpack_require__(499);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var SummaryBlockSimpleElement = function SummaryBlockSimpleElement(props) {
	    return _react2.default.createElement(
	        "div",
	        { className: "simple-element-container" },
	        _react2.default.createElement(
	            "p",
	            { className: "simple-element-title" },
	            props.label
	        ),
	        _react2.default.createElement(
	            "p",
	            { className: "simple-element-content" },
	            props.value
	        )
	    );
	};
	
	SummaryBlockSimpleElement.propTypes = {
	    label: _react.PropTypes.string,
	    value: _react.PropTypes.string
	};
	
	exports.default = SummaryBlockSimpleElement;

/***/ },
/* 30 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.createPath = exports.parsePath = exports.getQueryStringValueFromPath = exports.stripQueryStringValueFromPath = exports.addQueryStringValueToPath = undefined;
	
	var _warning = __webpack_require__(33);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var addQueryStringValueToPath = exports.addQueryStringValueToPath = function addQueryStringValueToPath(path, key, value) {
	  var _parsePath = parsePath(path),
	      pathname = _parsePath.pathname,
	      search = _parsePath.search,
	      hash = _parsePath.hash;
	
	  return createPath({
	    pathname: pathname,
	    search: search + (search.indexOf('?') === -1 ? '?' : '&') + key + '=' + value,
	    hash: hash
	  });
	};
	
	var stripQueryStringValueFromPath = exports.stripQueryStringValueFromPath = function stripQueryStringValueFromPath(path, key) {
	  var _parsePath2 = parsePath(path),
	      pathname = _parsePath2.pathname,
	      search = _parsePath2.search,
	      hash = _parsePath2.hash;
	
	  return createPath({
	    pathname: pathname,
	    search: search.replace(new RegExp('([?&])' + key + '=[a-zA-Z0-9]+(&?)'), function (match, prefix, suffix) {
	      return prefix === '?' ? prefix : suffix;
	    }),
	    hash: hash
	  });
	};
	
	var getQueryStringValueFromPath = exports.getQueryStringValueFromPath = function getQueryStringValueFromPath(path, key) {
	  var _parsePath3 = parsePath(path),
	      search = _parsePath3.search;
	
	  var match = search.match(new RegExp('[?&]' + key + '=([a-zA-Z0-9]+)'));
	  return match && match[1];
	};
	
	var extractPath = function extractPath(string) {
	  var match = string.match(/^(https?:)?\/\/[^\/]*/);
	  return match == null ? string : string.substring(match[0].length);
	};
	
	var parsePath = exports.parsePath = function parsePath(path) {
	  var pathname = extractPath(path);
	  var search = '';
	  var hash = '';
	
	   false ? (0, _warning2.default)(path === pathname, 'A path must be pathname + search + hash only, not a full URL like "%s"', path) : void 0;
	
	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substring(hashIndex);
	    pathname = pathname.substring(0, hashIndex);
	  }
	
	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substring(searchIndex);
	    pathname = pathname.substring(0, searchIndex);
	  }
	
	  if (pathname === '') pathname = '/';
	
	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash
	  };
	};
	
	var createPath = exports.createPath = function createPath(location) {
	  if (location == null || typeof location === 'string') return location;
	
	  var basename = location.basename,
	      pathname = location.pathname,
	      search = location.search,
	      hash = location.hash;
	
	  var path = (basename || '') + pathname;
	
	  if (search && search !== '?') path += search;
	
	  if (hash) path += hash;
	
	  return path;
	};

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.isReactChildren = isReactChildren;
	exports.createRouteFromReactElement = createRouteFromReactElement;
	exports.createRoutesFromReactChildren = createRoutesFromReactChildren;
	exports.createRoutes = createRoutes;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function isValidChild(object) {
	  return object == null || _react2.default.isValidElement(object);
	}
	
	function isReactChildren(object) {
	  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);
	}
	
	function createRoute(defaultProps, props) {
	  return _extends({}, defaultProps, props);
	}
	
	function createRouteFromReactElement(element) {
	  var type = element.type;
	  var route = createRoute(type.defaultProps, element.props);
	
	  if (route.children) {
	    var childRoutes = createRoutesFromReactChildren(route.children, route);
	
	    if (childRoutes.length) route.childRoutes = childRoutes;
	
	    delete route.children;
	  }
	
	  return route;
	}
	
	/**
	 * Creates and returns a routes object from the given ReactChildren. JSX
	 * provides a convenient way to visualize how routes in the hierarchy are
	 * nested.
	 *
	 *   import { Route, createRoutesFromReactChildren } from 'react-router'
	 *
	 *   const routes = createRoutesFromReactChildren(
	 *     <Route component={App}>
	 *       <Route path="home" component={Dashboard}/>
	 *       <Route path="news" component={NewsFeed}/>
	 *     </Route>
	 *   )
	 *
	 * Note: This method is automatically used when you provide <Route> children
	 * to a <Router> component.
	 */
	function createRoutesFromReactChildren(children, parentRoute) {
	  var routes = [];
	
	  _react2.default.Children.forEach(children, function (element) {
	    if (_react2.default.isValidElement(element)) {
	      // Component classes may have a static create* method.
	      if (element.type.createRouteFromReactElement) {
	        var route = element.type.createRouteFromReactElement(element, parentRoute);
	
	        if (route) routes.push(route);
	      } else {
	        routes.push(createRouteFromReactElement(element));
	      }
	    }
	  });
	
	  return routes;
	}
	
	/**
	 * Creates and returns an array of routes from the given object which
	 * may be a JSX route, a plain object route, or an array of either.
	 */
	function createRoutes(routes) {
	  if (isReactChildren(routes)) {
	    routes = createRoutesFromReactChildren(routes);
	  } else if (routes && !Array.isArray(routes)) {
	    routes = [routes];
	  }
	
	  return routes;
	}

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = function() {};
	
	if (false) {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }
	
	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}
	
	module.exports = warning;


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _EditableDropdown = __webpack_require__(346);
	
	var _EditableDropdown2 = _interopRequireDefault(_EditableDropdown);
	
	var _ReadOnlyDropdown = __webpack_require__(361);
	
	var _ReadOnlyDropdown2 = _interopRequireDefault(_ReadOnlyDropdown);
	
	var _path = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Dropdown = function Dropdown(props) {
	    var isReadOnly = props.state.getIn((0, _path.isReadOnlyPath)(props.step, props.inputID), false);
	    return isReadOnly ? _react2.default.createElement(_ReadOnlyDropdown2.default, props) : _react2.default.createElement(_EditableDropdown2.default, props);
	};
	
	Dropdown.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    inputID: _react.PropTypes.string,
	    step: _react.PropTypes.string.isRequired
	};
	
	exports.default = Dropdown;

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	var store = __webpack_require__(143)('wks');
	var uid = __webpack_require__(145);
	var Symbol = __webpack_require__(39).Symbol;
	var USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function (name) {
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;


/***/ },
/* 36 */
[664, 12],
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _ToggleButton = __webpack_require__(63);
	
	var _ToggleButton2 = _interopRequireDefault(_ToggleButton);
	
	__webpack_require__(486);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ToggleInput = function (_Component) {
	    _inherits(ToggleInput, _Component);
	
	    function ToggleInput() {
	        _classCallCheck(this, ToggleInput);
	
	        return _possibleConstructorReturn(this, (ToggleInput.__proto__ || Object.getPrototypeOf(ToggleInput)).apply(this, arguments));
	    }
	
	    _createClass(ToggleInput, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            if (this.props.componentDidMount) {
	                this.props.componentDidMount();
	            }
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var props = this.props;
	
	            return _react2.default.createElement(
	                "div",
	                { className: "toggle-input--container" },
	                _react2.default.createElement(
	                    "div",
	                    { className: "toggle-input--text-container" },
	                    _react2.default.createElement(
	                        "div",
	                        { className: "toggle-input--description" },
	                        _react2.default.createElement("div", { dangerouslySetInnerHTML: { __html: props.description } })
	                    )
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "toggle-input--button-container" },
	                    _react2.default.createElement(_ToggleButton2.default, {
	                        state: props.state,
	                        step: props.step,
	                        inputID: props.inputID,
	                        onClick: props.onClick,
	                        value: props.value,
	                        setPath: props.setPath
	                    })
	                )
	            );
	        }
	    }]);
	
	    return ToggleInput;
	}(_react.Component);
	
	ToggleInput.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    description: _react.PropTypes.string,
	    inputID: _react.PropTypes.string,
	    componentDidMount: _react.PropTypes.func,
	    setPath: _react.PropTypes.func
	};
	
	exports.default = ToggleInput;

/***/ },
/* 38 */
/***/ function(module, exports) {

	var core = module.exports = { version: '2.5.3' };
	if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ },
/* 39 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self
	  // eslint-disable-next-line no-new-func
	  : Function('return this')();
	if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.locationsAreEqual = exports.statesAreEqual = exports.createLocation = exports.createQuery = undefined;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _warning = __webpack_require__(33);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _PathUtils = __webpack_require__(31);
	
	var _Actions = __webpack_require__(71);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var createQuery = exports.createQuery = function createQuery(props) {
	  return _extends(Object.create(null), props);
	};
	
	var createLocation = exports.createLocation = function createLocation() {
	  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';
	  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _Actions.POP;
	  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
	
	  var object = typeof input === 'string' ? (0, _PathUtils.parsePath)(input) : input;
	
	   false ? (0, _warning2.default)(!object.path, 'Location descriptor objects should have a `pathname`, not a `path`.') : void 0;
	
	  var pathname = object.pathname || '/';
	  var search = object.search || '';
	  var hash = object.hash || '';
	  var state = object.state;
	
	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash,
	    state: state,
	    action: action,
	    key: key
	  };
	};
	
	var isDate = function isDate(object) {
	  return Object.prototype.toString.call(object) === '[object Date]';
	};
	
	var statesAreEqual = exports.statesAreEqual = function statesAreEqual(a, b) {
	  if (a === b) return true;
	
	  var typeofA = typeof a === 'undefined' ? 'undefined' : _typeof(a);
	  var typeofB = typeof b === 'undefined' ? 'undefined' : _typeof(b);
	
	  if (typeofA !== typeofB) return false;
	
	  !(typeofA !== 'function') ?  false ? (0, _invariant2.default)(false, 'You must not store functions in location state') : (0, _invariant2.default)(false) : void 0;
	
	  // Not the same object, but same type.
	  if (typeofA === 'object') {
	    !!(isDate(a) && isDate(b)) ?  false ? (0, _invariant2.default)(false, 'You must not store Date objects in location state') : (0, _invariant2.default)(false) : void 0;
	
	    if (!Array.isArray(a)) {
	      var keysofA = Object.keys(a);
	      var keysofB = Object.keys(b);
	      return keysofA.length === keysofB.length && keysofA.every(function (key) {
	        return statesAreEqual(a[key], b[key]);
	      });
	    }
	
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return statesAreEqual(item, b[index]);
	    });
	  }
	
	  // All other serializable types (string, number, boolean)
	  // should be strict equal.
	  return false;
	};
	
	var locationsAreEqual = exports.locationsAreEqual = function locationsAreEqual(a, b) {
	  return a.key === b.key &&
	  // a.action === b.action && // Different action !== location change.
	  a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && statesAreEqual(a.state, b.state);
	};

/***/ },
/* 41 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.get_phone_code = get_phone_code;
	exports.get_national_number_pattern = get_national_number_pattern;
	exports.get_formats = get_formats;
	exports.get_national_prefix = get_national_prefix;
	exports.get_national_prefix_formatting_rule = get_national_prefix_formatting_rule;
	exports.get_national_prefix_for_parsing = get_national_prefix_for_parsing;
	exports.get_national_prefix_transform_rule = get_national_prefix_transform_rule;
	exports.get_national_prefix_is_optional_when_formatting = get_national_prefix_is_optional_when_formatting;
	exports.get_leading_digits = get_leading_digits;
	exports.get_format_pattern = get_format_pattern;
	exports.get_format_format = get_format_format;
	exports.get_format_leading_digits_patterns = get_format_leading_digits_patterns;
	exports.get_format_national_prefix_formatting_rule = get_format_national_prefix_formatting_rule;
	exports.get_format_national_prefix_is_optional_when_formatting = get_format_national_prefix_is_optional_when_formatting;
	exports.get_format_national_prefix_is_mandatory_when_formatting = get_format_national_prefix_is_mandatory_when_formatting;
	exports.get_format_uses_national_prefix = get_format_uses_national_prefix;
	exports.get_format_international_format = get_format_international_format;
	exports.get_metadata_by_country_phone_code = get_metadata_by_country_phone_code;
	exports.get_types = get_types;
	exports.get_type_fixed_line = get_type_fixed_line;
	exports.get_type_mobile = get_type_mobile;
	exports.get_type_toll_free = get_type_toll_free;
	exports.get_type_premium_rate = get_type_premium_rate;
	exports.get_type_personal_number = get_type_personal_number;
	exports.get_type_voice_mail = get_type_voice_mail;
	exports.get_type_uan = get_type_uan;
	exports.get_type_pager = get_type_pager;
	exports.get_type_voip = get_type_voip;
	exports.get_type_shared_cost = get_type_shared_cost;
	exports.get_country_phone_code = get_country_phone_code;
	function get_phone_code(country_metadata) {
		return country_metadata[0];
	}
	
	function get_national_number_pattern(country_metadata) {
		return country_metadata[1];
	}
	
	function get_formats(country_metadata) {
		return country_metadata[2] || [];
	}
	
	function get_national_prefix(country_metadata) {
		return country_metadata[3];
	}
	
	function get_national_prefix_formatting_rule(country_metadata) {
		return country_metadata[4];
	}
	
	function get_national_prefix_for_parsing(country_metadata) {
		var national_prefix_for_parsing = country_metadata[5];
	
		// If `national_prefix_for_parsing` is not set explicitly,
		// then infer it from `national_prefix` (if any)
		if (!national_prefix_for_parsing) {
			national_prefix_for_parsing = get_national_prefix(country_metadata);
		}
	
		return national_prefix_for_parsing;
	}
	
	function get_national_prefix_transform_rule(country_metadata) {
		return country_metadata[6];
	}
	
	function get_national_prefix_is_optional_when_formatting(country_metadata) {
		return country_metadata[7];
	}
	
	function get_leading_digits(country_metadata) {
		return country_metadata[8];
	}
	
	function get_format_pattern(format_array) {
		return format_array[0];
	}
	
	function get_format_format(format_array) {
		return format_array[1];
	}
	
	function get_format_leading_digits_patterns(format_array) {
		return format_array[2] || [];
	}
	
	function get_format_national_prefix_formatting_rule(format_array, country_metadata) {
		return format_array[3] || get_national_prefix_formatting_rule(country_metadata);
	}
	
	function get_format_national_prefix_is_optional_when_formatting(format_array, country_metadata) {
		return format_array[4] || get_national_prefix_is_optional_when_formatting(country_metadata);
	}
	
	function get_format_national_prefix_is_mandatory_when_formatting(format_array, country_metadata) {
		var national_prefix_formatting_rule = get_format_national_prefix_formatting_rule(format_array, country_metadata);
	
		// National prefix is omitted if there's no national prefix formatting rule
		// set for this country, or when the national prefix formatting rule
		// contains no national prefix itself, or when this rule is set but
		// national prefix is optional for this phone number format
		// (and it is not enforced explicitly)
		return national_prefix_formatting_rule &&
		// Check that national prefix formatting rule is not a dummy one.
		// Check that national prefix formatting rule actually has national prefix digit(s).
		get_format_uses_national_prefix(national_prefix_formatting_rule) &&
		// Or maybe national prefix is optional for this format
		!get_format_national_prefix_is_optional_when_formatting(format_array, country_metadata);
	}
	
	// Checks whether national prefix formatting rule contains national prefix
	function get_format_uses_national_prefix(national_prefix_formatting_rule) {
		// Check that national prefix formatting rule is not a dummy one
		return national_prefix_formatting_rule !== '$1' &&
		// Check that national prefix formatting rule actually has national prefix digit(s)
		/\d/.test(national_prefix_formatting_rule.replace('$1', ''));
	}
	
	function get_format_international_format(format_array) {
		return format_array[5] || get_format_format(format_array);
	}
	
	// Formatting information for regions which share
	// a country calling code is contained by only one region
	// for performance reasons. For example, for NANPA region
	// ("North American Numbering Plan Administration",
	//  which includes USA, Canada, Cayman Islands, Bahamas, etc)
	// it will be contained in the metadata for `US`.
	function get_metadata_by_country_phone_code(country_phone_code, metadata) {
		var country_code = metadata.country_phone_code_to_countries[country_phone_code][0];
		return metadata.countries[country_code];
	}
	
	function get_types(country_metadata) {
		return country_metadata[9];
	}
	
	function get_type(country_metadata, index) {
		return get_types(country_metadata) ? get_types(country_metadata)[index] : undefined;
	}
	
	function get_type_fixed_line(country_metadata) {
		return get_type(country_metadata, 0);
	}
	
	function get_type_mobile(country_metadata) {
		return get_type(country_metadata, 1);
	}
	
	function get_type_toll_free(country_metadata) {
		return get_type(country_metadata, 2);
	}
	
	function get_type_premium_rate(country_metadata) {
		return get_type(country_metadata, 3);
	}
	
	function get_type_personal_number(country_metadata) {
		return get_type(country_metadata, 4);
	}
	
	function get_type_voice_mail(country_metadata) {
		return get_type(country_metadata, 5);
	}
	
	function get_type_uan(country_metadata) {
		return get_type(country_metadata, 6);
	}
	
	function get_type_pager(country_metadata) {
		return get_type(country_metadata, 7);
	}
	
	function get_type_voip(country_metadata) {
		return get_type(country_metadata, 8);
	}
	
	function get_type_shared_cost(country_metadata) {
		return get_type(country_metadata, 9);
	}
	
	function get_country_phone_code(country, country_metadata) {
		return get_phone_code(country_metadata[country]);
	}
	//# sourceMappingURL=metadata.js.map

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.DIGIT_MAPPINGS = exports.VALID_PUNCTUATION = exports.VALID_DIGITS = exports.PLUS_CHARS = undefined;
	
	var _extends2 = __webpack_require__(133);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _slicedToArray2 = __webpack_require__(415);
	
	var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);
	
	var _getIterator2 = __webpack_require__(66);
	
	var _getIterator3 = _interopRequireDefault(_getIterator2);
	
	exports.default = parse;
	exports.normalize = normalize;
	exports.replace_characters = replace_characters;
	exports.is_viable_phone_number = is_viable_phone_number;
	exports.extract_formatted_phone_number = extract_formatted_phone_number;
	exports.parse_phone_number = parse_phone_number;
	exports.parse_phone_number_and_country_phone_code = parse_phone_number_and_country_phone_code;
	exports.strip_national_prefix = strip_national_prefix;
	exports.find_country_code = find_country_code;
	
	var _common = __webpack_require__(73);
	
	var _metadata = __webpack_require__(41);
	
	var _format = __webpack_require__(98);
	
	var _types = __webpack_require__(99);
	
	var _types2 = _interopRequireDefault(_types);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// The maximum length of the country calling code.
	// This is a port of Google Android `libphonenumber`'s
	// `phonenumberutil.js` of 17th November, 2016.
	//
	// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js
	
	var MAX_LENGTH_COUNTRY_CODE = 3;
	
	// The minimum length of the national significant number.
	var MIN_LENGTH_FOR_NSN = 2;
	
	// The ITU says the maximum length should be 15,
	// but one can find longer numbers in Germany.
	var MAX_LENGTH_FOR_NSN = 17;
	
	// We don't allow input strings for parsing to be longer than 250 chars.
	// This prevents malicious input from consuming CPU.
	var MAX_INPUT_STRING_LENGTH = 250;
	
	var PLUS_CHARS = exports.PLUS_CHARS = '+\uFF0B';
	
	// Digits accepted in phone numbers
	// (ascii, fullwidth, arabic-indic, and eastern arabic digits).
	var VALID_DIGITS = exports.VALID_DIGITS = '0-9\uFF10-\uFF19\u0660-\u0669\u06F0-\u06F9';
	
	// `DASHES` will be right after the opening square bracket of the "character class"
	var DASHES = '-\u2010-\u2015\u2212\u30FC\uFF0D';
	var SLASHES = '\uFF0F/';
	var DOTS = '\uFF0E.';
	var WHITESPACE = ' \xA0\xAD\u200B\u2060\u3000';
	var BRACKETS = '()\uFF08\uFF09\uFF3B\uFF3D\\[\\]';
	var TILDES = '~\u2053\u223C\uFF5E';
	
	// Regular expression of acceptable punctuation found in phone numbers. This
	// excludes punctuation found as a leading character only. This consists of dash
	// characters, white space characters, full stops, slashes, square brackets,
	// parentheses and tildes. Full-width variants are also present.
	var VALID_PUNCTUATION = exports.VALID_PUNCTUATION = '' + DASHES + SLASHES + DOTS + WHITESPACE + BRACKETS + TILDES;
	
	// Pattern to capture digits used in an extension.
	// Places a maximum length of '7' for an extension.
	var CAPTURING_EXTN_DIGITS = '([' + VALID_DIGITS + ']{1,7})';
	
	// The RFC 3966 format for extensions.
	var RFC3966_EXTN_PREFIX = ';ext=';
	
	/**
	 * Regexp of all possible ways to write extensions, for use when parsing. This
	 * will be run as a case-insensitive regexp match. Wide character versions are
	 * also provided after each ASCII version. There are three regular expressions
	 * here. The first covers RFC 3966 format, where the extension is added using
	 * ';ext='. The second more generic one starts with optional white space and
	 * ends with an optional full stop (.), followed by zero or more spaces/tabs
	 * /commas and then the numbers themselves. The other one covers the special
	 * case of American numbers where the extension is written with a hash at the
	 * end, such as '- 503#'. Note that the only capturing groups should be around
	 * the digits that you want to capture as part of the extension, or else parsing
	 * will fail! We allow two options for representing the accented o - the
	 * character itself, and one in the unicode decomposed form with the combining
	 * acute accent.
	 */
	var EXTN_PATTERNS_FOR_PARSING = RFC3966_EXTN_PREFIX + CAPTURING_EXTN_DIGITS + '|' + '[ \xA0\\t,]*' + '(?:e?xt(?:ensi(?:o\u0301?|\xF3))?n?|\uFF45?\uFF58\uFF54\uFF4E?|' + '[;,x\uFF58#\uFF03~\uFF5E]|int|anexo|\uFF49\uFF4E\uFF54)' + '[:\\.\uFF0E]?[ \xA0\\t,-]*' + CAPTURING_EXTN_DIGITS + '#?|' + '[- ]+([' + VALID_DIGITS + ']{1,5})#';
	
	// Regexp of all known extension prefixes used by different regions followed by
	// 1 or more valid digits, for use when parsing.
	var EXTN_PATTERN = new RegExp('(?:' + EXTN_PATTERNS_FOR_PARSING + ')$', 'i');
	
	//  Regular expression of viable phone numbers. This is location independent.
	//  Checks we have at least three leading digits, and only valid punctuation,
	//  alpha characters and digits in the phone number. Does not include extension
	//  data. The symbol 'x' is allowed here as valid punctuation since it is often
	//  used as a placeholder for carrier codes, for example in Brazilian phone
	//  numbers. We also allow multiple '+' characters at the start.
	//
	//  Corresponds to the following:
	//  [digits]{minLengthNsn}|
	//  plus_sign*
	//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*
	//
	//  The first reg-ex is to allow short numbers (two digits long) to be parsed if
	//  they are entered as "15" etc, but only if there is no punctuation in them.
	//  The second expression restricts the number of digits to three or more, but
	//  then allows them to be in international form, and to have alpha-characters
	//  and punctuation. We split up the two reg-exes here and combine them when
	//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it
	//  with ^ and append $ to each branch.
	//
	//  "Note VALID_PUNCTUATION starts with a -,
	//   so must be the first in the range" (c) Google devs.
	//  (wtf did they mean by saying that; probably nothing)
	//
	var MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}';
	//
	// And this is the second reg-exp:
	// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)
	//
	var VALID_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){3,}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*';
	
	// The combined regular expression for valid phone numbers:
	//
	var VALID_PHONE_NUMBER_PATTERN = new RegExp(
	// Either a short two-digit-only phone number
	'^' + MIN_LENGTH_PHONE_NUMBER_PATTERN + '$' + '|' +
	// Or a longer fully parsed phone number (min 3 characters)
	'^' + VALID_PHONE_NUMBER +
	// Phone number extensions
	'(?:' + EXTN_PATTERNS_FOR_PARSING + ')?' + '$', 'i');
	
	// This consists of the plus symbol, digits, and arabic-indic digits.
	var PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']');
	
	// Regular expression of trailing characters that we want to remove.
	var AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + ']+$');
	
	var LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+');
	
	// These mappings map a character (key) to a specific digit that should
	// replace it for normalization purposes. Non-European digits that
	// may be used in phone numbers are mapped to a European equivalent.
	//
	// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.
	//
	var DIGIT_MAPPINGS = exports.DIGIT_MAPPINGS = {
		'0': '0',
		'1': '1',
		'2': '2',
		'3': '3',
		'4': '4',
		'5': '5',
		'6': '6',
		'7': '7',
		'8': '8',
		'9': '9',
		'\uFF10': '0', // Fullwidth digit 0
		'\uFF11': '1', // Fullwidth digit 1
		'\uFF12': '2', // Fullwidth digit 2
		'\uFF13': '3', // Fullwidth digit 3
		'\uFF14': '4', // Fullwidth digit 4
		'\uFF15': '5', // Fullwidth digit 5
		'\uFF16': '6', // Fullwidth digit 6
		'\uFF17': '7', // Fullwidth digit 7
		'\uFF18': '8', // Fullwidth digit 8
		'\uFF19': '9', // Fullwidth digit 9
		'\u0660': '0', // Arabic-indic digit 0
		'\u0661': '1', // Arabic-indic digit 1
		'\u0662': '2', // Arabic-indic digit 2
		'\u0663': '3', // Arabic-indic digit 3
		'\u0664': '4', // Arabic-indic digit 4
		'\u0665': '5', // Arabic-indic digit 5
		'\u0666': '6', // Arabic-indic digit 6
		'\u0667': '7', // Arabic-indic digit 7
		'\u0668': '8', // Arabic-indic digit 8
		'\u0669': '9', // Arabic-indic digit 9
		'\u06F0': '0', // Eastern-Arabic digit 0
		'\u06F1': '1', // Eastern-Arabic digit 1
		'\u06F2': '2', // Eastern-Arabic digit 2
		'\u06F3': '3', // Eastern-Arabic digit 3
		'\u06F4': '4', // Eastern-Arabic digit 4
		'\u06F5': '5', // Eastern-Arabic digit 5
		'\u06F6': '6', // Eastern-Arabic digit 6
		'\u06F7': '7', // Eastern-Arabic digit 7
		'\u06F8': '8', // Eastern-Arabic digit 8
		'\u06F9': '9' // Eastern-Arabic digit 9
	};
	
	var default_options = {
		country: {}
	
		// `options`:
		//  {
		//    country:
		//    {
		//      restrict - (a two-letter country code)
		//                 the phone number must be in this country
		//
		//      default - (a two-letter country code)
		//                default country to use for phone number parsing and validation
		//                (if no country code could be derived from the phone number)
		//    }
		//  }
		//
		// Returns `{ country, number }`
		//
		// Example use cases:
		//
		// ```js
		// parse('8 (800) 555-35-35', 'RU')
		// parse('8 (800) 555-35-35', 'RU', metadata)
		// parse('8 (800) 555-35-35', { country: { default: 'RU' } })
		// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)
		// parse('+7 800 555 35 35')
		// parse('+7 800 555 35 35', metadata)
		// ```
		//
	};function parse(arg_1, arg_2, arg_3) {
		var _sort_out_arguments = sort_out_arguments(arg_1, arg_2, arg_3),
		    text = _sort_out_arguments.text,
		    options = _sort_out_arguments.options,
		    metadata = _sort_out_arguments.metadata;
	
		// Validate country codes
	
		// Validate `default` country
	
	
		if (options.country.default && !metadata.countries[options.country.default]) {
			throw new Error('Unknown country code: ' + options.country.default);
		}
	
		// Validate `restrict` country
		if (options.country.restrict && !metadata.countries[options.country.restrict]) {
			throw new Error('Unknown country code: ' + options.country.restrict);
		}
	
		// Parse the phone number
	
		var formatted_phone_number = void 0;
		var extension = void 0;
	
		// Parse RFC 3966 phone number URI.
		if (text && text.indexOf('tel:') === 0) {
			var _iteratorNormalCompletion = true;
			var _didIteratorError = false;
			var _iteratorError = undefined;
	
			try {
				for (var _iterator = (0, _getIterator3.default)(text.split(';')), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
					var part = _step.value;
	
					var _part$split = part.split(':'),
					    _part$split2 = (0, _slicedToArray3.default)(_part$split, 2),
					    name = _part$split2[0],
					    value = _part$split2[1];
	
					switch (name) {
						case 'tel':
							formatted_phone_number = value;
							break;
						case 'ext':
							extension = value;
							break;
						case 'phone-context':
							// Domain contexts are ignored.
							if (value[0] === '+') {
								formatted_phone_number = value + formatted_phone_number;
							}
							break;
					}
				}
			} catch (err) {
				_didIteratorError = true;
				_iteratorError = err;
			} finally {
				try {
					if (!_iteratorNormalCompletion && _iterator.return) {
						_iterator.return();
					}
				} finally {
					if (_didIteratorError) {
						throw _iteratorError;
					}
				}
			}
		} else {
			formatted_phone_number = extract_formatted_phone_number(text);
		}
	
		// If the phone number is not viable, then abort.
		if (!is_viable_phone_number(formatted_phone_number)) {
			return {};
		}
	
		// Attempt to parse extension first, since it doesn't require region-specific
		// data and we want to have the non-normalised number here.
		var with_extension_stripped = strip_extension(formatted_phone_number);
	
		if (with_extension_stripped.extension) {
			formatted_phone_number = with_extension_stripped.number, extension = with_extension_stripped.extension;
		}
	
		var _parse_phone_number_a = parse_phone_number_and_country_phone_code(formatted_phone_number, metadata),
		    country_phone_code = _parse_phone_number_a.country_phone_code,
		    number = _parse_phone_number_a.number;
	
		// Maybe invalid country phone code encountered
	
	
		if (!number) {
			return {};
		}
	
		var country = void 0;
		var country_metadata = void 0;
	
		// Whether the phone number is formatted as an international phone number
		var is_international = false;
	
		if (country_phone_code) {
			is_international = true;
	
			// Check country restriction
			if (options.country.restrict && country_phone_code !== (0, _metadata.get_phone_code)(metadata.countries[options.country.restrict])) {
				return {};
			}
	
			// Formatting information for regions which share
			// a country calling code is contained by only one region
			// for performance reasons. For example, for NANPA region
			// ("North American Numbering Plan Administration",
			//  which includes USA, Canada, Cayman Islands, Bahamas, etc)
			// it will be contained in the metadata for `US`.
			country_metadata = (0, _metadata.get_metadata_by_country_phone_code)(country_phone_code, metadata);
	
			// `country` will be set later,
			// because, for example, for NANPA countries
			// there are several countries corresponding
			// to the same `1` country phone code.
			// Therefore, to reliably determine the exact country,
			// national (significant) number should be parsed first.
		} else if (options.country.restrict || options.country.default) {
			country = options.country.restrict || options.country.default;
			country_metadata = metadata.countries[country];
	
			number = normalize(formatted_phone_number);
		}
	
		if (!country_metadata) {
			return {};
		}
	
		var national_number = number;
	
		// Only strip national prefixes for non-international phone numbers
		// because national prefixes can't be present in international phone numbers.
		// Otherwise, while forgiving, it would parse a NANPA number `+1 1877 215 5230`
		// first to `1877 215 5230` and then, stripping the leading `1`, to `877 215 5230`,
		// and then it would assume that's a valid number which it isn't.
		// So no forgiveness for grandmas here.
		// The issue asking for this fix:
		// https://github.com/catamphetamine/libphonenumber-js/issues/159
		if (!is_international) {
			national_number = strip_national_prefix(number, country_metadata);
		}
	
		var did_have_national_prefix = national_number !== number;
	
		// https://github.com/catamphetamine/libphonenumber-js/issues/67
		// if (!is_international && !did_have_national_prefix &&
		// 		is_national_prefix_required(national_number, country_metadata))
		// {
		// 	return {}
		// }
	
		// Sometimes there are several countries
		// corresponding to the same country phone code
		// (e.g. NANPA countries all having `1` country phone code).
		// Therefore, to reliably determine the exact country,
		// national (significant) number should have been parsed first.
		//
		if (!country) {
			// When `metadata.json` is generated, all "ambiguous" country phone codes
			// get their countries populated with the full set of
			// "phone number type" regular expressions.
			country = find_country_code(country_phone_code, national_number, metadata);
	
			// Just in case there appears to be a bug in Google's metadata
			// and the exact country could not be extracted from the phone number.
			/* istanbul ignore if */
			if (!country) {
				return {};
			}
	
			// Update metadata to be for this specific country
			country_metadata = metadata.countries[country];
		}
	
		// Validate national (significant) number length.
		//
		// A sidenote:
		//
		// They say that sometimes national (significant) numbers
		// can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).
		// https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36
		// Such numbers will just be discarded.
		//
		if (national_number.length > MAX_LENGTH_FOR_NSN) {
			return {};
		}
	
		// National number pattern is different for each country,
		// even for those ones which are part of the "NANPA" group.
		var national_number_rule = new RegExp((0, _metadata.get_national_number_pattern)(country_metadata));
	
		// Check if national phone number pattern matches the number
		if (!(0, _common.matches_entirely)(national_number, national_number_rule)) {
			return {};
		}
	
		var result = {
			country: country,
			phone: national_number
		};
	
		if (extension) {
			result.ext = extension;
		}
	
		return result;
	}
	
	// Normalizes a string of characters representing a phone number.
	// This converts wide-ascii and arabic-indic numerals to European numerals,
	// and strips punctuation and alpha characters.
	//
	// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.
	//
	function normalize(number) {
		return replace_characters(number, DIGIT_MAPPINGS);
	}
	
	// For any character not being part of `replacements`
	// it is removed from the phone number.
	function replace_characters(text, replacements) {
		var replaced = '';
	
		var _iteratorNormalCompletion2 = true;
		var _didIteratorError2 = false;
		var _iteratorError2 = undefined;
	
		try {
			for (var _iterator2 = (0, _getIterator3.default)(text), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
				var character = _step2.value;
	
				var replacement = replacements[character.toUpperCase()];
	
				if (replacement !== undefined) {
					replaced += replacement;
				}
			}
		} catch (err) {
			_didIteratorError2 = true;
			_iteratorError2 = err;
		} finally {
			try {
				if (!_iteratorNormalCompletion2 && _iterator2.return) {
					_iterator2.return();
				}
			} finally {
				if (_didIteratorError2) {
					throw _iteratorError2;
				}
			}
		}
	
		return replaced;
	}
	
	// Checks to see if the string of characters could possibly be a phone number at
	// all. At the moment, checks to see that the string begins with at least 2
	// digits, ignoring any punctuation commonly found in phone numbers. This method
	// does not require the number to be normalized in advance - but does assume
	// that leading non-number symbols have been removed, such as by the method
	// `extract_possible_number`.
	//
	function is_viable_phone_number(number) {
		return number.length >= MIN_LENGTH_FOR_NSN && (0, _common.matches_entirely)(number, VALID_PHONE_NUMBER_PATTERN);
	}
	
	function extract_formatted_phone_number(text) {
		if (!text || text.length > MAX_INPUT_STRING_LENGTH) {
			return '';
		}
	
		// Attempt to extract a possible number from the string passed in
	
		var starts_at = text.search(PHONE_NUMBER_START_PATTERN);
	
		if (starts_at < 0) {
			return '';
		}
	
		return text
		// Trim everything to the left of the phone number
		.slice(starts_at)
		// Remove trailing non-numerical characters
		.replace(AFTER_PHONE_NUMBER_END_PATTERN, '');
	}
	
	// Parses a formatted phone number.
	function parse_phone_number(number) {
		if (!number) {
			return '';
		}
	
		var is_international = LEADING_PLUS_CHARS_PATTERN.test(number);
	
		// Remove non-digits
		// (and strip the possible leading '+')
		number = normalize(number);
	
		if (is_international) {
			return '+' + number;
		}
	
		return number;
	}
	
	// Parses a formatted phone number
	// and returns `{ country_phone_code, number }`
	// where `number` is the national (significant) phone number.
	//
	// (aka `maybeExtractCountryPhoneCode`)
	//
	function parse_phone_number_and_country_phone_code(number, metadata) {
		number = parse_phone_number(number);
	
		if (!number) {
			return {};
		}
	
		// If this is not an international phone number,
		// then don't extract country phone code.
		if (number[0] !== '+') {
			return { number: number };
		}
	
		// Strip the leading '+' sign
		number = number.slice(1);
	
		// Fast abortion: country codes do not begin with a '0'
		if (number[0] === '0') {
			return {};
		}
	
		// The thing with country phone codes
		// is that they are orthogonal to each other
		// i.e. there's no such country phone code A
		// for which country phone code B exists
		// where B starts with A.
		// Therefore, while scanning digits,
		// if a valid country code is found,
		// that means that it is the country code.
		//
		var i = 1;
		while (i <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {
			var country_phone_code = number.slice(0, i);
	
			if (metadata.country_phone_code_to_countries[country_phone_code]) {
				return { country_phone_code: country_phone_code, number: number.slice(i) };
			}
	
			i++;
		}
	
		return {};
	}
	
	// Strips any national prefix (such as 0, 1) present in the number provided
	function strip_national_prefix(number, country_metadata) {
		var national_prefix_for_parsing = (0, _metadata.get_national_prefix_for_parsing)(country_metadata);
	
		if (!number || !national_prefix_for_parsing) {
			return number;
		}
	
		// Attempt to parse the first digits as a national prefix
		var national_prefix_pattern = new RegExp('^(?:' + national_prefix_for_parsing + ')');
		var national_prefix_matcher = national_prefix_pattern.exec(number);
	
		// If no national prefix is present in the phone number,
		// but if the national prefix is optional for this country,
		// then consider this phone number valid.
		//
		// Google's reference `libphonenumber` implementation
		// wouldn't recognize such phone numbers as valid,
		// but I think it would perfectly make sense
		// to consider such phone numbers as valid
		// because if a national phone number was originally
		// formatted without the national prefix
		// then it must be parseable back into the original national number.
		// In other words, `parse(format(number))`
		// must always be equal to `number`.
		//
		if (!national_prefix_matcher) {
			return number;
		}
	
		var national_significant_number = void 0;
	
		// `national_prefix_for_parsing` capturing groups
		// (used only for really messy cases: Argentina, Brazil, Mexico, Somalia)
		var any_groups_were_captured = national_prefix_matcher[national_prefix_matcher.length - 1];
		var national_prefix_transform_rule = (0, _metadata.get_national_prefix_transform_rule)(country_metadata);
	
		// If the national number tranformation is needed then do it
		if (national_prefix_transform_rule && any_groups_were_captured) {
			national_significant_number = number.replace(national_prefix_pattern, national_prefix_transform_rule);
		}
		// Else, no transformation is necessary,
		// and just strip the national prefix.
		else {
				national_significant_number = number.slice(national_prefix_matcher[0].length);
			}
	
		// Verify the parsed national (significant) number for this country
		var national_number_rule = new RegExp((0, _metadata.get_national_number_pattern)(country_metadata));
	
		// If the original number (before stripping national prefix) was viable,
		// and the resultant number is not, then prefer the original phone number.
		// This is because for some countries (e.g. Russia) the same digit could be both
		// a national prefix and a leading digit of a valid national phone number,
		// like `8` is the national prefix for Russia and both
		// `8 800 555 35 35` and `800 555 35 35` are valid numbers.
		if ((0, _common.matches_entirely)(number, national_number_rule) && !(0, _common.matches_entirely)(national_significant_number, national_number_rule)) {
			return number;
		}
	
		// Return the parsed national (significant) number
		return national_significant_number;
	}
	
	function find_country_code(country_phone_code, national_phone_number, metadata) {
		// Is always non-empty, because `country_phone_code` is always valid
		var possible_countries = metadata.country_phone_code_to_countries[country_phone_code];
	
		// If there's just one country corresponding to the country code,
		// then just return it, without further phone number digits validation.
		if (possible_countries.length === 1) {
			return possible_countries[0];
		}
	
		var _iteratorNormalCompletion3 = true;
		var _didIteratorError3 = false;
		var _iteratorError3 = undefined;
	
		try {
			for (var _iterator3 = (0, _getIterator3.default)(possible_countries), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
				var country_code = _step3.value;
	
				var country = metadata.countries[country_code];
	
				// Leading digits check would be the simplest one
				if ((0, _metadata.get_leading_digits)(country)) {
					if (national_phone_number && national_phone_number.search((0, _metadata.get_leading_digits)(country)) === 0) {
						return country_code;
					}
				}
				// Else perform full validation with all of those bulky
				// fixed-line/mobile/etc regular expressions.
				else if ((0, _types2.default)({ phone: national_phone_number, country: country_code }, metadata)) {
						return country_code;
					}
			}
		} catch (err) {
			_didIteratorError3 = true;
			_iteratorError3 = err;
		} finally {
			try {
				if (!_iteratorNormalCompletion3 && _iterator3.return) {
					_iterator3.return();
				}
			} finally {
				if (_didIteratorError3) {
					throw _iteratorError3;
				}
			}
		}
	}
	
	// export function is_national_prefix_required(national_number, country_metadata)
	// {
	// 	const format = choose_format_for_number(get_formats(country_metadata), national_number)
	//
	// 	if (format)
	// 	{
	// 		return get_format_national_prefix_is_mandatory_when_formatting(format, country_metadata)
	// 	}
	// }
	
	// Sort out arguments
	function sort_out_arguments(arg_1, arg_2, arg_3) {
		var text = void 0;
		var options = void 0;
		var metadata = void 0;
	
		// Normalize numerical `value`.
		// https://github.com/catamphetamine/libphonenumber-js/issues/142
		// `parse(88005553535, ...)`.
		if (typeof arg_1 === 'number') {
			arg_1 = String(arg_1);
		}
	
		// If the phone number is passed as a string.
		// `parse('88005553535', ...)`.
		if (typeof arg_1 === 'string') {
			text = arg_1;
		}
	
		// If "resrict country" argument is being passed
		// then convert it to an `options` object.
		// `parse('88005553535', 'RU', [options], metadata)`.
		if (typeof arg_2 === 'string') {
			options = { country: { restrict: arg_2 } };
			metadata = arg_3;
		}
		// No "resrict country" argument is being passed.
		// International phone number is passed.
		// `parse('+78005553535', [options], metadata)`.
		else {
				if (arg_3) {
					options = arg_2;
					metadata = arg_3;
				} else {
					metadata = arg_2;
				}
			}
	
		// Metadata is required.
		if (!metadata || !metadata.countries) {
			throw new Error('Metadata is required');
		}
	
		// Apply default options.
		if (options) {
			options = (0, _extends3.default)({}, default_options, options);
		} else {
			options = default_options;
		}
	
		return { text: text, options: options, metadata: metadata };
	}
	
	// Strips any extension (as in, the part of the number dialled after the call is
	// connected, usually indicated with extn, ext, x or similar) from the end of
	// the number, and returns it.
	function strip_extension(number) {
		var start = number.search(EXTN_PATTERN);
		if (start < 0) {
			return {};
		}
	
		// If we find a potential extension, and the number preceding this is a viable
		// number, we assume it is an extension.
		var number_without_extension = number.slice(0, start);
		/* istanbul ignore if - seems a bit of a redundant check */
		if (!is_viable_phone_number(number_without_extension)) {
			return {};
		}
	
		var matches = number.match(EXTN_PATTERN);
		var i = 1;
		while (i < matches.length) {
			if (matches[i] != null && matches[i].length > 0) {
				return {
					number: number_without_extension,
					extension: matches[i]
				};
			}
			i++;
		}
	}
	//# sourceMappingURL=parse.js.map

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMNamespaces = __webpack_require__(103);
	var setInnerHTML = __webpack_require__(79);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(111);
	var setTextContent = __webpack_require__(300);
	
	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
	
	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}
	
	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});
	
	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}
	
	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}
	
	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}
	
	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}
	
	function toString() {
	  return this.node.nodeName;
	}
	
	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}
	
	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;
	
	module.exports = DOMLazyTree;

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(8);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
	
	      if (false) {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (false) {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	
	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',
	
	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   *
	   * autofocus is predefined, because adding it to the property whitelist
	   * causes unintended side effects.
	   *
	   * @type {Object}
	   */
	  getPossibleStandardName:  false ? { autofocus: 'autoFocus' } : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactRef = __webpack_require__(580);
	var ReactInstrumentation = __webpack_require__(25);
	
	var warning = __webpack_require__(11);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
	  ) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },
	
	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	       false ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactReconciler;

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.compilePattern = compilePattern;
	exports.matchPattern = matchPattern;
	exports.getParamNames = getParamNames;
	exports.getParams = getParams;
	exports.formatPattern = formatPattern;
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function escapeRegExp(string) {
	  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
	}
	
	function _compilePattern(pattern) {
	  var regexpSource = '';
	  var paramNames = [];
	  var tokens = [];
	
	  var match = void 0,
	      lastIndex = 0,
	      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)|\\\(|\\\)/g;
	  while (match = matcher.exec(pattern)) {
	    if (match.index !== lastIndex) {
	      tokens.push(pattern.slice(lastIndex, match.index));
	      regexpSource += escapeRegExp(pattern.slice(lastIndex, match.index));
	    }
	
	    if (match[1]) {
	      regexpSource += '([^/]+)';
	      paramNames.push(match[1]);
	    } else if (match[0] === '**') {
	      regexpSource += '(.*)';
	      paramNames.push('splat');
	    } else if (match[0] === '*') {
	      regexpSource += '(.*?)';
	      paramNames.push('splat');
	    } else if (match[0] === '(') {
	      regexpSource += '(?:';
	    } else if (match[0] === ')') {
	      regexpSource += ')?';
	    } else if (match[0] === '\\(') {
	      regexpSource += '\\(';
	    } else if (match[0] === '\\)') {
	      regexpSource += '\\)';
	    }
	
	    tokens.push(match[0]);
	
	    lastIndex = matcher.lastIndex;
	  }
	
	  if (lastIndex !== pattern.length) {
	    tokens.push(pattern.slice(lastIndex, pattern.length));
	    regexpSource += escapeRegExp(pattern.slice(lastIndex, pattern.length));
	  }
	
	  return {
	    pattern: pattern,
	    regexpSource: regexpSource,
	    paramNames: paramNames,
	    tokens: tokens
	  };
	}
	
	var CompiledPatternsCache = Object.create(null);
	
	function compilePattern(pattern) {
	  if (!CompiledPatternsCache[pattern]) CompiledPatternsCache[pattern] = _compilePattern(pattern);
	
	  return CompiledPatternsCache[pattern];
	}
	
	/**
	 * Attempts to match a pattern on the given pathname. Patterns may use
	 * the following special characters:
	 *
	 * - :paramName     Matches a URL segment up to the next /, ?, or #. The
	 *                  captured string is considered a "param"
	 * - ()             Wraps a segment of the URL that is optional
	 * - *              Consumes (non-greedy) all characters up to the next
	 *                  character in the pattern, or to the end of the URL if
	 *                  there is none
	 * - **             Consumes (greedy) all characters up to the next character
	 *                  in the pattern, or to the end of the URL if there is none
	 *
	 *  The function calls callback(error, matched) when finished.
	 * The return value is an object with the following properties:
	 *
	 * - remainingPathname
	 * - paramNames
	 * - paramValues
	 */
	function matchPattern(pattern, pathname) {
	  // Ensure pattern starts with leading slash for consistency with pathname.
	  if (pattern.charAt(0) !== '/') {
	    pattern = '/' + pattern;
	  }
	
	  var _compilePattern2 = compilePattern(pattern),
	      regexpSource = _compilePattern2.regexpSource,
	      paramNames = _compilePattern2.paramNames,
	      tokens = _compilePattern2.tokens;
	
	  if (pattern.charAt(pattern.length - 1) !== '/') {
	    regexpSource += '/?'; // Allow optional path separator at end.
	  }
	
	  // Special-case patterns like '*' for catch-all routes.
	  if (tokens[tokens.length - 1] === '*') {
	    regexpSource += '$';
	  }
	
	  var match = pathname.match(new RegExp('^' + regexpSource, 'i'));
	  if (match == null) {
	    return null;
	  }
	
	  var matchedPath = match[0];
	  var remainingPathname = pathname.substr(matchedPath.length);
	
	  if (remainingPathname) {
	    // Require that the match ends at a path separator, if we didn't match
	    // the full path, so any remaining pathname is a new path segment.
	    if (matchedPath.charAt(matchedPath.length - 1) !== '/') {
	      return null;
	    }
	
	    // If there is a remaining pathname, treat the path separator as part of
	    // the remaining pathname for properly continuing the match.
	    remainingPathname = '/' + remainingPathname;
	  }
	
	  return {
	    remainingPathname: remainingPathname,
	    paramNames: paramNames,
	    paramValues: match.slice(1).map(function (v) {
	      return v && decodeURIComponent(v);
	    })
	  };
	}
	
	function getParamNames(pattern) {
	  return compilePattern(pattern).paramNames;
	}
	
	function getParams(pattern, pathname) {
	  var match = matchPattern(pattern, pathname);
	  if (!match) {
	    return null;
	  }
	
	  var paramNames = match.paramNames,
	      paramValues = match.paramValues;
	
	  var params = {};
	
	  paramNames.forEach(function (paramName, index) {
	    params[paramName] = paramValues[index];
	  });
	
	  return params;
	}
	
	/**
	 * Returns a version of the given pattern with params interpolated. Throws
	 * if there is a dynamic segment of the pattern for which there is no param.
	 */
	function formatPattern(pattern, params) {
	  params = params || {};
	
	  var _compilePattern3 = compilePattern(pattern),
	      tokens = _compilePattern3.tokens;
	
	  var parenCount = 0,
	      pathname = '',
	      splatIndex = 0,
	      parenHistory = [];
	
	  var token = void 0,
	      paramName = void 0,
	      paramValue = void 0;
	  for (var i = 0, len = tokens.length; i < len; ++i) {
	    token = tokens[i];
	
	    if (token === '*' || token === '**') {
	      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;
	
	      !(paramValue != null || parenCount > 0) ?  false ? (0, _invariant2.default)(false, 'Missing splat #%s for path "%s"', splatIndex, pattern) : (0, _invariant2.default)(false) : void 0;
	
	      if (paramValue != null) pathname += encodeURI(paramValue);
	    } else if (token === '(') {
	      parenHistory[parenCount] = '';
	      parenCount += 1;
	    } else if (token === ')') {
	      var parenText = parenHistory.pop();
	      parenCount -= 1;
	
	      if (parenCount) parenHistory[parenCount - 1] += parenText;else pathname += parenText;
	    } else if (token === '\\(') {
	      pathname += '(';
	    } else if (token === '\\)') {
	      pathname += ')';
	    } else if (token.charAt(0) === ':') {
	      paramName = token.substring(1);
	      paramValue = params[paramName];
	
	      !(paramValue != null || parenCount > 0) ?  false ? (0, _invariant2.default)(false, 'Missing "%s" parameter for path "%s"', paramName, pattern) : (0, _invariant2.default)(false) : void 0;
	
	      if (paramValue == null) {
	        if (parenCount) {
	          parenHistory[parenCount - 1] = '';
	
	          var curTokenIdx = tokens.indexOf(token);
	          var tokensSubset = tokens.slice(curTokenIdx, tokens.length);
	          var nextParenIdx = -1;
	
	          for (var _i = 0; _i < tokensSubset.length; _i++) {
	            if (tokensSubset[_i] == ')') {
	              nextParenIdx = _i;
	              break;
	            }
	          }
	
	          !(nextParenIdx > 0) ?  false ? (0, _invariant2.default)(false, 'Path "%s" is missing end paren at segment "%s"', pattern, tokensSubset.join('')) : (0, _invariant2.default)(false) : void 0;
	
	          // jump to ending paren
	          i = curTokenIdx + nextParenIdx - 1;
	        }
	      } else if (parenCount) parenHistory[parenCount - 1] += encodeURIComponent(paramValue);else pathname += encodeURIComponent(paramValue);
	    } else {
	      if (parenCount) parenHistory[parenCount - 1] += token;else pathname += token;
	    }
	  }
	
	  !(parenCount <= 0) ?  false ? (0, _invariant2.default)(false, 'Path "%s" is missing end paren', pattern) : (0, _invariant2.default)(false) : void 0;
	
	  return pathname.replace(/\/+/g, '/');
	}

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = routerWarning;
	exports._resetWarned = _resetWarned;
	
	var _warning = __webpack_require__(33);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var warned = {};
	
	function routerWarning(falseToWarn, message) {
	  // Only issue deprecation warnings once.
	  if (message.indexOf('deprecated') !== -1) {
	    if (warned[message]) {
	      return;
	    }
	
	    warned[message] = true;
	  }
	
	  message = '[react-router] ' + message;
	
	  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    args[_key - 2] = arguments[_key];
	  }
	
	  _warning2.default.apply(undefined, [falseToWarn, message].concat(args));
	}
	
	function _resetWarned() {
	  warned = {};
	}

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(14);
	
	var ReactChildren = __webpack_require__(645);
	var ReactComponent = __webpack_require__(123);
	var ReactPureComponent = __webpack_require__(650);
	var ReactClass = __webpack_require__(646);
	var ReactDOMFactories = __webpack_require__(647);
	var ReactElement = __webpack_require__(49);
	var ReactPropTypes = __webpack_require__(648);
	var ReactVersion = __webpack_require__(651);
	
	var onlyChild = __webpack_require__(652);
	var warning = __webpack_require__(11);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (false) {
	  var ReactElementValidator = require('./ReactElementValidator');
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var __spread = _assign;
	
	if (false) {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}
	
	var React = {
	
	  // Modern
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  // Classic
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	
	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};
	
	module.exports = React;

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(14);
	
	var ReactCurrentOwner = __webpack_require__(28);
	
	var warning = __webpack_require__(11);
	var canDefineProperty = __webpack_require__(322);
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	var REACT_ELEMENT_TYPE = __webpack_require__(320);
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	var specialPropKeyWarningShown, specialPropRefWarningShown;
	
	function hasValidRef(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}
	
	function hasValidKey(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}
	
	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	       false ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}
	
	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	       false ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}
	
	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };
	
	  if (false) {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }
	
	  return element;
	};
	
	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    if (false) {
	      if (Object.freeze) {
	        Object.freeze(childArray);
	      }
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (false) {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = _assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	module.exports = ReactElement;

/***/ },
/* 50 */
12,
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.getUserStatus = exports.getEncryptionParams = exports.validateUsername = exports.validateTIN = exports.getBankList = exports.getTenorTableData = exports.getPendingApplications = exports.checkPendingApplication = exports.postFullApplication = exports.getMyInfoDetails = exports.postPartialApplication = exports.getAddress = exports.getOTP = exports.postOTP = exports.fileUploadUrl = undefined;
	
	var _regenerator = __webpack_require__(407);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _path = __webpack_require__(4);
	
	var _immutable = __webpack_require__(13);
	
	var _formDataConfig = __webpack_require__(131);
	
	var _utils = __webpack_require__(9);
	
	var _inputsConstant = __webpack_require__(10);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } /* global FORMS_CNFG_GLBL, UOBApplet */
	
	
	var baseURL = FORMS_CNFG_GLBL.WS_PATH;
	var serverURL = FORMS_CNFG_GLBL.SERVER_PATH;
	
	var validateOtpURL = function validateOtpURL() {
	    return baseURL + "/sg/v1/access/verifyotp";
	};
	var generateOtpURL = function generateOtpURL() {
	    return baseURL + "/sg/v1/access/sendotp";
	};
	var getAddressURL = function getAddressURL(postalcode) {
	    return serverURL + "/sg/v1/referencedata/address?postalcode=" + postalcode;
	};
	var postPartialApplicationURL = function postPartialApplicationURL() {
	    return baseURL + "/dosubmitpartialform";
	};
	var postInitialApplicationURL = function postInitialApplicationURL() {
	    return baseURL + "/initiate";
	};
	var submitApplicationURL = function submitApplicationURL() {
	    return baseURL + "/dosubmitform";
	};
	var getMyinfoDetailURL = function getMyinfoDetailURL() {
	    return baseURL + "/getmyinfodetail/index.json";
	};
	// const checkPendingApplicationURL = () => `${baseURL}/checkpendingapplications`;
	var getPendingApplicationURL = function getPendingApplicationURL() {
	    return baseURL + "/getpendingapplications";
	};
	var getTenorDataTableURL = function getTenorDataTableURL(product, type) {
	    return serverURL + "/sg/v1/referencedata/promotions?product=" + product + "&type=" + type;
	};
	var getBankListURL = function getBankListURL() {
	    return serverURL + "/sg/v1/referencedata/banks";
	};
	var tinValidateURL = function tinValidateURL(country, tinId) {
	    return serverURL + "/sg/v1/validate/tin/" + country + "/" + tinId;
	};
	var validateUsernameURL = function validateUsernameURL(username) {
	    return baseURL + "/sg/v1/validate/pib/username/" + username;
	};
	var getUserStatusURL = function getUserStatusURL() {
	    return baseURL + "/sg/v1/products/start";
	};
	var getEncryptionParamsURL = function getEncryptionParamsURL() {
	    return serverURL + "/sg/v1/access/publickeyandrandom";
	};
	var fileUploadUrl = exports.fileUploadUrl = function fileUploadUrl() {
	    return baseURL + "/fileUpload";
	};
	
	var headers = {
	    Accept: "application/json",
	    "Content-Type": "application/json"
	    // Cache: "no-cache"
	};
	
	var SUCCESS = "00000";
	var TIME_OUT = 90000; // time out 90 seconds
	
	var postInit = function postInit(data) {
	    return { headers: headers, method: "GET", credentials: "same-origin", body: JSON.stringify(data) };
	};
	
	var postOTP = exports.postOTP = function () {
	    var _ref2 = _asyncToGenerator(_regenerator2.default.mark(function _callee(_ref) {
	        var action = _ref.action;
	        var successDispatch = _ref.successDispatch;
	        var errorDispatch = _ref.errorDispatch;
	
	        var query, _ref3, _ref4, error, result;
	
	        return _regenerator2.default.wrap(function _callee$(_context) {
	            while (1) {
	                switch (_context.prev = _context.next) {
	                    case 0:
	                        query = window.fetch(validateOtpURL(), postInit(action.payload)).then(function (res) {
	                            if (res.status === 200) {
	                                return res;
	                            } else if (res.status === 400) {
	                                throw Error("400");
	                            }
	                            throw Error("500");
	                        }).then(function () {
	                            return [null, true];
	                        }).catch(function (err) {
	                            return err.message === "400" ? ["400", null] : ["500", null];
	                        });
	                        _context.next = 3;
	                        return query;
	
	                    case 3:
	                        _ref3 = _context.sent;
	                        _ref4 = _slicedToArray(_ref3, 2);
	                        error = _ref4[0];
	                        result = _ref4[1];
	                        return _context.abrupt("return", error ? errorDispatch(error) : successDispatch(result));
	
	                    case 8:
	                    case "end":
	                        return _context.stop();
	                }
	            }
	        }, _callee, undefined);
	    }));
	
	    return function postOTP(_x) {
	        return _ref2.apply(this, arguments);
	    };
	}();
	
	var getOTP = exports.getOTP = function () {
	    var _ref6 = _asyncToGenerator(_regenerator2.default.mark(function _callee2(_ref5) {
	        var successDispatch = _ref5.successDispatch;
	        var errorDispatch = _ref5.errorDispatch;
	        var getState = _ref5.getState;
	
	        var mobile_number, query, _ref7, _ref8, error, result;
	
	        return _regenerator2.default.wrap(function _callee2$(_context2) {
	            while (1) {
	                switch (_context2.prev = _context2.next) {
	                    case 0:
	                        mobile_number = getState().state.getIn((0, _path.dataPath)([_inputsConstant.MOBILE_NUMBER]), "").replace(/\s+/g, "");
	                        query = window.fetch(generateOtpURL(), postInit({ mobile_number: mobile_number })).then(function (res) {
	                            if (res.status === 200) {
	                                return res.json();
	                            } else if (res.status === 400) {
	                                throw Error("400");
	                            }
	                            throw Error("500");
	                        }).then(function (data) {
	                            return [null, { smsPrefix: data && data.prefix ? data.prefix.replace(/-+$/, "") : "" }];
	                        }).catch(function (err) {
	                            return err.message === "400" ? ["400", null] : ["500", null];
	                        });
	                        _context2.next = 4;
	                        return query;
	
	                    case 4:
	                        _ref7 = _context2.sent;
	                        _ref8 = _slicedToArray(_ref7, 2);
	                        error = _ref8[0];
	                        result = _ref8[1];
	                        return _context2.abrupt("return", error ? errorDispatch(error) : successDispatch(result));
	
	                    case 9:
	                    case "end":
	                        return _context2.stop();
	                }
	            }
	        }, _callee2, undefined);
	    }));
	
	    return function getOTP(_x2) {
	        return _ref6.apply(this, arguments);
	    };
	}();
	
	var getAddress = exports.getAddress = function () {
	    var _ref10 = _asyncToGenerator(_regenerator2.default.mark(function _callee3(_ref9) {
	        var action = _ref9.action;
	        var successDispatch = _ref9.successDispatch;
	        var errorDispatch = _ref9.errorDispatch;
	
	        var query, _ref11, _ref12, error, result;
	
	        return _regenerator2.default.wrap(function _callee3$(_context3) {
	            while (1) {
	                switch (_context3.prev = _context3.next) {
	                    case 0:
	                        query = window.fetch(getAddressURL(action.payload.postal)).then(function (res) {
	                            if (res.status === 200) {
	                                return res;
	                            } else if (res.status === 400) {
	                                throw Error("400");
	                            }
	                            throw Error("500");
	                        }).then(function (res) {
	                            return res.json();
	                        }).then(function (data) {
	                            return [null, data];
	                        }).catch(function (err) {
	                            return err.message === "400" ? ["400", null] : ["500", null];
	                        });
	                        _context3.next = 3;
	                        return query;
	
	                    case 3:
	                        _ref11 = _context3.sent;
	                        _ref12 = _slicedToArray(_ref11, 2);
	                        error = _ref12[0];
	                        result = _ref12[1];
	                        return _context3.abrupt("return", error ? errorDispatch(error) : successDispatch(result));
	
	                    case 8:
	                    case "end":
	                        return _context3.stop();
	                }
	            }
	        }, _callee3, undefined);
	    }));
	
	    return function getAddress(_x3) {
	        return _ref10.apply(this, arguments);
	    };
	}();
	
	var postPartialApplication = exports.postPartialApplication = function postPartialApplication(_ref13) {
	    var getState = _ref13.getState;
	    var action = _ref13.action;
	    var successDispatch = _ref13.successDispatch;
	    var errorDispatch = _ref13.errorDispatch;
	    var loadingDispatch = _ref13.loadingDispatch;
	
	    var state = getState().state;
	    var productId = state.getIn((0, _path.productIdPath)()).get(0);
	    var stateData = state.getIn((0, _path.dataPath)([]), (0, _immutable.Map)()).toJS();
	    var fullData = Object.assign({}, _formDataConfig.formData, stateData);
	    fullData.mobileNumber = fullData.mobileNumber && fullData.mobileNumber.replace(/ /g, "");
	    loadingDispatch({ loadding: true });
	    var postApplicationURL = action.currentStep === "basicInfo" ? postInitialApplicationURL(productId) : postPartialApplicationURL(productId);
	    return new Promise(function (resolve, reject) {
	        var interval = setTimeout(function () {
	            return reject(errorDispatch(new TypeError("Client timed out")));
	        }, TIME_OUT);
	        fetch(postApplicationURL, postInit(fullData)).then(function (res) {
	            if (res.status === 200) {
	                return res;
	            }throw res.status;
	        }).then(function (res) {
	            return res.json();
	        }).then(function (_ref14) {
	            var status = _ref14.status;
	            var error = _ref14.error;
	            var data = _ref14.data;
	            var readonly = _ref14.readonly;
	
	            clearTimeout(interval);
	            resolve({ status: status, error: error, data: data, readonly: readonly });
	            return status === SUCCESS ? successDispatch(["basicInfo", "accountDetails"].indexOf(action.currentStep) > -1 ? { data: data, readonly: readonly } : { data: fullData }) : errorDispatch(error || status);
	        }).catch(function (err) {
	            return errorDispatch(err);
	        });
	    }).catch(function (e) {
	        return errorDispatch(e);
	    });
	};
	
	var getMyInfoDetails = exports.getMyInfoDetails = function () {
	    var _ref16 = _asyncToGenerator(_regenerator2.default.mark(function _callee4(_ref15) {
	        var successDispatch = _ref15.successDispatch;
	        var errorDispatch = _ref15.errorDispatch;
	        var dispatch = _ref15.dispatch;
	
	        var query, _ref18, _ref19, error, result;
	
	        return _regenerator2.default.wrap(function _callee4$(_context4) {
	            while (1) {
	                switch (_context4.prev = _context4.next) {
	                    case 0:
	                        query = window.fetch(getMyinfoDetailURL(), postInit()).then(function (res) {
	                            return (0, _utils.handleSessionTimeout)(res, dispatch);
	                        }).then(function (res) {
	                            return (0, _utils.handleServerDown)(res, dispatch);
	                        }).then(function (res) {
	                            return res.json();
	                        }).then(function (_ref17) {
	                            var status = _ref17.status;
	                            var errorDesc = _ref17.errorDesc;
	                            var data = _ref17.data;
	                            return status ? [null, Object.assign({}, data, { status: status })] : [errorDesc || status, null];
	                        }).catch(function (err) {
	                            return [err];
	                        });
	                        _context4.next = 3;
	                        return query;
	
	                    case 3:
	                        _ref18 = _context4.sent;
	                        _ref19 = _slicedToArray(_ref18, 2);
	                        error = _ref19[0];
	                        result = _ref19[1];
	                        return _context4.abrupt("return", error ? errorDispatch(error) : successDispatch(result));
	
	                    case 8:
	                    case "end":
	                        return _context4.stop();
	                }
	            }
	        }, _callee4, undefined);
	    }));
	
	    return function getMyInfoDetails(_x4) {
	        return _ref16.apply(this, arguments);
	    };
	}();
	
	var dostoreRSApublickey = function dostoreRSApublickey(uobApplet, Mod_siz, Pub_String, Mod_String) {
	    var errorNum = uobApplet.OBM_SpecifyRSAPublicKey(parseInt(Mod_siz) / 8, Pub_String, Mod_String);
	    // Logger.log(uobApplet + Mod_siz);
	    if (errorNum !== 0) {
	        return false;
	    }
	    return true;
	};
	
	var encryptUserLogin = function encryptUserLogin(pwd, RN_String, Mod_siz, Pub_String, Mod_String) {
	    var uobApplet = new UOBApplet();
	
	    dostoreRSApublickey(uobApplet, Mod_siz, Pub_String, Mod_String);
	    var C_String = "";
	    var P_String = "";
	    var PINString = pwd;
	
	    var errorNum = uobApplet.OBM_EncryptPassword(PINString, RN_String);
	    // Logger.log(errorNum);
	    if (errorNum !== 0) {
	        return null;
	    }
	    C_String = uobApplet.OBM_GetEncryptedPassword();
	    P_String = uobApplet.OBM_GetEncodingParameter();
	    // Logger.log('C_String '+C_String+' P_String '+P_String);
	    if (P_String && C_String && C_String !== "") {
	        return {
	            encryptedPassword: C_String.toUpperCase(),
	            encodingParameter: P_String.toUpperCase()
	        };
	    }
	    return null;
	};
	
	var postFullApplication = exports.postFullApplication = function () {
	    var _ref21 = _asyncToGenerator(_regenerator2.default.mark(function _callee5(_ref20) {
	        var getState = _ref20.getState;
	        var successDispatch = _ref20.successDispatch;
	        var errorDispatch = _ref20.errorDispatch;
	        var dispatch = _ref20.dispatch;
	
	        var state, stateData, isNTB, encryptData, password, encPassObj, isMyInfoFlow, isSG, isPR, residentialStatus, query, _ref23, _ref24, error, result;
	
	        return _regenerator2.default.wrap(function _callee5$(_context5) {
	            while (1) {
	                switch (_context5.prev = _context5.next) {
	                    case 0:
	                        state = getState().state;
	                        stateData = state.getIn((0, _path.dataPath)([]), (0, _immutable.Map)()).toJS();
	                        _context5.prev = 2;
	                        isNTB = state.getIn(["app", "isNTB"], false);
	
	                        if (isNTB) {
	                            _context5.next = 6;
	                            break;
	                        }
	
	                        throw new Error();
	
	                    case 6:
	                        encryptData = state.getIn(["app", "encryptionParams"], (0, _immutable.Map)()).toJS();
	                        password = state.getIn(["app", "password"], "");
	                        encPassObj = encryptUserLogin(password, encryptData.onetimeSaltValue, encryptData.modSize, encryptData.publicComponent, encryptData.publicKey);
	
	
	                        stateData.userIdentity = stateData.username;
	                        stateData.legalIdentity = stateData.isSG ? stateData.nric : stateData.passport;
	                        stateData.legalIdentityType = stateData.isSG ? "IC" : "PP";
	                        stateData.legalIdentityCountry = stateData.isSG ? "SG" : stateData.passportIdentityCountry;
	                        stateData.encryptedPassword = encPassObj.encryptedPassword;
	                        stateData.encryptedNewPassword = encPassObj.encryptedPassword;
	                        stateData.keyIndex = encryptData.publicKeyIndex;
	                        stateData.randomAccessNumber = encryptData.onetimeSaltValue;
	                        stateData.encodingParameter = encPassObj.encodingParameter;
	
	                        _context5.next = 31;
	                        break;
	
	                    case 20:
	                        _context5.prev = 20;
	                        _context5.t0 = _context5["catch"](2);
	
	                        stateData.userIdentity = null;
	                        stateData.legalIdentity = null;
	                        stateData.legalIdentityType = null;
	                        stateData.legalIdentityCountry = null;
	                        stateData.encryptedPassword = null;
	                        stateData.encryptedNewPassword = null;
	                        stateData.keyIndex = null;
	                        stateData.randomAccessNumber = null;
	                        stateData.encodingParameter = null;
	
	                    case 31:
	                        try {
	                            stateData.mobileNumber = stateData.mobileNumber.replace(/ /g, "");
	                        } catch (e) {
	                            //
	                        }
	
	                        try {
	                            isMyInfoFlow = state.getIn(["app", "myInfo"], false);
	
	                            if (!isMyInfoFlow) {
	                                isSG = stateData.isSG;
	                                isPR = isSG && stateData.nationality !== "SG";
	                                residentialStatus = "A";
	
	                                if (isSG) {
	                                    residentialStatus = isPR ? "P" : "C";
	                                }
	                                stateData.residentialStatus = residentialStatus;
	                            }
	                        } catch (e) {}
	                        //
	
	                        // stateData
	                        query = window.fetch(submitApplicationURL(), postInit(stateData)).then(function (res) {
	                            return (0, _utils.handleSessionTimeout)(res, dispatch);
	                        }).then(function (res) {
	                            return (0, _utils.handleValidationMismatch)(res, dispatch);
	                        }).then(function (res) {
	                            return (0, _utils.handleServerDown)(res, dispatch);
	                        }).then(function (res) {
	                            return res.json();
	                        }).then(function (_ref22) {
	                            var status = _ref22.status;
	                            var errorDesc = _ref22.errorDesc;
	                            var data = _ref22.data;
	                            return status === SUCCESS ? [null, data] : [errorDesc || status, null];
	                        }).catch(function (err) {
	                            return [err];
	                        });
	                        _context5.next = 36;
	                        return query;
	
	                    case 36:
	                        _ref23 = _context5.sent;
	                        _ref24 = _slicedToArray(_ref23, 2);
	                        error = _ref24[0];
	                        result = _ref24[1];
	                        return _context5.abrupt("return", error ? errorDispatch(error) : successDispatch(result));
	
	                    case 41:
	                    case "end":
	                        return _context5.stop();
	                }
	            }
	        }, _callee5, undefined, [[2, 20]]);
	    }));
	
	    return function postFullApplication(_x5) {
	        return _ref21.apply(this, arguments);
	    };
	}();
	
	var checkPendingApplication = exports.checkPendingApplication = function () {
	    var _ref26 = _asyncToGenerator(_regenerator2.default.mark(function _callee6(_ref25) {
	        var successDispatch = _ref25.successDispatch;
	        var result;
	        return _regenerator2.default.wrap(function _callee6$(_context6) {
	            while (1) {
	                switch (_context6.prev = _context6.next) {
	                    case 0:
	                        // const query = window
	                        //     .fetch(checkPendingApplicationURL(), postInit(action.payload))
	                        //     .then(res => handleSessionTimeout(res, dispatch))
	                        //     .then(res => handleValidationMismatch(res, dispatch))
	                        //     .then(res => handleServerDown(res, dispatch))
	                        //     .then(res => res.json())
	                        //     .then(({status, errorDesc, data}) => (status === SUCCESS ? [null, data] : [errorDesc || status, null]))
	                        //     .catch(err => [err]);
	                        // const [error, result] = await query;
	                        result = {
	                            "uobCustomerFlag": "N",
	                            "existingToProductFlag": "N",
	                            "productId": []
	                        };
	                        return _context6.abrupt("return", successDispatch(result));
	
	                    case 2:
	                    case "end":
	                        return _context6.stop();
	                }
	            }
	        }, _callee6, undefined);
	    }));
	
	    return function checkPendingApplication(_x6) {
	        return _ref26.apply(this, arguments);
	    };
	}();
	
	var getPendingApplications = exports.getPendingApplications = function () {
	    var _ref28 = _asyncToGenerator(_regenerator2.default.mark(function _callee7(_ref27) {
	        var getState = _ref27.getState;
	        var successDispatch = _ref27.successDispatch;
	        var errorDispatch = _ref27.errorDispatch;
	        var dispatch = _ref27.dispatch;
	
	        var pendingApplications, formatData, query, _ref30, _ref31, error, result;
	
	        return _regenerator2.default.wrap(function _callee7$(_context7) {
	            while (1) {
	                switch (_context7.prev = _context7.next) {
	                    case 0:
	                        pendingApplications = getState().state.getIn((0, _path.dataPath)(["pendingApplications"])).toJS();
	                        formatData = {
	                            productId: pendingApplications
	                        };
	                        query = window.fetch(getPendingApplicationURL(), postInit(formatData)).then(function (res) {
	                            return (0, _utils.handleSessionTimeout)(res, dispatch);
	                        }).then(function (res) {
	                            return (0, _utils.handleValidationMismatch)(res, dispatch);
	                        }).then(function (res) {
	                            return (0, _utils.handleServerDown)(res, dispatch);
	                        }).then(function (res) {
	                            return res.json();
	                        }).then(function (_ref29) {
	                            var status = _ref29.status;
	                            var errorDesc = _ref29.errorDesc;
	                            var data = _ref29.data;
	                            return status === SUCCESS ? [null, data] : [errorDesc || status, null];
	                        }).catch(function (err) {
	                            return [err];
	                        });
	                        _context7.next = 5;
	                        return query;
	
	                    case 5:
	                        _ref30 = _context7.sent;
	                        _ref31 = _slicedToArray(_ref30, 2);
	                        error = _ref31[0];
	                        result = _ref31[1];
	                        return _context7.abrupt("return", error ? errorDispatch(error) : successDispatch(result));
	
	                    case 10:
	                    case "end":
	                        return _context7.stop();
	                }
	            }
	        }, _callee7, undefined);
	    }));
	
	    return function getPendingApplications(_x7) {
	        return _ref28.apply(this, arguments);
	    };
	}();
	
	var getTenorTableData = exports.getTenorTableData = function () {
	    var _ref33 = _asyncToGenerator(_regenerator2.default.mark(function _callee8(_ref32) {
	        var successDispatch = _ref32.successDispatch;
	        var errorDispatch = _ref32.errorDispatch;
	        var action = _ref32.action;
	
	        var isCCregex, type, product, query, _ref34, _ref35, error, result;
	
	        return _regenerator2.default.wrap(function _callee8$(_context8) {
	            while (1) {
	                switch (_context8.prev = _context8.next) {
	                    case 0:
	                        isCCregex = /CC.*/gi;
	                        type = action.promotionType;
	                        product = isCCregex.test(action.pid) ? "CC" : "CP";
	                        query = window.fetch(getTenorDataTableURL(product, type)).then(function (res) {
	                            if (res.status === 200) {
	                                return res;
	                            }
	                            throw Error("500");
	                        }).then(function (res) {
	                            return res.json();
	                        }).then(function (data) {
	                            return [null, data];
	                        }).catch(function (err) {
	                            return [err];
	                        });
	                        _context8.next = 6;
	                        return query;
	
	                    case 6:
	                        _ref34 = _context8.sent;
	                        _ref35 = _slicedToArray(_ref34, 2);
	                        error = _ref35[0];
	                        result = _ref35[1];
	                        return _context8.abrupt("return", error ? errorDispatch(error) : successDispatch(result));
	
	                    case 11:
	                    case "end":
	                        return _context8.stop();
	                }
	            }
	        }, _callee8, undefined);
	    }));
	
	    return function getTenorTableData(_x8) {
	        return _ref33.apply(this, arguments);
	    };
	}();
	
	var getBankList = exports.getBankList = function () {
	    var _ref37 = _asyncToGenerator(_regenerator2.default.mark(function _callee9(_ref36) {
	        var successDispatch = _ref36.successDispatch;
	        var errorDispatch = _ref36.errorDispatch;
	        var dispatch = _ref36.dispatch;
	
	        var query, _ref39, _ref40, error, result;
	
	        return _regenerator2.default.wrap(function _callee9$(_context9) {
	            while (1) {
	                switch (_context9.prev = _context9.next) {
	                    case 0:
	                        query = window.fetch(getBankListURL()).then(function (res) {
	                            return (0, _utils.handleSessionTimeout)(res, dispatch);
	                        }).then(function (res) {
	                            return (0, _utils.handleValidationMismatch)(res, dispatch);
	                        }).then(function (res) {
	                            return (0, _utils.handleServerDown)(res, dispatch);
	                        }).then(function (res) {
	                            return res.json();
	                        }).then(function (_ref38) {
	                            var banks = _ref38.banks;
	                            return [null, banks];
	                        }).catch(function (err) {
	                            return [err];
	                        });
	                        _context9.next = 3;
	                        return query;
	
	                    case 3:
	                        _ref39 = _context9.sent;
	                        _ref40 = _slicedToArray(_ref39, 2);
	                        error = _ref40[0];
	                        result = _ref40[1];
	                        return _context9.abrupt("return", error ? errorDispatch(error) : successDispatch(result));
	
	                    case 8:
	                    case "end":
	                        return _context9.stop();
	                }
	            }
	        }, _callee9, undefined);
	    }));
	
	    return function getBankList(_x9) {
	        return _ref37.apply(this, arguments);
	    };
	}();
	
	var validateTIN = exports.validateTIN = function () {
	    var _ref42 = _asyncToGenerator(_regenerator2.default.mark(function _callee10(_ref41) {
	        var successDispatch = _ref41.successDispatch;
	        var errorDispatch = _ref41.errorDispatch;
	        var action = _ref41.action;
	
	        var query, _ref43, _ref44, error, result;
	
	        return _regenerator2.default.wrap(function _callee10$(_context10) {
	            while (1) {
	                switch (_context10.prev = _context10.next) {
	                    case 0:
	                        query = window.fetch(tinValidateURL(action.country, action.id), postInit()).then(function (res) {
	                            if (res.status === 200) {
	                                return [null, { isValidate: true, showValid: true }];
	                            } else if (res.status === 400) {
	                                return [null, { isValidate: false, showValid: false }];
	                            }
	                            return [null, { isValidate: false, showValid: true }];
	                        }).catch(function () {
	                            return [null, { isValidate: false, showValid: true }];
	                        });
	                        _context10.next = 3;
	                        return query;
	
	                    case 3:
	                        _ref43 = _context10.sent;
	                        _ref44 = _slicedToArray(_ref43, 2);
	                        error = _ref44[0];
	                        result = _ref44[1];
	                        return _context10.abrupt("return", error ? errorDispatch(error) : successDispatch(result));
	
	                    case 8:
	                    case "end":
	                        return _context10.stop();
	                }
	            }
	        }, _callee10, undefined);
	    }));
	
	    return function validateTIN(_x10) {
	        return _ref42.apply(this, arguments);
	    };
	}();
	
	var validateUsername = exports.validateUsername = function () {
	    var _ref46 = _asyncToGenerator(_regenerator2.default.mark(function _callee11(_ref45) {
	        var getState = _ref45.getState;
	        var successDispatch = _ref45.successDispatch;
	        var errorDispatch = _ref45.errorDispatch;
	        var action = _ref45.action;
	
	        var state, stateData, checkUserData, query, _ref47, _ref48, error, result;
	
	        return _regenerator2.default.wrap(function _callee11$(_context11) {
	            while (1) {
	                switch (_context11.prev = _context11.next) {
	                    case 0:
	                        state = getState().state;
	                        stateData = state.getIn((0, _path.dataPath)([]), (0, _immutable.Map)()).toJS();
	                        checkUserData = {
	                            userIdentity: stateData.username,
	                            legalIdentity: stateData.isSG ? stateData.nric : stateData.passport,
	                            legalIdentityType: stateData.isSG ? "IC" : "PP",
	                            legalIdentityCountry: stateData.isSG ? "SG" : stateData.passportIdentityCountry
	                        };
	                        query = window.fetch(validateUsernameURL(action.username), postInit(checkUserData)).then(function (res) {
	                            if (res.status === 200) {
	                                return [null, { isValid: true }];
	                            } else if (res.status === 400) {
	                                return [{ errorMsg: "usernameIsNotAvailable", global: false }, null];
	                            }
	                            return [{ errorMsg: "serviceNotAvailable", global: true }, null];
	                        }).catch(function () {
	                            return [{ errorMsg: "serviceNotAvailable", global: true }, null];
	                        });
	                        _context11.next = 6;
	                        return query;
	
	                    case 6:
	                        _ref47 = _context11.sent;
	                        _ref48 = _slicedToArray(_ref47, 2);
	                        error = _ref48[0];
	                        result = _ref48[1];
	                        return _context11.abrupt("return", error ? errorDispatch(error) : successDispatch(result));
	
	                    case 11:
	                    case "end":
	                        return _context11.stop();
	                }
	            }
	        }, _callee11, undefined);
	    }));
	
	    return function validateUsername(_x11) {
	        return _ref46.apply(this, arguments);
	    };
	}();
	
	var getEncryptionParams = exports.getEncryptionParams = function () {
	    var _ref50 = _asyncToGenerator(_regenerator2.default.mark(function _callee12(_ref49) {
	        var successDispatch = _ref49.successDispatch;
	        var errorDispatch = _ref49.errorDispatch;
	
	        var query, _ref51, _ref52, error, result;
	
	        return _regenerator2.default.wrap(function _callee12$(_context12) {
	            while (1) {
	                switch (_context12.prev = _context12.next) {
	                    case 0:
	                        query = window.fetch(getEncryptionParamsURL()).then(function (res) {
	                            if (res.status === 200) {
	                                return res.json();
	                            }
	                            throw new Error("serviceNotAvailable");
	                        }).then(function (result) {
	                            return [null, result];
	                        }).catch(function (err) {
	                            return [err];
	                        });
	                        _context12.next = 3;
	                        return query;
	
	                    case 3:
	                        _ref51 = _context12.sent;
	                        _ref52 = _slicedToArray(_ref51, 2);
	                        error = _ref52[0];
	                        result = _ref52[1];
	                        return _context12.abrupt("return", error ? errorDispatch(error) : successDispatch(result));
	
	                    case 8:
	                    case "end":
	                        return _context12.stop();
	                }
	            }
	        }, _callee12, undefined);
	    }));
	
	    return function getEncryptionParams(_x12) {
	        return _ref50.apply(this, arguments);
	    };
	}();
	
	var getUserStatus = exports.getUserStatus = function () {
	    var _ref54 = _asyncToGenerator(_regenerator2.default.mark(function _callee13(_ref53) {
	        var getState = _ref53.getState;
	        var successDispatch = _ref53.successDispatch;
	        var errorDispatch = _ref53.errorDispatch;
	
	        var state, stateData, userStatusData, query, _ref55, _ref56, error, result;
	
	        return _regenerator2.default.wrap(function _callee13$(_context13) {
	            while (1) {
	                switch (_context13.prev = _context13.next) {
	                    case 0:
	                        state = getState().state;
	                        stateData = state.getIn((0, _path.dataPath)([]), (0, _immutable.Map)()).toJS();
	                        userStatusData = {
	                            legalIdentity: stateData.isSG ? stateData.nric : stateData.passport,
	                            legalIdentityType: stateData.isSG ? "IC" : "PP",
	                            legalIdentityCountry: stateData.isSG ? "SG" : stateData.passportIdentityCountry
	                        };
	                        query = window.fetch(getUserStatusURL(), postInit(userStatusData)).then(function (res) {
	                            if (res.status === 200) {
	                                return res.json();
	                            }
	                            throw new Error();
	                        }).then(function (body) {
	                            if (!body.existingRelationship) {
	                                return [null, { isNTB: true }];
	                            }
	                            throw new Error();
	                        }).catch(function () {
	                            return [{ errorMsg: "serviceNotAvailable", global: false }, null];
	                        });
	                        _context13.next = 6;
	                        return query;
	
	                    case 6:
	                        _ref55 = _context13.sent;
	                        _ref56 = _slicedToArray(_ref55, 2);
	                        error = _ref56[0];
	                        result = _ref56[1];
	                        return _context13.abrupt("return", error ? errorDispatch(error) : successDispatch(result));
	
	                    case 11:
	                    case "end":
	                        return _context13.stop();
	                }
	            }
	        }, _callee13, undefined);
	    }));
	
	    return function getUserStatus(_x13) {
	        return _ref54.apply(this, arguments);
	    };
	}();
	
	/*
	export const postPartialApplication1 = async ({getState, action, successDispatch, errorDispatch, loadingDispatch}) => {
	    const state = getState().state;
	    const productId = state.getIn(productIdPath()).get(0);
	    const stateData = state.getIn(dataPath([]), Map()).toJS();
	    const fullData = {...formData, ...stateData};
	   // loadingDispatch({loadding: true});
	    try {
	        fullData.mobileNumber = fullData.mobileNumber.replace(/ /g,"");
	    } catch (e) {
	      //
	    }
	    const postApplicationURL = action.currentStep === "basicInfo" ? postInitialApplicationURL(productId) : postPartialApplicationURL(productId);

	    const query = window
	        .fetch(postApplicationURL, postInit(fullData))
	        .then(res => {
	            if (res.status === 200) {
	                return res;
	            }
	            throw Error("500");
	        })
	        .then(res => res.json())
	        .then(
	            ({status, error, data, readonly}) =>
	                status === SUCCESS ? [null, {data, readonly}] : [error || status, null]
	        )
	        .catch(err => [err]);

	    if (action.currentStep === "basicInfo" || action.currentStep === "accountDetails") {
	        const [error, result] = await query;
	        return error ? errorDispatch(error) : successDispatch(result);
	    }
	    return successDispatch({data: fullData});
	}; */

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _EditableDropdownWithFlag = __webpack_require__(345);
	
	var _EditableDropdownWithFlag2 = _interopRequireDefault(_EditableDropdownWithFlag);
	
	var _ReadOnlyDropdownWithFlag = __webpack_require__(360);
	
	var _ReadOnlyDropdownWithFlag2 = _interopRequireDefault(_ReadOnlyDropdownWithFlag);
	
	var _path = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DropdownWithFlag = function DropdownWithFlag(props) {
	    var isReadOnly = props.state.getIn((0, _path.isReadOnlyPath)(props.step, props.inputID), false);
	    return isReadOnly ? _react2.default.createElement(_ReadOnlyDropdownWithFlag2.default, props) : _react2.default.createElement(_EditableDropdownWithFlag2.default, props);
	};
	
	DropdownWithFlag.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    inputID: _react.PropTypes.string.isRequired
	};
	
	exports.default = DropdownWithFlag;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	__webpack_require__(479);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// import {validatorHOC} from "../HOC/ValidatorHOC";
	
	var ReadOnlyTextInput = function ReadOnlyTextInput(props) {
	    var isFocus = props.state.getIn((0, _path.uiFocusPath)(props.step, props.inputID), false);
	    var isValid = props.state.getIn((0, _path.uiIsValidPath)(props.step, props.inputID), false);
	    var isDirty = props.state.getIn((0, _path.uiIsDirtyPath)(props.step, props.inputID), false);
	    var inputValue = props.state.getIn((0, _path.dataPath)([props.inputID]), "");
	    var value = props.value ? props.value : inputValue;
	    var focus = isFocus || value.length > 0 || !(isValid || !isDirty) ? "--focused" : "";
	
	    return _react2.default.createElement(
	        "div",
	        { className: "read-only-text-input--container" },
	        _react2.default.createElement(
	            "div",
	            { className: "read-only-text-input--content" },
	            _react2.default.createElement(
	                "label",
	                { className: "read-only-text-input--label" + focus },
	                "" + props.inputLabel
	            ),
	            _react2.default.createElement(
	                "div",
	                { className: "read-only-text-input--input" + focus },
	                value
	            )
	        ),
	        _react2.default.createElement("img", {
	            className: "read-only-text-input--tick--visible",
	            src: FORMS_CNFG_GLBL.imgPath + "/non-editable-icon4.svg",
	            alt: "tick"
	        })
	    );
	}; /* global FORMS_CNFG_GLBL */
	
	
	ReadOnlyTextInput.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    inputLabel: _react.PropTypes.string,
	    inputID: _react.PropTypes.string,
	    step: _react.PropTypes.string.isRequired,
	    value: _react.PropTypes.string
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchOnFocusInput: (0, _redux.bindActionCreators)(_actionCreators.onFocusInput, dispatch),
	        dispatchOnBlurInput: (0, _redux.bindActionCreators)(_actionCreators.onBlurInput, dispatch),
	        dispatchEditInput: (0, _redux.bindActionCreators)(_actionCreators.editInput, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(ReadOnlyTextInput);

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(88)(function () {
	  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(70);
	var createDesc = __webpack_require__(141);
	module.exports = __webpack_require__(54) ? function (object, key, value) {
	  return dP.f(object, key, createDesc(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};


/***/ },
/* 56 */
/***/ function(module, exports) {

	module.exports = {};


/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (false) {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var EventPluginRegistry = __webpack_require__(104);
	var EventPluginUtils = __webpack_require__(105);
	var ReactErrorUtils = __webpack_require__(109);
	
	var accumulateInto = __webpack_require__(294);
	var forEachAccumulated = __webpack_require__(295);
	var invariant = __webpack_require__(8);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};
	
	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}
	
	function shouldPreventMouseEvent(name, type, props) {
	  switch (name) {
	    case 'onClick':
	    case 'onClickCapture':
	    case 'onDoubleClick':
	    case 'onDoubleClickCapture':
	    case 'onMouseDown':
	    case 'onMouseDownCapture':
	    case 'onMouseMove':
	    case 'onMouseMoveCapture':
	    case 'onMouseUp':
	    case 'onMouseUpCapture':
	      return !!(props.disabled && isInteractive(type));
	    default:
	      return false;
	  }
	}
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
	
	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
	    // live here; needs to be moved to a better place soon
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
	      return null;
	    }
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }
	
	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }
	
	      delete listenerBank[registrationName][key];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function () {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(58);
	var EventPluginUtils = __webpack_require__(105);
	
	var accumulateInto = __webpack_require__(294);
	var forEachAccumulated = __webpack_require__(295);
	var warning = __webpack_require__(11);
	
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, phase, event) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;

/***/ },
/* 60 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function (key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(27);
	
	var getEventTarget = __webpack_require__(114);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.routes = exports.route = exports.components = exports.component = exports.history = undefined;
	exports.falsy = falsy;
	
	var _react = __webpack_require__(2);
	
	var func = _react.PropTypes.func,
	    object = _react.PropTypes.object,
	    arrayOf = _react.PropTypes.arrayOf,
	    oneOfType = _react.PropTypes.oneOfType,
	    element = _react.PropTypes.element,
	    shape = _react.PropTypes.shape,
	    string = _react.PropTypes.string;
	function falsy(props, propName, componentName) {
	  if (props[propName]) return new Error('<' + componentName + '> should not have a "' + propName + '" prop');
	}
	
	var history = exports.history = shape({
	  listen: func.isRequired,
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired
	});
	
	var component = exports.component = oneOfType([func, string]);
	var components = exports.components = oneOfType([component, object]);
	var route = exports.route = oneOfType([object, element]);
	var routes = exports.routes = oneOfType([route, arrayOf(route)]);

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _path = __webpack_require__(4);
	
	var _actionCreators = __webpack_require__(3);
	
	__webpack_require__(484);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ToggleButton = function ToggleButton(props) {
	    var toggleStatus = props.value ? props.value : props.state.getIn((0, _path.dataPath)([props.inputID]), false);
	    var isToggled = !toggleStatus ? "" : "--toggle";
	
	    return _react2.default.createElement(
	        "div",
	        {
	            className: "switch-bg" + isToggled,
	            onClick: props.onClick ? props.onClick : function () {
	                props.dispatchOnToggle(props.step, props.inputID, !toggleStatus);
	                if (props.setPath) {
	                    props.setPath(!toggleStatus);
	                }
	            }
	        },
	        _react2.default.createElement("img", { className: "toggle-button--icon-tick", src: FORMS_CNFG_GLBL.imgPath + "/tick_white.svg", alt: "tick" }),
	        _react2.default.createElement("img", { className: "toggle-button--icon-cross", src: FORMS_CNFG_GLBL.imgPath + "/cross-white.svg", alt: "cross" }),
	        _react2.default.createElement("div", { className: "switch" + isToggled })
	    );
	}; /* global FORMS_CNFG_GLBL */
	
	
	ToggleButton.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    inputID: _react.PropTypes.string,
	    dispatchOnToggle: _react.PropTypes.func,
	    value: _react.PropTypes.bool,
	    onClick: _react.PropTypes.func,
	    step: _react.PropTypes.string,
	    setPath: _react.PropTypes.func
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchOnToggle: (0, _redux.bindActionCreators)(_actionCreators.onToggle, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(ToggleButton);

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	__webpack_require__(500);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var SummaryBlockToggleElement = function SummaryBlockToggleElement(props) {
	    return _react2.default.createElement(
	        "div",
	        { className: "toggle-element-container" },
	        _react2.default.createElement(
	            "p",
	            { className: "toggle-element-label" },
	            props.label
	        ),
	        _react2.default.createElement(
	            "p",
	            { className: "toggle-element-value" },
	            props.value
	        )
	    );
	};
	
	SummaryBlockToggleElement.propTypes = {
	    label: _react.PropTypes.string.isRequired,
	    value: _react.PropTypes.string.isRequired
	};
	
	exports.default = SummaryBlockToggleElement;

/***/ },
/* 65 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var CARDS_NOT_REQUIRE_CRS = exports.CARDS_NOT_REQUIRE_CRS = ["CURRC"];
	var ANUAL_INCOME_CARDS_TYPE = exports.ANUAL_INCOME_CARDS_TYPE = ["CURRC", "SAVU5", "CURA1", "CURKF", "CURIA", "SAVU+", "CURFX", "SAVJS", "103801", "001843", "001454", "001801", "001333", "001515", "001853", "001812", "001513", "001451", "001862", "001847", "001803", "001845", "CCPL", "CPPL", "CCBT", "CPBT"];
	var MIN_ANUAL_INCOME = exports.MIN_ANUAL_INCOME = 30000;
	var CREDIT_CARDS = exports.CREDIT_CARDS = ["001812", "001843"];
	var DEDIT_CARDS = exports.DEDIT_CARDS = ["CURA1"];

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(416), __esModule: true };

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(89);
	module.exports = function (it) {
	  if (!isObject(it)) throw TypeError(it + ' is not an object!');
	  return it;
	};


/***/ },
/* 69 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};


/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(68);
	var IE8_DOM_DEFINE = __webpack_require__(425);
	var toPrimitive = __webpack_require__(440);
	var dP = Object.defineProperty;
	
	exports.f = __webpack_require__(54) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return dP(O, P, Attributes);
	  } catch (e) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};


/***/ },
/* 71 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	/**
	 * Indicates that navigation was caused by a call to history.push.
	 */
	var PUSH = exports.PUSH = 'PUSH';
	
	/**
	 * Indicates that navigation was caused by a call to history.replace.
	 */
	var REPLACE = exports.REPLACE = 'REPLACE';
	
	/**
	 * Indicates that navigation was caused by some other action such
	 * as using a browser's back/forward buttons and/or manually manipulating
	 * the URL in a browser's location bar. This is the default.
	 *
	 * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate
	 * for more information.
	 */
	var POP = exports.POP = 'POP';

/***/ },
/* 72 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {
	  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);
	};
	
	var removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {
	  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);
	};
	
	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
	 */
	var supportsHistory = exports.supportsHistory = function supportsHistory() {
	  var ua = window.navigator.userAgent;
	
	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;
	
	  return window.history && 'pushState' in window.history;
	};
	
	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */
	var supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {
	  return window.navigator.userAgent.indexOf('Firefox') === -1;
	};
	
	/**
	 * Returns true if browser fires popstate on hash change.
	 * IE10 and IE11 do not.
	 */
	var supportsPopstateOnHashchange = exports.supportsPopstateOnHashchange = function supportsPopstateOnHashchange() {
	  return window.navigator.userAgent.indexOf('Trident') === -1;
	};
	
	/**
	 * Returns true if a given popstate event is an extraneous WebKit event.
	 * Accounts for the fact that Chrome on iOS fires real popstate events
	 * containing undefined state when pressing the back button.
	 */
	var isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {
	  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
	};

/***/ },
/* 73 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.matches_entirely = matches_entirely;
	// Checks whether the entire input sequence can be matched
	// against the regular expression.
	function matches_entirely() {
		var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
		var regular_expression = arguments[1];
	
		if (typeof regular_expression === 'string') {
			regular_expression = '^(?:' + regular_expression + ')$';
		}
	
		var matched_groups = text.match(regular_expression);
		return matched_groups !== null && matched_groups[0].length === text.length;
	}
	//# sourceMappingURL=common.js.map

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(557);


/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(14);
	
	var EventPluginRegistry = __webpack_require__(104);
	var ReactEventEmitterMixin = __webpack_require__(572);
	var ViewportMetrics = __webpack_require__(293);
	
	var getVendorPrefixedEventName = __webpack_require__(605);
	var isEventSupported = __webpack_require__(115);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === 'topWheel') {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === 'topScroll') {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening.topBlur = true;
	          isListening.topFocus = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Protect against document.createEvent() returning null
	   * Some popup blocker extensions appear to do this:
	   * https://github.com/facebook/react/issues/6887
	   */
	  supportsEventPageXY: function () {
	    if (!document.createEvent) {
	      return false;
	    }
	    var ev = document.createEvent('MouseEvent');
	    return ev != null && 'pageX' in ev;
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(61);
	var ViewportMetrics = __webpack_require__(293);
	
	var getEventModifierState = __webpack_require__(113);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(8);
	
	var OBSERVED_ERROR = {};
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var TransactionImpl = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	module.exports = TransactionImpl;

/***/ },
/* 78 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 */
	
	'use strict';
	
	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */
	
	var matchHtmlRegExp = /["'&<>]/;
	
	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */
	
	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);
	
	  if (!match) {
	    return str;
	  }
	
	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;
	
	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }
	
	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }
	
	    lastIndex = index + 1;
	    html += escape;
	  }
	
	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html
	
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(17);
	var DOMNamespaces = __webpack_require__(103);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(111);
	
	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}
	
	module.exports = setInnerHTML;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.routerMiddleware = exports.routerActions = exports.goForward = exports.goBack = exports.go = exports.replace = exports.push = exports.CALL_HISTORY_METHOD = exports.routerReducer = exports.LOCATION_CHANGE = exports.syncHistoryWithStore = undefined;
	
	var _reducer = __webpack_require__(307);
	
	Object.defineProperty(exports, 'LOCATION_CHANGE', {
	  enumerable: true,
	  get: function get() {
	    return _reducer.LOCATION_CHANGE;
	  }
	});
	Object.defineProperty(exports, 'routerReducer', {
	  enumerable: true,
	  get: function get() {
	    return _reducer.routerReducer;
	  }
	});
	
	var _actions = __webpack_require__(306);
	
	Object.defineProperty(exports, 'CALL_HISTORY_METHOD', {
	  enumerable: true,
	  get: function get() {
	    return _actions.CALL_HISTORY_METHOD;
	  }
	});
	Object.defineProperty(exports, 'push', {
	  enumerable: true,
	  get: function get() {
	    return _actions.push;
	  }
	});
	Object.defineProperty(exports, 'replace', {
	  enumerable: true,
	  get: function get() {
	    return _actions.replace;
	  }
	});
	Object.defineProperty(exports, 'go', {
	  enumerable: true,
	  get: function get() {
	    return _actions.go;
	  }
	});
	Object.defineProperty(exports, 'goBack', {
	  enumerable: true,
	  get: function get() {
	    return _actions.goBack;
	  }
	});
	Object.defineProperty(exports, 'goForward', {
	  enumerable: true,
	  get: function get() {
	    return _actions.goForward;
	  }
	});
	Object.defineProperty(exports, 'routerActions', {
	  enumerable: true,
	  get: function get() {
	    return _actions.routerActions;
	  }
	});
	
	var _sync = __webpack_require__(618);
	
	var _sync2 = _interopRequireDefault(_sync);
	
	var _middleware = __webpack_require__(617);
	
	var _middleware2 = _interopRequireDefault(_middleware);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	exports.syncHistoryWithStore = _sync2['default'];
	exports.routerMiddleware = _middleware2['default'];

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.canUseDOM = exports.slidesOnLeft = exports.slidesOnRight = exports.siblingDirection = exports.getTotalSlides = exports.getPostClones = exports.getPreClones = exports.getTrackLeft = exports.getTrackAnimateCSS = exports.getTrackCSS = exports.checkSpecKeys = exports.getSlideCount = exports.checkNavigable = exports.getNavigableIndexes = exports.swipeEnd = exports.swipeMove = exports.swipeStart = exports.keyHandler = exports.changeSlide = exports.slideHandler = exports.initializedState = exports.extractObject = exports.canGoNext = exports.getSwipeDirection = exports.getHeight = exports.getWidth = exports.lazySlidesOnRight = exports.lazySlidesOnLeft = exports.lazyEndIndex = exports.lazyStartIndex = exports.getRequiredLazySlides = exports.getOnDemandLazySlides = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(74);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var getOnDemandLazySlides = exports.getOnDemandLazySlides = function getOnDemandLazySlides(spec) {
	  var onDemandSlides = [];
	  var startIndex = lazyStartIndex(spec);
	  var endIndex = lazyEndIndex(spec);
	  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {
	    if (spec.lazyLoadedList.indexOf(slideIndex) < 0) {
	      onDemandSlides.push(slideIndex);
	    }
	  }
	  return onDemandSlides;
	};
	
	// return list of slides that need to be present
	var getRequiredLazySlides = exports.getRequiredLazySlides = function getRequiredLazySlides(spec) {
	  var requiredSlides = [];
	  var startIndex = lazyStartIndex(spec);
	  var endIndex = lazyEndIndex(spec);
	  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {
	    requiredSlides.push(slideIndex);
	  }
	  return requiredSlides;
	};
	
	// startIndex that needs to be present
	var lazyStartIndex = exports.lazyStartIndex = function lazyStartIndex(spec) {
	  return spec.currentSlide - lazySlidesOnLeft(spec);
	};
	var lazyEndIndex = exports.lazyEndIndex = function lazyEndIndex(spec) {
	  return spec.currentSlide + lazySlidesOnRight(spec);
	};
	var lazySlidesOnLeft = exports.lazySlidesOnLeft = function lazySlidesOnLeft(spec) {
	  return spec.centerMode ? Math.floor(spec.slidesToShow / 2) + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : 0;
	};
	var lazySlidesOnRight = exports.lazySlidesOnRight = function lazySlidesOnRight(spec) {
	  return spec.centerMode ? Math.floor((spec.slidesToShow - 1) / 2) + 1 + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : spec.slidesToShow;
	};
	
	// get width of an element
	var getWidth = exports.getWidth = function getWidth(elem) {
	  return elem && elem.offsetWidth || 0;
	};
	var getHeight = exports.getHeight = function getHeight(elem) {
	  return elem && elem.offsetHeight || 0;
	};
	var getSwipeDirection = exports.getSwipeDirection = function getSwipeDirection(touchObject) {
	  var verticalSwiping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	  var xDist, yDist, r, swipeAngle;
	  xDist = touchObject.startX - touchObject.curX;
	  yDist = touchObject.startY - touchObject.curY;
	  r = Math.atan2(yDist, xDist);
	  swipeAngle = Math.round(r * 180 / Math.PI);
	  if (swipeAngle < 0) {
	    swipeAngle = 360 - Math.abs(swipeAngle);
	  }
	  if (swipeAngle <= 45 && swipeAngle >= 0 || swipeAngle <= 360 && swipeAngle >= 315) {
	    return "left";
	  }
	  if (swipeAngle >= 135 && swipeAngle <= 225) {
	    return "right";
	  }
	  if (verticalSwiping === true) {
	    if (swipeAngle >= 35 && swipeAngle <= 135) {
	      return "up";
	    } else {
	      return "down";
	    }
	  }
	
	  return "vertical";
	};
	
	// whether or not we can go next
	var canGoNext = exports.canGoNext = function canGoNext(spec) {
	  var canGo = true;
	  if (!spec.infinite) {
	    if (spec.centerMode && spec.currentSlide >= spec.slideCount - 1) {
	      canGo = false;
	    } else if (spec.slideCount <= spec.slidesToShow || spec.currentSlide >= spec.slideCount - spec.slidesToShow) {
	      canGo = false;
	    }
	  }
	  return canGo;
	};
	
	// given an object and a list of keys, return new object with given keys
	var extractObject = exports.extractObject = function extractObject(spec, keys) {
	  var newObject = {};
	  keys.forEach(function (key) {
	    return newObject[key] = spec[key];
	  });
	  return newObject;
	};
	
	// get initialized state
	var initializedState = exports.initializedState = function initializedState(spec) {
	  // spec also contains listRef, trackRef
	  var slideCount = _react2.default.Children.count(spec.children);
	  var listWidth = Math.ceil(getWidth(_reactDom2.default.findDOMNode(spec.listRef)));
	  var trackWidth = Math.ceil(getWidth(_reactDom2.default.findDOMNode(spec.trackRef)));
	  var slideWidth = void 0;
	  if (!spec.vertical) {
	    var centerPaddingAdj = spec.centerMode && parseInt(spec.centerPadding) * 2;
	    if (typeof spec.centerPadding === "string" && spec.centerPadding.slice(-1) === "%") {
	      centerPaddingAdj *= listWidth / 100;
	    }
	    slideWidth = Math.ceil((listWidth - centerPaddingAdj) / spec.slidesToShow);
	  } else {
	    slideWidth = listWidth;
	  }
	  var slideHeight = _reactDom2.default.findDOMNode(spec.listRef) && getHeight(_reactDom2.default.findDOMNode(spec.listRef).querySelector('[data-index="0"]'));
	  var listHeight = slideHeight * spec.slidesToShow;
	  var currentSlide = spec.currentSlide === undefined ? spec.initialSlide : spec.currentSlide;
	  if (spec.rtl && spec.currentSlide === undefined) {
	    currentSlide = slideCount - 1 - spec.initialSlide;
	  }
	  var lazyLoadedList = spec.lazyLoadedList || [];
	  var slidesToLoad = getOnDemandLazySlides({ currentSlide: currentSlide, lazyLoadedList: lazyLoadedList }, spec);
	  lazyLoadedList.concat(slidesToLoad);
	
	  var state = {
	    slideCount: slideCount,
	    slideWidth: slideWidth,
	    listWidth: listWidth,
	    trackWidth: trackWidth,
	    currentSlide: currentSlide,
	    slideHeight: slideHeight,
	    listHeight: listHeight,
	    lazyLoadedList: lazyLoadedList
	  };
	
	  if (spec.autoplaying === null && spec.autoplay) {
	    state["autoplaying"] = "playing";
	  }
	
	  return state;
	};
	
	var slideHandler = exports.slideHandler = function slideHandler(spec) {
	  var waitForAnimate = spec.waitForAnimate,
	      animating = spec.animating,
	      fade = spec.fade,
	      infinite = spec.infinite,
	      index = spec.index,
	      slideCount = spec.slideCount,
	      lazyLoadedList = spec.lazyLoadedList,
	      lazyLoad = spec.lazyLoad,
	      currentSlide = spec.currentSlide,
	      centerMode = spec.centerMode,
	      slidesToScroll = spec.slidesToScroll,
	      slidesToShow = spec.slidesToShow,
	      useCSS = spec.useCSS;
	
	  if (waitForAnimate && animating) return {};
	  var animationSlide = index,
	      finalSlide = void 0,
	      animationLeft = void 0,
	      finalLeft = void 0;
	  var state = {},
	      nextState = {};
	  if (fade) {
	    if (!infinite && (index < 0 || index >= slideCount)) return {};
	    if (index < 0) {
	      animationSlide = index + slideCount;
	    } else if (index >= slideCount) {
	      animationSlide = index - slideCount;
	    }
	    if (lazyLoad && lazyLoadedList.indexOf(animationSlide) < 0) {
	      lazyLoadedList.push(animationSlide);
	    }
	    state = {
	      animating: true,
	      currentSlide: animationSlide,
	      lazyLoadedList: lazyLoadedList
	    };
	    nextState = { animating: false };
	  } else {
	    finalSlide = animationSlide;
	    if (animationSlide < 0) {
	      finalSlide = animationSlide + slideCount;
	      if (!infinite) finalSlide = 0;else if (slideCount % slidesToScroll !== 0) finalSlide = slideCount - slideCount % slidesToScroll;
	    } else if (!canGoNext(spec) && animationSlide > currentSlide) {
	      animationSlide = finalSlide = currentSlide;
	    } else if (centerMode && animationSlide >= slideCount) {
	      animationSlide = infinite ? slideCount : slideCount - 1;
	      finalSlide = infinite ? 0 : slideCount - 1;
	    } else if (animationSlide >= slideCount) {
	      finalSlide = animationSlide - slideCount;
	      if (!infinite) finalSlide = slideCount - slidesToShow;else if (slideCount % slidesToScroll !== 0) finalSlide = 0;
	    }
	    animationLeft = getTrackLeft(_extends({}, spec, { slideIndex: animationSlide }));
	    finalLeft = getTrackLeft(_extends({}, spec, { slideIndex: finalSlide }));
	    if (!infinite) {
	      if (animationLeft === finalLeft) animationSlide = finalSlide;
	      animationLeft = finalLeft;
	    }
	    lazyLoad && lazyLoadedList.concat(getOnDemandLazySlides(_extends({}, spec, { currentSlide: animationSlide })));
	    if (!useCSS) {
	      state = {
	        currentSlide: finalSlide,
	        trackStyle: getTrackCSS(_extends({}, spec, { left: finalLeft })),
	        lazyLoadedList: lazyLoadedList
	      };
	    } else {
	      state = {
	        animating: true,
	        currentSlide: finalSlide,
	        trackStyle: getTrackAnimateCSS(_extends({}, spec, { left: animationLeft })),
	        lazyLoadedList: lazyLoadedList
	      };
	      nextState = {
	        animating: false,
	        currentSlide: finalSlide,
	        trackStyle: getTrackCSS(_extends({}, spec, { left: finalLeft })),
	        swipeLeft: null
	      };
	    }
	  }
	  return { state: state, nextState: nextState };
	};
	
	var changeSlide = exports.changeSlide = function changeSlide(spec, options) {
	  var indexOffset, previousInt, slideOffset, unevenOffset, targetSlide;
	  var slidesToScroll = spec.slidesToScroll,
	      slidesToShow = spec.slidesToShow,
	      slideCount = spec.slideCount,
	      currentSlide = spec.currentSlide,
	      lazyLoad = spec.lazyLoad,
	      infinite = spec.infinite;
	
	  unevenOffset = slideCount % slidesToScroll !== 0;
	  indexOffset = unevenOffset ? 0 : (slideCount - currentSlide) % slidesToScroll;
	
	  if (options.message === "previous") {
	    slideOffset = indexOffset === 0 ? slidesToScroll : slidesToShow - indexOffset;
	    targetSlide = currentSlide - slideOffset;
	    if (lazyLoad && !infinite) {
	      previousInt = currentSlide - slideOffset;
	      targetSlide = previousInt === -1 ? slideCount - 1 : previousInt;
	    }
	  } else if (options.message === "next") {
	    slideOffset = indexOffset === 0 ? slidesToScroll : indexOffset;
	    targetSlide = currentSlide + slideOffset;
	    if (lazyLoad && !infinite) {
	      targetSlide = (currentSlide + slidesToScroll) % slideCount + indexOffset;
	    }
	  } else if (options.message === "dots") {
	    // Click on dots
	    targetSlide = options.index * options.slidesToScroll;
	    if (targetSlide === options.currentSlide) {
	      return null;
	    }
	  } else if (options.message === "children") {
	    // Click on the slides
	    targetSlide = options.index;
	    if (targetSlide === options.currentSlide) {
	      return null;
	    }
	    if (infinite) {
	      var direction = siblingDirection(_extends({}, spec, { targetSlide: targetSlide }));
	      if (targetSlide > options.currentSlide && direction === "left") {
	        targetSlide = targetSlide - slideCount;
	      } else if (targetSlide < options.currentSlide && direction === "right") {
	        targetSlide = targetSlide + slideCount;
	      }
	    }
	  } else if (options.message === "index") {
	    targetSlide = Number(options.index);
	    if (targetSlide === options.currentSlide) {
	      return null;
	    }
	  }
	  return targetSlide;
	};
	var keyHandler = exports.keyHandler = function keyHandler(e, accessibility, rtl) {
	  if (e.target.tagName.match("TEXTAREA|INPUT|SELECT") || !accessibility) return "";
	  if (e.keyCode === 37) return rtl ? "next" : "previous";
	  if (e.keyCode === 39) return rtl ? "previous" : "next";
	  return "";
	};
	
	var swipeStart = exports.swipeStart = function swipeStart(e, swipe, draggable) {
	  e.target.tagName === "IMG" && e.preventDefault();
	  if (!swipe || !draggable && e.type.indexOf("mouse") !== -1) return "";
	  return {
	    dragging: true,
	    touchObject: {
	      startX: e.touches ? e.touches[0].pageX : e.clientX,
	      startY: e.touches ? e.touches[0].pageY : e.clientY,
	      curX: e.touches ? e.touches[0].pageX : e.clientX,
	      curY: e.touches ? e.touches[0].pageY : e.clientY
	    }
	  };
	};
	var swipeMove = exports.swipeMove = function swipeMove(e, spec) {
	  // spec also contains, trackRef and slideIndex
	  var scrolling = spec.scrolling,
	      animating = spec.animating,
	      vertical = spec.vertical,
	      swipeToSlide = spec.swipeToSlide,
	      verticalSwiping = spec.verticalSwiping,
	      rtl = spec.rtl,
	      currentSlide = spec.currentSlide,
	      edgeFriction = spec.edgeFriction,
	      edgeDragged = spec.edgeDragged,
	      onEdge = spec.onEdge,
	      swiped = spec.swiped,
	      swiping = spec.swiping,
	      slideCount = spec.slideCount,
	      slidesToScroll = spec.slidesToScroll,
	      infinite = spec.infinite,
	      touchObject = spec.touchObject,
	      swipeEvent = spec.swipeEvent,
	      listHeight = spec.listHeight,
	      listWidth = spec.listWidth;
	
	  if (scrolling) return;
	  if (animating) return e.preventDefault();
	  if (vertical && swipeToSlide && verticalSwiping) e.preventDefault();
	  var swipeLeft = void 0,
	      state = {};
	  var curLeft = getTrackLeft(spec);
	  touchObject.curX = e.touches ? e.touches[0].pageX : e.clientX;
	  touchObject.curY = e.touches ? e.touches[0].pageY : e.clientY;
	  touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));
	  var verticalSwipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curY - touchObject.startY, 2)));
	  if (!verticalSwiping && !swiping && verticalSwipeLength > 10) {
	    return { scrolling: true };
	  }
	  if (verticalSwiping) touchObject.swipeLength = verticalSwipeLength;
	  var positionOffset = (!rtl ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);
	  if (verticalSwiping) positionOffset = touchObject.curY > touchObject.startY ? 1 : -1;
	
	  var dotCount = Math.ceil(slideCount / slidesToScroll);
	  var swipeDirection = getSwipeDirection(spec.touchObject, verticalSwiping);
	  var touchSwipeLength = touchObject.swipeLength;
	  if (!infinite) {
	    if (currentSlide === 0 && swipeDirection === "right" || currentSlide + 1 >= dotCount && swipeDirection === "left" || !canGoNext(spec) && swipeDirection === "left") {
	      touchSwipeLength = touchObject.swipeLength * edgeFriction;
	      if (edgeDragged === false && onEdge) {
	        onEdge(swipeDirection);
	        state["edgeDragged"] = true;
	      }
	    }
	  }
	  if (!swiped && swipeEvent) {
	    swipeEvent(swipeDirection);
	    state["swiped"] = true;
	  }
	  if (!vertical) {
	    if (!rtl) {
	      swipeLeft = curLeft + touchSwipeLength * positionOffset;
	    } else {
	      swipeLeft = curLeft - touchSwipeLength * positionOffset;
	    }
	  } else {
	    swipeLeft = curLeft + touchSwipeLength * (listHeight / listWidth) * positionOffset;
	  }
	  if (verticalSwiping) {
	    swipeLeft = curLeft + touchSwipeLength * positionOffset;
	  }
	  state = _extends({}, state, {
	    touchObject: touchObject,
	    swipeLeft: swipeLeft,
	    trackStyle: getTrackCSS(_extends({}, spec, { left: swipeLeft }))
	  });
	  if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {
	    return state;
	  }
	  if (touchObject.swipeLength > 10) {
	    state["swiping"] = true;
	    e.preventDefault();
	  }
	  return state;
	};
	var swipeEnd = exports.swipeEnd = function swipeEnd(e, spec) {
	  var dragging = spec.dragging,
	      swipe = spec.swipe,
	      touchObject = spec.touchObject,
	      listWidth = spec.listWidth,
	      touchThreshold = spec.touchThreshold,
	      verticalSwiping = spec.verticalSwiping,
	      listHeight = spec.listHeight,
	      currentSlide = spec.currentSlide,
	      swipeToSlide = spec.swipeToSlide,
	      scrolling = spec.scrolling,
	      onSwipe = spec.onSwipe;
	
	  if (!dragging) {
	    if (swipe) e.preventDefault();
	    return {};
	  }
	  var minSwipe = verticalSwiping ? listHeight / touchThreshold : listWidth / touchThreshold;
	  var swipeDirection = getSwipeDirection(touchObject, verticalSwiping);
	  // reset the state of touch related state variables.
	  var state = {
	    dragging: false,
	    edgeDragged: false,
	    scrolling: false,
	    swiping: false,
	    swiped: false,
	    swipeLeft: null,
	    touchObject: {}
	  };
	  if (scrolling) {
	    return state;
	  }
	  if (!touchObject.swipeLength) {
	    return state;
	  }
	  if (touchObject.swipeLength > minSwipe) {
	    e.preventDefault();
	    if (onSwipe) {
	      onSwipe(swipeDirection);
	    }
	    var slideCount = void 0,
	        newSlide = void 0;
	    switch (swipeDirection) {
	      case "left":
	      case "up":
	        newSlide = currentSlide + getSlideCount(spec);
	        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;
	        state["currentDirection"] = 0;
	        break;
	      case "right":
	      case "down":
	        newSlide = currentSlide - getSlideCount(spec);
	        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;
	        state["currentDirection"] = 1;
	        break;
	      default:
	        slideCount = currentSlide;
	    }
	    state["triggerSlideHandler"] = slideCount;
	  } else {
	    // Adjust the track back to it's original position.
	    var currentLeft = getTrackLeft(spec);
	    state["trackStyle"] = getTrackAnimateCSS(_extends({}, spec, { left: currentLeft }));
	  }
	  return state;
	};
	var getNavigableIndexes = exports.getNavigableIndexes = function getNavigableIndexes(spec) {
	  var max = spec.infinite ? spec.slideCount * 2 : spec.slideCount;
	  var breakpoint = spec.infinite ? spec.slidesToShow * -1 : 0;
	  var counter = spec.infinite ? spec.slidesToShow * -1 : 0;
	  var indexes = [];
	  while (breakpoint < max) {
	    indexes.push(breakpoint);
	    breakpoint = counter + spec.slidesToScroll;
	    counter += Math.min(spec.slidesToScroll, spec.slidesToShow);
	  }
	  return indexes;
	};
	var checkNavigable = exports.checkNavigable = function checkNavigable(spec, index) {
	  var navigables = getNavigableIndexes(spec);
	  var prevNavigable = 0;
	  if (index > navigables[navigables.length - 1]) {
	    index = navigables[navigables.length - 1];
	  } else {
	    for (var n in navigables) {
	      if (index < navigables[n]) {
	        index = prevNavigable;
	        break;
	      }
	      prevNavigable = navigables[n];
	    }
	  }
	  return index;
	};
	var getSlideCount = exports.getSlideCount = function getSlideCount(spec) {
	  var centerOffset = spec.centerMode ? spec.slideWidth * Math.floor(spec.slidesToShow / 2) : 0;
	  if (spec.swipeToSlide) {
	    var swipedSlide = void 0;
	    var slickList = _reactDom2.default.findDOMNode(spec.listRef);
	    var slides = slickList.querySelectorAll(".slick-slide");
	    Array.from(slides).every(function (slide) {
	      if (!spec.vertical) {
	        if (slide.offsetLeft - centerOffset + getWidth(slide) / 2 > spec.swipeLeft * -1) {
	          swipedSlide = slide;
	          return false;
	        }
	      } else {
	        if (slide.offsetTop + getHeight(slide) / 2 > spec.swipeLeft * -1) {
	          swipedSlide = slide;
	          return false;
	        }
	      }
	
	      return true;
	    });
	
	    if (!swipedSlide) {
	      return 0;
	    }
	    var currentIndex = spec.rtl === true ? spec.slideCount - spec.currentSlide : spec.currentSlide;
	    var slidesTraversed = Math.abs(swipedSlide.dataset.index - currentIndex) || 1;
	    return slidesTraversed;
	  } else {
	    return spec.slidesToScroll;
	  }
	};
	
	var checkSpecKeys = exports.checkSpecKeys = function checkSpecKeys(spec, keysArray) {
	  return keysArray.reduce(function (value, key) {
	    return value && spec.hasOwnProperty(key);
	  }, true) ? null : console.error("Keys Missing:", spec);
	};
	
	var getTrackCSS = exports.getTrackCSS = function getTrackCSS(spec) {
	  checkSpecKeys(spec, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth"]);
	  var trackWidth = void 0,
	      trackHeight = void 0;
	  var trackChildren = spec.slideCount + 2 * spec.slidesToShow;
	  if (!spec.vertical) {
	    trackWidth = getTotalSlides(spec) * spec.slideWidth;
	  } else {
	    trackHeight = trackChildren * spec.slideHeight;
	  }
	  var style = {
	    opacity: 1,
	    transition: "",
	    WebkitTransition: ""
	  };
	  if (spec.useTransform) {
	    var WebkitTransform = !spec.vertical ? "translate3d(" + spec.left + "px, 0px, 0px)" : "translate3d(0px, " + spec.left + "px, 0px)";
	    var transform = !spec.vertical ? "translate3d(" + spec.left + "px, 0px, 0px)" : "translate3d(0px, " + spec.left + "px, 0px)";
	    var msTransform = !spec.vertical ? "translateX(" + spec.left + "px)" : "translateY(" + spec.left + "px)";
	    style = _extends({}, style, {
	      WebkitTransform: WebkitTransform,
	      transform: transform,
	      msTransform: msTransform
	    });
	  } else {
	    if (spec.vertical) {
	      style["top"] = spec.left;
	    } else {
	      style["left"] = spec.left;
	    }
	  }
	  if (spec.fade) style = { opacity: 1 };
	  if (trackWidth) style.width = trackWidth;
	  if (trackHeight) style.height = trackHeight;
	
	  // Fallback for IE8
	  if (window && !window.addEventListener && window.attachEvent) {
	    if (!spec.vertical) {
	      style.marginLeft = spec.left + "px";
	    } else {
	      style.marginTop = spec.left + "px";
	    }
	  }
	
	  return style;
	};
	var getTrackAnimateCSS = exports.getTrackAnimateCSS = function getTrackAnimateCSS(spec) {
	  checkSpecKeys(spec, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth", "speed", "cssEase"]);
	  var style = getTrackCSS(spec);
	  // useCSS is true by default so it can be undefined
	  if (spec.useTransform) {
	    style.WebkitTransition = "-webkit-transform " + spec.speed + "ms " + spec.cssEase;
	    style.transition = "transform " + spec.speed + "ms " + spec.cssEase;
	  } else {
	    if (spec.vertical) {
	      style.transition = "top " + spec.speed + "ms " + spec.cssEase;
	    } else {
	      style.transition = "left " + spec.speed + "ms " + spec.cssEase;
	    }
	  }
	  return style;
	};
	var getTrackLeft = exports.getTrackLeft = function getTrackLeft(spec) {
	  if (spec.unslick) {
	    return 0;
	  }
	
	  checkSpecKeys(spec, ["slideIndex", "trackRef", "infinite", "centerMode", "slideCount", "slidesToShow", "slidesToScroll", "slideWidth", "listWidth", "variableWidth", "slideHeight"]);
	
	  var slideIndex = spec.slideIndex,
	      trackRef = spec.trackRef,
	      infinite = spec.infinite,
	      centerMode = spec.centerMode,
	      slideCount = spec.slideCount,
	      slidesToShow = spec.slidesToShow,
	      slidesToScroll = spec.slidesToScroll,
	      slideWidth = spec.slideWidth,
	      listWidth = spec.listWidth,
	      variableWidth = spec.variableWidth,
	      slideHeight = spec.slideHeight,
	      fade = spec.fade,
	      vertical = spec.vertical;
	
	
	  var slideOffset = 0;
	  var targetLeft;
	  var targetSlide;
	  var verticalOffset = 0;
	
	  if (fade || spec.slideCount === 1) {
	    return 0;
	  }
	
	  var slidesToOffset = 0;
	  if (infinite) {
	    slidesToOffset = -getPreClones(spec); // bring active slide to the beginning of visual area
	    // if next scroll doesn't have enough children, just reach till the end of original slides instead of shifting slidesToScroll children
	    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {
	      slidesToOffset = -(slideIndex > slideCount ? slidesToShow - (slideIndex - slideCount) : slideCount % slidesToScroll);
	    }
	    // shift current slide to center of the frame
	    if (centerMode) {
	      slidesToOffset += parseInt(slidesToShow / 2);
	    }
	  } else {
	    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {
	      slidesToOffset = slidesToShow - slideCount % slidesToScroll;
	    }
	    if (centerMode) {
	      slidesToOffset = parseInt(slidesToShow / 2);
	    }
	  }
	  slideOffset = slidesToOffset * slideWidth;
	  verticalOffset = slidesToOffset * slideHeight;
	
	  if (!vertical) {
	    targetLeft = slideIndex * slideWidth * -1 + slideOffset;
	  } else {
	    targetLeft = slideIndex * slideHeight * -1 + verticalOffset;
	  }
	
	  if (variableWidth === true) {
	    var targetSlideIndex;
	    var trackElem = _reactDom2.default.findDOMNode(trackRef);
	    targetSlideIndex = slideIndex + getPreClones(spec);
	    targetSlide = trackElem && trackElem.childNodes[targetSlideIndex];
	    targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;
	    if (centerMode === true) {
	      targetSlideIndex = infinite ? slideIndex + getPreClones(spec) : slideIndex;
	      targetSlide = trackElem && trackElem.children[targetSlideIndex];
	      targetLeft = 0;
	      for (var slide = 0; slide < targetSlideIndex; slide++) {
	        targetLeft -= trackElem && trackElem.children[slide] && trackElem.children[slide].offsetWidth;
	      }
	      targetLeft -= parseInt(spec.centerPadding);
	      targetLeft += targetSlide && (listWidth - targetSlide.offsetWidth) / 2;
	    }
	  }
	
	  return targetLeft;
	};
	
	var getPreClones = exports.getPreClones = function getPreClones(spec) {
	  if (spec.unslick || !spec.infinite) {
	    return 0;
	  }
	  if (spec.variableWidth) {
	    return spec.slideCount;
	  }
	  return spec.slidesToShow + (spec.centerMode ? 1 : 0);
	};
	
	var getPostClones = exports.getPostClones = function getPostClones(spec) {
	  if (spec.unslick || !spec.infinite) {
	    return 0;
	  }
	  return spec.slideCount;
	};
	
	var getTotalSlides = exports.getTotalSlides = function getTotalSlides(spec) {
	  return spec.slideCount === 1 ? 1 : getPreClones(spec) + spec.slideCount + getPostClones(spec);
	};
	var siblingDirection = exports.siblingDirection = function siblingDirection(spec) {
	  if (spec.targetSlide > spec.currentSlide) {
	    if (spec.targetSlide > spec.currentSlide + slidesOnRight(spec)) {
	      return "left";
	    }
	    return "right";
	  } else {
	    if (spec.targetSlide < spec.currentSlide - slidesOnLeft(spec)) {
	      return "right";
	    }
	    return "left";
	  }
	};
	
	var slidesOnRight = exports.slidesOnRight = function slidesOnRight(_ref) {
	  var slidesToShow = _ref.slidesToShow,
	      centerMode = _ref.centerMode,
	      rtl = _ref.rtl,
	      centerPadding = _ref.centerPadding;
	
	  // returns no of slides on the right of active slide
	  if (centerMode) {
	    var right = (slidesToShow - 1) / 2 + 1;
	    if (parseInt(centerPadding) > 0) right += 1;
	    if (rtl && slidesToShow % 2 === 0) right += 1;
	    return right;
	  }
	  if (rtl) {
	    return 0;
	  }
	  return slidesToShow - 1;
	};
	
	var slidesOnLeft = exports.slidesOnLeft = function slidesOnLeft(_ref2) {
	  var slidesToShow = _ref2.slidesToShow,
	      centerMode = _ref2.centerMode,
	      rtl = _ref2.rtl,
	      centerPadding = _ref2.centerPadding;
	
	  // returns no of slides on the left of active slide
	  if (centerMode) {
	    var left = (slidesToShow - 1) / 2 + 1;
	    if (parseInt(centerPadding) > 0) left += 1;
	    if (!rtl && slidesToShow % 2 === 0) left += 1;
	    return left;
	  }
	  if (rtl) {
	    return slidesToShow - 1;
	  }
	  return 0;
	};
	
	var canUseDOM = exports.canUseDOM = function canUseDOM() {
	  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
	};

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.passProps = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var passProps = exports.passProps = function passProps(WrappedComponent) {
	    return function (propsToPass) {
	        return function (_Component) {
	            _inherits(PassProps, _Component);
	
	            function PassProps() {
	                _classCallCheck(this, PassProps);
	
	                return _possibleConstructorReturn(this, (PassProps.__proto__ || Object.getPrototypeOf(PassProps)).apply(this, arguments));
	            }
	
	            _createClass(PassProps, [{
	                key: "render",
	                value: function render() {
	                    return _react2.default.createElement(WrappedComponent, Object.assign({}, this.props, propsToPass));
	                }
	            }]);
	
	            return PassProps;
	        }(_react.Component);
	    };
	};

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* global FORMS_CNFG_GLBL */
	
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	__webpack_require__(473);
	
	var _utils = __webpack_require__(9);
	
	var _libphonenumberJs = __webpack_require__(100);
	
	var _path = __webpack_require__(4);
	
	var _actionCreators = __webpack_require__(3);
	
	var _immutable = __webpack_require__(13);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var getVisibility = function getVisibility(isValid) {
	    return isValid ? "" : "--invisible";
	};
	var getReadOnlyClass = function getReadOnlyClass(isReadOnly) {
	    return isReadOnly ? "PhoneInputContainer--readOnly" : "";
	};
	var getFocus = function getFocus(isFocus, inputValue, isValid, isDirty) {
	    return isFocus || inputValue.length > 0 || !(0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "--focused" : "";
	};
	
	var PhoneInput = function PhoneInput(props) {
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 5);
	
	    var isFocus = _getInputStates2[0];
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var errorMsg = _getInputStates2[3];
	    var inputValue = _getInputStates2[4];
	    var formData = props.formData;
	
	    var focus = getFocus(isFocus, inputValue, isValid, isDirty);
	    var visibility = getVisibility(isValid);
	    var showErrorLabel = (0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : "phoneInputLabel--error";
	    var isReadOnly = props.state.getIn((0, _path.readOnlyPath)(), (0, _immutable.Map)()).get(props.inputID);
	    var disabled = props.disabled ? props.disabled : false;
	    var readOnlyClass = getReadOnlyClass(isReadOnly);
	    var errorContainerStyle = (0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : "PhoneInputContainer--error";
	    var tick = _react2.default.createElement("img", { className: "phoneInputTick" + visibility, src: FORMS_CNFG_GLBL.imgPath + "/Tick.svg", alt: "tick" });
	    var cross = _react2.default.createElement("img", { className: "phoneInputTick", src: FORMS_CNFG_GLBL.imgPath + "/cross.svg", alt: "tick" });
	    var validPic = (0, _utils.isValidOrNotDirty)(isValid, isDirty) ? tick : cross;
	
	    var formatPhoneNo = function formatPhoneNo(no) {
	        return new _libphonenumberJs.asYouType().input(no);
	    };
	
	    var country = function country(number) {
	        var formatter = new _libphonenumberJs.asYouType();
	        formatter.input(number);
	        return formatter.country;
	    };
	    var formatNumber = function formatNumber(number) {
	        var formatter = new _libphonenumberJs.asYouType();
	        return formatter.input(number);
	    };
	    var countryFlagPath = country(inputValue) ? FORMS_CNFG_GLBL.imgPath + "/countriesFlags/" + country(inputValue).toLowerCase() + ".svg" : "";
	    var validator = function validator(value, validators) {
	        return validators.map(function (x) {
	            return x(formData);
	        }).map(function (x) {
	            return x(value);
	        }).filter(function (x) {
	            return !x.status;
	        });
	    };
	    var handleOnChange = function handleOnChange(e) {
	        var value = e.target.value === "" ? "+" : formatPhoneNo(e.target.value);
	        props.dispatchEditInput(props.inputID, value, validator(value, props.validators), props.step);
	    };
	
	    return _react2.default.createElement(
	        "div",
	        { id: props.inputID },
	        _react2.default.createElement(
	            "div",
	            { className: "PhoneInputContainer " + readOnlyClass + " " + errorContainerStyle },
	            countryFlagPath && _react2.default.createElement("img", { className: "phoneInputFlag", src: countryFlagPath, alt: "flag" }),
	            _react2.default.createElement(
	                "label",
	                { className: "phoneInputLabel" + focus + " " + showErrorLabel },
	                "" + props.inputLabel + ((0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : " " + errorMsg)
	            ),
	            _react2.default.createElement("input", {
	                onFocus: function onFocus() {
	                    if (inputValue === "") {
	                        props.dispatchEditInput(props.inputID, "+65", validator("+65", props.validators), props.step);
	                    }
	                    props.dispatchOnFocusInput(props.step, props.inputID, true);
	                },
	                onBlur: function onBlur() {
	                    props.dispatchOnBlurInput(props.step, props.inputID, false);
	                },
	                disabled: isReadOnly || disabled,
	                value: formatNumber(inputValue),
	                onChange: handleOnChange,
	                type: "text",
	                className: "phoneInput" + focus
	            }),
	            isReadOnly ? _react2.default.createElement("img", {
	                className: "phoneInputTick--verified",
	                src: FORMS_CNFG_GLBL.imgPath + "/non-editable-icon4.svg",
	                alt: "dropdown-arrow"
	            }) : validPic
	        ),
	        formData.formSteps.basicInfo.postInputsMessage.MobileNumberMessage.default.title && _react2.default.createElement(
	            "div",
	            { className: "PhoneInputMessageContent" },
	            formData.formSteps.basicInfo.postInputsMessage.MobileNumberMessage.default.title
	        )
	    );
	};
	
	PhoneInput.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    inputLabel: _react.PropTypes.string,
	    inputID: _react.PropTypes.string,
	    step: _react.PropTypes.string.isRequired,
	    value: _react.PropTypes.string,
	    dispatchOnBlurInput: _react.PropTypes.func.isRequired,
	    formData: _react.PropTypes.object.isRequired,
	    disabled: _react.PropTypes.bool
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchOnFocusInput: (0, _redux.bindActionCreators)(_actionCreators.onFocusInput, dispatch),
	        dispatchOnBlurInput: (0, _redux.bindActionCreators)(_actionCreators.onBlurInput, dispatch),
	        dispatchEditInput: (0, _redux.bindActionCreators)(_actionCreators.editInput, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(PhoneInput);

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* global FORMS_CNFG_GLBL */
	
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	__webpack_require__(475);
	
	var _actionCreators = __webpack_require__(3);
	
	var _utils = __webpack_require__(9);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Icon = function Icon(props) {
	    // const visibility = props.isValid ? "" : "--invisible";
	    // const tick = (
	    //     <img className={`prependTextInputTick${visibility}`} src={`${FORMS_CNFG_GLBL.imgPath}/Tick.svg`} alt='tick' />
	    // );
	    var cross = _react2.default.createElement("img", { className: "prependTextInputTick", src: FORMS_CNFG_GLBL.imgPath + "/cross.svg", alt: "tick" });
	
	    return (0, _utils.isValidOrNotDirty)(props.isValid, props.isDirty) ? null : cross;
	};
	
	var spinner = _react2.default.createElement("img", {
	    className: "postal-code--spinner",
	    src: FORMS_CNFG_GLBL.imgPath + "/loading_icon_dark.svg",
	    alt: "primary-button"
	});
	var PrependText = function PrependText(props) {
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 5);
	
	    var isFocus = _getInputStates2[0];
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var errorMsg = _getInputStates2[3];
	    var inputValue = _getInputStates2[4];
	    var formData = props.formData;
	    var readOnly = props.readOnly;
	    var isLoading = props.isLoading;
	
	    var focus = isFocus || inputValue.length > 0 || !(0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "--focused" : "";
	    var prependVisibility = focus === "--focused" ? "" : "--invisible";
	    var showErrorLabel = (0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : "prependTextInput--error";
	    var errorContainerStyle = (0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : "PrependTextInputContainer--error";
	    var validator = function validator(value, validators) {
	        return validators.map(function (x) {
	            return x(formData);
	        }).map(function (x) {
	            return x(value);
	        }).filter(function (x) {
	            return !x.status;
	        });
	    };
	
	    var handleOnChange = function handleOnChange(e) {
	        return props.dispatchEditInput(props.inputID, e.target.value, validator(e.target.value, props.validators), props.step);
	    };
	
	    return _react2.default.createElement(
	        "div",
	        { id: props.inputID, className: "PrependTextInputContainer " + errorContainerStyle },
	        _react2.default.createElement(
	            "label",
	            { className: "prependTextInputLabel" + focus + " " + showErrorLabel },
	            "" + props.inputLabel + ((0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : " " + errorMsg)
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "prependTextInputText" + prependVisibility },
	            props.prefix,
	            " -",
	            " "
	        ),
	        _react2.default.createElement("input", {
	            onFocus: function onFocus() {
	                props.dispatchOnFocusInput(props.step, props.inputID, true);
	            },
	            onBlur: function onBlur() {
	                props.dispatchOnBlurInput(props.step, props.inputID, false);
	            },
	            value: inputValue,
	            onChange: handleOnChange,
	            type: "text",
	            className: "prependTextInput" + focus,
	            readOnly: readOnly
	        }),
	        !isLoading && _react2.default.createElement(Icon, { isValid: isValid, isDirty: isDirty }),
	        isLoading && spinner
	    );
	};
	
	PrependText.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    inputID: _react.PropTypes.string,
	    step: _react.PropTypes.string,
	    inputLabel: _react.PropTypes.string,
	    prefix: _react.PropTypes.string,
	    dispatchOnBlurInput: _react.PropTypes.func,
	    readOnly: _react.PropTypes.bool,
	    isLoading: _react.PropTypes.bool,
	    formData: _react.PropTypes.object.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchOnFocusInput: (0, _redux.bindActionCreators)(_actionCreators.onFocusInput, dispatch),
	        dispatchOnBlurInput: (0, _redux.bindActionCreators)(_actionCreators.onBlurInput, dispatch),
	        dispatchEditInput: (0, _redux.bindActionCreators)(_actionCreators.editInput, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(PrependText);

/***/ },
/* 85 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = {
	    basicInfo: 1,
	    otp: 2,
	    pendingApplication: 3,
	    accountDetails: 4,
	    personalInfo: 5,
	    homeMailingAddress: 6,
	    workInfo: 7,
	    uploadDocuments: 8,
	    digitalServices: 9,
	    declaration: 10,
	    summary: 11
	};

/***/ },
/* 86 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on  " + it);
	  return it;
	};


/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(39);
	var core = __webpack_require__(38);
	var ctx = __webpack_require__(423);
	var hide = __webpack_require__(55);
	var PROTOTYPE = 'prototype';
	
	var $export = function (type, name, source) {
	  var IS_FORCED = type & $export.F;
	  var IS_GLOBAL = type & $export.G;
	  var IS_STATIC = type & $export.S;
	  var IS_PROTO = type & $export.P;
	  var IS_BIND = type & $export.B;
	  var IS_WRAP = type & $export.W;
	  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
	  var expProto = exports[PROTOTYPE];
	  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
	  var key, own, out;
	  if (IS_GLOBAL) source = name;
	  for (key in source) {
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if (own && key in exports) continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function (C) {
	      var F = function (a, b, c) {
	        if (this instanceof C) {
	          switch (arguments.length) {
	            case 0: return new C();
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if (IS_PROTO) {
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library`
	module.exports = $export;


/***/ },
/* 88 */
/***/ function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return !!exec();
	  } catch (e) {
	    return true;
	  }
	};


/***/ },
/* 89 */
/***/ function(module, exports) {

	module.exports = function (it) {
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};


/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(143)('keys');
	var uid = __webpack_require__(145);
	module.exports = function (key) {
	  return shared[key] || (shared[key] = uid(key));
	};


/***/ },
/* 91 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil = Math.ceil;
	var floor = Math.floor;
	module.exports = function (it) {
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};


/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(138);
	var defined = __webpack_require__(86);
	module.exports = function (it) {
	  return IObject(defined(it));
	};


/***/ },
/* 93 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 * 
	 */
	
	/*eslint-disable no-self-compare */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.go = exports.replaceLocation = exports.pushLocation = exports.startListener = exports.getUserConfirmation = exports.getCurrentLocation = undefined;
	
	var _LocationUtils = __webpack_require__(40);
	
	var _DOMUtils = __webpack_require__(72);
	
	var _DOMStateStorage = __webpack_require__(154);
	
	var _PathUtils = __webpack_require__(31);
	
	var _ExecutionEnvironment = __webpack_require__(95);
	
	var PopStateEvent = 'popstate';
	var HashChangeEvent = 'hashchange';
	
	var needsHashchangeListener = _ExecutionEnvironment.canUseDOM && !(0, _DOMUtils.supportsPopstateOnHashchange)();
	
	var _createLocation = function _createLocation(historyState) {
	  var key = historyState && historyState.key;
	
	  return (0, _LocationUtils.createLocation)({
	    pathname: window.location.pathname,
	    search: window.location.search,
	    hash: window.location.hash,
	    state: key ? (0, _DOMStateStorage.readState)(key) : undefined
	  }, undefined, key);
	};
	
	var getCurrentLocation = exports.getCurrentLocation = function getCurrentLocation() {
	  var historyState = void 0;
	  try {
	    historyState = window.history.state || {};
	  } catch (error) {
	    // IE 11 sometimes throws when accessing window.history.state
	    // See https://github.com/ReactTraining/history/pull/289
	    historyState = {};
	  }
	
	  return _createLocation(historyState);
	};
	
	var getUserConfirmation = exports.getUserConfirmation = function getUserConfirmation(message, callback) {
	  return callback(window.confirm(message));
	}; // eslint-disable-line no-alert
	
	var startListener = exports.startListener = function startListener(listener) {
	  var handlePopState = function handlePopState(event) {
	    if ((0, _DOMUtils.isExtraneousPopstateEvent)(event)) // Ignore extraneous popstate events in WebKit
	      return;
	    listener(_createLocation(event.state));
	  };
	
	  (0, _DOMUtils.addEventListener)(window, PopStateEvent, handlePopState);
	
	  var handleUnpoppedHashChange = function handleUnpoppedHashChange() {
	    return listener(getCurrentLocation());
	  };
	
	  if (needsHashchangeListener) {
	    (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleUnpoppedHashChange);
	  }
	
	  return function () {
	    (0, _DOMUtils.removeEventListener)(window, PopStateEvent, handlePopState);
	
	    if (needsHashchangeListener) {
	      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleUnpoppedHashChange);
	    }
	  };
	};
	
	var updateLocation = function updateLocation(location, updateState) {
	  var state = location.state,
	      key = location.key;
	
	
	  if (state !== undefined) (0, _DOMStateStorage.saveState)(key, state);
	
	  updateState({ key: key }, (0, _PathUtils.createPath)(location));
	};
	
	var pushLocation = exports.pushLocation = function pushLocation(location) {
	  return updateLocation(location, function (state, path) {
	    return window.history.pushState(state, null, path);
	  });
	};
	
	var replaceLocation = exports.replaceLocation = function replaceLocation(location) {
	  return updateLocation(location, function (state, path) {
	    return window.history.replaceState(state, null, path);
	  });
	};
	
	var go = exports.go = function go(n) {
	  if (n) window.history.go(n);
	};

/***/ },
/* 95 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _AsyncUtils = __webpack_require__(518);
	
	var _PathUtils = __webpack_require__(31);
	
	var _runTransitionHook = __webpack_require__(97);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _Actions = __webpack_require__(71);
	
	var _LocationUtils = __webpack_require__(40);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var createHistory = function createHistory() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var getCurrentLocation = options.getCurrentLocation,
	      getUserConfirmation = options.getUserConfirmation,
	      pushLocation = options.pushLocation,
	      replaceLocation = options.replaceLocation,
	      go = options.go,
	      keyLength = options.keyLength;
	
	
	  var currentLocation = void 0;
	  var pendingLocation = void 0;
	  var beforeListeners = [];
	  var listeners = [];
	  var allKeys = [];
	
	  var getCurrentIndex = function getCurrentIndex() {
	    if (pendingLocation && pendingLocation.action === _Actions.POP) return allKeys.indexOf(pendingLocation.key);
	
	    if (currentLocation) return allKeys.indexOf(currentLocation.key);
	
	    return -1;
	  };
	
	  var updateLocation = function updateLocation(nextLocation) {
	    var currentIndex = getCurrentIndex();
	
	    currentLocation = nextLocation;
	
	    if (currentLocation.action === _Actions.PUSH) {
	      allKeys = [].concat(allKeys.slice(0, currentIndex + 1), [currentLocation.key]);
	    } else if (currentLocation.action === _Actions.REPLACE) {
	      allKeys[currentIndex] = currentLocation.key;
	    }
	
	    listeners.forEach(function (listener) {
	      return listener(currentLocation);
	    });
	  };
	
	  var listenBefore = function listenBefore(listener) {
	    beforeListeners.push(listener);
	
	    return function () {
	      return beforeListeners = beforeListeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  };
	
	  var listen = function listen(listener) {
	    listeners.push(listener);
	
	    return function () {
	      return listeners = listeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  };
	
	  var confirmTransitionTo = function confirmTransitionTo(location, callback) {
	    (0, _AsyncUtils.loopAsync)(beforeListeners.length, function (index, next, done) {
	      (0, _runTransitionHook2.default)(beforeListeners[index], location, function (result) {
	        return result != null ? done(result) : next();
	      });
	    }, function (message) {
	      if (getUserConfirmation && typeof message === 'string') {
	        getUserConfirmation(message, function (ok) {
	          return callback(ok !== false);
	        });
	      } else {
	        callback(message !== false);
	      }
	    });
	  };
	
	  var transitionTo = function transitionTo(nextLocation) {
	    if (currentLocation && (0, _LocationUtils.locationsAreEqual)(currentLocation, nextLocation) || pendingLocation && (0, _LocationUtils.locationsAreEqual)(pendingLocation, nextLocation)) return; // Nothing to do
	
	    pendingLocation = nextLocation;
	
	    confirmTransitionTo(nextLocation, function (ok) {
	      if (pendingLocation !== nextLocation) return; // Transition was interrupted during confirmation
	
	      pendingLocation = null;
	
	      if (ok) {
	        // Treat PUSH to same path like REPLACE to be consistent with browsers
	        if (nextLocation.action === _Actions.PUSH) {
	          var prevPath = (0, _PathUtils.createPath)(currentLocation);
	          var nextPath = (0, _PathUtils.createPath)(nextLocation);
	
	          if (nextPath === prevPath && (0, _LocationUtils.statesAreEqual)(currentLocation.state, nextLocation.state)) nextLocation.action = _Actions.REPLACE;
	        }
	
	        if (nextLocation.action === _Actions.POP) {
	          updateLocation(nextLocation);
	        } else if (nextLocation.action === _Actions.PUSH) {
	          if (pushLocation(nextLocation) !== false) updateLocation(nextLocation);
	        } else if (nextLocation.action === _Actions.REPLACE) {
	          if (replaceLocation(nextLocation) !== false) updateLocation(nextLocation);
	        }
	      } else if (currentLocation && nextLocation.action === _Actions.POP) {
	        var prevIndex = allKeys.indexOf(currentLocation.key);
	        var nextIndex = allKeys.indexOf(nextLocation.key);
	
	        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL
	      }
	    });
	  };
	
	  var push = function push(input) {
	    return transitionTo(createLocation(input, _Actions.PUSH));
	  };
	
	  var replace = function replace(input) {
	    return transitionTo(createLocation(input, _Actions.REPLACE));
	  };
	
	  var goBack = function goBack() {
	    return go(-1);
	  };
	
	  var goForward = function goForward() {
	    return go(1);
	  };
	
	  var createKey = function createKey() {
	    return Math.random().toString(36).substr(2, keyLength || 6);
	  };
	
	  var createHref = function createHref(location) {
	    return (0, _PathUtils.createPath)(location);
	  };
	
	  var createLocation = function createLocation(location, action) {
	    var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : createKey();
	    return (0, _LocationUtils.createLocation)(location, action, key);
	  };
	
	  return {
	    getCurrentLocation: getCurrentLocation,
	    listenBefore: listenBefore,
	    listen: listen,
	    transitionTo: transitionTo,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    createKey: createKey,
	    createPath: _PathUtils.createPath,
	    createHref: createHref,
	    createLocation: createLocation
	  };
	};
	
	exports.default = createHistory;

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _warning = __webpack_require__(33);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var runTransitionHook = function runTransitionHook(hook, location, callback) {
	  var result = hook(location, callback);
	
	  if (hook.length < 2) {
	    // Assume the hook runs synchronously and automatically
	    // call the callback with the return value.
	    callback(result);
	  } else {
	     false ? (0, _warning2.default)(result === undefined, 'You should not "return" in a transition hook with a callback argument; ' + 'call the callback instead') : void 0;
	  }
	};
	
	exports.default = runTransitionHook;

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.FIRST_GROUP_PATTERN = undefined;
	
	var _extends2 = __webpack_require__(133);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getIterator2 = __webpack_require__(66);
	
	var _getIterator3 = _interopRequireDefault(_getIterator2);
	
	exports.default = format;
	exports.format_national_number_using_format = format_national_number_using_format;
	exports.format_national_number = format_national_number;
	exports.choose_format_for_number = choose_format_for_number;
	exports.local_to_international_style = local_to_international_style;
	
	var _common = __webpack_require__(73);
	
	var _parse = __webpack_require__(42);
	
	var _metadata = __webpack_require__(41);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var default_options = {
		formatExtension: function formatExtension(number, extension) {
			return number + ' ext. ' + extension;
		}
	
		// Formats a phone number
		//
		// Example use cases:
		//
		// ```js
		// format('8005553535', 'RU', 'International')
		// format('8005553535', 'RU', 'International', metadata)
		// format({ phone: '8005553535', country: 'RU' }, 'International')
		// format({ phone: '8005553535', country: 'RU' }, 'International', metadata)
		// format('+78005553535', 'National')
		// format('+78005553535', 'National', metadata)
		// ```
		//
	}; // This is a port of Google Android `libphonenumber`'s
	// `phonenumberutil.js` of 17th November, 2016.
	//
	// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js
	
	function format(arg_1, arg_2, arg_3, arg_4, arg_5) {
		var _sort_out_arguments = sort_out_arguments(arg_1, arg_2, arg_3, arg_4, arg_5),
		    input = _sort_out_arguments.input,
		    format_type = _sort_out_arguments.format_type,
		    options = _sort_out_arguments.options,
		    metadata = _sort_out_arguments.metadata;
	
		var country_metadata = void 0;
	
		if (input.country) {
			country_metadata = metadata.countries[input.country];
		}
	
		var _parse_phone_number_a = (0, _parse.parse_phone_number_and_country_phone_code)(input.phone, metadata),
		    country_phone_code = _parse_phone_number_a.country_phone_code,
		    number = _parse_phone_number_a.number;
	
		if (country_phone_code) {
			// Check country restriction
			if (input.country && country_metadata && country_phone_code !== (0, _metadata.get_phone_code)(country_metadata)) {
				return input.phone;
			}
	
			country_metadata = (0, _metadata.get_metadata_by_country_phone_code)(country_phone_code, metadata);
		}
	
		if (!country_metadata) {
			return input.phone;
		}
	
		switch (format_type) {
			case 'International':
				if (!number) {
					return '+' + (0, _metadata.get_phone_code)(country_metadata);
				}
				var national_number = format_national_number(number, 'International', false, country_metadata);
				var international_number = '+' + (0, _metadata.get_phone_code)(country_metadata) + ' ' + national_number;
				if (input.ext || input.ext === 0) {
					return options.formatExtension(international_number, input.ext);
				}
				return international_number;
	
			case 'E.164':
			// "International_plaintext" is deprecated
			case 'International_plaintext':
				// `E.164` doesn't define "phone number extensions".
				return '+' + (0, _metadata.get_phone_code)(country_metadata) + input.phone;
	
			case 'RFC3966':
				return '+' + (0, _metadata.get_phone_code)(country_metadata) + input.phone + (input.ext || input.ext === 0 ? ';ext=' + input.ext : '');
	
			case 'National':
				if (!number) {
					return '';
				}
				var _national_number = format_national_number(number, 'National', false, country_metadata);
				if (input.ext || input.ext === 0) {
					return options.formatExtension(_national_number, input.ext);
				}
				return _national_number;
		}
	}
	
	// This was originally set to $1 but there are some countries for which the
	// first group is not used in the national pattern (e.g. Argentina) so the $1
	// group does not match correctly.  Therefore, we use \d, so that the first
	// group actually used in the pattern will be matched.
	var FIRST_GROUP_PATTERN = exports.FIRST_GROUP_PATTERN = /(\$\d)/;
	
	function format_national_number_using_format(number, format, international, enforce_national_prefix, country_metadata) {
		var format_pattern_matcher = new RegExp((0, _metadata.get_format_pattern)(format));
	
		var national_prefix_formatting_rule = (0, _metadata.get_format_national_prefix_formatting_rule)(format, country_metadata);
	
		// National prefix is omitted if there's no national prefix formatting rule
		// set for this country, or when this rule is set but
		// national prefix is optional for this phone number format
		// (and it is not enforced explicitly)
		var national_prefix_may_be_omitted = !national_prefix_formatting_rule || national_prefix_formatting_rule && (0, _metadata.get_format_national_prefix_is_optional_when_formatting)(format, country_metadata) && !enforce_national_prefix;
	
		if (!international && !national_prefix_may_be_omitted) {
			return number.replace(format_pattern_matcher, (0, _metadata.get_format_format)(format).replace(FIRST_GROUP_PATTERN, national_prefix_formatting_rule));
		}
	
		var formatted_number = number.replace(format_pattern_matcher, international ? (0, _metadata.get_format_international_format)(format) : (0, _metadata.get_format_format)(format));
	
		if (international) {
			return local_to_international_style(formatted_number);
		}
	
		return formatted_number;
	}
	
	function format_national_number(number, format_as, enforce_national_prefix, country_metadata) {
		var format = choose_format_for_number((0, _metadata.get_formats)(country_metadata), number);
	
		if (!format) {
			return number;
		}
	
		return format_national_number_using_format(number, format, format_as === 'International', enforce_national_prefix, country_metadata);
	}
	
	function choose_format_for_number(available_formats, national_number) {
		var _iteratorNormalCompletion = true;
		var _didIteratorError = false;
		var _iteratorError = undefined;
	
		try {
			for (var _iterator = (0, _getIterator3.default)(available_formats), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
				var _format = _step.value;
	
				// Validate leading digits
				if ((0, _metadata.get_format_leading_digits_patterns)(_format).length > 0) {
					// The last leading_digits_pattern is used here, as it is the most detailed
					var last_leading_digits_pattern = (0, _metadata.get_format_leading_digits_patterns)(_format)[(0, _metadata.get_format_leading_digits_patterns)(_format).length - 1];
	
					// If leading digits don't match then move on to the next phone number format
					if (national_number.search(last_leading_digits_pattern) !== 0) {
						continue;
					}
				}
	
				// Check that the national number matches the phone number format regular expression
				if ((0, _common.matches_entirely)(national_number, new RegExp((0, _metadata.get_format_pattern)(_format)))) {
					return _format;
				}
			}
		} catch (err) {
			_didIteratorError = true;
			_iteratorError = err;
		} finally {
			try {
				if (!_iteratorNormalCompletion && _iterator.return) {
					_iterator.return();
				}
			} finally {
				if (_didIteratorError) {
					throw _iteratorError;
				}
			}
		}
	}
	
	// Removes brackets and replaces dashes with spaces.
	//
	// E.g. "(999) 111-22-33" -> "999 111 22 33"
	//
	function local_to_international_style(local) {
		return local.replace(new RegExp('[' + _parse.VALID_PUNCTUATION + ']+', 'g'), ' ').trim();
	}
	
	// Sort out arguments
	function sort_out_arguments() {
		var arg_1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
		var arg_2 = arguments[1];
		var arg_3 = arguments[2];
		var arg_4 = arguments[3];
		var arg_5 = arguments[4];
	
		var input = void 0;
		var format_type = void 0;
		var options = void 0;
		var metadata = void 0;
	
		// Sort out arguments.
	
		// If the phone number is passed as a string.
		// `format('8005553535', ...)`.
		if (typeof arg_1 === 'string') {
			// If country code is supplied.
			// `format('8005553535', 'RU', 'National', [options], metadata)`.
			if (typeof arg_3 === 'string') {
				// Will be `parse()`d later in code
				input = {
					phone: arg_1,
					country: arg_2
				};
	
				format_type = arg_3;
	
				if (arg_5) {
					options = arg_4;
					metadata = arg_5;
				} else {
					metadata = arg_4;
				}
			}
			// Just an international phone number is supplied
			// `format('+78005553535', 'National', [options], metadata)`.
			else {
					// Will be `parse()`d later in code
					input = {
						phone: arg_1
					};
	
					if (typeof arg_2 !== 'string') {
						throw new Error('Format type argument not passed for `format()`');
					}
	
					format_type = arg_2;
	
					if (arg_4) {
						options = arg_3;
						metadata = arg_4;
					} else {
						metadata = arg_3;
					}
				}
		}
		// If the phone number is passed as a parsed number object.
		// `format({ phone: '8005553535', country: 'RU' }, 'National', [options], metadata)`.
		else {
				input = arg_1;
				format_type = arg_2;
	
				if (arg_4) {
					options = arg_3;
					metadata = arg_4;
				} else {
					metadata = arg_3;
				}
			}
	
		// Metadata is required.
		if (!metadata) {
			throw new Error('Metadata is required');
		}
	
		// Validate `format_type`.
		switch (format_type) {
			case 'International':
			case 'E.164':
			// "International_plaintext" is deprecated
			case 'International_plaintext':
			case 'National':
			case 'RFC3966':
				break;
			default:
				throw new Error('Unknown format type argument passed to "format()": "' + format_type + '"');
		}
	
		// Apply default options.
		if (options) {
			options = (0, _extends3.default)({}, default_options, options);
		} else {
			options = default_options;
		}
	
		return { input: input, format_type: format_type, options: options, metadata: metadata };
	}
	//# sourceMappingURL=format.js.map

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = get_number_type;
	exports.is_of_type = is_of_type;
	exports.sort_out_arguments = sort_out_arguments;
	
	var _parse = __webpack_require__(42);
	
	var _parse2 = _interopRequireDefault(_parse);
	
	var _common = __webpack_require__(73);
	
	var _metadata = __webpack_require__(41);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Finds out national phone number type (fixed line, mobile, etc)
	function get_number_type(arg_1, arg_2, arg_3) {
		var _sort_out_arguments = sort_out_arguments(arg_1, arg_2, arg_3),
		    input = _sort_out_arguments.input,
		    metadata = _sort_out_arguments.metadata;
	
		// When no input was passed
	
	
		if (!input) {
			return;
		}
	
		// When `parse()` returned `{}`
		// meaning that the phone number is not a valid one.
		if (!input.country) {
			return;
		}
	
		var national_number = input.phone;
		var country_metadata = metadata.countries[input.country];
	
		// The following is copy-pasted from the original function:
		// https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835
	
		// Is this national number even valid for this country
		if (!is_of_type(national_number, (0, _metadata.get_national_number_pattern)(country_metadata))) {
			return; // 'UNKNOWN'
		}
	
		if (is_of_type(national_number, (0, _metadata.get_type_premium_rate)(country_metadata))) {
			return 'PREMIUM_RATE';
		}
	
		if (is_of_type(national_number, (0, _metadata.get_type_toll_free)(country_metadata))) {
			return 'TOLL_FREE';
		}
	
		/* istanbul ignore if */
		if (is_of_type(national_number, (0, _metadata.get_type_shared_cost)(country_metadata))) {
			return 'SHARED_COST';
		}
	
		/* istanbul ignore if */
		if (is_of_type(national_number, (0, _metadata.get_type_voip)(country_metadata))) {
			return 'VOIP';
		}
	
		if (is_of_type(national_number, (0, _metadata.get_type_personal_number)(country_metadata))) {
			return 'PERSONAL_NUMBER';
		}
	
		/* istanbul ignore if */
		if (is_of_type(national_number, (0, _metadata.get_type_pager)(country_metadata))) {
			return 'PAGER';
		}
	
		/* istanbul ignore if */
		if (is_of_type(national_number, (0, _metadata.get_type_uan)(country_metadata))) {
			return 'UAN';
		}
	
		/* istanbul ignore if */
		if (is_of_type(national_number, (0, _metadata.get_type_voice_mail)(country_metadata))) {
			return 'VOICEMAIL';
		}
	
		// Is it fixed line number
		if (is_of_type(national_number, (0, _metadata.get_type_fixed_line)(country_metadata))) {
			// Because duplicate regular expressions are removed
			// to reduce metadata size, if there's no "mobile" pattern
			// then it means it was removed due to being a duplicate of some other pattern.
			//
			if (!(0, _metadata.get_type_mobile)(country_metadata)) {
				return 'FIXED_LINE_OR_MOBILE';
			}
	
			// Check if the number happens to qualify as both fixed line and mobile.
			// (no such country in the minimal metadata set)
			/* istanbul ignore if */
			if (is_of_type(national_number, (0, _metadata.get_type_mobile)(country_metadata))) {
				return 'FIXED_LINE_OR_MOBILE';
			}
	
			return 'FIXED_LINE';
		}
	
		if (is_of_type(national_number, (0, _metadata.get_type_mobile)(country_metadata))) {
			return 'MOBILE';
		}
	
		// return 'UNKNOWN'
	}
	
	function is_of_type(national_number, type) {
		// // Check if any possible number lengths are present;
		// // if so, we use them to avoid checking
		// // the validation pattern if they don't match.
		// // If they are absent, this means they match
		// // the general description, which we have
		// // already checked before a specific number type.
		// if (get_possible_lengths(type) &&
		// 	get_possible_lengths(type).indexOf(national_number.length) === -1)
		// {
		// 	return false
		// }
	
		// get_type_pattern(type) === type
		return (0, _common.matches_entirely)(national_number, type);
	}
	
	// Sort out arguments
	function sort_out_arguments(arg_1, arg_2, arg_3) {
		var input = void 0;
		var metadata = void 0;
	
		// Normalize numerical `value`.
		// https://github.com/catamphetamine/libphonenumber-js/issues/142
		// `getNumberType(88005553535, ...)`.
		if (typeof arg_1 === 'number') {
			arg_1 = String(arg_1);
		}
	
		// If the phone number is passed as a string.
		// `getNumberType('88005553535', ...)`.
		if (typeof arg_1 === 'string') {
			// If "resrict country" argument is being passed
			// then convert it to an `options` object.
			// `getNumberType('88005553535', 'RU', metadata)`.
			if (typeof arg_2 === 'string' || arg_2 === undefined) {
				metadata = arg_3;
	
				// `parse` extracts phone numbers from raw text,
				// therefore it will cut off all "garbage" characters,
				// while this `validate` function needs to verify
				// that the phone number contains no "garbage"
				// therefore the explicit `is_viable_phone_number` check.
				if ((0, _parse.is_viable_phone_number)(arg_1)) {
					input = (0, _parse2.default)(arg_1, arg_2, metadata);
				}
			}
			// No "resrict country" argument is being passed.
			// International phone number is passed.
			// `getNumberType('+78005553535', metadata)`.
			else {
					metadata = arg_2;
	
					// `parse` extracts phone numbers from raw text,
					// therefore it will cut off all "garbage" characters,
					// while this `validate` function needs to verify
					// that the phone number contains no "garbage"
					// therefore the explicit `is_viable_phone_number` check.
					if ((0, _parse.is_viable_phone_number)(arg_1)) {
						input = (0, _parse2.default)(arg_1, metadata);
					}
				}
		}
		// If the phone number is passed as a parsed phone number.
		// `getNumberType({ phone: '88005553535', country: 'RU' }, ...)`.
		else {
				// The `arg_1` must be a valid phone number
				// as a whole, not just a part of it which gets parsed here.
				if (arg_1 && arg_1.phone && (0, _parse.is_viable_phone_number)(arg_1.phone)) {
					input = arg_1;
				}
	
				metadata = arg_2;
			}
	
		// Metadata is required.
		if (!metadata || !metadata.countries) {
			throw new Error('Metadata is required');
		}
	
		return { input: input, metadata: metadata };
	}
	//# sourceMappingURL=types.js.map

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'
	
	var custom   = __webpack_require__(527)
	var metadata = __webpack_require__(524)
	
	exports = module.exports = {}
	
	exports.parse = function parse()
	{
		var parameters = Array.prototype.slice.call(arguments)
		parameters.push(metadata)
		return custom.parse.apply(this, parameters)
	}
	
	exports.format = function format()
	{
		var parameters = Array.prototype.slice.call(arguments)
		parameters.push(metadata)
		return custom.format.apply(this, parameters)
	}
	
	exports.getNumberType = function getNumberType()
	{
		var parameters = Array.prototype.slice.call(arguments)
		parameters.push(metadata)
		return custom.getNumberType.apply(this, parameters)
	}
	
	exports.isValidNumber = function isValidNumber()
	{
		var parameters = Array.prototype.slice.call(arguments)
		parameters.push(metadata)
		return custom.isValidNumber.apply(this, parameters)
	}
	
	exports.AsYouType = function AsYouType(country)
	{
		custom.AsYouType.call(this, country, metadata)
	}
	
	exports.AsYouType.prototype = Object.create(custom.AsYouType.prototype, {})
	exports.AsYouType.prototype.constructor = exports.AsYouType
	
	exports.DIGIT_PLACEHOLDER = custom.DIGIT_PLACEHOLDER
	exports.DIGITS            = custom.DIGITS
	
	// camelCase aliases
	// `get_number_type` name is deprecated
	exports.get_number_type = exports.getNumberType
	// `is_valid_number` name is deprecated
	exports.is_valid_number = exports.isValidNumber
	// `as_you_type` name is deprecated
	exports.as_you_type = exports.AsYouType
	// `asYouType` name is deprecated
	exports.asYouType = exports.AsYouType
	
	exports.getPhoneCode = function(country)
	{
		return custom.getPhoneCode(country, metadata)
	}

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(529),
	    getPrototype = __webpack_require__(531),
	    isObjectLike = __webpack_require__(536);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}
	
	module.exports = isPlainObject;


/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMLazyTree = __webpack_require__(43);
	var Danger = __webpack_require__(549);
	var ReactDOMComponentTree = __webpack_require__(15);
	var ReactInstrumentation = __webpack_require__(25);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(111);
	var setInnerHTML = __webpack_require__(79);
	var setTextContent = __webpack_require__(300);
	
	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});
	
	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}
	
	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}
	
	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}
	
	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}
	
	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}
	
	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }
	
	  if (false) {
	    ReactInstrumentation.debugTool.onHostOperation({
	      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
	      type: 'replace text',
	      payload: stringText
	    });
	  }
	}
	
	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (false) {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: prevInstance._debugID,
	        type: 'replace with',
	        payload: markup.toString()
	      });
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: nextInstance._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  };
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
	
	  replaceDelimitedText: replaceDelimitedText,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (false) {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case 'INSERT_MARKUP':
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'insert child',
	              payload: { toIndex: update.toIndex, content: update.content.toString() }
	            });
	          }
	          break;
	        case 'MOVE_EXISTING':
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'move child',
	              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
	            });
	          }
	          break;
	        case 'SET_MARKUP':
	          setInnerHTML(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace children',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'TEXT_CONTENT':
	          setTextContent(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace text',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'REMOVE_NODE':
	          removeChild(parentNode, update.fromNode);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'remove child',
	              payload: { fromIndex: update.fromIndex }
	            });
	          }
	          break;
	      }
	    }
	  }
	
	};
	
	module.exports = DOMChildrenOperations;

/***/ },
/* 103 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};
	
	module.exports = DOMNamespaces;

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var eventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!eventPluginOrder) {
	    // Wait until an `eventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var pluginModule = namesToPlugins[pluginName];
	    var pluginIndex = eventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !pluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
	    var publishedEvents = pluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, pluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
	
	  if (false) {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
	
	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames:  false ? {} : null,
	  // Trust the developer to only use possibleRegistrationNames in __DEV__
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (injectedEventPluginOrder) {
	    !!eventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var pluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
	        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = pluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    if (dispatchConfig.phasedRegistrationNames !== undefined) {
	      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
	      // that it is not undefined.
	      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	
	      for (var phase in phasedRegistrationNames) {
	        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
	          continue;
	        }
	        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
	        if (pluginModule) {
	          return pluginModule;
	        }
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    eventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	
	    if (false) {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactErrorUtils = __webpack_require__(109);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};
	
	function isEndish(topLevelType) {
	  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
	}
	function isStartish(topLevelType) {
	  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
	}
	
	var validateEventDispatches;
	if (false) {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (false) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;

/***/ },
/* 106 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var React = __webpack_require__(48);
	var ReactPropTypesSecret = __webpack_require__(578);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}
	
	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: React.PropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(8);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a) {
	  try {
	    func(a);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (false) {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
	      var boundFunc = func.bind(null, a);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      // $FlowFixMe https://github.com/facebook/flow/issues/2336
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactCurrentOwner = __webpack_require__(28);
	var ReactInstanceMap = __webpack_require__(60);
	var ReactInstrumentation = __webpack_require__(25);
	var ReactUpdates = __webpack_require__(26);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (false) {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }
	
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (false) {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (false) {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }
	
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },
	
	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }
	
	};
	
	module.exports = ReactUpdateQueue;

/***/ },
/* 111 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */
	
	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};
	
	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 112 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ },
/* 113 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ },
/* 114 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	
	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }
	
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(17);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ },
/* 116 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(14);
	
	var emptyFunction = __webpack_require__(24);
	var warning = __webpack_require__(11);
	
	var validateDOMNesting = emptyFunction;
	
	if (false) {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    current: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.current = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	
	      case 'pre':
	      case 'listing':
	
	      case 'table':
	
	      case 'hr':
	
	      case 'xmp':
	
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    if (childText != null) {
	      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      var tagDisplayName = childTag;
	      var whitespaceInfo = '';
	      if (childTag === '#text') {
	        if (/\S/.test(childText)) {
	          tagDisplayName = 'Text nodes';
	        } else {
	          tagDisplayName = 'Whitespace text nodes';
	          whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
	        }
	      } else {
	        tagDisplayName = '<' + childTag + '>';
	      }
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;

/***/ },
/* 118 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ },
/* 119 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.loopAsync = loopAsync;
	exports.mapAsync = mapAsync;
	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var sync = false,
	      hasNext = false,
	      doneArgs = void 0;
	
	  function done() {
	    isDone = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = [].concat(Array.prototype.slice.call(arguments));
	      return;
	    }
	
	    callback.apply(this, arguments);
	  }
	
	  function next() {
	    if (isDone) {
	      return;
	    }
	
	    hasNext = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      return;
	    }
	
	    sync = true;
	
	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work.call(this, currentTurn++, next, done);
	    }
	
	    sync = false;
	
	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(this, doneArgs);
	      return;
	    }
	
	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  }
	
	  next();
	}
	
	function mapAsync(array, work, callback) {
	  var length = array.length;
	  var values = [];
	
	  if (length === 0) return callback(null, values);
	
	  var isDone = false,
	      doneCount = 0;
	
	  function done(index, error, value) {
	    if (isDone) return;
	
	    if (error) {
	      isDone = true;
	      callback(error);
	    } else {
	      values[index] = value;
	
	      isDone = ++doneCount === length;
	
	      if (isDone) callback(null, values);
	    }
	  }
	
	  array.forEach(function (item, index) {
	    work(item, index, function (error, value) {
	      done(index, error, value);
	    });
	  });
	}

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.ContextProvider = ContextProvider;
	exports.ContextSubscriber = ContextSubscriber;
	
	var _react = __webpack_require__(2);
	
	// Works around issues with context updates failing to propagate.
	// Caveat: the context value is expected to never change its identity.
	// https://github.com/facebook/react/issues/2517
	// https://github.com/reactjs/react-router/issues/470
	
	var contextProviderShape = _react.PropTypes.shape({
	  subscribe: _react.PropTypes.func.isRequired,
	  eventIndex: _react.PropTypes.number.isRequired
	});
	
	function makeContextName(name) {
	  return '@@contextSubscriber/' + name;
	}
	
	function ContextProvider(name) {
	  var _childContextTypes, _ref2;
	
	  var contextName = makeContextName(name);
	  var listenersKey = contextName + '/listeners';
	  var eventIndexKey = contextName + '/eventIndex';
	  var subscribeKey = contextName + '/subscribe';
	
	  return _ref2 = {
	    childContextTypes: (_childContextTypes = {}, _childContextTypes[contextName] = contextProviderShape.isRequired, _childContextTypes),
	
	    getChildContext: function getChildContext() {
	      var _ref;
	
	      return _ref = {}, _ref[contextName] = {
	        eventIndex: this[eventIndexKey],
	        subscribe: this[subscribeKey]
	      }, _ref;
	    },
	    componentWillMount: function componentWillMount() {
	      this[listenersKey] = [];
	      this[eventIndexKey] = 0;
	    },
	    componentWillReceiveProps: function componentWillReceiveProps() {
	      this[eventIndexKey]++;
	    },
	    componentDidUpdate: function componentDidUpdate() {
	      var _this = this;
	
	      this[listenersKey].forEach(function (listener) {
	        return listener(_this[eventIndexKey]);
	      });
	    }
	  }, _ref2[subscribeKey] = function (listener) {
	    var _this2 = this;
	
	    // No need to immediately call listener here.
	    this[listenersKey].push(listener);
	
	    return function () {
	      _this2[listenersKey] = _this2[listenersKey].filter(function (item) {
	        return item !== listener;
	      });
	    };
	  }, _ref2;
	}
	
	function ContextSubscriber(name) {
	  var _contextTypes, _ref4;
	
	  var contextName = makeContextName(name);
	  var lastRenderedEventIndexKey = contextName + '/lastRenderedEventIndex';
	  var handleContextUpdateKey = contextName + '/handleContextUpdate';
	  var unsubscribeKey = contextName + '/unsubscribe';
	
	  return _ref4 = {
	    contextTypes: (_contextTypes = {}, _contextTypes[contextName] = contextProviderShape, _contextTypes),
	
	    getInitialState: function getInitialState() {
	      var _ref3;
	
	      if (!this.context[contextName]) {
	        return {};
	      }
	
	      return _ref3 = {}, _ref3[lastRenderedEventIndexKey] = this.context[contextName].eventIndex, _ref3;
	    },
	    componentDidMount: function componentDidMount() {
	      if (!this.context[contextName]) {
	        return;
	      }
	
	      this[unsubscribeKey] = this.context[contextName].subscribe(this[handleContextUpdateKey]);
	    },
	    componentWillReceiveProps: function componentWillReceiveProps() {
	      var _setState;
	
	      if (!this.context[contextName]) {
	        return;
	      }
	
	      this.setState((_setState = {}, _setState[lastRenderedEventIndexKey] = this.context[contextName].eventIndex, _setState));
	    },
	    componentWillUnmount: function componentWillUnmount() {
	      if (!this[unsubscribeKey]) {
	        return;
	      }
	
	      this[unsubscribeKey]();
	      this[unsubscribeKey] = null;
	    }
	  }, _ref4[handleContextUpdateKey] = function (eventIndex) {
	    if (eventIndex !== this.state[lastRenderedEventIndexKey]) {
	      var _setState2;
	
	      this.setState((_setState2 = {}, _setState2[lastRenderedEventIndexKey] = eventIndex, _setState2));
	    }
	  }, _ref4;
	}

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.locationShape = exports.routerShape = undefined;
	
	var _react = __webpack_require__(2);
	
	var func = _react.PropTypes.func,
	    object = _react.PropTypes.object,
	    shape = _react.PropTypes.shape,
	    string = _react.PropTypes.string;
	var routerShape = exports.routerShape = shape({
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired,
	  setRouteLeaveHook: func.isRequired,
	  isActive: func.isRequired
	});
	
	var locationShape = exports.locationShape = shape({
	  pathname: string.isRequired,
	  search: string.isRequired,
	  state: object,
	  action: string.isRequired,
	  key: string
	});

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _getRouteParams = __webpack_require__(629);
	
	var _getRouteParams2 = _interopRequireDefault(_getRouteParams);
	
	var _ContextUtils = __webpack_require__(120);
	
	var _RouteUtils = __webpack_require__(32);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes,
	    array = _React$PropTypes.array,
	    func = _React$PropTypes.func,
	    object = _React$PropTypes.object;
	
	/**
	 * A <RouterContext> renders the component tree for a given router state
	 * and sets the history object and the current location in context.
	 */
	
	var RouterContext = _react2.default.createClass({
	  displayName: 'RouterContext',
	
	
	  mixins: [(0, _ContextUtils.ContextProvider)('router')],
	
	  propTypes: {
	    router: object.isRequired,
	    location: object.isRequired,
	    routes: array.isRequired,
	    params: object.isRequired,
	    components: array.isRequired,
	    createElement: func.isRequired
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      createElement: _react2.default.createElement
	    };
	  },
	
	
	  childContextTypes: {
	    router: object.isRequired
	  },
	
	  getChildContext: function getChildContext() {
	    return {
	      router: this.props.router
	    };
	  },
	  createElement: function createElement(component, props) {
	    return component == null ? null : this.props.createElement(component, props);
	  },
	  render: function render() {
	    var _this = this;
	
	    var _props = this.props,
	        location = _props.location,
	        routes = _props.routes,
	        params = _props.params,
	        components = _props.components,
	        router = _props.router;
	
	    var element = null;
	
	    if (components) {
	      element = components.reduceRight(function (element, components, index) {
	        if (components == null) return element; // Don't create new children; use the grandchildren.
	
	        var route = routes[index];
	        var routeParams = (0, _getRouteParams2.default)(route, params);
	        var props = {
	          location: location,
	          params: params,
	          route: route,
	          router: router,
	          routeParams: routeParams,
	          routes: routes
	        };
	
	        if ((0, _RouteUtils.isReactChildren)(element)) {
	          props.children = element;
	        } else if (element) {
	          for (var prop in element) {
	            if (Object.prototype.hasOwnProperty.call(element, prop)) props[prop] = element[prop];
	          }
	        }
	
	        if ((typeof components === 'undefined' ? 'undefined' : _typeof(components)) === 'object') {
	          var elements = {};
	
	          for (var key in components) {
	            if (Object.prototype.hasOwnProperty.call(components, key)) {
	              // Pass through the key as a prop to createElement to allow
	              // custom createElement functions to know which named component
	              // they're rendering, for e.g. matching up to fetched data.
	              elements[key] = _this.createElement(components[key], _extends({
	                key: key }, props));
	            }
	          }
	
	          return elements;
	        }
	
	        return _this.createElement(components, props);
	      }, element);
	    }
	
	    !(element === null || element === false || _react2.default.isValidElement(element)) ?  false ? (0, _invariant2.default)(false, 'The root route must render a single element') : (0, _invariant2.default)(false) : void 0;
	
	    return element;
	  }
	});
	
	exports.default = RouterContext;
	module.exports = exports['default'];

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(50);
	
	var ReactNoopUpdateQueue = __webpack_require__(124);
	
	var canDefineProperty = __webpack_require__(322);
	var emptyObject = __webpack_require__(57);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (false) {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var warning = __webpack_require__(11);
	
	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};
	
	module.exports = ReactNoopUpdateQueue;

/***/ },
/* 125 */
/***/ function(module, exports) {

	var COMPLETE = 'complete',
	    CANCELED = 'canceled';
	
	function raf(task){
	    if('requestAnimationFrame' in window){
	        return window.requestAnimationFrame(task);
	    }
	
	    setTimeout(task, 16);
	}
	
	function setElementScroll(element, x, y){
	    if(element.self === element){
	        element.scrollTo(x, y);
	    }else{
	        element.scrollLeft = x;
	        element.scrollTop = y;
	    }
	}
	
	function getTargetScrollLocation(target, parent, align){
	    var targetPosition = target.getBoundingClientRect(),
	        parentPosition,
	        x,
	        y,
	        differenceX,
	        differenceY,
	        targetWidth,
	        targetHeight,
	        leftAlign = align && align.left != null ? align.left : 0.5,
	        topAlign = align && align.top != null ? align.top : 0.5,
	        leftOffset = align && align.leftOffset != null ? align.leftOffset : 0,
	        topOffset = align && align.topOffset != null ? align.topOffset : 0,
	        leftScalar = leftAlign,
	        topScalar = topAlign;
	
	    if(parent.self === parent){
	        targetWidth = Math.min(targetPosition.width, parent.innerWidth);
	        targetHeight = Math.min(targetPosition.height, parent.innerHeight);
	        x = targetPosition.left + parent.pageXOffset - parent.innerWidth * leftScalar + targetWidth * leftScalar;
	        y = targetPosition.top + parent.pageYOffset - parent.innerHeight * topScalar + targetHeight * topScalar;
	        x -= leftOffset;
	        y -= topOffset;
	        differenceX = x - parent.pageXOffset;
	        differenceY = y - parent.pageYOffset;
	    }else{
	        targetWidth = targetPosition.width;
	        targetHeight = targetPosition.height;
	        parentPosition = parent.getBoundingClientRect();
	        var offsetLeft = targetPosition.left - (parentPosition.left - parent.scrollLeft);
	        var offsetTop = targetPosition.top - (parentPosition.top - parent.scrollTop);
	        x = offsetLeft + (targetWidth * leftScalar) - parent.clientWidth * leftScalar;
	        y = offsetTop + (targetHeight * topScalar) - parent.clientHeight * topScalar;
	        x = Math.max(Math.min(x, parent.scrollWidth - parent.clientWidth), 0);
	        y = Math.max(Math.min(y, parent.scrollHeight - parent.clientHeight), 0);
	        x -= leftOffset;
	        y -= topOffset;
	        differenceX = x - parent.scrollLeft;
	        differenceY = y - parent.scrollTop;
	    }
	
	    return {
	        x: x,
	        y: y,
	        differenceX: differenceX,
	        differenceY: differenceY
	    };
	}
	
	function animate(parent){
	    raf(function(){
	        var scrollSettings = parent._scrollSettings;
	        if(!scrollSettings){
	            return;
	        }
	
	        var location = getTargetScrollLocation(scrollSettings.target, parent, scrollSettings.align),
	            time = Date.now() - scrollSettings.startTime,
	            timeValue = Math.min(1 / scrollSettings.time * time, 1);
	
	        if(
	            time > scrollSettings.time + 20
	        ){
	            setElementScroll(parent, location.x, location.y);
	            parent._scrollSettings = null;
	            return scrollSettings.end(COMPLETE);
	        }
	
	        var easeValue = 1 - scrollSettings.ease(timeValue);
	
	        setElementScroll(parent,
	            location.x - location.differenceX * easeValue,
	            location.y - location.differenceY * easeValue
	        );
	
	        animate(parent);
	    });
	}
	function transitionScrollTo(target, parent, settings, callback){
	    var idle = !parent._scrollSettings,
	        lastSettings = parent._scrollSettings,
	        now = Date.now(),
	        endHandler;
	
	    if(lastSettings){
	        lastSettings.end(CANCELED);
	    }
	
	    function end(endType){
	        parent._scrollSettings = null;
	        if(parent.parentElement && parent.parentElement._scrollSettings){
	            parent.parentElement._scrollSettings.end(endType);
	        }
	        callback(endType);
	        parent.removeEventListener('touchstart', endHandler);
	    }
	
	    parent._scrollSettings = {
	        startTime: lastSettings ? lastSettings.startTime : Date.now(),
	        target: target,
	        time: settings.time + (lastSettings ? now - lastSettings.startTime : 0),
	        ease: settings.ease,
	        align: settings.align,
	        end: end
	    };
	
	    endHandler = end.bind(null, CANCELED);
	    parent.addEventListener('touchstart', endHandler);
	
	    if(idle){
	        animate(parent);
	    }
	}
	
	function defaultIsScrollable(element){
	    return (
	        'pageXOffset' in element ||
	        (
	            element.scrollHeight !== element.clientHeight ||
	            element.scrollWidth !== element.clientWidth
	        ) &&
	        getComputedStyle(element).overflow !== 'hidden'
	    );
	}
	
	function defaultValidTarget(){
	    return true;
	}
	
	module.exports = function(target, settings, callback){
	    if(!target){
	        return;
	    }
	
	    if(typeof settings === 'function'){
	        callback = settings;
	        settings = null;
	    }
	
	    if(!settings){
	        settings = {};
	    }
	
	    settings.time = isNaN(settings.time) ? 1000 : settings.time;
	    settings.ease = settings.ease || function(v){return 1 - Math.pow(1 - v, v / 2);};
	
	    var parent = target.parentElement,
	        parents = 0;
	
	    function done(endType){
	        parents--;
	        if(!parents){
	            callback && callback(endType);
	        }
	    }
	
	    var validTarget = settings.validTarget || defaultValidTarget;
	    var isScrollable = settings.isScrollable;
	
	    while(parent){
	        if(validTarget(parent, parents) && (isScrollable ? isScrollable(parent, defaultIsScrollable) : defaultIsScrollable(parent))){
	            parents++;
	            transitionScrollTo(target, parent, settings, done);
	        }
	
	        parent = parent.parentElement;
	
	        if(!parent){
	            return;
	        }
	
	        if(parent.tagName === 'BODY'){
	            parent = parent.ownerDocument;
	            parent = parent.defaultView || parent.ownerWindow;
	        }
	    }
	};


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* global FORMS_CNFG_GLBL */
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _actionCreators = __webpack_require__(3);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _utils = __webpack_require__(9);
	
	__webpack_require__(466);
	
	var _ValidatorHOC = __webpack_require__(20);
	
	var _path = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var validator = function validator(value, validators, formData) {
	    return validators.map(function (x) {
	        return x(formData);
	    }).map(function (x) {
	        return x(value);
	    }).filter(function (x) {
	        return !x.status;
	    });
	};
	
	var Icon = function Icon(props) {
	    var visibility = props.isValid ? "--visible" : "--invisible";
	    var tick = _react2.default.createElement("img", { className: "textInputTick" + visibility, src: FORMS_CNFG_GLBL.imgPath + "/Tick.svg", alt: "tick" });
	    var cross = _react2.default.createElement("img", { className: "textInputTick--visible", src: FORMS_CNFG_GLBL.imgPath + "/cross.svg", alt: "tick" });
	
	    return (0, _utils.isValidOrNotDirty)(props.isValid, props.isDirty) ? tick : cross;
	};
	
	var getErrorContainerStyle = function getErrorContainerStyle(validOrNotDirty) {
	    return validOrNotDirty ? "" : "textInputLabel-container--error";
	};
	var TextInput = function TextInput(props) {
	    var formData = props.formData;
	
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 5);
	
	    var isFocus = _getInputStates2[0];
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var errorMsg = _getInputStates2[3];
	    var inputValue = _getInputStates2[4];
	
	    var isLoading = props.state.getIn((0, _path.uiInProgressPath)(props.step, props.inputID), false);
	    var value = props.value ? props.value : inputValue;
	    var isValidOrNotDirtyVar = (0, _utils.isValidOrNotDirty)(isValid, isDirty);
	    var focus = isFocus || value.length > 0 || !isValidOrNotDirtyVar ? "--focused" : "";
	
	    var showErrorLabel = isValidOrNotDirtyVar ? "" : "textInputLabel--error";
	    var errorContainerStyle = getErrorContainerStyle(isValidOrNotDirtyVar);
	    var isDOB = props.inputID === _inputsConstant.DATE_OF_BIRTH || props.dateFormat;
	    var disabled = props.disabled ? props.disabled : false;
	    var keyCode = void 0;
	    var handleOnChange = function handleOnChange(e) {
	        var regex = /(^\d{2}$)|(^\d{2}\/\d{2}$)/;
	        var dateFormatRegex = /(^\d{1,2}$)|(^\d{2}\/$)|(^\d{2}\/\d{1,2}$)|(^\d{2}\/\d{2}\/$)|(^\d{2}\/\d{2}\/\d{1,4}$)/;
	        var val = isDOB && regex.test(e.target.value) && keyCode !== 8 ? e.target.value + "/" : e.target.value;
	
	        if (isDOB && !dateFormatRegex.test(e.target.value) && keyCode !== 8) {
	            val = props.state.getIn((0, _path.dataPath)([props.inputID]), "");
	        }
	
	        var upperCaseValue = props.upperCase ? val.toUpperCase() : val;
	        return props.dispatchEditInput(props.inputID, upperCaseValue, validator(upperCaseValue, props.validators, formData), props.step);
	    };
	    var spinner = _react2.default.createElement("img", {
	        className: "textInputTick--spinner",
	        src: FORMS_CNFG_GLBL.imgPath + "/loading_icon_dark.svg",
	        alt: "primary-button"
	    });
	
	    return _react2.default.createElement(
	        "div",
	        {
	            id: props.inputID,
	            className: "textInputContainer " + errorContainerStyle,
	            onKeyDown: function onKeyDown(e) {
	                keyCode = e.keyCode;
	            },
	            onFocus: function onFocus() {
	                props.dispatchOnFocusInput(props.step, props.inputID, true);
	            },
	            onBlur: function onBlur() {
	                props.dispatchOnBlurInput(props.step, props.inputID, false);
	                return props.additionalOnBlur && props.additionalOnBlur();
	            }
	        },
	        _react2.default.createElement(
	            "div",
	            { className: "textInputContent" },
	            _react2.default.createElement(
	                "label",
	                { className: "textInputLabel" + focus + " " + showErrorLabel },
	                "" + props.inputLabel + ((0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : " " + errorMsg)
	            ),
	            _react2.default.createElement("input", {
	                disabled: disabled,
	                value: value,
	                onChange: props.onChange ? props.onChange : handleOnChange,
	                type: "text",
	                className: "textInput" + focus
	            }),
	            isLoading && spinner,
	            !isLoading && value && _react2.default.createElement(Icon, { isValid: isValid, isDirty: isDirty })
	        )
	    );
	};
	
	TextInput.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    title: _react.PropTypes.string,
	    inputLabel: _react.PropTypes.string,
	    inputID: _react.PropTypes.string,
	    description: _react.PropTypes.string,
	    dropdownItems: _react.PropTypes.array,
	    path: _react.PropTypes.array,
	    dispatchOnFocusInput: _react.PropTypes.func,
	    dispatchOnBlurInput: _react.PropTypes.func,
	    dispatchOnEditInput: _react.PropTypes.func,
	    step: _react.PropTypes.string.isRequired,
	    value: _react.PropTypes.string,
	    onChange: _react.PropTypes.func,
	    formData: _react.PropTypes.object.isRequired,
	    additionalOnBlur: _react.PropTypes.func,
	    dateFormat: _react.PropTypes.bool,
	    disabled: _react.PropTypes.bool
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchOnFocusInput: (0, _redux.bindActionCreators)(_actionCreators.onFocusInput, dispatch),
	        dispatchOnBlurInput: (0, _redux.bindActionCreators)(_actionCreators.onBlurInput, dispatch),
	        dispatchEditInput: (0, _redux.bindActionCreators)(_actionCreators.editInput, dispatch)
	    };
	};
	
	exports.default = (0, _ValidatorHOC.validatorHOC)((0, _reactRedux.connect)(null, mapDispatchToProps)(TextInput));

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	__webpack_require__(468);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _utils = __webpack_require__(9);
	
	var _api = __webpack_require__(51);
	
	var _ValidatorHOC = __webpack_require__(20);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var getErrorContainerStyle = function getErrorContainerStyle(validOrNotDirty) {
	    return validOrNotDirty ? "" : "file-upload--container--error";
	};
	var FileUpload = function FileUpload(props) {
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 5);
	
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var errorMsg = _getInputStates2[3];
	    var inputValue = _getInputStates2[4];
	
	    var fileUploadErrorMsg = props.formData["formInputErrorMessages"]["fileUploadError"];
	    var showErrorLabel = isValid || !isDirty ? "" : "file-upload--error";
	    var fileSize = props.state.getIn((0, _path.uploadFileSizePath)(props.inputID));
	    var fileSizeString = fileSize ? " - " + fileSize : "";
	    var descriptionContent = inputValue ? inputValue.replace(/^.*[\\\/]/, "") + fileSizeString : props.description;
	    var checkInputStatus = props.state.getIn((0, _path.uiUploadStatusPath)(props.step, props.inputID), "none");
	    var isFileSelected = checkInputStatus === "uploading" ? "--selected" : "";
	    var errorContainerStyle = getErrorContainerStyle((0, _utils.isValidOrNotDirty)(isValid, isDirty));
	    var inputProgressValue = props.state.getIn((0, _path.uiUploadProgressPath)(props.step, props.inputID), 0);
	    var fileInputRef = null;
	    var checkFileExtension = function checkFileExtension(file, allowedExtensions) {
	        return allowedExtensions.includes(file.split(".").pop());
	    };
	
	    var handleOnChange = function handleOnChange() {
	        var file = fileInputRef.files[0];
	        var extensionIsAllowed = checkFileExtension(file.name, ["jpg", "png", "pdf", "JPG", "PNG", "PDF"]);
	        var actions = {
	            successDispatch: function successDispatch() {
	                return {};
	            },
	            errorDispatch: function errorDispatch() {
	                props.dispatchErrorUploadFile(fileUploadErrorMsg, props.step, props.inputID);
	            },
	            progressDispatch: function progressDispatch(progress) {
	                return props.dispatchupdateUploadProgress(props.step, props.inputID, progress);
	            }
	        };
	        if (extensionIsAllowed) {
	            if (file.size <= 1000000) {
	                (0, _utils.fileUploadHelper)(file, (0, _api.fileUploadUrl)(), props.inputID, actions);
	                props.dispatchUploadFile(props.step, props.inputID, file.name, (0, _utils.bytesToSize)(file.size), []);
	            } else {
	                props.dispatchShowErrorMsg(props.step, props.inputID, "file size cannot exceed 1MB");
	                props.dispatch((0, _actionCreators.removeValidFlag)(props.step, props.inputID));
	            }
	        } else {
	            props.dispatchShowErrorMsg(props.step, props.inputID, "can only be either jpg, png or pdf");
	            props.dispatch((0, _actionCreators.removeValidFlag)(props.step, props.inputID));
	        }
	    };
	    var fileUploadContainer = function fileUploadContainer() {
	        return _react2.default.createElement(
	            "div",
	            { className: "file-upload-button" + isFileSelected },
	            _react2.default.createElement("progress", { className: "file-upload-progress", max: "100", value: inputProgressValue }),
	            _react2.default.createElement(
	                "div",
	                { className: "file-upload-button--text" },
	                checkInputStatus === "none" ? "UPLOAD" : "EDIT"
	            ),
	            _react2.default.createElement("input", {
	                accept: ".jpg,.JPG,.png,.pdf,.PDF,.PNG",
	                ref: function ref(i) {
	                    fileInputRef = i;
	                },
	                type: "file",
	                className: "file-upload-input",
	                onClick: function onClick() {
	                    fileInputRef.value = null;
	                    props.dispatchupdateUploadProgress(props.step, props.inputID, 0);
	                },
	                onChange: handleOnChange
	            })
	        );
	    };
	    return _react2.default.createElement(
	        "div",
	        { id: props.inputID, className: "file-upload--container " + errorContainerStyle },
	        _react2.default.createElement(
	            "div",
	            { className: "file-upload--text-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "file-upload--title " + showErrorLabel },
	                "" + props.title + (isValid || !isDirty ? "" : " " + errorMsg)
	            ),
	            _react2.default.createElement(
	                "div",
	                { className: "file-upload--description" },
	                descriptionContent
	            )
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "file-upload--button-container" },
	            fileUploadContainer()
	        )
	    );
	};
	
	FileUpload.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    inputID: _react.PropTypes.string.isRequired,
	    description: _react.PropTypes.string.isRequired,
	    title: _react.PropTypes.string.isRequired,
	    dispatchUploadFile: _react.PropTypes.func.isRequired,
	    dispatchShowErrorMsg: _react.PropTypes.func.isRequired,
	    dispatchupdateUploadProgress: _react.PropTypes.func.isRequired,
	    formData: _react.PropTypes.object.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchUploadFile: (0, _redux.bindActionCreators)(_actionCreators.uploadFile, dispatch),
	        dispatchupdateUploadProgress: (0, _redux.bindActionCreators)(_actionCreators.updateUploadProgress, dispatch),
	        dispatchShowErrorMsg: (0, _redux.bindActionCreators)(_actionCreators.showErrorMsg, dispatch),
	        dispatchErrorUploadFile: (0, _redux.bindActionCreators)(_actionCreators.errorUploadFile, dispatch)
	    };
	};
	
	exports.default = (0, _ValidatorHOC.validatorHOC)((0, _reactRedux.connect)(null, mapDispatchToProps)(FileUpload));

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.checkBoxDefaultValue = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _actionCreators = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var checkBoxDefaultValue = exports.checkBoxDefaultValue = function checkBoxDefaultValue() {
	    return function (WrappedComponent) {
	        var DefaultValue = function (_Component) {
	            _inherits(DefaultValue, _Component);
	
	            function DefaultValue() {
	                _classCallCheck(this, DefaultValue);
	
	                return _possibleConstructorReturn(this, (DefaultValue.__proto__ || Object.getPrototypeOf(DefaultValue)).apply(this, arguments));
	            }
	
	            _createClass(DefaultValue, [{
	                key: "componentDidMount",
	                value: function componentDidMount() {
	                    if (!this.props.isRequiredToggle) {
	                        this.props.dispatch((0, _actionCreators.onCheck)(this.props.inputID, this.props.step, this.props.toggleTrue));
	                    }
	                }
	            }, {
	                key: "render",
	                value: function render() {
	                    return _react2.default.createElement(WrappedComponent, this.props);
	                }
	            }]);
	
	            return DefaultValue;
	        }(_react.Component);
	
	        DefaultValue.propTypes = {
	            state: _reactImmutableProptypes2.default.map,
	            inputID: _react.PropTypes.string,
	            step: _react.PropTypes.string.isRequired,
	            dispatch: _react.PropTypes.func.isRequired,
	            toggleTrue: _react.PropTypes.bool,
	            isRequiredToggle: _react.PropTypes.bool
	        };
	
	        return DefaultValue;
	    };
	};

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* global FORMS_CNFG_GLBL */
	
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _actionCreators = __webpack_require__(3);
	
	var _utils = __webpack_require__(9);
	
	__webpack_require__(474);
	
	var _path = __webpack_require__(4);
	
	var _ValidatorHOC = __webpack_require__(20);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var getErrorContainerStyle = function getErrorContainerStyle(validOrNotDirty) {
	    return validOrNotDirty ? "" : "postal-code-input-container--error";
	};
	var PostalCodeInput = function PostalCodeInput(props) {
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 5);
	
	    var isFocus = _getInputStates2[0];
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var errorMsg = _getInputStates2[3];
	    var inputValue = _getInputStates2[4];
	    var formData = props.formData;
	
	    var focus = isFocus || inputValue.length > 0 || !(0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "--focused" : "";
	    var visibility = inputValue.length === 6 ? "--visible" : "--invisible";
	    var showErrorLabel = (0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : "textInputLabel--error";
	    var isPostalServiceDown = props.state.getIn((0, _path.postalCodeServiceStatusPath)(), false);
	    var isTriesExceeded = props.state.getIn((0, _path.postalCodeCountExceededPath)(props.inputID), false);
	    var errorContainerStyle = getErrorContainerStyle((0, _utils.isValidOrNotDirty)(isValid, isDirty));
	    var tick = _react2.default.createElement("img", { className: "textInputTick" + visibility, src: FORMS_CNFG_GLBL.imgPath + "/Tick.svg", alt: "tick" });
	    var cross = _react2.default.createElement("img", { className: "textInputTick--visible", src: FORMS_CNFG_GLBL.imgPath + "/cross.svg", alt: "tick" });
	    var spinner = _react2.default.createElement("img", {
	        className: "postal-code--spinner",
	        src: FORMS_CNFG_GLBL.imgPath + "/loading_icon_dark.svg",
	        alt: "primary-button"
	    });
	    var validator = function validator(value, validators) {
	        return validators.map(function (x) {
	            return x(formData);
	        }).map(function (x) {
	            return x(value);
	        }).filter(function (x) {
	            return !x.status;
	        });
	    };
	    var isLoading = props.state.getIn((0, _path.postalCodeSpinnerPath)(), false);
	    // const check_value = e =>
	    //     e.target.value.length === 6
	    //         ? props.dispatchEditPostCode(props.inputID, e.target.value, true, props.step) &&
	    //               props.dispatchGetAddress(e.target.value, props.inputID)
	    //         : props.dispatchEditPostCode(props.inputID, e.target.value, false, props.step);
	
	    var handleOnChange = function handleOnChange(e) {
	        var value = e.target.value;
	        props.dispatchEditPostCode(props.inputID, value, validator(value, props.validators), props.step);
	        return value.length === 6 && !isPostalServiceDown && !isTriesExceeded && props.dispatchGetAddress(e.target.value, props.inputID);
	    };
	    return _react2.default.createElement(
	        "div",
	        {
	            id: props.inputID,
	            className: "postal-code-input--container " + errorContainerStyle,
	            onFocus: function onFocus() {
	                props.dispatchOnFocusInput(props.step, props.inputID, true);
	            },
	            onBlur: function onBlur() {
	                props.dispatchOnBlurInput(props.step, props.inputID, false);
	            }
	        },
	        _react2.default.createElement(
	            "div",
	            { className: "postal-code-input--content" },
	            _react2.default.createElement(
	                "label",
	                { className: "textInputLabel" + focus + " " + showErrorLabel },
	                "" + props.inputLabel + ((0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : " " + errorMsg)
	            ),
	            _react2.default.createElement("input", {
	                value: inputValue,
	                onChange: handleOnChange,
	                type: "text",
	                className: "postal-code-input--input" + focus
	            })
	        ),
	        isLoading && spinner,
	        !isLoading && ((0, _utils.isValidOrNotDirty)(isValid, isDirty) ? tick : cross)
	    );
	};
	
	PostalCodeInput.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    step: _react.PropTypes.string.isRequired,
	    inputID: _react.PropTypes.string,
	    dispatchOnToggle: _react.PropTypes.func,
	    dispatchOnBlurInput: _react.PropTypes.func.isRequired,
	    formData: _react.PropTypes.object.isRequired,
	    inputLabel: _react.PropTypes.string
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchOnFocusInput: (0, _redux.bindActionCreators)(_actionCreators.onFocusInput, dispatch),
	        dispatchOnBlurInput: (0, _redux.bindActionCreators)(_actionCreators.onBlurInput, dispatch),
	        dispatchGetAddress: (0, _redux.bindActionCreators)(_actionCreators.getAddress, dispatch),
	        dispatchEditPostCode: (0, _redux.bindActionCreators)(_actionCreators.editPostalCode, dispatch)
	    };
	};
	
	exports.default = (0, _ValidatorHOC.validatorHOC)((0, _reactRedux.connect)(null, mapDispatchToProps)(PostalCodeInput));

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _ToggleButton = __webpack_require__(63);
	
	var _ToggleButton2 = _interopRequireDefault(_ToggleButton);
	
	__webpack_require__(485);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ToggleInputWithTitle = function ToggleInputWithTitle(props) {
	    return _react2.default.createElement(
	        "div",
	        { className: "toggle-input-with-title--container" },
	        _react2.default.createElement(
	            "div",
	            { className: "toggle-input-with-title--text-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "toggle-input-with-title--title" },
	                props.title
	            ),
	            _react2.default.createElement(
	                "div",
	                { className: "toggle-input-with-title--description" },
	                props.description
	            )
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "toggle-input-with-title--button-container" },
	            _react2.default.createElement(_ToggleButton2.default, { state: props.state,
	                inputID: props.inputID,
	                onClick: props.onClick,
	                value: props.value })
	        )
	    );
	};
	
	ToggleInputWithTitle.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    title: _react.PropTypes.string,
	    description: _react.PropTypes.string,
	    inputID: _react.PropTypes.string,
	    value: _react.PropTypes.bool,
	    onClick: _react.PropTypes.func
	};
	
	exports.default = ToggleInputWithTitle;

/***/ },
/* 131 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var formData = exports.formData = {
	    fullName: "",
	    hanYuPinYinName: "",
	    aliasName: "",
	    hanyuPinYinAliasName: "",
	    marriedName: "",
	    nric: "",
	    email: "",
	    mobileNumber: "",
	    nameOntheCard: "",
	    cardLimit: "",
	    currencies: {},
	    // currencies: {
	    //     SGD: {
	    //         purposeOfFunds: "",
	    //         sourceOfFunds: "",
	    //         countryOfFunds: ""
	    //     }
	    // },
	    activateAtms: false,
	    // krisflyerMembershipStatus: false,
	    // krisflyerMembershipFName: "",
	    // krisflyerMembershipLName: "",
	    // krisflyerMembershipNumber: "",
	    dateOfBirth: "",
	    maritalStatus: "",
	    educationLevel: "",
	    nationality: "",
	    countryOfBirth: "",
	    gender: "",
	    // juniorSaverName: "",
	    // juniorSaverGender: "",
	    // juniorSaverDOB: "",
	    // juniorSaverBirthCert: "",
	    // juniorSaverNameNationality: "",
	    // juniorSaverNameCountryOfBirth: "",
	    homePostalCode: "",
	    homeBuilding: "",
	    homeBlock: "",
	    homeStreet: "",
	    homeLevel: "",
	    homeUnitNumber: "",
	    sameHomeMailingAddress: false,
	    mailingCountry: "",
	    mailingPostalCode: "",
	    mailingBuilding: "",
	    mailingBlock: "",
	    mailingStreet: "",
	    mailingLevel: "",
	    mailingUnitNumber: "",
	    mailingAdd1: "",
	    mailingAdd2: "",
	    mailingAdd3: "",
	    mailingAdd4: "",
	    mailingCity: "",
	    residenceStatus: "",
	    natureOfEmployment: "",
	    nameOfEmployer: "",
	    company: "",
	    industry: "",
	    annualIncome: "",
	    occupation: "",
	    lengthOfEmploymentYears: "",
	    lengthOfEmploymentMonths: "",
	    uploadDocumentsBillingProof: "",
	    uploadDocumentsNricFront: "",
	    uploadDocumentsNricBack: "",
	    uploadIncomeProof: "",
	    usResident: false,
	    usCitizen: false,
	    residentCardHolder: false,
	    taxResidencies: {},
	    // taxResidencies: {
	    //     0: {
	    //         country: "",
	    //         id: ""
	    //     }
	    // },
	    signature: ""
	};

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.history = undefined;
	
	var _redux = __webpack_require__(6);
	
	var _reactRouterRedux = __webpack_require__(80);
	
	var _reactRouter = __webpack_require__(315);
	
	var _apiMiddleware = __webpack_require__(394);
	
	var _apiMiddleware2 = _interopRequireDefault(_apiMiddleware);
	
	var _scrollViewMiddleware = __webpack_require__(402);
	
	var _scrollViewMiddleware2 = _interopRequireDefault(_scrollViewMiddleware);
	
	var _errorMiddleware = __webpack_require__(396);
	
	var _errorMiddleware2 = _interopRequireDefault(_errorMiddleware);
	
	var _getOTPMiddleware = __webpack_require__(398);
	
	var _getOTPMiddleware2 = _interopRequireDefault(_getOTPMiddleware);
	
	var _customRouterMiddleware = __webpack_require__(395);
	
	var _customRouterMiddleware2 = _interopRequireDefault(_customRouterMiddleware);
	
	var _getPendingApplicationMiddleware = __webpack_require__(399);
	
	var _getPendingApplicationMiddleware2 = _interopRequireDefault(_getPendingApplicationMiddleware);
	
	var _postOTPMiddleware = __webpack_require__(401);
	
	var _postOTPMiddleware2 = _interopRequireDefault(_postOTPMiddleware);
	
	var _getEncryptionParamsMiddleware = __webpack_require__(397);
	
	var _getEncryptionParamsMiddleware2 = _interopRequireDefault(_getEncryptionParamsMiddleware);
	
	var _getUserStatusMiddleware = __webpack_require__(400);
	
	var _getUserStatusMiddleware2 = _interopRequireDefault(_getUserStatusMiddleware);
	
	var _validateUsernameMiddleware = __webpack_require__(403);
	
	var _validateUsernameMiddleware2 = _interopRequireDefault(_validateUsernameMiddleware);
	
	var _formApi = __webpack_require__(330);
	
	var _formApi2 = _interopRequireDefault(_formApi);
	
	var _rootReducer = __webpack_require__(405);
	
	var _rootReducer2 = _interopRequireDefault(_rootReducer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var defaultState = {};
	// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;
	var composeEnhancers =  false ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || _redux.compose : "" || _redux.compose;
	var store = (0, _redux.createStore)(_rootReducer2.default, defaultState, composeEnhancers((0, _redux.applyMiddleware)((0, _apiMiddleware2.default)(_formApi2.default), _getOTPMiddleware2.default, _scrollViewMiddleware2.default, _errorMiddleware2.default, _customRouterMiddleware2.default, _getPendingApplicationMiddleware2.default, _postOTPMiddleware2.default, _getEncryptionParamsMiddleware2.default, _getUserStatusMiddleware2.default, _validateUsernameMiddleware2.default, (0, _reactRouterRedux.routerMiddleware)(_reactRouter.browserHistory))));
	
	var history = exports.history = (0, _reactRouterRedux.syncHistoryWithStore)(_reactRouter.browserHistory, store);
	
	if (false) {
	    module.hot.accept("./reducers/rootReducer", function () {
	        var nextRootReducer = require("./reducers/rootReducer").default;
	        store.replaceReducer(nextRootReducer);
	    });
	}
	
	exports.default = store;

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _assign = __webpack_require__(411);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _assign2.default || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(135);
	var TAG = __webpack_require__(35)('toStringTag');
	// ES3 wrong here
	var ARG = cof(function () { return arguments; }()) == 'Arguments';
	
	// fallback for IE11 Script Access Denied error
	var tryGet = function (it, key) {
	  try {
	    return it[key];
	  } catch (e) { /* empty */ }
	};
	
	module.exports = function (it) {
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};


/***/ },
/* 135 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function (it) {
	  return toString.call(it).slice(8, -1);
	};


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(89);
	var document = __webpack_require__(39).document;
	// typeof document.createElement is 'object' in old IE
	var is = isObject(document) && isObject(document.createElement);
	module.exports = function (it) {
	  return is ? document.createElement(it) : {};
	};


/***/ },
/* 137 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');


/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(135);
	// eslint-disable-next-line no-prototype-builtins
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};


/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY = __webpack_require__(428);
	var $export = __webpack_require__(87);
	var redefine = __webpack_require__(436);
	var hide = __webpack_require__(55);
	var has = __webpack_require__(69);
	var Iterators = __webpack_require__(56);
	var $iterCreate = __webpack_require__(426);
	var setToStringTag = __webpack_require__(142);
	var getPrototypeOf = __webpack_require__(433);
	var ITERATOR = __webpack_require__(35)('iterator');
	var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
	var FF_ITERATOR = '@@iterator';
	var KEYS = 'keys';
	var VALUES = 'values';
	
	var returnThis = function () { return this; };
	
	module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function (kind) {
	    if (!BUGGY && kind in proto) return proto[kind];
	    switch (kind) {
	      case KEYS: return function keys() { return new Constructor(this, kind); };
	      case VALUES: return function values() { return new Constructor(this, kind); };
	    } return function entries() { return new Constructor(this, kind); };
	  };
	  var TAG = NAME + ' Iterator';
	  var DEF_VALUES = DEFAULT == VALUES;
	  var VALUES_BUG = false;
	  var proto = Base.prototype;
	  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
	  var $default = (!BUGGY && $native) || getMethod(DEFAULT);
	  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
	  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
	  var methods, key, IteratorPrototype;
	  // Fix native
	  if ($anyNative) {
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
	    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if (DEF_VALUES && $native && $native.name !== VALUES) {
	    VALUES_BUG = true;
	    $default = function values() { return $native.call(this); };
	  }
	  // Define iterator
	  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG] = returnThis;
	  if (DEFAULT) {
	    methods = {
	      values: DEF_VALUES ? $default : getMethod(VALUES),
	      keys: IS_SET ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if (FORCED) for (key in methods) {
	      if (!(key in proto)) redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};


/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys = __webpack_require__(434);
	var enumBugKeys = __webpack_require__(137);
	
	module.exports = Object.keys || function keys(O) {
	  return $keys(O, enumBugKeys);
	};


/***/ },
/* 141 */
/***/ function(module, exports) {

	module.exports = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};


/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(70).f;
	var has = __webpack_require__(69);
	var TAG = __webpack_require__(35)('toStringTag');
	
	module.exports = function (it, tag, stat) {
	  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
	};


/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(39);
	var SHARED = '__core-js_shared__';
	var store = global[SHARED] || (global[SHARED] = {});
	module.exports = function (key) {
	  return store[key] || (store[key] = {});
	};


/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(86);
	module.exports = function (it) {
	  return Object(defined(it));
	};


/***/ },
/* 145 */
/***/ function(module, exports) {

	var id = 0;
	var px = Math.random();
	module.exports = function (key) {
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};


/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at = __webpack_require__(437)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(139)(String, 'String', function (iterated) {
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var index = this._i;
	  var point;
	  if (index >= O.length) return { value: undefined, done: true };
	  point = $at(O, index);
	  this._i += point.length;
	  return { value: point, done: false };
	});


/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(444);
	var global = __webpack_require__(39);
	var hide = __webpack_require__(55);
	var Iterators = __webpack_require__(56);
	var TO_STRING_TAG = __webpack_require__(35)('toStringTag');
	
	var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
	  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
	  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
	  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
	  'TextTrackList,TouchList').split(',');
	
	for (var i = 0; i < DOMIterables.length; i++) {
	  var NAME = DOMIterables[i];
	  var Collection = global[NAME];
	  var proto = Collection && Collection.prototype;
	  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}


/***/ },
/* 148 */
/***/ function(module, exports) {

	var requestFrame = (function () {
	  var window = this
	  var raf = window.requestAnimationFrame ||
	    window.mozRequestAnimationFrame ||
	    window.webkitRequestAnimationFrame ||
	    function fallbackRAF(func) {
	      return window.setTimeout(func, 20)
	    }
	  return function requestFrameFunction(func) {
	    return raf(func)
	  }
	})()
	
	var cancelFrame = (function () {
	  var window = this
	  var cancel = window.cancelAnimationFrame ||
	    window.mozCancelAnimationFrame ||
	    window.webkitCancelAnimationFrame ||
	    window.clearTimeout
	  return function cancelFrameFunction(id) {
	    return cancel(id)
	  }
	})()
	
	function resizeListener(e) {
	  var win = e.target || e.srcElement
	  if (win.__resizeRAF__) {
	    cancelFrame(win.__resizeRAF__)
	  }
	  win.__resizeRAF__ = requestFrame(function () {
	    var trigger = win.__resizeTrigger__
	    trigger.__resizeListeners__.forEach(function (fn) {
	      fn.call(trigger, e)
	    })
	  })
	}
	
	var exports = function exports(element, fn) {
	  var window = this
	  var document = window.document
	  var isIE
	
	  var attachEvent = document.attachEvent
	  if (typeof navigator !== 'undefined') {
	    isIE = navigator.userAgent.match(/Trident/) ||
	      navigator.userAgent.match(/Edge/)
	  }
	
	  function objectLoad() {
	    this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__
	    this.contentDocument.defaultView.addEventListener('resize', resizeListener)
	  }
	
	  if (!element.__resizeListeners__) {
	    element.__resizeListeners__ = []
	    if (attachEvent) {
	      element.__resizeTrigger__ = element
	      element.attachEvent('onresize', resizeListener)
	    } else {
	      if (getComputedStyle(element).position === 'static') {
	        element.style.position = 'relative'
	      }
	      var obj = (element.__resizeTrigger__ = document.createElement('object'))
	      obj.setAttribute(
	        'style',
	        'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1; opacity: 0;'
	      )
	      obj.setAttribute('class', 'resize-sensor')
	      obj.__resizeElement__ = element
	      obj.onload = objectLoad
	      obj.type = 'text/html'
	      if (isIE) {
	        element.appendChild(obj)
	      }
	      obj.data = 'about:blank'
	      if (!isIE) {
	        element.appendChild(obj)
	      }
	    }
	  }
	  element.__resizeListeners__.push(fn)
	}
	
	module.exports = typeof window === 'undefined' ? exports : exports.bind(window)
	
	module.exports.unbind = function (element, fn) {
	  var attachEvent = document.attachEvent
	  if (fn) {
	    element.__resizeListeners__.splice(
	      element.__resizeListeners__.indexOf(fn),
	      1
	    )
	  } else {
	    element.__resizeListeners__ = []
	  }
	  if (!element.__resizeListeners__.length) {
	    if (attachEvent) {
	      element.detachEvent('onresize', resizeListener)
	    } else {
	      element.__resizeTrigger__.contentDocument.defaultView.removeEventListener(
	        'resize',
	        resizeListener
	      )
	      delete element.__resizeTrigger__.contentDocument.defaultView.__resizeTrigger__
	      element.__resizeTrigger__ = !element.removeChild(
	        element.__resizeTrigger__
	      )
	    }
	    delete element.__resizeListeners__
	  }
	}


/***/ },
/* 149 */
/***/ function(module, exports) {

	/**
	 * Helper function for iterating over a collection
	 *
	 * @param collection
	 * @param fn
	 */
	function each(collection, fn) {
	    var i      = 0,
	        length = collection.length,
	        cont;
	
	    for(i; i < length; i++) {
	        cont = fn(collection[i], i);
	        if(cont === false) {
	            break; //allow early exit
	        }
	    }
	}
	
	/**
	 * Helper function for determining whether target object is an array
	 *
	 * @param target the object under test
	 * @return {Boolean} true if array, false otherwise
	 */
	function isArray(target) {
	    return Object.prototype.toString.apply(target) === '[object Array]';
	}
	
	/**
	 * Helper function for determining whether target object is a function
	 *
	 * @param target the object under test
	 * @return {Boolean} true if function, false otherwise
	 */
	function isFunction(target) {
	    return typeof target === 'function';
	}
	
	module.exports = {
	    isFunction : isFunction,
	    isArray : isArray,
	    each : each
	};


/***/ },
/* 150 */
30,
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var emptyFunction = __webpack_require__(24);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (false) {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function registerDefault() {}
	};
	
	module.exports = EventListener;

/***/ },
/* 152 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ },
/* 153 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 *
	 * @param {?DOMDocument} doc Defaults to current document.
	 * @return {?DOMElement}
	 */
	function getActiveElement(doc) /*?DOMElement*/{
	  doc = doc || (typeof document !== 'undefined' ? document : undefined);
	  if (typeof doc === 'undefined') {
	    return null;
	  }
	  try {
	    return doc.activeElement || doc.body;
	  } catch (e) {
	    return doc.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.readState = exports.saveState = undefined;
	
	var _warning = __webpack_require__(33);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var QuotaExceededErrors = {
	  QuotaExceededError: true,
	  QUOTA_EXCEEDED_ERR: true
	};
	
	var SecurityErrors = {
	  SecurityError: true
	};
	
	var KeyPrefix = '@@History/';
	
	var createKey = function createKey(key) {
	  return KeyPrefix + key;
	};
	
	var saveState = exports.saveState = function saveState(key, state) {
	  if (!window.sessionStorage) {
	    // Session storage is not available or hidden.
	    // sessionStorage is undefined in Internet Explorer when served via file protocol.
	     false ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available') : void 0;
	
	    return;
	  }
	
	  try {
	    if (state == null) {
	      window.sessionStorage.removeItem(createKey(key));
	    } else {
	      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));
	    }
	  } catch (error) {
	    if (SecurityErrors[error.name]) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	       false ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available due to security settings') : void 0;
	
	      return;
	    }
	
	    if (QuotaExceededErrors[error.name] && window.sessionStorage.length === 0) {
	      // Safari "private mode" throws QuotaExceededError.
	       false ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : void 0;
	
	      return;
	    }
	
	    throw error;
	  }
	};
	
	var readState = exports.readState = function readState(key) {
	  var json = void 0;
	  try {
	    json = window.sessionStorage.getItem(createKey(key));
	  } catch (error) {
	    if (SecurityErrors[error.name]) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	       false ? (0, _warning2.default)(false, '[history] Unable to read state; sessionStorage is not available due to security settings') : void 0;
	
	      return undefined;
	    }
	  }
	
	  if (json) {
	    try {
	      return JSON.parse(json);
	    } catch (error) {
	      // Ignore invalid JSON.
	    }
	  }
	
	  return undefined;
	};

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _runTransitionHook = __webpack_require__(97);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _PathUtils = __webpack_require__(31);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var useBasename = function useBasename(createHistory) {
	  return function () {
	    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    var history = createHistory(options);
	    var basename = options.basename;
	
	
	    var addBasename = function addBasename(location) {
	      if (!location) return location;
	
	      if (basename && location.basename == null) {
	        if (location.pathname.toLowerCase().indexOf(basename.toLowerCase()) === 0) {
	          location.pathname = location.pathname.substring(basename.length);
	          location.basename = basename;
	
	          if (location.pathname === '') location.pathname = '/';
	        } else {
	          location.basename = '';
	        }
	      }
	
	      return location;
	    };
	
	    var prependBasename = function prependBasename(location) {
	      if (!basename) return location;
	
	      var object = typeof location === 'string' ? (0, _PathUtils.parsePath)(location) : location;
	      var pname = object.pathname;
	      var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';
	      var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;
	      var pathname = normalizedBasename + normalizedPathname;
	
	      return _extends({}, object, {
	        pathname: pathname
	      });
	    };
	
	    // Override all read methods with basename-aware versions.
	    var getCurrentLocation = function getCurrentLocation() {
	      return addBasename(history.getCurrentLocation());
	    };
	
	    var listenBefore = function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        return (0, _runTransitionHook2.default)(hook, addBasename(location), callback);
	      });
	    };
	
	    var listen = function listen(listener) {
	      return history.listen(function (location) {
	        return listener(addBasename(location));
	      });
	    };
	
	    // Override all write methods with basename-aware versions.
	    var push = function push(location) {
	      return history.push(prependBasename(location));
	    };
	
	    var replace = function replace(location) {
	      return history.replace(prependBasename(location));
	    };
	
	    var createPath = function createPath(location) {
	      return history.createPath(prependBasename(location));
	    };
	
	    var createHref = function createHref(location) {
	      return history.createHref(prependBasename(location));
	    };
	
	    var createLocation = function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      return addBasename(history.createLocation.apply(history, [prependBasename(location)].concat(args)));
	    };
	
	    return _extends({}, history, {
	      getCurrentLocation: getCurrentLocation,
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation
	    });
	  };
	};
	
	exports.default = useBasename;

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _queryString = __webpack_require__(542);
	
	var _runTransitionHook = __webpack_require__(97);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _LocationUtils = __webpack_require__(40);
	
	var _PathUtils = __webpack_require__(31);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var defaultStringifyQuery = function defaultStringifyQuery(query) {
	  return (0, _queryString.stringify)(query).replace(/%20/g, '+');
	};
	
	var defaultParseQueryString = _queryString.parse;
	
	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know how to handle URL queries.
	 */
	var useQueries = function useQueries(createHistory) {
	  return function () {
	    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    var history = createHistory(options);
	    var stringifyQuery = options.stringifyQuery,
	        parseQueryString = options.parseQueryString;
	
	
	    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;
	
	    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;
	
	    var decodeQuery = function decodeQuery(location) {
	      if (!location) return location;
	
	      if (location.query == null) location.query = parseQueryString(location.search.substring(1));
	
	      return location;
	    };
	
	    var encodeQuery = function encodeQuery(location, query) {
	      if (query == null) return location;
	
	      var object = typeof location === 'string' ? (0, _PathUtils.parsePath)(location) : location;
	      var queryString = stringifyQuery(query);
	      var search = queryString ? '?' + queryString : '';
	
	      return _extends({}, object, {
	        search: search
	      });
	    };
	
	    // Override all read methods with query-aware versions.
	    var getCurrentLocation = function getCurrentLocation() {
	      return decodeQuery(history.getCurrentLocation());
	    };
	
	    var listenBefore = function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        return (0, _runTransitionHook2.default)(hook, decodeQuery(location), callback);
	      });
	    };
	
	    var listen = function listen(listener) {
	      return history.listen(function (location) {
	        return listener(decodeQuery(location));
	      });
	    };
	
	    // Override all write methods with query-aware versions.
	    var push = function push(location) {
	      return history.push(encodeQuery(location, location.query));
	    };
	
	    var replace = function replace(location) {
	      return history.replace(encodeQuery(location, location.query));
	    };
	
	    var createPath = function createPath(location) {
	      return history.createPath(encodeQuery(location, location.query));
	    };
	
	    var createHref = function createHref(location) {
	      return history.createHref(encodeQuery(location, location.query));
	    };
	
	    var createLocation = function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      var newLocation = history.createLocation.apply(history, [encodeQuery(location, location.query)].concat(args));
	
	      if (location.query) newLocation.query = (0, _LocationUtils.createQuery)(location.query);
	
	      return decodeQuery(newLocation);
	    };
	
	    return _extends({}, history, {
	      getCurrentLocation: getCurrentLocation,
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation
	    });
	  };
	};
	
	exports.default = useQueries;

/***/ },
/* 157 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';
	
	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};
	
	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};
	
	var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';
	
	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
	        var keys = Object.getOwnPropertyNames(sourceComponent);
	
	        /* istanbul ignore else */
	        if (isGetOwnPropertySymbolsAvailable) {
	            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
	        }
	
	        for (var i = 0; i < keys.length; ++i) {
	            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
	                try {
	                    targetComponent[keys[i]] = sourceComponent[keys[i]];
	                } catch (error) {
	
	                }
	            }
	        }
	    }
	
	    return targetComponent;
	};


/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.DIGIT_PLACEHOLDER = undefined;
	
	var _getIterator2 = __webpack_require__(66);
	
	var _getIterator3 = _interopRequireDefault(_getIterator2);
	
	var _classCallCheck2 = __webpack_require__(413);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(414);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	exports.close_dangling_braces = close_dangling_braces;
	exports.count_occurences = count_occurences;
	exports.repeat = repeat;
	
	var _metadata = __webpack_require__(41);
	
	var _parse = __webpack_require__(42);
	
	var _format = __webpack_require__(98);
	
	var _common = __webpack_require__(73);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Used in phone number format template creation.
	// Could be any digit, I guess.
	// This is an enhanced port of Google Android `libphonenumber`'s
	// `asyoutypeformatter.js` of 17th November, 2016.
	//
	// https://github.com/googlei18n/libphonenumber/blob/8d21a365061de2ba0675c878a710a7b24f74d2ae/javascript/i18n/phonenumbers/asyoutypeformatter.js
	
	var DUMMY_DIGIT = '9';
	var DUMMY_DIGIT_MATCHER = new RegExp(DUMMY_DIGIT, 'g');
	// I don't know why is it exactly `15`
	var LONGEST_NATIONAL_PHONE_NUMBER_LENGTH = 15;
	// Create a phone number consisting only of the digit 9 that matches the
	// `number_pattern` by applying the pattern to the "longest phone number" string.
	var LONGEST_DUMMY_PHONE_NUMBER = repeat(DUMMY_DIGIT, LONGEST_NATIONAL_PHONE_NUMBER_LENGTH);
	
	// The digits that have not been entered yet will be represented by a \u2008,
	// the punctuation space.
	var DIGIT_PLACEHOLDER = exports.DIGIT_PLACEHOLDER = 'x'; // '\u2008' (punctuation space)
	var DIGIT_PLACEHOLDER_MATCHER = new RegExp(DIGIT_PLACEHOLDER);
	var DIGIT_PLACEHOLDER_MATCHER_GLOBAL = new RegExp(DIGIT_PLACEHOLDER, 'g');
	
	// A pattern that is used to match character classes in regular expressions.
	// An example of a character class is "[1-4]".
	var CHARACTER_CLASS_PATTERN = /\[([^\[\]])*\]/g;
	
	// Any digit in a regular expression that actually denotes a digit. For
	// example, in the regular expression "80[0-2]\d{6,10}", the first 2 digits
	// (8 and 0) are standalone digits, but the rest are not.
	// Two look-aheads are needed because the number following \\d could be a
	// two-digit number, since the phone number can be as long as 15 digits.
	var STANDALONE_DIGIT_PATTERN = /\d(?=[^,}][^,}])/g;
	
	// A pattern that is used to determine if a `format` is eligible
	// to be used by the "as you type formatter".
	// It is eligible when the `format` contains groups of the dollar sign
	// followed by a single digit, separated by valid phone number punctuation.
	// This prevents invalid punctuation (such as the star sign in Israeli star numbers)
	// getting into the output of the "as you type formatter".
	var ELIGIBLE_FORMAT_PATTERN = new RegExp('^' + '[' + _parse.VALID_PUNCTUATION + ']*' + '(\\$\\d[' + _parse.VALID_PUNCTUATION + ']*)+' + '$');
	
	// This is the minimum length of the leading digits of a phone number
	// to guarantee the first "leading digits pattern" for a phone number format
	// to be preemptive.
	var MIN_LEADING_DIGITS_LENGTH = 3;
	
	var VALID_INCOMPLETE_PHONE_NUMBER = '[' + _parse.PLUS_CHARS + ']{0,1}' + '[' + _parse.VALID_PUNCTUATION + _parse.VALID_DIGITS + ']*';
	
	var VALID_INCOMPLETE_PHONE_NUMBER_PATTERN = new RegExp('^' + VALID_INCOMPLETE_PHONE_NUMBER + '$', 'i');
	
	var as_you_type = function () {
		function as_you_type(country_code, metadata) {
			(0, _classCallCheck3.default)(this, as_you_type);
	
			// Metadata is required.
			if (!metadata || !metadata.countries) {
				throw new Error('Metadata is required');
			}
	
			if (country_code && metadata.countries[country_code]) {
				this.default_country = country_code;
			}
	
			this.metadata = metadata;
	
			this.reset();
		}
	
		(0, _createClass3.default)(as_you_type, [{
			key: 'input',
			value: function input(text) {
				// Parse input
	
				var extracted_number = (0, _parse.extract_formatted_phone_number)(text);
	
				// Special case for a lone '+' sign
				// since it's not considered a possible phone number.
				if (!extracted_number) {
					if (text && text.indexOf('+') >= 0) {
						extracted_number = '+';
					}
				}
	
				// Validate possible first part of a phone number
				if (!(0, _common.matches_entirely)(extracted_number, VALID_INCOMPLETE_PHONE_NUMBER_PATTERN)) {
					return this.current_output;
				}
	
				return this.process_input((0, _parse.parse_phone_number)(extracted_number));
			}
		}, {
			key: 'process_input',
			value: function process_input(input) {
				// If an out of position '+' sign detected
				// (or a second '+' sign),
				// then just drop it from the input.
				if (input[0] === '+') {
					if (!this.parsed_input) {
						this.parsed_input += '+';
	
						// If a default country was set
						// then reset it because an explicitly international
						// phone number is being entered
						this.reset_countriness();
					}
	
					input = input.slice(1);
				}
	
				// Raw phone number
				this.parsed_input += input;
	
				// // Reset phone number validation state
				// this.valid = false
	
				// Add digits to the national number
				this.national_number += input;
	
				// Try to format the parsed input
	
				if (this.is_international()) {
					if (!this.country_phone_code) {
						// If one looks at country phone codes
						// then he can notice that no one country phone code
						// is ever a (leftmost) substring of another country phone code.
						// So if a valid country code is extracted so far
						// then it means that this is the country code.
	
						// If no country phone code could be extracted so far,
						// then just return the raw phone number,
						// because it has no way of knowing
						// how to format the phone number so far.
						if (!this.extract_country_phone_code()) {
							// Return raw phone number
							return this.parsed_input;
						}
	
						// Initialize country-specific data
						this.initialize_phone_number_formats_for_this_country_phone_code();
						this.reset_format();
						this.determine_the_country();
					}
					// `this.country` could be `undefined`,
					// for instance, when there is ambiguity
					// in a form of several different countries
					// each corresponding to the same country phone code
					// (e.g. NANPA: USA, Canada, etc),
					// and there's not enough digits entered
					// to reliably determine the country
					// the phone number belongs to.
					// Therefore, in cases of such ambiguity,
					// each time something is input,
					// try to determine the country
					// (if it's not determined yet).
					else if (!this.country) {
							this.determine_the_country();
						}
				} else {
					// Some national prefixes are substrings of other national prefixes
					// (for the same country), therefore try to extract national prefix each time
					// because a longer national prefix might be available at some point in time.
	
					var previous_national_prefix = this.national_prefix;
					this.national_number = this.national_prefix + this.national_number;
	
					// Possibly extract a national prefix
					this.extract_national_prefix();
	
					if (this.national_prefix !== previous_national_prefix) {
						// National number has changed
						// (due to another national prefix been extracted)
						// therefore national number has changed
						// therefore reset all previous formatting data.
						// (and leading digits matching state)
						this.matching_formats = this.available_formats;
						this.reset_format();
					}
				}
	
				if (!this.should_format()) {
					return this.format_as_non_formatted_number();
				}
	
				// Check the available phone number formats
				// based on the currently available leading digits.
				this.match_formats_by_leading_digits();
	
				// Format the phone number (given the next digits)
				var formatted_national_phone_number = this.format_national_phone_number(input);
	
				// If the phone number could be formatted,
				// then return it, possibly prepending with country phone code
				// (for international phone numbers only)
				if (formatted_national_phone_number) {
					return this.full_phone_number(formatted_national_phone_number);
				}
	
				// If the phone number couldn't be formatted,
				// then just fall back to the raw phone number.
				return this.parsed_input;
			}
		}, {
			key: 'format_as_non_formatted_number',
			value: function format_as_non_formatted_number() {
				if (this.is_international() && this.country_phone_code) {
					if (this.national_number) {
						// For convenience, the public `.template` property
						// contains the whole international number
						// if the phone number being input is international:
						// 'x' for the '+' sign, 'x'es for the country phone code,
						// a spacebar and then the template for the national number digits.
						this.template = DIGIT_PLACEHOLDER + repeat(DIGIT_PLACEHOLDER, this.country_phone_code.length) + ' ' + repeat(DIGIT_PLACEHOLDER, this.national_number.length);
	
						return '+' + this.country_phone_code + ' ' + this.national_number;
					}
	
					return '+' + this.country_phone_code;
				}
	
				return this.parsed_input;
			}
		}, {
			key: 'format_national_phone_number',
			value: function format_national_phone_number(next_digits) {
				// Format the next phone number digits
				// using the previously chosen phone number format.
				//
				// This is done here because if `attempt_to_format_complete_phone_number`
				// was placed before this call then the `template`
				// wouldn't reflect the situation correctly (and would therefore be inconsistent)
				//
				var national_number_formatted_with_previous_format = void 0;
				if (this.chosen_format) {
					national_number_formatted_with_previous_format = this.format_next_national_number_digits(next_digits);
				}
	
				// See if the input digits can be formatted properly already. If not,
				// use the results from format_next_national_number_digits(), which does formatting
				// based on the formatting pattern chosen.
	
				var formatted_number = this.attempt_to_format_complete_phone_number();
	
				// Just because a phone number doesn't have a suitable format
				// that doesn't mean that the phone is invalid
				// because phone number formats only format phone numbers,
				// they don't validate them and some (rare) phone numbers
				// are meant to stay non-formatted.
				if (formatted_number) {
					// if (this.country)
					// {
					// 	this.valid = true
					// }
	
					return formatted_number;
				}
	
				// For some phone number formats national prefix
	
				// If the previously chosen phone number format
				// didn't match the next (current) digit being input
				// (leading digits pattern didn't match).
				if (this.choose_another_format()) {
					// And a more appropriate phone number format
					// has been chosen for these `leading digits`,
					// then format the national phone number (so far)
					// using the newly selected phone number pattern.
	
					// Will return `undefined` if it couldn't format
					// the supplied national number
					// using the selected phone number pattern.
	
					return this.reformat_national_number();
				}
	
				// If could format the next (current) digit
				// using the previously chosen phone number format
				// then return the formatted number so far.
	
				// If no new phone number format could be chosen,
				// and couldn't format the supplied national number
				// using the selected phone number pattern,
				// then it will return `undefined`.
	
				return national_number_formatted_with_previous_format;
			}
		}, {
			key: 'reset',
			value: function reset() {
				// Input stripped of non-phone-number characters.
				// Can only contain a possible leading '+' sign and digits.
				this.parsed_input = '';
	
				this.current_output = '';
	
				// This contains the national prefix that has been extracted. It contains only
				// digits without formatting.
				this.national_prefix = '';
	
				this.national_number = '';
	
				this.reset_countriness();
	
				this.reset_format();
	
				// this.valid = false
	
				return this;
			}
		}, {
			key: 'reset_country',
			value: function reset_country() {
				if (this.default_country && !this.is_international()) {
					this.country = this.default_country;
				} else {
					this.country = undefined;
				}
			}
		}, {
			key: 'reset_countriness',
			value: function reset_countriness() {
				this.reset_country();
	
				if (this.default_country && !this.is_international()) {
					this.country_metadata = this.metadata.countries[this.default_country];
					this.country_phone_code = (0, _metadata.get_phone_code)(this.country_metadata);
	
					this.initialize_phone_number_formats_for_this_country_phone_code();
				} else {
					this.country_metadata = undefined;
					this.country_phone_code = undefined;
	
					this.available_formats = [];
					this.matching_formats = this.available_formats;
				}
			}
		}, {
			key: 'reset_format',
			value: function reset_format() {
				this.chosen_format = undefined;
				this.template = undefined;
				this.partially_populated_template = undefined;
				this.last_match_position = -1;
			}
	
			// Format each digit of national phone number (so far)
			// using the newly selected phone number pattern.
	
		}, {
			key: 'reformat_national_number',
			value: function reformat_national_number() {
				// Format each digit of national phone number (so far)
				// using the selected phone number pattern.
				return this.format_next_national_number_digits(this.national_number);
			}
		}, {
			key: 'initialize_phone_number_formats_for_this_country_phone_code',
			value: function initialize_phone_number_formats_for_this_country_phone_code() {
				// Get all "eligible" phone number formats for this country
				this.available_formats = (0, _metadata.get_formats)(this.country_metadata).filter(function (format) {
					return ELIGIBLE_FORMAT_PATTERN.test((0, _metadata.get_format_international_format)(format));
				});
	
				this.matching_formats = this.available_formats;
			}
		}, {
			key: 'match_formats_by_leading_digits',
			value: function match_formats_by_leading_digits() {
				var leading_digits = this.national_number;
	
				// "leading digits" pattern list starts with
				// one of a maximum length of 3 digits,
				// and then with each additional digit
				// a more precise "leading digits" pattern is specified.
	
				var index_of_leading_digits_pattern = leading_digits.length - MIN_LEADING_DIGITS_LENGTH;
	
				if (index_of_leading_digits_pattern < 0) {
					index_of_leading_digits_pattern = 0;
				}
	
				this.matching_formats = this.matching_formats.filter(function (format) {
					var leading_digits_pattern_count = (0, _metadata.get_format_leading_digits_patterns)(format).length;
	
					// Keep everything that isn't restricted by leading digits.
					if (leading_digits_pattern_count === 0) {
						return true;
					}
	
					var leading_digits_pattern_index = Math.min(index_of_leading_digits_pattern, leading_digits_pattern_count - 1);
					var leading_digits_pattern = (0, _metadata.get_format_leading_digits_patterns)(format)[leading_digits_pattern_index];
	
					// Brackets are required for `^` to be applied to
					// all or-ed (`|`) parts, not just the first one.
					return new RegExp('^(' + leading_digits_pattern + ')').test(leading_digits);
				});
	
				// If there was a phone number format chosen
				// and it no longer holds given the new leading digits then reset it.
				// The test for this `if` condition is marked as:
				// "Reset a chosen format when it no longer holds given the new leading digits".
				if (this.chosen_format && this.matching_formats.indexOf(this.chosen_format) === -1) {
					this.reset_format();
				}
			}
		}, {
			key: 'should_format',
			value: function should_format() {
				// Start matching any formats at all when the national number
				// entered so far is at least 3 digits long,
				// otherwise format matching would give false negatives
				// like when the digits entered so far are `2`
				// and the leading digits pattern is `21` –
				// it's quite obvious in this case that the format could be the one
				// but due to the absence of further digits it would give false negative.
				//
				// Google could have provided leading digits patterns starting
				// with a single digit but they chose not to (for whatever reasons).
				//
				return this.national_number >= MIN_LEADING_DIGITS_LENGTH;
			}
	
			// Check to see if there is an exact pattern match for these digits. If so, we
			// should use this instead of any other formatting template whose
			// leadingDigitsPattern also matches the input.
	
		}, {
			key: 'attempt_to_format_complete_phone_number',
			value: function attempt_to_format_complete_phone_number() {
				var _iteratorNormalCompletion = true;
				var _didIteratorError = false;
				var _iteratorError = undefined;
	
				try {
					for (var _iterator = (0, _getIterator3.default)(this.matching_formats), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
						var format = _step.value;
	
						var matcher = new RegExp('^(?:' + (0, _metadata.get_format_pattern)(format) + ')$');
	
						if (!matcher.test(this.national_number)) {
							continue;
						}
	
						if (!this.validate_format(format)) {
							continue;
						}
	
						// To leave the formatter in a consistent state
						this.reset_format();
						this.chosen_format = format;
	
						var formatted_number = (0, _format.format_national_number_using_format)(this.national_number, format, this.is_international(), this.national_prefix.length > 0, this.country_metadata);
	
						// Set `this.template` and `this.partially_populated_template`.
						//
						// `else` case doesn't ever happen
						// with the current metadata,
						// but just in case.
						//
						/* istanbul ignore else */
						if (this.create_formatting_template(format)) {
							// Populate `this.partially_populated_template`
							this.reformat_national_number();
						} else {
							// Prepend `+CountryCode` in case of an international phone number
							var full_number = this.full_phone_number(formatted_number);
							this.template = full_number.replace(/[\d\+]/g, DIGIT_PLACEHOLDER);
							this.partially_populated_template = full_number;
						}
	
						return formatted_number;
					}
				} catch (err) {
					_didIteratorError = true;
					_iteratorError = err;
				} finally {
					try {
						if (!_iteratorNormalCompletion && _iterator.return) {
							_iterator.return();
						}
					} finally {
						if (_didIteratorError) {
							throw _iteratorError;
						}
					}
				}
			}
	
			// Prepends `+CountryCode` in case of an international phone number
	
		}, {
			key: 'full_phone_number',
			value: function full_phone_number(formatted_national_number) {
				if (this.is_international()) {
					return '+' + this.country_phone_code + ' ' + formatted_national_number;
				}
	
				return formatted_national_number;
			}
	
			// Extracts the country calling code from the beginning
			// of the entered `national_number` (so far),
			// and places the remaining input into the `national_number`.
	
		}, {
			key: 'extract_country_phone_code',
			value: function extract_country_phone_code() {
				if (!this.national_number) {
					return;
				}
	
				var _parse_phone_number_a = (0, _parse.parse_phone_number_and_country_phone_code)(this.parsed_input, this.metadata),
				    country_phone_code = _parse_phone_number_a.country_phone_code,
				    number = _parse_phone_number_a.number;
	
				if (!country_phone_code) {
					return;
				}
	
				this.country_phone_code = country_phone_code;
				this.national_number = number;
	
				return this.country_metadata = (0, _metadata.get_metadata_by_country_phone_code)(country_phone_code, this.metadata);
			}
		}, {
			key: 'extract_national_prefix',
			value: function extract_national_prefix() {
				this.national_prefix = '';
	
				if (!this.country_metadata) {
					return;
				}
	
				var national_number = (0, _parse.strip_national_prefix)(this.national_number, this.country_metadata);
	
				if (national_number !== this.national_number) {
					this.national_prefix = this.national_number.slice(0, this.national_number.length - national_number.length);
					this.national_number = national_number;
				}
	
				return this.national_prefix;
			}
		}, {
			key: 'choose_another_format',
			value: function choose_another_format() {
				// When there are multiple available formats, the formatter uses the first
				// format where a formatting template could be created.
				var _iteratorNormalCompletion2 = true;
				var _didIteratorError2 = false;
				var _iteratorError2 = undefined;
	
				try {
					for (var _iterator2 = (0, _getIterator3.default)(this.matching_formats), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
						var format = _step2.value;
	
						// If this format is currently being used
						// and is still possible, then stick to it.
						if (this.chosen_format === format) {
							return;
						}
	
						// If this `format` is suitable for "as you type",
						// then extract the template from this format
						// and use it to format the phone number being input.
	
						if (!this.validate_format(format)) {
							continue;
						}
	
						if (!this.create_formatting_template(format)) {
							continue;
						}
	
						this.chosen_format = format;
	
						// With a new formatting template, the matched position
						// using the old template needs to be reset.
						this.last_match_position = -1;
	
						return true;
					}
	
					// No format matches the phone number,
					// therefore set `country` to `undefined`
					// (or to the default country).
				} catch (err) {
					_didIteratorError2 = true;
					_iteratorError2 = err;
				} finally {
					try {
						if (!_iteratorNormalCompletion2 && _iterator2.return) {
							_iterator2.return();
						}
					} finally {
						if (_didIteratorError2) {
							throw _iteratorError2;
						}
					}
				}
	
				this.reset_country();
	
				// No format matches the national phone number entered
				this.reset_format();
			}
		}, {
			key: 'validate_format',
			value: function validate_format(format) {
				// If national prefix is mandatory for this phone number format
				// and the user didn't input the national prefix,
				// then this phone number format isn't suitable.
				if (!this.is_international() && !this.national_prefix && (0, _metadata.get_format_national_prefix_is_mandatory_when_formatting)(format, this.country_metadata)) {
					return;
				}
	
				return true;
			}
		}, {
			key: 'create_formatting_template',
			value: function create_formatting_template(format) {
				// The formatter doesn't format numbers when numberPattern contains '|', e.g.
				// (20|3)\d{4}. In those cases we quickly return.
				// (Though there's no such format in current metadata)
				/* istanbul ignore if */
				if ((0, _metadata.get_format_pattern)(format).indexOf('|') >= 0) {
					return;
				}
	
				// Get formatting template for this phone number format
				var template = this.get_template_for_phone_number_format_pattern(format);
	
				// If the national number entered is too long
				// for any phone number format, then abort.
				if (!template) {
					return;
				}
	
				// This one is for national number only
				this.partially_populated_template = template;
	
				// For convenience, the public `.template` property
				// contains the whole international number
				// if the phone number being input is international:
				// 'x' for the '+' sign, 'x'es for the country phone code,
				// a spacebar and then the template for the formatted national number.
				if (this.is_international()) {
					this.template = DIGIT_PLACEHOLDER + repeat(DIGIT_PLACEHOLDER, this.country_phone_code.length) + ' ' + template;
				}
				// For local numbers, replace national prefix
				// with a digit placeholder.
				else {
						this.template = template.replace(/\d/g, DIGIT_PLACEHOLDER);
					}
	
				// This one is for the full phone number
				return this.template;
			}
	
			// Generates formatting template for a phone number format
	
		}, {
			key: 'get_template_for_phone_number_format_pattern',
			value: function get_template_for_phone_number_format_pattern(format) {
				var national_prefix_formatting_rule = (0, _metadata.get_format_national_prefix_formatting_rule)(format, this.country_metadata);
	
				// A very smart trick by the guys at Google
				var number_pattern = (0, _metadata.get_format_pattern)(format)
				// Replace anything in the form of [..] with \d
				.replace(CHARACTER_CLASS_PATTERN, '\\d')
				// Replace any standalone digit (not the one in `{}`) with \d
				.replace(STANDALONE_DIGIT_PATTERN, '\\d');
	
				// This match will always succeed,
				// because the "longest dummy phone number"
				// has enough length to accomodate any possible
				// national phone number format pattern.
				var dummy_phone_number_matching_format_pattern = LONGEST_DUMMY_PHONE_NUMBER.match(number_pattern)[0];
	
				// If the national number entered is too long
				// for any phone number format, then abort.
				if (this.national_number.length > dummy_phone_number_matching_format_pattern.length) {
					return;
				}
	
				// Prepare the phone number format
				var number_format = this.get_format_format(format, national_prefix_formatting_rule);
	
				// Get a formatting template which can be used to efficiently format
				// a partial number where digits are added one by one.
	
				// Below `strict_pattern` is used for the
				// regular expression (with `^` and `$`).
				// This wasn't originally in Google's `libphonenumber`
				// and I guess they don't really need it
				// because they're not using "templates" to format phone numbers
				// but I added `strict_pattern` after encountering
				// South Korean phone number formatting bug.
				//
				// Non-strict regular expression bug demonstration:
				//
				// this.national_number : `111111111` (9 digits)
				//
				// number_pattern : (\d{2})(\d{3,4})(\d{4})
				// number_format : `$1 $2 $3`
				// dummy_phone_number_matching_format_pattern : `9999999999` (10 digits)
				//
				// '9999999999'.replace(new RegExp(/(\d{2})(\d{3,4})(\d{4})/g), '$1 $2 $3') = "99 9999 9999"
				//
				// template : xx xxxx xxxx
				//
				// But the correct template in this case is `xx xxx xxxx`.
				// The template was generated incorrectly because of the
				// `{3,4}` variability in the `number_pattern`.
				//
				// The fix is, if `this.national_number` has already sufficient length
				// to satisfy the `number_pattern` completely then `this.national_number` is used
				// instead of `dummy_phone_number_matching_format_pattern`.
	
				var strict_pattern = new RegExp('^' + number_pattern + '$');
				var national_number_dummy_digits = this.national_number.replace(/\d/g, DUMMY_DIGIT);
	
				// If `this.national_number` has already sufficient length
				// to satisfy the `number_pattern` completely then use it
				// instead of `dummy_phone_number_matching_format_pattern`.
				if (strict_pattern.test(national_number_dummy_digits)) {
					dummy_phone_number_matching_format_pattern = national_number_dummy_digits;
				}
	
				// Generate formatting template for this phone number format
				return dummy_phone_number_matching_format_pattern
				// Format the dummy phone number according to the format
				.replace(new RegExp(number_pattern), number_format)
				// Replace each dummy digit with a DIGIT_PLACEHOLDER
				.replace(DUMMY_DIGIT_MATCHER, DIGIT_PLACEHOLDER);
			}
		}, {
			key: 'format_next_national_number_digits',
			value: function format_next_national_number_digits(digits) {
				var _iteratorNormalCompletion3 = true;
				var _didIteratorError3 = false;
				var _iteratorError3 = undefined;
	
				try {
					for (var _iterator3 = (0, _getIterator3.default)(digits), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
						var digit = _step3.value;
	
						// If there is room for more digits in current `template`,
						// then set the next digit in the `template`,
						// and return the formatted digits so far.
	
						// If more digits are entered than the current format could handle
						if (this.partially_populated_template.slice(this.last_match_position + 1).search(DIGIT_PLACEHOLDER_MATCHER) === -1) {
							// Reset the current format,
							// so that the new format will be chosen
							// in a subsequent `this.choose_another_format()` call
							// later in code.
							this.chosen_format = undefined;
							this.template = undefined;
							this.partially_populated_template = undefined;
							return;
						}
	
						this.last_match_position = this.partially_populated_template.search(DIGIT_PLACEHOLDER_MATCHER);
						this.partially_populated_template = this.partially_populated_template.replace(DIGIT_PLACEHOLDER_MATCHER, digit);
					}
	
					// Return the formatted phone number so far
				} catch (err) {
					_didIteratorError3 = true;
					_iteratorError3 = err;
				} finally {
					try {
						if (!_iteratorNormalCompletion3 && _iterator3.return) {
							_iterator3.return();
						}
					} finally {
						if (_didIteratorError3) {
							throw _iteratorError3;
						}
					}
				}
	
				return close_dangling_braces(this.partially_populated_template, this.last_match_position + 1).replace(DIGIT_PLACEHOLDER_MATCHER_GLOBAL, ' ');
			}
		}, {
			key: 'is_international',
			value: function is_international() {
				return this.parsed_input && this.parsed_input[0] === '+';
			}
		}, {
			key: 'get_format_format',
			value: function get_format_format(format, national_prefix_formatting_rule) {
				var number_format = this.is_international() ? (0, _metadata.get_format_international_format)(format) : (0, _metadata.get_format_format)(format);
	
				// If national prefix formatting rule is set
				// for this phone number format
				if (national_prefix_formatting_rule) {
					// If the user did input the national prefix
					// (or if the national prefix formatting rule does not require national prefix)
					// then maybe make it part of the phone number template
					if (this.national_prefix || !(0, _metadata.get_format_uses_national_prefix)(national_prefix_formatting_rule)) {
						// Make the national prefix part of the phone number template
						number_format = number_format.replace(_format.FIRST_GROUP_PATTERN, national_prefix_formatting_rule);
					}
				}
	
				if (this.is_international()) {
					return (0, _format.local_to_international_style)(number_format);
				}
	
				return number_format;
			}
	
			// Determines the country of the phone number
			// entered so far based on the country phone code
			// and the national phone number.
	
		}, {
			key: 'determine_the_country',
			value: function determine_the_country() {
				this.country = (0, _parse.find_country_code)(this.country_phone_code, this.national_number, this.metadata);
			}
		}]);
		return as_you_type;
	}();
	
	exports.default = as_you_type;
	function close_dangling_braces(template, cut_before) {
		var retained_template = template.slice(0, cut_before);
	
		var opening_braces = count_occurences('(', retained_template);
		var closing_braces = count_occurences(')', retained_template);
	
		var dangling_braces = opening_braces - closing_braces;
	
		while (dangling_braces > 0 && cut_before < template.length) {
			if (template[cut_before] === ')') {
				dangling_braces--;
			}
			cut_before++;
		}
	
		return template.slice(0, cut_before);
	}
	
	// Counts all occurences of a symbol in a string
	function count_occurences(symbol, string) {
		var count = 0;
	
		var _iteratorNormalCompletion4 = true;
		var _didIteratorError4 = false;
		var _iteratorError4 = undefined;
	
		try {
			for (var _iterator4 = (0, _getIterator3.default)(string), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
				var character = _step4.value;
	
				if (character === symbol) {
					count++;
				}
			}
		} catch (err) {
			_didIteratorError4 = true;
			_iteratorError4 = err;
		} finally {
			try {
				if (!_iteratorNormalCompletion4 && _iterator4.return) {
					_iterator4.return();
				}
			} finally {
				if (_didIteratorError4) {
					throw _iteratorError4;
				}
			}
		}
	
		return count;
	}
	
	// Repeats a string (or a symbol) N times.
	// http://stackoverflow.com/questions/202605/repeat-string-javascript
	function repeat(string, times) {
		if (times < 1) {
			return '';
		}
	
		var result = '';
	
		while (times > 1) {
			if (times & 1) {
				result += string;
			}
	
			times >>= 1;
			string += string;
		}
	
		return result + string;
	}
	//# sourceMappingURL=AsYouType.js.map

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(535);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Afrikaans [af]
	//! author : Werner Mollentze : https://github.com/wernerm
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var af = moment.defineLocale('af', {
	    months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
	    monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
	    weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
	    weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
	    weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
	    meridiemParse: /vm|nm/i,
	    isPM : function (input) {
	        return /^nm$/i.test(input);
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 12) {
	            return isLower ? 'vm' : 'VM';
	        } else {
	            return isLower ? 'nm' : 'NM';
	        }
	    },
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Vandag om] LT',
	        nextDay : '[Môre om] LT',
	        nextWeek : 'dddd [om] LT',
	        lastDay : '[Gister om] LT',
	        lastWeek : '[Laas] dddd [om] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'oor %s',
	        past : '%s gelede',
	        s : '\'n paar sekondes',
	        ss : '%d sekondes',
	        m : '\'n minuut',
	        mm : '%d minute',
	        h : '\'n uur',
	        hh : '%d ure',
	        d : '\'n dag',
	        dd : '%d dae',
	        M : '\'n maand',
	        MM : '%d maande',
	        y : '\'n jaar',
	        yy : '%d jaar'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
	    ordinal : function (number) {
	        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
	    },
	    week : {
	        dow : 1, // Maandag is die eerste dag van die week.
	        doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
	    }
	});
	
	return af;
	
	})));


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic (Algeria) [ar-dz]
	//! author : Noureddine LOUAHEDJ : https://github.com/noureddineme
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var arDz = moment.defineLocale('ar-dz', {
	    months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	    monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	    weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	    weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[اليوم على الساعة] LT',
	        nextDay: '[غدا على الساعة] LT',
	        nextWeek: 'dddd [على الساعة] LT',
	        lastDay: '[أمس على الساعة] LT',
	        lastWeek: 'dddd [على الساعة] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'في %s',
	        past : 'منذ %s',
	        s : 'ثوان',
	        ss : '%d ثانية',
	        m : 'دقيقة',
	        mm : '%d دقائق',
	        h : 'ساعة',
	        hh : '%d ساعات',
	        d : 'يوم',
	        dd : '%d أيام',
	        M : 'شهر',
	        MM : '%d أشهر',
	        y : 'سنة',
	        yy : '%d سنوات'
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 4  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return arDz;
	
	})));


/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic (Kuwait) [ar-kw]
	//! author : Nusret Parlak: https://github.com/nusretparlak
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var arKw = moment.defineLocale('ar-kw', {
	    months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	    monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	    weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	    weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[اليوم على الساعة] LT',
	        nextDay: '[غدا على الساعة] LT',
	        nextWeek: 'dddd [على الساعة] LT',
	        lastDay: '[أمس على الساعة] LT',
	        lastWeek: 'dddd [على الساعة] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'في %s',
	        past : 'منذ %s',
	        s : 'ثوان',
	        ss : '%d ثانية',
	        m : 'دقيقة',
	        mm : '%d دقائق',
	        h : 'ساعة',
	        hh : '%d ساعات',
	        d : 'يوم',
	        dd : '%d أيام',
	        M : 'شهر',
	        MM : '%d أشهر',
	        y : 'سنة',
	        yy : '%d سنوات'
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 12  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return arKw;
	
	})));


/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic (Lybia) [ar-ly]
	//! author : Ali Hmer: https://github.com/kikoanis
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var symbolMap = {
	    '1': '1',
	    '2': '2',
	    '3': '3',
	    '4': '4',
	    '5': '5',
	    '6': '6',
	    '7': '7',
	    '8': '8',
	    '9': '9',
	    '0': '0'
	};
	var pluralForm = function (n) {
	    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	};
	var plurals = {
	    s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	    m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	    h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	    d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	    M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	    y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	};
	var pluralize = function (u) {
	    return function (number, withoutSuffix, string, isFuture) {
	        var f = pluralForm(number),
	            str = plurals[u][pluralForm(number)];
	        if (f === 2) {
	            str = str[withoutSuffix ? 0 : 1];
	        }
	        return str.replace(/%d/i, number);
	    };
	};
	var months = [
	    'يناير',
	    'فبراير',
	    'مارس',
	    'أبريل',
	    'مايو',
	    'يونيو',
	    'يوليو',
	    'أغسطس',
	    'سبتمبر',
	    'أكتوبر',
	    'نوفمبر',
	    'ديسمبر'
	];
	
	var arLy = moment.defineLocale('ar-ly', {
	    months : months,
	    monthsShort : months,
	    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'D/\u200FM/\u200FYYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    meridiemParse: /ص|م/,
	    isPM : function (input) {
	        return 'م' === input;
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'ص';
	        } else {
	            return 'م';
	        }
	    },
	    calendar : {
	        sameDay: '[اليوم عند الساعة] LT',
	        nextDay: '[غدًا عند الساعة] LT',
	        nextWeek: 'dddd [عند الساعة] LT',
	        lastDay: '[أمس عند الساعة] LT',
	        lastWeek: 'dddd [عند الساعة] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'بعد %s',
	        past : 'منذ %s',
	        s : pluralize('s'),
	        ss : pluralize('s'),
	        m : pluralize('m'),
	        mm : pluralize('m'),
	        h : pluralize('h'),
	        hh : pluralize('h'),
	        d : pluralize('d'),
	        dd : pluralize('d'),
	        M : pluralize('M'),
	        MM : pluralize('M'),
	        y : pluralize('y'),
	        yy : pluralize('y')
	    },
	    preparse: function (string) {
	        return string.replace(/،/g, ',');
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        }).replace(/,/g, '،');
	    },
	    week : {
	        dow : 6, // Saturday is the first day of the week.
	        doy : 12  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return arLy;
	
	})));


/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic (Morocco) [ar-ma]
	//! author : ElFadili Yassine : https://github.com/ElFadiliY
	//! author : Abdel Said : https://github.com/abdelsaid
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var arMa = moment.defineLocale('ar-ma', {
	    months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	    monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	    weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	    weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[اليوم على الساعة] LT',
	        nextDay: '[غدا على الساعة] LT',
	        nextWeek: 'dddd [على الساعة] LT',
	        lastDay: '[أمس على الساعة] LT',
	        lastWeek: 'dddd [على الساعة] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'في %s',
	        past : 'منذ %s',
	        s : 'ثوان',
	        ss : '%d ثانية',
	        m : 'دقيقة',
	        mm : '%d دقائق',
	        h : 'ساعة',
	        hh : '%d ساعات',
	        d : 'يوم',
	        dd : '%d أيام',
	        M : 'شهر',
	        MM : '%d أشهر',
	        y : 'سنة',
	        yy : '%d سنوات'
	    },
	    week : {
	        dow : 6, // Saturday is the first day of the week.
	        doy : 12  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return arMa;
	
	})));


/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic (Saudi Arabia) [ar-sa]
	//! author : Suhail Alkowaileet : https://github.com/xsoh
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var symbolMap = {
	    '1': '١',
	    '2': '٢',
	    '3': '٣',
	    '4': '٤',
	    '5': '٥',
	    '6': '٦',
	    '7': '٧',
	    '8': '٨',
	    '9': '٩',
	    '0': '٠'
	};
	var numberMap = {
	    '١': '1',
	    '٢': '2',
	    '٣': '3',
	    '٤': '4',
	    '٥': '5',
	    '٦': '6',
	    '٧': '7',
	    '٨': '8',
	    '٩': '9',
	    '٠': '0'
	};
	
	var arSa = moment.defineLocale('ar-sa', {
	    months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	    monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    meridiemParse: /ص|م/,
	    isPM : function (input) {
	        return 'م' === input;
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'ص';
	        } else {
	            return 'م';
	        }
	    },
	    calendar : {
	        sameDay: '[اليوم على الساعة] LT',
	        nextDay: '[غدا على الساعة] LT',
	        nextWeek: 'dddd [على الساعة] LT',
	        lastDay: '[أمس على الساعة] LT',
	        lastWeek: 'dddd [على الساعة] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'في %s',
	        past : 'منذ %s',
	        s : 'ثوان',
	        ss : '%d ثانية',
	        m : 'دقيقة',
	        mm : '%d دقائق',
	        h : 'ساعة',
	        hh : '%d ساعات',
	        d : 'يوم',
	        dd : '%d أيام',
	        M : 'شهر',
	        MM : '%d أشهر',
	        y : 'سنة',
	        yy : '%d سنوات'
	    },
	    preparse: function (string) {
	        return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	            return numberMap[match];
	        }).replace(/،/g, ',');
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        }).replace(/,/g, '،');
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return arSa;
	
	})));


/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale  :  Arabic (Tunisia) [ar-tn]
	//! author : Nader Toukabri : https://github.com/naderio
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var arTn = moment.defineLocale('ar-tn', {
	    months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	    monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat: {
	        LT: 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L: 'DD/MM/YYYY',
	        LL: 'D MMMM YYYY',
	        LLL: 'D MMMM YYYY HH:mm',
	        LLLL: 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar: {
	        sameDay: '[اليوم على الساعة] LT',
	        nextDay: '[غدا على الساعة] LT',
	        nextWeek: 'dddd [على الساعة] LT',
	        lastDay: '[أمس على الساعة] LT',
	        lastWeek: 'dddd [على الساعة] LT',
	        sameElse: 'L'
	    },
	    relativeTime: {
	        future: 'في %s',
	        past: 'منذ %s',
	        s: 'ثوان',
	        ss : '%d ثانية',
	        m: 'دقيقة',
	        mm: '%d دقائق',
	        h: 'ساعة',
	        hh: '%d ساعات',
	        d: 'يوم',
	        dd: '%d أيام',
	        M: 'شهر',
	        MM: '%d أشهر',
	        y: 'سنة',
	        yy: '%d سنوات'
	    },
	    week: {
	        dow: 1, // Monday is the first day of the week.
	        doy: 4 // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return arTn;
	
	})));


/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic [ar]
	//! author : Abdel Said: https://github.com/abdelsaid
	//! author : Ahmed Elkhatib
	//! author : forabi https://github.com/forabi
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var symbolMap = {
	    '1': '١',
	    '2': '٢',
	    '3': '٣',
	    '4': '٤',
	    '5': '٥',
	    '6': '٦',
	    '7': '٧',
	    '8': '٨',
	    '9': '٩',
	    '0': '٠'
	};
	var numberMap = {
	    '١': '1',
	    '٢': '2',
	    '٣': '3',
	    '٤': '4',
	    '٥': '5',
	    '٦': '6',
	    '٧': '7',
	    '٨': '8',
	    '٩': '9',
	    '٠': '0'
	};
	var pluralForm = function (n) {
	    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	};
	var plurals = {
	    s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	    m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	    h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	    d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	    M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	    y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	};
	var pluralize = function (u) {
	    return function (number, withoutSuffix, string, isFuture) {
	        var f = pluralForm(number),
	            str = plurals[u][pluralForm(number)];
	        if (f === 2) {
	            str = str[withoutSuffix ? 0 : 1];
	        }
	        return str.replace(/%d/i, number);
	    };
	};
	var months = [
	    'يناير',
	    'فبراير',
	    'مارس',
	    'أبريل',
	    'مايو',
	    'يونيو',
	    'يوليو',
	    'أغسطس',
	    'سبتمبر',
	    'أكتوبر',
	    'نوفمبر',
	    'ديسمبر'
	];
	
	var ar = moment.defineLocale('ar', {
	    months : months,
	    monthsShort : months,
	    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'D/\u200FM/\u200FYYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    meridiemParse: /ص|م/,
	    isPM : function (input) {
	        return 'م' === input;
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'ص';
	        } else {
	            return 'م';
	        }
	    },
	    calendar : {
	        sameDay: '[اليوم عند الساعة] LT',
	        nextDay: '[غدًا عند الساعة] LT',
	        nextWeek: 'dddd [عند الساعة] LT',
	        lastDay: '[أمس عند الساعة] LT',
	        lastWeek: 'dddd [عند الساعة] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'بعد %s',
	        past : 'منذ %s',
	        s : pluralize('s'),
	        ss : pluralize('s'),
	        m : pluralize('m'),
	        mm : pluralize('m'),
	        h : pluralize('h'),
	        hh : pluralize('h'),
	        d : pluralize('d'),
	        dd : pluralize('d'),
	        M : pluralize('M'),
	        MM : pluralize('M'),
	        y : pluralize('y'),
	        yy : pluralize('y')
	    },
	    preparse: function (string) {
	        return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	            return numberMap[match];
	        }).replace(/،/g, ',');
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        }).replace(/,/g, '،');
	    },
	    week : {
	        dow : 6, // Saturday is the first day of the week.
	        doy : 12  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return ar;
	
	})));


/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Azerbaijani [az]
	//! author : topchiyev : https://github.com/topchiyev
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var suffixes = {
	    1: '-inci',
	    5: '-inci',
	    8: '-inci',
	    70: '-inci',
	    80: '-inci',
	    2: '-nci',
	    7: '-nci',
	    20: '-nci',
	    50: '-nci',
	    3: '-üncü',
	    4: '-üncü',
	    100: '-üncü',
	    6: '-ncı',
	    9: '-uncu',
	    10: '-uncu',
	    30: '-uncu',
	    60: '-ıncı',
	    90: '-ıncı'
	};
	
	var az = moment.defineLocale('az', {
	    months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
	    monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
	    weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
	    weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
	    weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[bugün saat] LT',
	        nextDay : '[sabah saat] LT',
	        nextWeek : '[gələn həftə] dddd [saat] LT',
	        lastDay : '[dünən] LT',
	        lastWeek : '[keçən həftə] dddd [saat] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s sonra',
	        past : '%s əvvəl',
	        s : 'birneçə saniyyə',
	        ss : '%d saniyə',
	        m : 'bir dəqiqə',
	        mm : '%d dəqiqə',
	        h : 'bir saat',
	        hh : '%d saat',
	        d : 'bir gün',
	        dd : '%d gün',
	        M : 'bir ay',
	        MM : '%d ay',
	        y : 'bir il',
	        yy : '%d il'
	    },
	    meridiemParse: /gecə|səhər|gündüz|axşam/,
	    isPM : function (input) {
	        return /^(gündüz|axşam)$/.test(input);
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'gecə';
	        } else if (hour < 12) {
	            return 'səhər';
	        } else if (hour < 17) {
	            return 'gündüz';
	        } else {
	            return 'axşam';
	        }
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
	    ordinal : function (number) {
	        if (number === 0) {  // special case for zero
	            return number + '-ıncı';
	        }
	        var a = number % 10,
	            b = number % 100 - a,
	            c = number >= 100 ? 100 : null;
	        return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return az;
	
	})));


/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Belarusian [be]
	//! author : Dmitry Demidov : https://github.com/demidov91
	//! author: Praleska: http://praleska.pro/
	//! Author : Menelion Elensúle : https://github.com/Oire
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	function plural(word, num) {
	    var forms = word.split('_');
	    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	}
	function relativeTimeWithPlural(number, withoutSuffix, key) {
	    var format = {
	        'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
	        'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
	        'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
	        'dd': 'дзень_дні_дзён',
	        'MM': 'месяц_месяцы_месяцаў',
	        'yy': 'год_гады_гадоў'
	    };
	    if (key === 'm') {
	        return withoutSuffix ? 'хвіліна' : 'хвіліну';
	    }
	    else if (key === 'h') {
	        return withoutSuffix ? 'гадзіна' : 'гадзіну';
	    }
	    else {
	        return number + ' ' + plural(format[key], +number);
	    }
	}
	
	var be = moment.defineLocale('be', {
	    months : {
	        format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
	        standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
	    },
	    monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
	    weekdays : {
	        format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
	        standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
	        isFormat: /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
	    },
	    weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	    weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY г.',
	        LLL : 'D MMMM YYYY г., HH:mm',
	        LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	    },
	    calendar : {
	        sameDay: '[Сёння ў] LT',
	        nextDay: '[Заўтра ў] LT',
	        lastDay: '[Учора ў] LT',
	        nextWeek: function () {
	            return '[У] dddd [ў] LT';
	        },
	        lastWeek: function () {
	            switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return '[У мінулую] dddd [ў] LT';
	                case 1:
	                case 2:
	                case 4:
	                    return '[У мінулы] dddd [ў] LT';
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'праз %s',
	        past : '%s таму',
	        s : 'некалькі секунд',
	        m : relativeTimeWithPlural,
	        mm : relativeTimeWithPlural,
	        h : relativeTimeWithPlural,
	        hh : relativeTimeWithPlural,
	        d : 'дзень',
	        dd : relativeTimeWithPlural,
	        M : 'месяц',
	        MM : relativeTimeWithPlural,
	        y : 'год',
	        yy : relativeTimeWithPlural
	    },
	    meridiemParse: /ночы|раніцы|дня|вечара/,
	    isPM : function (input) {
	        return /^(дня|вечара)$/.test(input);
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'ночы';
	        } else if (hour < 12) {
	            return 'раніцы';
	        } else if (hour < 17) {
	            return 'дня';
	        } else {
	            return 'вечара';
	        }
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
	    ordinal: function (number, period) {
	        switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
	            case 'D':
	                return number + '-га';
	            default:
	                return number;
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return be;
	
	})));


/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bulgarian [bg]
	//! author : Krasen Borisov : https://github.com/kraz
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var bg = moment.defineLocale('bg', {
	    months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
	    monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
	    weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
	    weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
	    weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'D.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY H:mm',
	        LLLL : 'dddd, D MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay : '[Днес в] LT',
	        nextDay : '[Утре в] LT',
	        nextWeek : 'dddd [в] LT',
	        lastDay : '[Вчера в] LT',
	        lastWeek : function () {
	            switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[В изминалата] dddd [в] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[В изминалия] dddd [в] LT';
	            }
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'след %s',
	        past : 'преди %s',
	        s : 'няколко секунди',
	        ss : '%d секунди',
	        m : 'минута',
	        mm : '%d минути',
	        h : 'час',
	        hh : '%d часа',
	        d : 'ден',
	        dd : '%d дни',
	        M : 'месец',
	        MM : '%d месеца',
	        y : 'година',
	        yy : '%d години'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	    ordinal : function (number) {
	        var lastDigit = number % 10,
	            last2Digits = number % 100;
	        if (number === 0) {
	            return number + '-ев';
	        } else if (last2Digits === 0) {
	            return number + '-ен';
	        } else if (last2Digits > 10 && last2Digits < 20) {
	            return number + '-ти';
	        } else if (lastDigit === 1) {
	            return number + '-ви';
	        } else if (lastDigit === 2) {
	            return number + '-ри';
	        } else if (lastDigit === 7 || lastDigit === 8) {
	            return number + '-ми';
	        } else {
	            return number + '-ти';
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return bg;
	
	})));


/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bambara [bm]
	//! author : Estelle Comment : https://github.com/estellecomment
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	// Language contact person : Abdoufata Kane : https://github.com/abdoufata
	
	var bm = moment.defineLocale('bm', {
	    months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),
	    monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
	    weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
	    weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
	    weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'MMMM [tile] D [san] YYYY',
	        LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
	        LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'
	    },
	    calendar : {
	        sameDay : '[Bi lɛrɛ] LT',
	        nextDay : '[Sini lɛrɛ] LT',
	        nextWeek : 'dddd [don lɛrɛ] LT',
	        lastDay : '[Kunu lɛrɛ] LT',
	        lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s kɔnɔ',
	        past : 'a bɛ %s bɔ',
	        s : 'sanga dama dama',
	        ss : 'sekondi %d',
	        m : 'miniti kelen',
	        mm : 'miniti %d',
	        h : 'lɛrɛ kelen',
	        hh : 'lɛrɛ %d',
	        d : 'tile kelen',
	        dd : 'tile %d',
	        M : 'kalo kelen',
	        MM : 'kalo %d',
	        y : 'san kelen',
	        yy : 'san %d'
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return bm;
	
	})));


/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bengali [bn]
	//! author : Kaushik Gandhi : https://github.com/kaushikgandhi
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var symbolMap = {
	    '1': '১',
	    '2': '২',
	    '3': '৩',
	    '4': '৪',
	    '5': '৫',
	    '6': '৬',
	    '7': '৭',
	    '8': '৮',
	    '9': '৯',
	    '0': '০'
	};
	var numberMap = {
	    '১': '1',
	    '২': '2',
	    '৩': '3',
	    '৪': '4',
	    '৫': '5',
	    '৬': '6',
	    '৭': '7',
	    '৮': '8',
	    '৯': '9',
	    '০': '0'
	};
	
	var bn = moment.defineLocale('bn', {
	    months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
	    monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
	    weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
	    weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
	    weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm সময়',
	        LTS : 'A h:mm:ss সময়',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm সময়',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
	    },
	    calendar : {
	        sameDay : '[আজ] LT',
	        nextDay : '[আগামীকাল] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[গতকাল] LT',
	        lastWeek : '[গত] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s পরে',
	        past : '%s আগে',
	        s : 'কয়েক সেকেন্ড',
	        ss : '%d সেকেন্ড',
	        m : 'এক মিনিট',
	        mm : '%d মিনিট',
	        h : 'এক ঘন্টা',
	        hh : '%d ঘন্টা',
	        d : 'এক দিন',
	        dd : '%d দিন',
	        M : 'এক মাস',
	        MM : '%d মাস',
	        y : 'এক বছর',
	        yy : '%d বছর'
	    },
	    preparse: function (string) {
	        return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if ((meridiem === 'রাত' && hour >= 4) ||
	                (meridiem === 'দুপুর' && hour < 5) ||
	                meridiem === 'বিকাল') {
	            return hour + 12;
	        } else {
	            return hour;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'রাত';
	        } else if (hour < 10) {
	            return 'সকাল';
	        } else if (hour < 17) {
	            return 'দুপুর';
	        } else if (hour < 20) {
	            return 'বিকাল';
	        } else {
	            return 'রাত';
	        }
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return bn;
	
	})));


/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Tibetan [bo]
	//! author : Thupten N. Chakrishar : https://github.com/vajradog
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var symbolMap = {
	    '1': '༡',
	    '2': '༢',
	    '3': '༣',
	    '4': '༤',
	    '5': '༥',
	    '6': '༦',
	    '7': '༧',
	    '8': '༨',
	    '9': '༩',
	    '0': '༠'
	};
	var numberMap = {
	    '༡': '1',
	    '༢': '2',
	    '༣': '3',
	    '༤': '4',
	    '༥': '5',
	    '༦': '6',
	    '༧': '7',
	    '༨': '8',
	    '༩': '9',
	    '༠': '0'
	};
	
	var bo = moment.defineLocale('bo', {
	    months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	    monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	    weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
	    weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	    weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm',
	        LTS : 'A h:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm'
	    },
	    calendar : {
	        sameDay : '[དི་རིང] LT',
	        nextDay : '[སང་ཉིན] LT',
	        nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
	        lastDay : '[ཁ་སང] LT',
	        lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s ལ་',
	        past : '%s སྔན་ལ',
	        s : 'ལམ་སང',
	        ss : '%d སྐར་ཆ།',
	        m : 'སྐར་མ་གཅིག',
	        mm : '%d སྐར་མ',
	        h : 'ཆུ་ཚོད་གཅིག',
	        hh : '%d ཆུ་ཚོད',
	        d : 'ཉིན་གཅིག',
	        dd : '%d ཉིན་',
	        M : 'ཟླ་བ་གཅིག',
	        MM : '%d ཟླ་བ',
	        y : 'ལོ་གཅིག',
	        yy : '%d ལོ'
	    },
	    preparse: function (string) {
	        return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
	                (meridiem === 'ཉིན་གུང' && hour < 5) ||
	                meridiem === 'དགོང་དག') {
	            return hour + 12;
	        } else {
	            return hour;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'མཚན་མོ';
	        } else if (hour < 10) {
	            return 'ཞོགས་ཀས';
	        } else if (hour < 17) {
	            return 'ཉིན་གུང';
	        } else if (hour < 20) {
	            return 'དགོང་དག';
	        } else {
	            return 'མཚན་མོ';
	        }
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return bo;
	
	})));


/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Breton [br]
	//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	function relativeTimeWithMutation(number, withoutSuffix, key) {
	    var format = {
	        'mm': 'munutenn',
	        'MM': 'miz',
	        'dd': 'devezh'
	    };
	    return number + ' ' + mutation(format[key], number);
	}
	function specialMutationForYears(number) {
	    switch (lastNumber(number)) {
	        case 1:
	        case 3:
	        case 4:
	        case 5:
	        case 9:
	            return number + ' bloaz';
	        default:
	            return number + ' vloaz';
	    }
	}
	function lastNumber(number) {
	    if (number > 9) {
	        return lastNumber(number % 10);
	    }
	    return number;
	}
	function mutation(text, number) {
	    if (number === 2) {
	        return softMutation(text);
	    }
	    return text;
	}
	function softMutation(text) {
	    var mutationTable = {
	        'm': 'v',
	        'b': 'v',
	        'd': 'z'
	    };
	    if (mutationTable[text.charAt(0)] === undefined) {
	        return text;
	    }
	    return mutationTable[text.charAt(0)] + text.substring(1);
	}
	
	var br = moment.defineLocale('br', {
	    months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
	    monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
	    weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
	    weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
	    weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'h[e]mm A',
	        LTS : 'h[e]mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D [a viz] MMMM YYYY',
	        LLL : 'D [a viz] MMMM YYYY h[e]mm A',
	        LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
	    },
	    calendar : {
	        sameDay : '[Hiziv da] LT',
	        nextDay : '[Warc\'hoazh da] LT',
	        nextWeek : 'dddd [da] LT',
	        lastDay : '[Dec\'h da] LT',
	        lastWeek : 'dddd [paset da] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'a-benn %s',
	        past : '%s \'zo',
	        s : 'un nebeud segondennoù',
	        ss : '%d eilenn',
	        m : 'ur vunutenn',
	        mm : relativeTimeWithMutation,
	        h : 'un eur',
	        hh : '%d eur',
	        d : 'un devezh',
	        dd : relativeTimeWithMutation,
	        M : 'ur miz',
	        MM : relativeTimeWithMutation,
	        y : 'ur bloaz',
	        yy : specialMutationForYears
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
	    ordinal : function (number) {
	        var output = (number === 1) ? 'añ' : 'vet';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return br;
	
	})));


/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bosnian [bs]
	//! author : Nedim Cholich : https://github.com/frontyard
	//! based on (hr) translation by Bojan Marković
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	function translate(number, withoutSuffix, key) {
	    var result = number + ' ';
	    switch (key) {
	        case 'ss':
	            if (number === 1) {
	                result += 'sekunda';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sekunde';
	            } else {
	                result += 'sekundi';
	            }
	            return result;
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	    }
	}
	
	var bs = moment.defineLocale('bs', {
	    months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
	    monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	    weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	    weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY H:mm',
	        LLLL : 'dddd, D. MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay  : '[danas u] LT',
	        nextDay  : '[sutra u] LT',
	        nextWeek : function () {
	            switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	            }
	        },
	        lastDay  : '[jučer u] LT',
	        lastWeek : function () {
	            switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	            }
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'za %s',
	        past   : 'prije %s',
	        s      : 'par sekundi',
	        ss     : translate,
	        m      : translate,
	        mm     : translate,
	        h      : translate,
	        hh     : translate,
	        d      : 'dan',
	        dd     : translate,
	        M      : 'mjesec',
	        MM     : translate,
	        y      : 'godinu',
	        yy     : translate
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return bs;
	
	})));


/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Catalan [ca]
	//! author : Juan G. Hurtado : https://github.com/juanghurtado
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var ca = moment.defineLocale('ca', {
	    months : {
	        standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
	        format: 'de gener_de febrer_de març_d\'abril_de maig_de juny_de juliol_d\'agost_de setembre_d\'octubre_de novembre_de desembre'.split('_'),
	        isFormat: /D[oD]?(\s)+MMMM/
	    },
	    monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
	    weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
	    weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM [de] YYYY',
	        ll : 'D MMM YYYY',
	        LLL : 'D MMMM [de] YYYY [a les] H:mm',
	        lll : 'D MMM YYYY, H:mm',
	        LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',
	        llll : 'ddd D MMM YYYY, H:mm'
	    },
	    calendar : {
	        sameDay : function () {
	            return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	        },
	        nextDay : function () {
	            return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	        },
	        nextWeek : function () {
	            return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	        },
	        lastDay : function () {
	            return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	        },
	        lastWeek : function () {
	            return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'd\'aquí %s',
	        past : 'fa %s',
	        s : 'uns segons',
	        ss : '%d segons',
	        m : 'un minut',
	        mm : '%d minuts',
	        h : 'una hora',
	        hh : '%d hores',
	        d : 'un dia',
	        dd : '%d dies',
	        M : 'un mes',
	        MM : '%d mesos',
	        y : 'un any',
	        yy : '%d anys'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
	    ordinal : function (number, period) {
	        var output = (number === 1) ? 'r' :
	            (number === 2) ? 'n' :
	            (number === 3) ? 'r' :
	            (number === 4) ? 't' : 'è';
	        if (period === 'w' || period === 'W') {
	            output = 'a';
	        }
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return ca;
	
	})));


/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Czech [cs]
	//! author : petrbela : https://github.com/petrbela
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');
	var monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
	function plural(n) {
	    return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
	}
	function translate(number, withoutSuffix, key, isFuture) {
	    var result = number + ' ';
	    switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
	        case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'sekundy' : 'sekund');
	            } else {
	                return result + 'sekundami';
	            }
	            break;
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minuty' : 'minut');
	            } else {
	                return result + 'minutami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodin');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'den' : 'dnem';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dny' : 'dní');
	            } else {
	                return result + 'dny';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'měsíce' : 'měsíců');
	            } else {
	                return result + 'měsíci';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'let');
	            } else {
	                return result + 'lety';
	            }
	            break;
	    }
	}
	
	var cs = moment.defineLocale('cs', {
	    months : months,
	    monthsShort : monthsShort,
	    monthsParse : (function (months, monthsShort) {
	        var i, _monthsParse = [];
	        for (i = 0; i < 12; i++) {
	            // use custom parser to solve problem with July (červenec)
	            _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	        }
	        return _monthsParse;
	    }(months, monthsShort)),
	    shortMonthsParse : (function (monthsShort) {
	        var i, _shortMonthsParse = [];
	        for (i = 0; i < 12; i++) {
	            _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
	        }
	        return _shortMonthsParse;
	    }(monthsShort)),
	    longMonthsParse : (function (months) {
	        var i, _longMonthsParse = [];
	        for (i = 0; i < 12; i++) {
	            _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
	        }
	        return _longMonthsParse;
	    }(months)),
	    weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
	    weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
	    weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
	    longDateFormat : {
	        LT: 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY H:mm',
	        LLLL : 'dddd D. MMMM YYYY H:mm',
	        l : 'D. M. YYYY'
	    },
	    calendar : {
	        sameDay: '[dnes v] LT',
	        nextDay: '[zítra v] LT',
	        nextWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[v neděli v] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [v] LT';
	                case 3:
	                    return '[ve středu v] LT';
	                case 4:
	                    return '[ve čtvrtek v] LT';
	                case 5:
	                    return '[v pátek v] LT';
	                case 6:
	                    return '[v sobotu v] LT';
	            }
	        },
	        lastDay: '[včera v] LT',
	        lastWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[minulou neděli v] LT';
	                case 1:
	                case 2:
	                    return '[minulé] dddd [v] LT';
	                case 3:
	                    return '[minulou středu v] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [v] LT';
	                case 6:
	                    return '[minulou sobotu v] LT';
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'za %s',
	        past : 'před %s',
	        s : translate,
	        ss : translate,
	        m : translate,
	        mm : translate,
	        h : translate,
	        hh : translate,
	        d : translate,
	        dd : translate,
	        M : translate,
	        MM : translate,
	        y : translate,
	        yy : translate
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return cs;
	
	})));


/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Chuvash [cv]
	//! author : Anatoly Mironov : https://github.com/mirontoli
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var cv = moment.defineLocale('cv', {
	    months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
	    monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
	    weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
	    weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
	    weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD-MM-YYYY',
	        LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
	        LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
	        LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
	    },
	    calendar : {
	        sameDay: '[Паян] LT [сехетре]',
	        nextDay: '[Ыран] LT [сехетре]',
	        lastDay: '[Ӗнер] LT [сехетре]',
	        nextWeek: '[Ҫитес] dddd LT [сехетре]',
	        lastWeek: '[Иртнӗ] dddd LT [сехетре]',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : function (output) {
	            var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
	            return output + affix;
	        },
	        past : '%s каялла',
	        s : 'пӗр-ик ҫеккунт',
	        ss : '%d ҫеккунт',
	        m : 'пӗр минут',
	        mm : '%d минут',
	        h : 'пӗр сехет',
	        hh : '%d сехет',
	        d : 'пӗр кун',
	        dd : '%d кун',
	        M : 'пӗр уйӑх',
	        MM : '%d уйӑх',
	        y : 'пӗр ҫул',
	        yy : '%d ҫул'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
	    ordinal : '%d-мӗш',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return cv;
	
	})));


/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Welsh [cy]
	//! author : Robert Allen : https://github.com/robgallen
	//! author : https://github.com/ryangreaves
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var cy = moment.defineLocale('cy', {
	    months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
	    monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
	    weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
	    weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
	    weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
	    weekdaysParseExact : true,
	    // time formats are the same as en-gb
	    longDateFormat: {
	        LT: 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L: 'DD/MM/YYYY',
	        LL: 'D MMMM YYYY',
	        LLL: 'D MMMM YYYY HH:mm',
	        LLLL: 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar: {
	        sameDay: '[Heddiw am] LT',
	        nextDay: '[Yfory am] LT',
	        nextWeek: 'dddd [am] LT',
	        lastDay: '[Ddoe am] LT',
	        lastWeek: 'dddd [diwethaf am] LT',
	        sameElse: 'L'
	    },
	    relativeTime: {
	        future: 'mewn %s',
	        past: '%s yn ôl',
	        s: 'ychydig eiliadau',
	        ss: '%d eiliad',
	        m: 'munud',
	        mm: '%d munud',
	        h: 'awr',
	        hh: '%d awr',
	        d: 'diwrnod',
	        dd: '%d diwrnod',
	        M: 'mis',
	        MM: '%d mis',
	        y: 'blwyddyn',
	        yy: '%d flynedd'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
	    // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
	    ordinal: function (number) {
	        var b = number,
	            output = '',
	            lookup = [
	                '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
	                'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
	            ];
	        if (b > 20) {
	            if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
	                output = 'fed'; // not 30ain, 70ain or 90ain
	            } else {
	                output = 'ain';
	            }
	        } else if (b > 0) {
	            output = lookup[b];
	        }
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return cy;
	
	})));


/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Danish [da]
	//! author : Ulrik Nielsen : https://github.com/mrbase
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var da = moment.defineLocale('da', {
	    months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
	    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	    weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	    weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
	    weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY HH:mm',
	        LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
	    },
	    calendar : {
	        sameDay : '[i dag kl.] LT',
	        nextDay : '[i morgen kl.] LT',
	        nextWeek : 'på dddd [kl.] LT',
	        lastDay : '[i går kl.] LT',
	        lastWeek : '[i] dddd[s kl.] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'om %s',
	        past : '%s siden',
	        s : 'få sekunder',
	        ss : '%d sekunder',
	        m : 'et minut',
	        mm : '%d minutter',
	        h : 'en time',
	        hh : '%d timer',
	        d : 'en dag',
	        dd : '%d dage',
	        M : 'en måned',
	        MM : '%d måneder',
	        y : 'et år',
	        yy : '%d år'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return da;
	
	})));


/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : German (Austria) [de-at]
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Martin Groller : https://github.com/MadMG
	//! author : Mikolaj Dadela : https://github.com/mik01aj
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        'm': ['eine Minute', 'einer Minute'],
	        'h': ['eine Stunde', 'einer Stunde'],
	        'd': ['ein Tag', 'einem Tag'],
	        'dd': [number + ' Tage', number + ' Tagen'],
	        'M': ['ein Monat', 'einem Monat'],
	        'MM': [number + ' Monate', number + ' Monaten'],
	        'y': ['ein Jahr', 'einem Jahr'],
	        'yy': [number + ' Jahre', number + ' Jahren']
	    };
	    return withoutSuffix ? format[key][0] : format[key][1];
	}
	
	var deAt = moment.defineLocale('de-at', {
	    months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	    monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT: 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY HH:mm',
	        LLLL : 'dddd, D. MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[heute um] LT [Uhr]',
	        sameElse: 'L',
	        nextDay: '[morgen um] LT [Uhr]',
	        nextWeek: 'dddd [um] LT [Uhr]',
	        lastDay: '[gestern um] LT [Uhr]',
	        lastWeek: '[letzten] dddd [um] LT [Uhr]'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : 'vor %s',
	        s : 'ein paar Sekunden',
	        ss : '%d Sekunden',
	        m : processRelativeTime,
	        mm : '%d Minuten',
	        h : processRelativeTime,
	        hh : '%d Stunden',
	        d : processRelativeTime,
	        dd : processRelativeTime,
	        M : processRelativeTime,
	        MM : processRelativeTime,
	        y : processRelativeTime,
	        yy : processRelativeTime
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return deAt;
	
	})));


/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : German (Switzerland) [de-ch]
	//! author : sschueller : https://github.com/sschueller
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	// based on: https://www.bk.admin.ch/dokumentation/sprachen/04915/05016/index.html?lang=de#
	
	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        'm': ['eine Minute', 'einer Minute'],
	        'h': ['eine Stunde', 'einer Stunde'],
	        'd': ['ein Tag', 'einem Tag'],
	        'dd': [number + ' Tage', number + ' Tagen'],
	        'M': ['ein Monat', 'einem Monat'],
	        'MM': [number + ' Monate', number + ' Monaten'],
	        'y': ['ein Jahr', 'einem Jahr'],
	        'yy': [number + ' Jahre', number + ' Jahren']
	    };
	    return withoutSuffix ? format[key][0] : format[key][1];
	}
	
	var deCh = moment.defineLocale('de-ch', {
	    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	    monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	    weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT: 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY HH:mm',
	        LLLL : 'dddd, D. MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[heute um] LT [Uhr]',
	        sameElse: 'L',
	        nextDay: '[morgen um] LT [Uhr]',
	        nextWeek: 'dddd [um] LT [Uhr]',
	        lastDay: '[gestern um] LT [Uhr]',
	        lastWeek: '[letzten] dddd [um] LT [Uhr]'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : 'vor %s',
	        s : 'ein paar Sekunden',
	        ss : '%d Sekunden',
	        m : processRelativeTime,
	        mm : '%d Minuten',
	        h : processRelativeTime,
	        hh : '%d Stunden',
	        d : processRelativeTime,
	        dd : processRelativeTime,
	        M : processRelativeTime,
	        MM : processRelativeTime,
	        y : processRelativeTime,
	        yy : processRelativeTime
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return deCh;
	
	})));


/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : German [de]
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Mikolaj Dadela : https://github.com/mik01aj
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        'm': ['eine Minute', 'einer Minute'],
	        'h': ['eine Stunde', 'einer Stunde'],
	        'd': ['ein Tag', 'einem Tag'],
	        'dd': [number + ' Tage', number + ' Tagen'],
	        'M': ['ein Monat', 'einem Monat'],
	        'MM': [number + ' Monate', number + ' Monaten'],
	        'y': ['ein Jahr', 'einem Jahr'],
	        'yy': [number + ' Jahre', number + ' Jahren']
	    };
	    return withoutSuffix ? format[key][0] : format[key][1];
	}
	
	var de = moment.defineLocale('de', {
	    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	    monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT: 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY HH:mm',
	        LLLL : 'dddd, D. MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[heute um] LT [Uhr]',
	        sameElse: 'L',
	        nextDay: '[morgen um] LT [Uhr]',
	        nextWeek: 'dddd [um] LT [Uhr]',
	        lastDay: '[gestern um] LT [Uhr]',
	        lastWeek: '[letzten] dddd [um] LT [Uhr]'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : 'vor %s',
	        s : 'ein paar Sekunden',
	        ss : '%d Sekunden',
	        m : processRelativeTime,
	        mm : '%d Minuten',
	        h : processRelativeTime,
	        hh : '%d Stunden',
	        d : processRelativeTime,
	        dd : processRelativeTime,
	        M : processRelativeTime,
	        MM : processRelativeTime,
	        y : processRelativeTime,
	        yy : processRelativeTime
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return de;
	
	})));


/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Maldivian [dv]
	//! author : Jawish Hameed : https://github.com/jawish
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var months = [
	    'ޖެނުއަރީ',
	    'ފެބްރުއަރީ',
	    'މާރިޗު',
	    'އޭޕްރީލު',
	    'މޭ',
	    'ޖޫން',
	    'ޖުލައި',
	    'އޯގަސްޓު',
	    'ސެޕްޓެމްބަރު',
	    'އޮކްޓޯބަރު',
	    'ނޮވެމްބަރު',
	    'ޑިސެމްބަރު'
	];
	var weekdays = [
	    'އާދިއްތަ',
	    'ހޯމަ',
	    'އަންގާރަ',
	    'ބުދަ',
	    'ބުރާސްފަތި',
	    'ހުކުރު',
	    'ހޮނިހިރު'
	];
	
	var dv = moment.defineLocale('dv', {
	    months : months,
	    monthsShort : months,
	    weekdays : weekdays,
	    weekdaysShort : weekdays,
	    weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
	    longDateFormat : {
	
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'D/M/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    meridiemParse: /މކ|މފ/,
	    isPM : function (input) {
	        return 'މފ' === input;
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'މކ';
	        } else {
	            return 'މފ';
	        }
	    },
	    calendar : {
	        sameDay : '[މިއަދު] LT',
	        nextDay : '[މާދަމާ] LT',
	        nextWeek : 'dddd LT',
	        lastDay : '[އިއްޔެ] LT',
	        lastWeek : '[ފާއިތުވި] dddd LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'ތެރޭގައި %s',
	        past : 'ކުރިން %s',
	        s : 'ސިކުންތުކޮޅެއް',
	        ss : 'd% ސިކުންތު',
	        m : 'މިނިޓެއް',
	        mm : 'މިނިޓު %d',
	        h : 'ގަޑިއިރެއް',
	        hh : 'ގަޑިއިރު %d',
	        d : 'ދުވަހެއް',
	        dd : 'ދުވަސް %d',
	        M : 'މަހެއް',
	        MM : 'މަސް %d',
	        y : 'އަހަރެއް',
	        yy : 'އަހަރު %d'
	    },
	    preparse: function (string) {
	        return string.replace(/،/g, ',');
	    },
	    postformat: function (string) {
	        return string.replace(/,/g, '،');
	    },
	    week : {
	        dow : 7,  // Sunday is the first day of the week.
	        doy : 12  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return dv;
	
	})));


/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Greek [el]
	//! author : Aggelos Karalias : https://github.com/mehiel
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	function isFunction(input) {
	    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	}
	
	
	var el = moment.defineLocale('el', {
	    monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
	    monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
	    months : function (momentToFormat, format) {
	        if (!momentToFormat) {
	            return this._monthsNominativeEl;
	        } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
	            return this._monthsGenitiveEl[momentToFormat.month()];
	        } else {
	            return this._monthsNominativeEl[momentToFormat.month()];
	        }
	    },
	    monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
	    weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
	    weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
	    weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
	    meridiem : function (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'μμ' : 'ΜΜ';
	        } else {
	            return isLower ? 'πμ' : 'ΠΜ';
	        }
	    },
	    isPM : function (input) {
	        return ((input + '').toLowerCase()[0] === 'μ');
	    },
	    meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY h:mm A',
	        LLLL : 'dddd, D MMMM YYYY h:mm A'
	    },
	    calendarEl : {
	        sameDay : '[Σήμερα {}] LT',
	        nextDay : '[Αύριο {}] LT',
	        nextWeek : 'dddd [{}] LT',
	        lastDay : '[Χθες {}] LT',
	        lastWeek : function () {
	            switch (this.day()) {
	                case 6:
	                    return '[το προηγούμενο] dddd [{}] LT';
	                default:
	                    return '[την προηγούμενη] dddd [{}] LT';
	            }
	        },
	        sameElse : 'L'
	    },
	    calendar : function (key, mom) {
	        var output = this._calendarEl[key],
	            hours = mom && mom.hours();
	        if (isFunction(output)) {
	            output = output.apply(mom);
	        }
	        return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
	    },
	    relativeTime : {
	        future : 'σε %s',
	        past : '%s πριν',
	        s : 'λίγα δευτερόλεπτα',
	        ss : '%d δευτερόλεπτα',
	        m : 'ένα λεπτό',
	        mm : '%d λεπτά',
	        h : 'μία ώρα',
	        hh : '%d ώρες',
	        d : 'μία μέρα',
	        dd : '%d μέρες',
	        M : 'ένας μήνας',
	        MM : '%d μήνες',
	        y : 'ένας χρόνος',
	        yy : '%d χρόνια'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}η/,
	    ordinal: '%dη',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4st is the first week of the year.
	    }
	});
	
	return el;
	
	})));


/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (Australia) [en-au]
	//! author : Jared Morse : https://github.com/jarcoal
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var enAu = moment.defineLocale('en-au', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY h:mm A',
	        LLLL : 'dddd, D MMMM YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        ss : '%d seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return enAu;
	
	})));


/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (Canada) [en-ca]
	//! author : Jonathan Abourbih : https://github.com/jonbca
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var enCa = moment.defineLocale('en-ca', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'YYYY-MM-DD',
	        LL : 'MMMM D, YYYY',
	        LLL : 'MMMM D, YYYY h:mm A',
	        LLLL : 'dddd, MMMM D, YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        ss : '%d seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    }
	});
	
	return enCa;
	
	})));


/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (United Kingdom) [en-gb]
	//! author : Chris Gedrim : https://github.com/chrisgedrim
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var enGb = moment.defineLocale('en-gb', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        ss : '%d seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return enGb;
	
	})));


/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (Ireland) [en-ie]
	//! author : Chris Cartlidge : https://github.com/chriscartlidge
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var enIe = moment.defineLocale('en-ie', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD-MM-YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        ss : '%d seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return enIe;
	
	})));


/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (New Zealand) [en-nz]
	//! author : Luke McGregor : https://github.com/lukemcgregor
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var enNz = moment.defineLocale('en-nz', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY h:mm A',
	        LLLL : 'dddd, D MMMM YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        ss : '%d seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return enNz;
	
	})));


/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Esperanto [eo]
	//! author : Colin Dean : https://github.com/colindean
	//! author : Mia Nordentoft Imperatori : https://github.com/miestasmia
	//! comment : miestasmia corrected the translation by colindean
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var eo = moment.defineLocale('eo', {
	    months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
	    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
	    weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
	    weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
	    weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY-MM-DD',
	        LL : 'D[-a de] MMMM, YYYY',
	        LLL : 'D[-a de] MMMM, YYYY HH:mm',
	        LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'
	    },
	    meridiemParse: /[ap]\.t\.m/i,
	    isPM: function (input) {
	        return input.charAt(0).toLowerCase() === 'p';
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'p.t.m.' : 'P.T.M.';
	        } else {
	            return isLower ? 'a.t.m.' : 'A.T.M.';
	        }
	    },
	    calendar : {
	        sameDay : '[Hodiaŭ je] LT',
	        nextDay : '[Morgaŭ je] LT',
	        nextWeek : 'dddd [je] LT',
	        lastDay : '[Hieraŭ je] LT',
	        lastWeek : '[pasinta] dddd [je] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'post %s',
	        past : 'antaŭ %s',
	        s : 'sekundoj',
	        ss : '%d sekundoj',
	        m : 'minuto',
	        mm : '%d minutoj',
	        h : 'horo',
	        hh : '%d horoj',
	        d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
	        dd : '%d tagoj',
	        M : 'monato',
	        MM : '%d monatoj',
	        y : 'jaro',
	        yy : '%d jaroj'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}a/,
	    ordinal : '%da',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return eo;
	
	})));


/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Spanish (Dominican Republic) [es-do]
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
	var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
	
	var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
	var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
	
	var esDo = moment.defineLocale('es-do', {
	    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	    monthsShort : function (m, format) {
	        if (!m) {
	            return monthsShortDot;
	        } else if (/-MMM-/.test(format)) {
	            return monthsShort[m.month()];
	        } else {
	            return monthsShortDot[m.month()];
	        }
	    },
	    monthsRegex: monthsRegex,
	    monthsShortRegex: monthsRegex,
	    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
	    monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
	    monthsParse: monthsParse,
	    longMonthsParse: monthsParse,
	    shortMonthsParse: monthsParse,
	    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D [de] MMMM [de] YYYY',
	        LLL : 'D [de] MMMM [de] YYYY h:mm A',
	        LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : function () {
	            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextDay : function () {
	            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextWeek : function () {
	            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastDay : function () {
	            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastWeek : function () {
	            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'en %s',
	        past : 'hace %s',
	        s : 'unos segundos',
	        ss : '%d segundos',
	        m : 'un minuto',
	        mm : '%d minutos',
	        h : 'una hora',
	        hh : '%d horas',
	        d : 'un día',
	        dd : '%d días',
	        M : 'un mes',
	        MM : '%d meses',
	        y : 'un año',
	        yy : '%d años'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}º/,
	    ordinal : '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return esDo;
	
	})));


/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Spanish (United States) [es-us]
	//! author : bustta : https://github.com/bustta
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
	var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
	
	var esUs = moment.defineLocale('es-us', {
	    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	    monthsShort : function (m, format) {
	        if (!m) {
	            return monthsShortDot;
	        } else if (/-MMM-/.test(format)) {
	            return monthsShort[m.month()];
	        } else {
	            return monthsShortDot[m.month()];
	        }
	    },
	    monthsParseExact : true,
	    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'MM/DD/YYYY',
	        LL : 'MMMM [de] D [de] YYYY',
	        LLL : 'MMMM [de] D [de] YYYY h:mm A',
	        LLLL : 'dddd, MMMM [de] D [de] YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : function () {
	            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextDay : function () {
	            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextWeek : function () {
	            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastDay : function () {
	            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastWeek : function () {
	            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'en %s',
	        past : 'hace %s',
	        s : 'unos segundos',
	        ss : '%d segundos',
	        m : 'un minuto',
	        mm : '%d minutos',
	        h : 'una hora',
	        hh : '%d horas',
	        d : 'un día',
	        dd : '%d días',
	        M : 'un mes',
	        MM : '%d meses',
	        y : 'un año',
	        yy : '%d años'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}º/,
	    ordinal : '%dº',
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return esUs;
	
	})));


/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Spanish [es]
	//! author : Julio Napurí : https://github.com/julionc
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
	var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
	
	var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
	var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
	
	var es = moment.defineLocale('es', {
	    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	    monthsShort : function (m, format) {
	        if (!m) {
	            return monthsShortDot;
	        } else if (/-MMM-/.test(format)) {
	            return monthsShort[m.month()];
	        } else {
	            return monthsShortDot[m.month()];
	        }
	    },
	    monthsRegex : monthsRegex,
	    monthsShortRegex : monthsRegex,
	    monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
	    monthsShortStrictRegex : /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
	    monthsParse : monthsParse,
	    longMonthsParse : monthsParse,
	    shortMonthsParse : monthsParse,
	    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D [de] MMMM [de] YYYY',
	        LLL : 'D [de] MMMM [de] YYYY H:mm',
	        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	    },
	    calendar : {
	        sameDay : function () {
	            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextDay : function () {
	            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextWeek : function () {
	            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastDay : function () {
	            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastWeek : function () {
	            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'en %s',
	        past : 'hace %s',
	        s : 'unos segundos',
	        ss : '%d segundos',
	        m : 'un minuto',
	        mm : '%d minutos',
	        h : 'una hora',
	        hh : '%d horas',
	        d : 'un día',
	        dd : '%d días',
	        M : 'un mes',
	        MM : '%d meses',
	        y : 'un año',
	        yy : '%d años'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}º/,
	    ordinal : '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return es;
	
	})));


/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Estonian [et]
	//! author : Henry Kehlmann : https://github.com/madhenry
	//! improvements : Illimar Tambek : https://github.com/ragulka
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
	        'ss': [number + 'sekundi', number + 'sekundit'],
	        'm' : ['ühe minuti', 'üks minut'],
	        'mm': [number + ' minuti', number + ' minutit'],
	        'h' : ['ühe tunni', 'tund aega', 'üks tund'],
	        'hh': [number + ' tunni', number + ' tundi'],
	        'd' : ['ühe päeva', 'üks päev'],
	        'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
	        'MM': [number + ' kuu', number + ' kuud'],
	        'y' : ['ühe aasta', 'aasta', 'üks aasta'],
	        'yy': [number + ' aasta', number + ' aastat']
	    };
	    if (withoutSuffix) {
	        return format[key][2] ? format[key][2] : format[key][1];
	    }
	    return isFuture ? format[key][0] : format[key][1];
	}
	
	var et = moment.defineLocale('et', {
	    months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
	    monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
	    weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
	    weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
	    weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
	    longDateFormat : {
	        LT   : 'H:mm',
	        LTS : 'H:mm:ss',
	        L    : 'DD.MM.YYYY',
	        LL   : 'D. MMMM YYYY',
	        LLL  : 'D. MMMM YYYY H:mm',
	        LLLL : 'dddd, D. MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay  : '[Täna,] LT',
	        nextDay  : '[Homme,] LT',
	        nextWeek : '[Järgmine] dddd LT',
	        lastDay  : '[Eile,] LT',
	        lastWeek : '[Eelmine] dddd LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s pärast',
	        past   : '%s tagasi',
	        s      : processRelativeTime,
	        ss     : processRelativeTime,
	        m      : processRelativeTime,
	        mm     : processRelativeTime,
	        h      : processRelativeTime,
	        hh     : processRelativeTime,
	        d      : processRelativeTime,
	        dd     : '%d päeva',
	        M      : processRelativeTime,
	        MM     : processRelativeTime,
	        y      : processRelativeTime,
	        yy     : processRelativeTime
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return et;
	
	})));


/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Basque [eu]
	//! author : Eneko Illarramendi : https://github.com/eillarra
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var eu = moment.defineLocale('eu', {
	    months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
	    monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
	    weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
	    weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY-MM-DD',
	        LL : 'YYYY[ko] MMMM[ren] D[a]',
	        LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
	        LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
	        l : 'YYYY-M-D',
	        ll : 'YYYY[ko] MMM D[a]',
	        lll : 'YYYY[ko] MMM D[a] HH:mm',
	        llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
	    },
	    calendar : {
	        sameDay : '[gaur] LT[etan]',
	        nextDay : '[bihar] LT[etan]',
	        nextWeek : 'dddd LT[etan]',
	        lastDay : '[atzo] LT[etan]',
	        lastWeek : '[aurreko] dddd LT[etan]',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s barru',
	        past : 'duela %s',
	        s : 'segundo batzuk',
	        ss : '%d segundo',
	        m : 'minutu bat',
	        mm : '%d minutu',
	        h : 'ordu bat',
	        hh : '%d ordu',
	        d : 'egun bat',
	        dd : '%d egun',
	        M : 'hilabete bat',
	        MM : '%d hilabete',
	        y : 'urte bat',
	        yy : '%d urte'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return eu;
	
	})));


/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Persian [fa]
	//! author : Ebrahim Byagowi : https://github.com/ebraminio
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var symbolMap = {
	    '1': '۱',
	    '2': '۲',
	    '3': '۳',
	    '4': '۴',
	    '5': '۵',
	    '6': '۶',
	    '7': '۷',
	    '8': '۸',
	    '9': '۹',
	    '0': '۰'
	};
	var numberMap = {
	    '۱': '1',
	    '۲': '2',
	    '۳': '3',
	    '۴': '4',
	    '۵': '5',
	    '۶': '6',
	    '۷': '7',
	    '۸': '8',
	    '۹': '9',
	    '۰': '0'
	};
	
	var fa = moment.defineLocale('fa', {
	    months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	    monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	    weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	    weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	    weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    meridiemParse: /قبل از ظهر|بعد از ظهر/,
	    isPM: function (input) {
	        return /بعد از ظهر/.test(input);
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'قبل از ظهر';
	        } else {
	            return 'بعد از ظهر';
	        }
	    },
	    calendar : {
	        sameDay : '[امروز ساعت] LT',
	        nextDay : '[فردا ساعت] LT',
	        nextWeek : 'dddd [ساعت] LT',
	        lastDay : '[دیروز ساعت] LT',
	        lastWeek : 'dddd [پیش] [ساعت] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'در %s',
	        past : '%s پیش',
	        s : 'چند ثانیه',
	        ss : 'ثانیه d%',
	        m : 'یک دقیقه',
	        mm : '%d دقیقه',
	        h : 'یک ساعت',
	        hh : '%d ساعت',
	        d : 'یک روز',
	        dd : '%d روز',
	        M : 'یک ماه',
	        MM : '%d ماه',
	        y : 'یک سال',
	        yy : '%d سال'
	    },
	    preparse: function (string) {
	        return string.replace(/[۰-۹]/g, function (match) {
	            return numberMap[match];
	        }).replace(/،/g, ',');
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        }).replace(/,/g, '،');
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}م/,
	    ordinal : '%dم',
	    week : {
	        dow : 6, // Saturday is the first day of the week.
	        doy : 12 // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return fa;
	
	})));


/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Finnish [fi]
	//! author : Tarmo Aidantausta : https://github.com/bleadof
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');
	var numbersFuture = [
	        'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
	        numbersPast[7], numbersPast[8], numbersPast[9]
	    ];
	function translate(number, withoutSuffix, key, isFuture) {
	    var result = '';
	    switch (key) {
	        case 's':
	            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
	        case 'ss':
	            return isFuture ? 'sekunnin' : 'sekuntia';
	        case 'm':
	            return isFuture ? 'minuutin' : 'minuutti';
	        case 'mm':
	            result = isFuture ? 'minuutin' : 'minuuttia';
	            break;
	        case 'h':
	            return isFuture ? 'tunnin' : 'tunti';
	        case 'hh':
	            result = isFuture ? 'tunnin' : 'tuntia';
	            break;
	        case 'd':
	            return isFuture ? 'päivän' : 'päivä';
	        case 'dd':
	            result = isFuture ? 'päivän' : 'päivää';
	            break;
	        case 'M':
	            return isFuture ? 'kuukauden' : 'kuukausi';
	        case 'MM':
	            result = isFuture ? 'kuukauden' : 'kuukautta';
	            break;
	        case 'y':
	            return isFuture ? 'vuoden' : 'vuosi';
	        case 'yy':
	            result = isFuture ? 'vuoden' : 'vuotta';
	            break;
	    }
	    result = verbalNumber(number, isFuture) + ' ' + result;
	    return result;
	}
	function verbalNumber(number, isFuture) {
	    return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
	}
	
	var fi = moment.defineLocale('fi', {
	    months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
	    monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
	    weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
	    weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
	    weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
	    longDateFormat : {
	        LT : 'HH.mm',
	        LTS : 'HH.mm.ss',
	        L : 'DD.MM.YYYY',
	        LL : 'Do MMMM[ta] YYYY',
	        LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
	        LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
	        l : 'D.M.YYYY',
	        ll : 'Do MMM YYYY',
	        lll : 'Do MMM YYYY, [klo] HH.mm',
	        llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
	    },
	    calendar : {
	        sameDay : '[tänään] [klo] LT',
	        nextDay : '[huomenna] [klo] LT',
	        nextWeek : 'dddd [klo] LT',
	        lastDay : '[eilen] [klo] LT',
	        lastWeek : '[viime] dddd[na] [klo] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s päästä',
	        past : '%s sitten',
	        s : translate,
	        ss : translate,
	        m : translate,
	        mm : translate,
	        h : translate,
	        hh : translate,
	        d : translate,
	        dd : translate,
	        M : translate,
	        MM : translate,
	        y : translate,
	        yy : translate
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return fi;
	
	})));


/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Faroese [fo]
	//! author : Ragnar Johannesen : https://github.com/ragnar123
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var fo = moment.defineLocale('fo', {
	    months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	    monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	    weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
	    weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
	    weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D. MMMM, YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Í dag kl.] LT',
	        nextDay : '[Í morgin kl.] LT',
	        nextWeek : 'dddd [kl.] LT',
	        lastDay : '[Í gjár kl.] LT',
	        lastWeek : '[síðstu] dddd [kl] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'um %s',
	        past : '%s síðani',
	        s : 'fá sekund',
	        ss : '%d sekundir',
	        m : 'ein minutt',
	        mm : '%d minuttir',
	        h : 'ein tími',
	        hh : '%d tímar',
	        d : 'ein dagur',
	        dd : '%d dagar',
	        M : 'ein mánaði',
	        MM : '%d mánaðir',
	        y : 'eitt ár',
	        yy : '%d ár'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return fo;
	
	})));


/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : French (Canada) [fr-ca]
	//! author : Jonathan Abourbih : https://github.com/jonbca
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var frCa = moment.defineLocale('fr-ca', {
	    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	    weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY-MM-DD',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Aujourd’hui à] LT',
	        nextDay : '[Demain à] LT',
	        nextWeek : 'dddd [à] LT',
	        lastDay : '[Hier à] LT',
	        lastWeek : 'dddd [dernier à] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'dans %s',
	        past : 'il y a %s',
	        s : 'quelques secondes',
	        ss : '%d secondes',
	        m : 'une minute',
	        mm : '%d minutes',
	        h : 'une heure',
	        hh : '%d heures',
	        d : 'un jour',
	        dd : '%d jours',
	        M : 'un mois',
	        MM : '%d mois',
	        y : 'un an',
	        yy : '%d ans'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            // Words with masculine grammatical gender: mois, trimestre, jour
	            default:
	            case 'M':
	            case 'Q':
	            case 'D':
	            case 'DDD':
	            case 'd':
	                return number + (number === 1 ? 'er' : 'e');
	
	            // Words with feminine grammatical gender: semaine
	            case 'w':
	            case 'W':
	                return number + (number === 1 ? 're' : 'e');
	        }
	    }
	});
	
	return frCa;
	
	})));


/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : French (Switzerland) [fr-ch]
	//! author : Gaspard Bucher : https://github.com/gaspard
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var frCh = moment.defineLocale('fr-ch', {
	    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	    weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Aujourd’hui à] LT',
	        nextDay : '[Demain à] LT',
	        nextWeek : 'dddd [à] LT',
	        lastDay : '[Hier à] LT',
	        lastWeek : 'dddd [dernier à] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'dans %s',
	        past : 'il y a %s',
	        s : 'quelques secondes',
	        ss : '%d secondes',
	        m : 'une minute',
	        mm : '%d minutes',
	        h : 'une heure',
	        hh : '%d heures',
	        d : 'un jour',
	        dd : '%d jours',
	        M : 'un mois',
	        MM : '%d mois',
	        y : 'un an',
	        yy : '%d ans'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            // Words with masculine grammatical gender: mois, trimestre, jour
	            default:
	            case 'M':
	            case 'Q':
	            case 'D':
	            case 'DDD':
	            case 'd':
	                return number + (number === 1 ? 'er' : 'e');
	
	            // Words with feminine grammatical gender: semaine
	            case 'w':
	            case 'W':
	                return number + (number === 1 ? 're' : 'e');
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return frCh;
	
	})));


/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : French [fr]
	//! author : John Fischer : https://github.com/jfroffice
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var fr = moment.defineLocale('fr', {
	    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	    weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Aujourd’hui à] LT',
	        nextDay : '[Demain à] LT',
	        nextWeek : 'dddd [à] LT',
	        lastDay : '[Hier à] LT',
	        lastWeek : 'dddd [dernier à] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'dans %s',
	        past : 'il y a %s',
	        s : 'quelques secondes',
	        ss : '%d secondes',
	        m : 'une minute',
	        mm : '%d minutes',
	        h : 'une heure',
	        hh : '%d heures',
	        d : 'un jour',
	        dd : '%d jours',
	        M : 'un mois',
	        MM : '%d mois',
	        y : 'un an',
	        yy : '%d ans'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            // TODO: Return 'e' when day of month > 1. Move this case inside
	            // block for masculine words below.
	            // See https://github.com/moment/moment/issues/3375
	            case 'D':
	                return number + (number === 1 ? 'er' : '');
	
	            // Words with masculine grammatical gender: mois, trimestre, jour
	            default:
	            case 'M':
	            case 'Q':
	            case 'DDD':
	            case 'd':
	                return number + (number === 1 ? 'er' : 'e');
	
	            // Words with feminine grammatical gender: semaine
	            case 'w':
	            case 'W':
	                return number + (number === 1 ? 're' : 'e');
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return fr;
	
	})));


/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Frisian [fy]
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_');
	var monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');
	
	var fy = moment.defineLocale('fy', {
	    months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
	    monthsShort : function (m, format) {
	        if (!m) {
	            return monthsShortWithDots;
	        } else if (/-MMM-/.test(format)) {
	            return monthsShortWithoutDots[m.month()];
	        } else {
	            return monthsShortWithDots[m.month()];
	        }
	    },
	    monthsParseExact : true,
	    weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
	    weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
	    weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD-MM-YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[hjoed om] LT',
	        nextDay: '[moarn om] LT',
	        nextWeek: 'dddd [om] LT',
	        lastDay: '[juster om] LT',
	        lastWeek: '[ôfrûne] dddd [om] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'oer %s',
	        past : '%s lyn',
	        s : 'in pear sekonden',
	        ss : '%d sekonden',
	        m : 'ien minút',
	        mm : '%d minuten',
	        h : 'ien oere',
	        hh : '%d oeren',
	        d : 'ien dei',
	        dd : '%d dagen',
	        M : 'ien moanne',
	        MM : '%d moannen',
	        y : 'ien jier',
	        yy : '%d jierren'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
	    ordinal : function (number) {
	        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return fy;
	
	})));


/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Scottish Gaelic [gd]
	//! author : Jon Ashdown : https://github.com/jonashdown
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var months = [
	    'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
	];
	
	var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];
	
	var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];
	
	var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];
	
	var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];
	
	var gd = moment.defineLocale('gd', {
	    months : months,
	    monthsShort : monthsShort,
	    monthsParseExact : true,
	    weekdays : weekdays,
	    weekdaysShort : weekdaysShort,
	    weekdaysMin : weekdaysMin,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[An-diugh aig] LT',
	        nextDay : '[A-màireach aig] LT',
	        nextWeek : 'dddd [aig] LT',
	        lastDay : '[An-dè aig] LT',
	        lastWeek : 'dddd [seo chaidh] [aig] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'ann an %s',
	        past : 'bho chionn %s',
	        s : 'beagan diogan',
	        ss : '%d diogan',
	        m : 'mionaid',
	        mm : '%d mionaidean',
	        h : 'uair',
	        hh : '%d uairean',
	        d : 'latha',
	        dd : '%d latha',
	        M : 'mìos',
	        MM : '%d mìosan',
	        y : 'bliadhna',
	        yy : '%d bliadhna'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}(d|na|mh)/,
	    ordinal : function (number) {
	        var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return gd;
	
	})));


/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Galician [gl]
	//! author : Juan G. Hurtado : https://github.com/juanghurtado
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var gl = moment.defineLocale('gl', {
	    months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
	    monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
	    weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
	    weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D [de] MMMM [de] YYYY',
	        LLL : 'D [de] MMMM [de] YYYY H:mm',
	        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	    },
	    calendar : {
	        sameDay : function () {
	            return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	        },
	        nextDay : function () {
	            return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	        },
	        nextWeek : function () {
	            return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	        },
	        lastDay : function () {
	            return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
	        },
	        lastWeek : function () {
	            return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : function (str) {
	            if (str.indexOf('un') === 0) {
	                return 'n' + str;
	            }
	            return 'en ' + str;
	        },
	        past : 'hai %s',
	        s : 'uns segundos',
	        ss : '%d segundos',
	        m : 'un minuto',
	        mm : '%d minutos',
	        h : 'unha hora',
	        hh : '%d horas',
	        d : 'un día',
	        dd : '%d días',
	        M : 'un mes',
	        MM : '%d meses',
	        y : 'un ano',
	        yy : '%d anos'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}º/,
	    ordinal : '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return gl;
	
	})));


/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Konkani Latin script [gom-latn]
	//! author : The Discoverer : https://github.com/WikiDiscoverer
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        's': ['thodde secondanim', 'thodde second'],
	        'ss': [number + ' secondanim', number + ' second'],
	        'm': ['eka mintan', 'ek minute'],
	        'mm': [number + ' mintanim', number + ' mintam'],
	        'h': ['eka horan', 'ek hor'],
	        'hh': [number + ' horanim', number + ' hor'],
	        'd': ['eka disan', 'ek dis'],
	        'dd': [number + ' disanim', number + ' dis'],
	        'M': ['eka mhoinean', 'ek mhoino'],
	        'MM': [number + ' mhoineanim', number + ' mhoine'],
	        'y': ['eka vorsan', 'ek voros'],
	        'yy': [number + ' vorsanim', number + ' vorsam']
	    };
	    return withoutSuffix ? format[key][0] : format[key][1];
	}
	
	var gomLatn = moment.defineLocale('gom-latn', {
	    months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
	    monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\'var'.split('_'),
	    weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
	    weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'A h:mm [vazta]',
	        LTS : 'A h:mm:ss [vazta]',
	        L : 'DD-MM-YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY A h:mm [vazta]',
	        LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
	        llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
	    },
	    calendar : {
	        sameDay: '[Aiz] LT',
	        nextDay: '[Faleam] LT',
	        nextWeek: '[Ieta to] dddd[,] LT',
	        lastDay: '[Kal] LT',
	        lastWeek: '[Fatlo] dddd[,] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : '%s',
	        past : '%s adim',
	        s : processRelativeTime,
	        ss : processRelativeTime,
	        m : processRelativeTime,
	        mm : processRelativeTime,
	        h : processRelativeTime,
	        hh : processRelativeTime,
	        d : processRelativeTime,
	        dd : processRelativeTime,
	        M : processRelativeTime,
	        MM : processRelativeTime,
	        y : processRelativeTime,
	        yy : processRelativeTime
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}(er)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            // the ordinal 'er' only applies to day of the month
	            case 'D':
	                return number + 'er';
	            default:
	            case 'M':
	            case 'Q':
	            case 'DDD':
	            case 'd':
	            case 'w':
	            case 'W':
	                return number;
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    },
	    meridiemParse: /rati|sokalli|donparam|sanje/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'rati') {
	            return hour < 4 ? hour : hour + 12;
	        } else if (meridiem === 'sokalli') {
	            return hour;
	        } else if (meridiem === 'donparam') {
	            return hour > 12 ? hour : hour + 12;
	        } else if (meridiem === 'sanje') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'rati';
	        } else if (hour < 12) {
	            return 'sokalli';
	        } else if (hour < 16) {
	            return 'donparam';
	        } else if (hour < 20) {
	            return 'sanje';
	        } else {
	            return 'rati';
	        }
	    }
	});
	
	return gomLatn;
	
	})));


/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Gujarati [gu]
	//! author : Kaushik Thanki : https://github.com/Kaushik1987
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var symbolMap = {
	        '1': '૧',
	        '2': '૨',
	        '3': '૩',
	        '4': '૪',
	        '5': '૫',
	        '6': '૬',
	        '7': '૭',
	        '8': '૮',
	        '9': '૯',
	        '0': '૦'
	    };
	var numberMap = {
	        '૧': '1',
	        '૨': '2',
	        '૩': '3',
	        '૪': '4',
	        '૫': '5',
	        '૬': '6',
	        '૭': '7',
	        '૮': '8',
	        '૯': '9',
	        '૦': '0'
	    };
	
	var gu = moment.defineLocale('gu', {
	    months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),
	    monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),
	    monthsParseExact: true,
	    weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),
	    weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
	    weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
	    longDateFormat: {
	        LT: 'A h:mm વાગ્યે',
	        LTS: 'A h:mm:ss વાગ્યે',
	        L: 'DD/MM/YYYY',
	        LL: 'D MMMM YYYY',
	        LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
	        LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'
	    },
	    calendar: {
	        sameDay: '[આજ] LT',
	        nextDay: '[કાલે] LT',
	        nextWeek: 'dddd, LT',
	        lastDay: '[ગઇકાલે] LT',
	        lastWeek: '[પાછલા] dddd, LT',
	        sameElse: 'L'
	    },
	    relativeTime: {
	        future: '%s મા',
	        past: '%s પેહલા',
	        s: 'અમુક પળો',
	        ss: '%d સેકંડ',
	        m: 'એક મિનિટ',
	        mm: '%d મિનિટ',
	        h: 'એક કલાક',
	        hh: '%d કલાક',
	        d: 'એક દિવસ',
	        dd: '%d દિવસ',
	        M: 'એક મહિનો',
	        MM: '%d મહિનો',
	        y: 'એક વર્ષ',
	        yy: '%d વર્ષ'
	    },
	    preparse: function (string) {
	        return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
	    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
	    meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
	    meridiemHour: function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'રાત') {
	            return hour < 4 ? hour : hour + 12;
	        } else if (meridiem === 'સવાર') {
	            return hour;
	        } else if (meridiem === 'બપોર') {
	            return hour >= 10 ? hour : hour + 12;
	        } else if (meridiem === 'સાંજ') {
	            return hour + 12;
	        }
	    },
	    meridiem: function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'રાત';
	        } else if (hour < 10) {
	            return 'સવાર';
	        } else if (hour < 17) {
	            return 'બપોર';
	        } else if (hour < 20) {
	            return 'સાંજ';
	        } else {
	            return 'રાત';
	        }
	    },
	    week: {
	        dow: 0, // Sunday is the first day of the week.
	        doy: 6 // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return gu;
	
	})));


/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Hebrew [he]
	//! author : Tomer Cohen : https://github.com/tomer
	//! author : Moshe Simantov : https://github.com/DevelopmentIL
	//! author : Tal Ater : https://github.com/TalAter
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var he = moment.defineLocale('he', {
	    months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
	    monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
	    weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
	    weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
	    weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D [ב]MMMM YYYY',
	        LLL : 'D [ב]MMMM YYYY HH:mm',
	        LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
	        l : 'D/M/YYYY',
	        ll : 'D MMM YYYY',
	        lll : 'D MMM YYYY HH:mm',
	        llll : 'ddd, D MMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[היום ב־]LT',
	        nextDay : '[מחר ב־]LT',
	        nextWeek : 'dddd [בשעה] LT',
	        lastDay : '[אתמול ב־]LT',
	        lastWeek : '[ביום] dddd [האחרון בשעה] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'בעוד %s',
	        past : 'לפני %s',
	        s : 'מספר שניות',
	        ss : '%d שניות',
	        m : 'דקה',
	        mm : '%d דקות',
	        h : 'שעה',
	        hh : function (number) {
	            if (number === 2) {
	                return 'שעתיים';
	            }
	            return number + ' שעות';
	        },
	        d : 'יום',
	        dd : function (number) {
	            if (number === 2) {
	                return 'יומיים';
	            }
	            return number + ' ימים';
	        },
	        M : 'חודש',
	        MM : function (number) {
	            if (number === 2) {
	                return 'חודשיים';
	            }
	            return number + ' חודשים';
	        },
	        y : 'שנה',
	        yy : function (number) {
	            if (number === 2) {
	                return 'שנתיים';
	            } else if (number % 10 === 0 && number !== 10) {
	                return number + ' שנה';
	            }
	            return number + ' שנים';
	        }
	    },
	    meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
	    isPM : function (input) {
	        return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 5) {
	            return 'לפנות בוקר';
	        } else if (hour < 10) {
	            return 'בבוקר';
	        } else if (hour < 12) {
	            return isLower ? 'לפנה"צ' : 'לפני הצהריים';
	        } else if (hour < 18) {
	            return isLower ? 'אחה"צ' : 'אחרי הצהריים';
	        } else {
	            return 'בערב';
	        }
	    }
	});
	
	return he;
	
	})));


/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Hindi [hi]
	//! author : Mayank Singhal : https://github.com/mayanksinghal
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var symbolMap = {
	    '1': '१',
	    '2': '२',
	    '3': '३',
	    '4': '४',
	    '5': '५',
	    '6': '६',
	    '7': '७',
	    '8': '८',
	    '9': '९',
	    '0': '०'
	};
	var numberMap = {
	    '१': '1',
	    '२': '2',
	    '३': '3',
	    '४': '4',
	    '५': '5',
	    '६': '6',
	    '७': '7',
	    '८': '8',
	    '९': '9',
	    '०': '0'
	};
	
	var hi = moment.defineLocale('hi', {
	    months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
	    monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	    weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
	    weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm बजे',
	        LTS : 'A h:mm:ss बजे',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm बजे',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
	    },
	    calendar : {
	        sameDay : '[आज] LT',
	        nextDay : '[कल] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[कल] LT',
	        lastWeek : '[पिछले] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s में',
	        past : '%s पहले',
	        s : 'कुछ ही क्षण',
	        ss : '%d सेकंड',
	        m : 'एक मिनट',
	        mm : '%d मिनट',
	        h : 'एक घंटा',
	        hh : '%d घंटे',
	        d : 'एक दिन',
	        dd : '%d दिन',
	        M : 'एक महीने',
	        MM : '%d महीने',
	        y : 'एक वर्ष',
	        yy : '%d वर्ष'
	    },
	    preparse: function (string) {
	        return string.replace(/[१२३४५६७८९०]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    // Hindi notation for meridiems are quite fuzzy in practice. While there exists
	    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
	    meridiemParse: /रात|सुबह|दोपहर|शाम/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'रात') {
	            return hour < 4 ? hour : hour + 12;
	        } else if (meridiem === 'सुबह') {
	            return hour;
	        } else if (meridiem === 'दोपहर') {
	            return hour >= 10 ? hour : hour + 12;
	        } else if (meridiem === 'शाम') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'रात';
	        } else if (hour < 10) {
	            return 'सुबह';
	        } else if (hour < 17) {
	            return 'दोपहर';
	        } else if (hour < 20) {
	            return 'शाम';
	        } else {
	            return 'रात';
	        }
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return hi;
	
	})));


/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Croatian [hr]
	//! author : Bojan Marković : https://github.com/bmarkovic
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	function translate(number, withoutSuffix, key) {
	    var result = number + ' ';
	    switch (key) {
	        case 'ss':
	            if (number === 1) {
	                result += 'sekunda';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sekunde';
	            } else {
	                result += 'sekundi';
	            }
	            return result;
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	    }
	}
	
	var hr = moment.defineLocale('hr', {
	    months : {
	        format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
	        standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
	    },
	    monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	    weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	    weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY H:mm',
	        LLLL : 'dddd, D. MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay  : '[danas u] LT',
	        nextDay  : '[sutra u] LT',
	        nextWeek : function () {
	            switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	            }
	        },
	        lastDay  : '[jučer u] LT',
	        lastWeek : function () {
	            switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	            }
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'za %s',
	        past   : 'prije %s',
	        s      : 'par sekundi',
	        ss     : translate,
	        m      : translate,
	        mm     : translate,
	        h      : translate,
	        hh     : translate,
	        d      : 'dan',
	        dd     : translate,
	        M      : 'mjesec',
	        MM     : translate,
	        y      : 'godinu',
	        yy     : translate
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return hr;
	
	})));


/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Hungarian [hu]
	//! author : Adam Brunner : https://github.com/adambrunner
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
	function translate(number, withoutSuffix, key, isFuture) {
	    var num = number;
	    switch (key) {
	        case 's':
	            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
	        case 'ss':
	            return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';
	        case 'm':
	            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'mm':
	            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'h':
	            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'hh':
	            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'd':
	            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'dd':
	            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'M':
	            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'MM':
	            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'y':
	            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
	        case 'yy':
	            return num + (isFuture || withoutSuffix ? ' év' : ' éve');
	    }
	    return '';
	}
	function week(isFuture) {
	    return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
	}
	
	var hu = moment.defineLocale('hu', {
	    months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
	    monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
	    weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
	    weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
	    weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'YYYY.MM.DD.',
	        LL : 'YYYY. MMMM D.',
	        LLL : 'YYYY. MMMM D. H:mm',
	        LLLL : 'YYYY. MMMM D., dddd H:mm'
	    },
	    meridiemParse: /de|du/i,
	    isPM: function (input) {
	        return input.charAt(1).toLowerCase() === 'u';
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 12) {
	            return isLower === true ? 'de' : 'DE';
	        } else {
	            return isLower === true ? 'du' : 'DU';
	        }
	    },
	    calendar : {
	        sameDay : '[ma] LT[-kor]',
	        nextDay : '[holnap] LT[-kor]',
	        nextWeek : function () {
	            return week.call(this, true);
	        },
	        lastDay : '[tegnap] LT[-kor]',
	        lastWeek : function () {
	            return week.call(this, false);
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s múlva',
	        past : '%s',
	        s : translate,
	        ss : translate,
	        m : translate,
	        mm : translate,
	        h : translate,
	        hh : translate,
	        d : translate,
	        dd : translate,
	        M : translate,
	        MM : translate,
	        y : translate,
	        yy : translate
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return hu;
	
	})));


/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Armenian [hy-am]
	//! author : Armendarabyan : https://github.com/armendarabyan
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var hyAm = moment.defineLocale('hy-am', {
	    months : {
	        format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
	        standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
	    },
	    monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
	    weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
	    weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	    weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY թ.',
	        LLL : 'D MMMM YYYY թ., HH:mm',
	        LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
	    },
	    calendar : {
	        sameDay: '[այսօր] LT',
	        nextDay: '[վաղը] LT',
	        lastDay: '[երեկ] LT',
	        nextWeek: function () {
	            return 'dddd [օրը ժամը] LT';
	        },
	        lastWeek: function () {
	            return '[անցած] dddd [օրը ժամը] LT';
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : '%s հետո',
	        past : '%s առաջ',
	        s : 'մի քանի վայրկյան',
	        ss : '%d վայրկյան',
	        m : 'րոպե',
	        mm : '%d րոպե',
	        h : 'ժամ',
	        hh : '%d ժամ',
	        d : 'օր',
	        dd : '%d օր',
	        M : 'ամիս',
	        MM : '%d ամիս',
	        y : 'տարի',
	        yy : '%d տարի'
	    },
	    meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
	    isPM: function (input) {
	        return /^(ցերեկվա|երեկոյան)$/.test(input);
	    },
	    meridiem : function (hour) {
	        if (hour < 4) {
	            return 'գիշերվա';
	        } else if (hour < 12) {
	            return 'առավոտվա';
	        } else if (hour < 17) {
	            return 'ցերեկվա';
	        } else {
	            return 'երեկոյան';
	        }
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
	    ordinal: function (number, period) {
	        switch (period) {
	            case 'DDD':
	            case 'w':
	            case 'W':
	            case 'DDDo':
	                if (number === 1) {
	                    return number + '-ին';
	                }
	                return number + '-րդ';
	            default:
	                return number;
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return hyAm;
	
	})));


/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Indonesian [id]
	//! author : Mohammad Satrio Utomo : https://github.com/tyok
	//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var id = moment.defineLocale('id', {
	    months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
	    weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
	    weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
	    weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
	    longDateFormat : {
	        LT : 'HH.mm',
	        LTS : 'HH.mm.ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY [pukul] HH.mm',
	        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	    },
	    meridiemParse: /pagi|siang|sore|malam/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'pagi') {
	            return hour;
	        } else if (meridiem === 'siang') {
	            return hour >= 11 ? hour : hour + 12;
	        } else if (meridiem === 'sore' || meridiem === 'malam') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 11) {
	            return 'pagi';
	        } else if (hours < 15) {
	            return 'siang';
	        } else if (hours < 19) {
	            return 'sore';
	        } else {
	            return 'malam';
	        }
	    },
	    calendar : {
	        sameDay : '[Hari ini pukul] LT',
	        nextDay : '[Besok pukul] LT',
	        nextWeek : 'dddd [pukul] LT',
	        lastDay : '[Kemarin pukul] LT',
	        lastWeek : 'dddd [lalu pukul] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'dalam %s',
	        past : '%s yang lalu',
	        s : 'beberapa detik',
	        ss : '%d detik',
	        m : 'semenit',
	        mm : '%d menit',
	        h : 'sejam',
	        hh : '%d jam',
	        d : 'sehari',
	        dd : '%d hari',
	        M : 'sebulan',
	        MM : '%d bulan',
	        y : 'setahun',
	        yy : '%d tahun'
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return id;
	
	})));


/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Icelandic [is]
	//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	function plural(n) {
	    if (n % 100 === 11) {
	        return true;
	    } else if (n % 10 === 1) {
	        return false;
	    }
	    return true;
	}
	function translate(number, withoutSuffix, key, isFuture) {
	    var result = number + ' ';
	    switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
	        case 'ss':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');
	            }
	            return result + 'sekúnda';
	        case 'm':
	            return withoutSuffix ? 'mínúta' : 'mínútu';
	        case 'mm':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
	            } else if (withoutSuffix) {
	                return result + 'mínúta';
	            }
	            return result + 'mínútu';
	        case 'hh':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
	            }
	            return result + 'klukkustund';
	        case 'd':
	            if (withoutSuffix) {
	                return 'dagur';
	            }
	            return isFuture ? 'dag' : 'degi';
	        case 'dd':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'dagar';
	                }
	                return result + (isFuture ? 'daga' : 'dögum');
	            } else if (withoutSuffix) {
	                return result + 'dagur';
	            }
	            return result + (isFuture ? 'dag' : 'degi');
	        case 'M':
	            if (withoutSuffix) {
	                return 'mánuður';
	            }
	            return isFuture ? 'mánuð' : 'mánuði';
	        case 'MM':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'mánuðir';
	                }
	                return result + (isFuture ? 'mánuði' : 'mánuðum');
	            } else if (withoutSuffix) {
	                return result + 'mánuður';
	            }
	            return result + (isFuture ? 'mánuð' : 'mánuði');
	        case 'y':
	            return withoutSuffix || isFuture ? 'ár' : 'ári';
	        case 'yy':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
	            }
	            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
	    }
	}
	
	var is = moment.defineLocale('is', {
	    months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
	    monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
	    weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
	    weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
	    weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY [kl.] H:mm',
	        LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
	    },
	    calendar : {
	        sameDay : '[í dag kl.] LT',
	        nextDay : '[á morgun kl.] LT',
	        nextWeek : 'dddd [kl.] LT',
	        lastDay : '[í gær kl.] LT',
	        lastWeek : '[síðasta] dddd [kl.] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'eftir %s',
	        past : 'fyrir %s síðan',
	        s : translate,
	        ss : translate,
	        m : translate,
	        mm : translate,
	        h : 'klukkustund',
	        hh : translate,
	        d : translate,
	        dd : translate,
	        M : translate,
	        MM : translate,
	        y : translate,
	        yy : translate
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return is;
	
	})));


/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Italian [it]
	//! author : Lorenzo : https://github.com/aliem
	//! author: Mattia Larentis: https://github.com/nostalgiaz
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var it = moment.defineLocale('it', {
	    months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	    monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	    weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
	    weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
	    weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Oggi alle] LT',
	        nextDay: '[Domani alle] LT',
	        nextWeek: 'dddd [alle] LT',
	        lastDay: '[Ieri alle] LT',
	        lastWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[la scorsa] dddd [alle] LT';
	                default:
	                    return '[lo scorso] dddd [alle] LT';
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : function (s) {
	            return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
	        },
	        past : '%s fa',
	        s : 'alcuni secondi',
	        ss : '%d secondi',
	        m : 'un minuto',
	        mm : '%d minuti',
	        h : 'un\'ora',
	        hh : '%d ore',
	        d : 'un giorno',
	        dd : '%d giorni',
	        M : 'un mese',
	        MM : '%d mesi',
	        y : 'un anno',
	        yy : '%d anni'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}º/,
	    ordinal: '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return it;
	
	})));


/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Japanese [ja]
	//! author : LI Long : https://github.com/baryon
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var ja = moment.defineLocale('ja', {
	    months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	    weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
	    weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
	    weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY/MM/DD',
	        LL : 'YYYY年M月D日',
	        LLL : 'YYYY年M月D日 HH:mm',
	        LLLL : 'YYYY年M月D日 HH:mm dddd',
	        l : 'YYYY/MM/DD',
	        ll : 'YYYY年M月D日',
	        lll : 'YYYY年M月D日 HH:mm',
	        llll : 'YYYY年M月D日 HH:mm dddd'
	    },
	    meridiemParse: /午前|午後/i,
	    isPM : function (input) {
	        return input === '午後';
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return '午前';
	        } else {
	            return '午後';
	        }
	    },
	    calendar : {
	        sameDay : '[今日] LT',
	        nextDay : '[明日] LT',
	        nextWeek : '[来週]dddd LT',
	        lastDay : '[昨日] LT',
	        lastWeek : '[前週]dddd LT',
	        sameElse : 'L'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}日/,
	    ordinal : function (number, period) {
	        switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            default:
	                return number;
	        }
	    },
	    relativeTime : {
	        future : '%s後',
	        past : '%s前',
	        s : '数秒',
	        ss : '%d秒',
	        m : '1分',
	        mm : '%d分',
	        h : '1時間',
	        hh : '%d時間',
	        d : '1日',
	        dd : '%d日',
	        M : '1ヶ月',
	        MM : '%dヶ月',
	        y : '1年',
	        yy : '%d年'
	    }
	});
	
	return ja;
	
	})));


/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Javanese [jv]
	//! author : Rony Lantip : https://github.com/lantip
	//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var jv = moment.defineLocale('jv', {
	    months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
	    weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
	    weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
	    weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
	    longDateFormat : {
	        LT : 'HH.mm',
	        LTS : 'HH.mm.ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY [pukul] HH.mm',
	        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	    },
	    meridiemParse: /enjing|siyang|sonten|ndalu/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'enjing') {
	            return hour;
	        } else if (meridiem === 'siyang') {
	            return hour >= 11 ? hour : hour + 12;
	        } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 11) {
	            return 'enjing';
	        } else if (hours < 15) {
	            return 'siyang';
	        } else if (hours < 19) {
	            return 'sonten';
	        } else {
	            return 'ndalu';
	        }
	    },
	    calendar : {
	        sameDay : '[Dinten puniko pukul] LT',
	        nextDay : '[Mbenjang pukul] LT',
	        nextWeek : 'dddd [pukul] LT',
	        lastDay : '[Kala wingi pukul] LT',
	        lastWeek : 'dddd [kepengker pukul] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'wonten ing %s',
	        past : '%s ingkang kepengker',
	        s : 'sawetawis detik',
	        ss : '%d detik',
	        m : 'setunggal menit',
	        mm : '%d menit',
	        h : 'setunggal jam',
	        hh : '%d jam',
	        d : 'sedinten',
	        dd : '%d dinten',
	        M : 'sewulan',
	        MM : '%d wulan',
	        y : 'setaun',
	        yy : '%d taun'
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return jv;
	
	})));


/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Georgian [ka]
	//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var ka = moment.defineLocale('ka', {
	    months : {
	        standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
	        format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
	    },
	    monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
	    weekdays : {
	        standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
	        format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
	        isFormat: /(წინა|შემდეგ)/
	    },
	    weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
	    weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY h:mm A',
	        LLLL : 'dddd, D MMMM YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[დღეს] LT[-ზე]',
	        nextDay : '[ხვალ] LT[-ზე]',
	        lastDay : '[გუშინ] LT[-ზე]',
	        nextWeek : '[შემდეგ] dddd LT[-ზე]',
	        lastWeek : '[წინა] dddd LT-ზე',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : function (s) {
	            return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
	                s.replace(/ი$/, 'ში') :
	                s + 'ში';
	        },
	        past : function (s) {
	            if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
	                return s.replace(/(ი|ე)$/, 'ის უკან');
	            }
	            if ((/წელი/).test(s)) {
	                return s.replace(/წელი$/, 'წლის უკან');
	            }
	        },
	        s : 'რამდენიმე წამი',
	        ss : '%d წამი',
	        m : 'წუთი',
	        mm : '%d წუთი',
	        h : 'საათი',
	        hh : '%d საათი',
	        d : 'დღე',
	        dd : '%d დღე',
	        M : 'თვე',
	        MM : '%d თვე',
	        y : 'წელი',
	        yy : '%d წელი'
	    },
	    dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
	    ordinal : function (number) {
	        if (number === 0) {
	            return number;
	        }
	        if (number === 1) {
	            return number + '-ლი';
	        }
	        if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
	            return 'მე-' + number;
	        }
	        return number + '-ე';
	    },
	    week : {
	        dow : 1,
	        doy : 7
	    }
	});
	
	return ka;
	
	})));


/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Kazakh [kk]
	//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var suffixes = {
	    0: '-ші',
	    1: '-ші',
	    2: '-ші',
	    3: '-ші',
	    4: '-ші',
	    5: '-ші',
	    6: '-шы',
	    7: '-ші',
	    8: '-ші',
	    9: '-шы',
	    10: '-шы',
	    20: '-шы',
	    30: '-шы',
	    40: '-шы',
	    50: '-ші',
	    60: '-шы',
	    70: '-ші',
	    80: '-ші',
	    90: '-шы',
	    100: '-ші'
	};
	
	var kk = moment.defineLocale('kk', {
	    months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
	    monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
	    weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
	    weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
	    weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Бүгін сағат] LT',
	        nextDay : '[Ертең сағат] LT',
	        nextWeek : 'dddd [сағат] LT',
	        lastDay : '[Кеше сағат] LT',
	        lastWeek : '[Өткен аптаның] dddd [сағат] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s ішінде',
	        past : '%s бұрын',
	        s : 'бірнеше секунд',
	        ss : '%d секунд',
	        m : 'бір минут',
	        mm : '%d минут',
	        h : 'бір сағат',
	        hh : '%d сағат',
	        d : 'бір күн',
	        dd : '%d күн',
	        M : 'бір ай',
	        MM : '%d ай',
	        y : 'бір жыл',
	        yy : '%d жыл'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
	    ordinal : function (number) {
	        var a = number % 10,
	            b = number >= 100 ? 100 : null;
	        return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return kk;
	
	})));


/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Cambodian [km]
	//! author : Kruy Vanna : https://github.com/kruyvanna
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var km = moment.defineLocale('km', {
	    months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	    monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	    weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	    weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	    weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	    longDateFormat: {
	        LT: 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L: 'DD/MM/YYYY',
	        LL: 'D MMMM YYYY',
	        LLL: 'D MMMM YYYY HH:mm',
	        LLLL: 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar: {
	        sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
	        nextDay: '[ស្អែក ម៉ោង] LT',
	        nextWeek: 'dddd [ម៉ោង] LT',
	        lastDay: '[ម្សិលមិញ ម៉ោង] LT',
	        lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
	        sameElse: 'L'
	    },
	    relativeTime: {
	        future: '%sទៀត',
	        past: '%sមុន',
	        s: 'ប៉ុន្មានវិនាទី',
	        ss: '%d វិនាទី',
	        m: 'មួយនាទី',
	        mm: '%d នាទី',
	        h: 'មួយម៉ោង',
	        hh: '%d ម៉ោង',
	        d: 'មួយថ្ងៃ',
	        dd: '%d ថ្ងៃ',
	        M: 'មួយខែ',
	        MM: '%d ខែ',
	        y: 'មួយឆ្នាំ',
	        yy: '%d ឆ្នាំ'
	    },
	    week: {
	        dow: 1, // Monday is the first day of the week.
	        doy: 4 // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return km;
	
	})));


/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Kannada [kn]
	//! author : Rajeev Naik : https://github.com/rajeevnaikte
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var symbolMap = {
	    '1': '೧',
	    '2': '೨',
	    '3': '೩',
	    '4': '೪',
	    '5': '೫',
	    '6': '೬',
	    '7': '೭',
	    '8': '೮',
	    '9': '೯',
	    '0': '೦'
	};
	var numberMap = {
	    '೧': '1',
	    '೨': '2',
	    '೩': '3',
	    '೪': '4',
	    '೫': '5',
	    '೬': '6',
	    '೭': '7',
	    '೮': '8',
	    '೯': '9',
	    '೦': '0'
	};
	
	var kn = moment.defineLocale('kn', {
	    months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
	    monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬ_ಅಕ್ಟೋಬ_ನವೆಂಬ_ಡಿಸೆಂಬ'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
	    weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
	    weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm',
	        LTS : 'A h:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm'
	    },
	    calendar : {
	        sameDay : '[ಇಂದು] LT',
	        nextDay : '[ನಾಳೆ] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[ನಿನ್ನೆ] LT',
	        lastWeek : '[ಕೊನೆಯ] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s ನಂತರ',
	        past : '%s ಹಿಂದೆ',
	        s : 'ಕೆಲವು ಕ್ಷಣಗಳು',
	        ss : '%d ಸೆಕೆಂಡುಗಳು',
	        m : 'ಒಂದು ನಿಮಿಷ',
	        mm : '%d ನಿಮಿಷ',
	        h : 'ಒಂದು ಗಂಟೆ',
	        hh : '%d ಗಂಟೆ',
	        d : 'ಒಂದು ದಿನ',
	        dd : '%d ದಿನ',
	        M : 'ಒಂದು ತಿಂಗಳು',
	        MM : '%d ತಿಂಗಳು',
	        y : 'ಒಂದು ವರ್ಷ',
	        yy : '%d ವರ್ಷ'
	    },
	    preparse: function (string) {
	        return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'ರಾತ್ರಿ') {
	            return hour < 4 ? hour : hour + 12;
	        } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
	            return hour;
	        } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
	            return hour >= 10 ? hour : hour + 12;
	        } else if (meridiem === 'ಸಂಜೆ') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'ರಾತ್ರಿ';
	        } else if (hour < 10) {
	            return 'ಬೆಳಿಗ್ಗೆ';
	        } else if (hour < 17) {
	            return 'ಮಧ್ಯಾಹ್ನ';
	        } else if (hour < 20) {
	            return 'ಸಂಜೆ';
	        } else {
	            return 'ರಾತ್ರಿ';
	        }
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
	    ordinal : function (number) {
	        return number + 'ನೇ';
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return kn;
	
	})));


/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Korean [ko]
	//! author : Kyungwook, Park : https://github.com/kyungw00k
	//! author : Jeeeyul Lee <jeeeyul@gmail.com>
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var ko = moment.defineLocale('ko', {
	    months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	    monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	    weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
	    weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
	    weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm',
	        LTS : 'A h:mm:ss',
	        L : 'YYYY.MM.DD',
	        LL : 'YYYY년 MMMM D일',
	        LLL : 'YYYY년 MMMM D일 A h:mm',
	        LLLL : 'YYYY년 MMMM D일 dddd A h:mm',
	        l : 'YYYY.MM.DD',
	        ll : 'YYYY년 MMMM D일',
	        lll : 'YYYY년 MMMM D일 A h:mm',
	        llll : 'YYYY년 MMMM D일 dddd A h:mm'
	    },
	    calendar : {
	        sameDay : '오늘 LT',
	        nextDay : '내일 LT',
	        nextWeek : 'dddd LT',
	        lastDay : '어제 LT',
	        lastWeek : '지난주 dddd LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s 후',
	        past : '%s 전',
	        s : '몇 초',
	        ss : '%d초',
	        m : '1분',
	        mm : '%d분',
	        h : '한 시간',
	        hh : '%d시간',
	        d : '하루',
	        dd : '%d일',
	        M : '한 달',
	        MM : '%d달',
	        y : '일 년',
	        yy : '%d년'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}(일|월|주)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '일';
	            case 'M':
	                return number + '월';
	            case 'w':
	            case 'W':
	                return number + '주';
	            default:
	                return number;
	        }
	    },
	    meridiemParse : /오전|오후/,
	    isPM : function (token) {
	        return token === '오후';
	    },
	    meridiem : function (hour, minute, isUpper) {
	        return hour < 12 ? '오전' : '오후';
	    }
	});
	
	return ko;
	
	})));


/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Kyrgyz [ky]
	//! author : Chyngyz Arystan uulu : https://github.com/chyngyz
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	
	var suffixes = {
	    0: '-чү',
	    1: '-чи',
	    2: '-чи',
	    3: '-чү',
	    4: '-чү',
	    5: '-чи',
	    6: '-чы',
	    7: '-чи',
	    8: '-чи',
	    9: '-чу',
	    10: '-чу',
	    20: '-чы',
	    30: '-чу',
	    40: '-чы',
	    50: '-чү',
	    60: '-чы',
	    70: '-чи',
	    80: '-чи',
	    90: '-чу',
	    100: '-чү'
	};
	
	var ky = moment.defineLocale('ky', {
	    months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	    monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
	    weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
	    weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
	    weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Бүгүн саат] LT',
	        nextDay : '[Эртең саат] LT',
	        nextWeek : 'dddd [саат] LT',
	        lastDay : '[Кече саат] LT',
	        lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s ичинде',
	        past : '%s мурун',
	        s : 'бирнече секунд',
	        ss : '%d секунд',
	        m : 'бир мүнөт',
	        mm : '%d мүнөт',
	        h : 'бир саат',
	        hh : '%d саат',
	        d : 'бир күн',
	        dd : '%d күн',
	        M : 'бир ай',
	        MM : '%d ай',
	        y : 'бир жыл',
	        yy : '%d жыл'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
	    ordinal : function (number) {
	        var a = number % 10,
	            b = number >= 100 ? 100 : null;
	        return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return ky;
	
	})));


/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Luxembourgish [lb]
	//! author : mweimerskirch : https://github.com/mweimerskirch
	//! author : David Raison : https://github.com/kwisatz
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        'm': ['eng Minutt', 'enger Minutt'],
	        'h': ['eng Stonn', 'enger Stonn'],
	        'd': ['een Dag', 'engem Dag'],
	        'M': ['ee Mount', 'engem Mount'],
	        'y': ['ee Joer', 'engem Joer']
	    };
	    return withoutSuffix ? format[key][0] : format[key][1];
	}
	function processFutureTime(string) {
	    var number = string.substr(0, string.indexOf(' '));
	    if (eifelerRegelAppliesToNumber(number)) {
	        return 'a ' + string;
	    }
	    return 'an ' + string;
	}
	function processPastTime(string) {
	    var number = string.substr(0, string.indexOf(' '));
	    if (eifelerRegelAppliesToNumber(number)) {
	        return 'viru ' + string;
	    }
	    return 'virun ' + string;
	}
	/**
	 * Returns true if the word before the given number loses the '-n' ending.
	 * e.g. 'an 10 Deeg' but 'a 5 Deeg'
	 *
	 * @param number {integer}
	 * @returns {boolean}
	 */
	function eifelerRegelAppliesToNumber(number) {
	    number = parseInt(number, 10);
	    if (isNaN(number)) {
	        return false;
	    }
	    if (number < 0) {
	        // Negative Number --> always true
	        return true;
	    } else if (number < 10) {
	        // Only 1 digit
	        if (4 <= number && number <= 7) {
	            return true;
	        }
	        return false;
	    } else if (number < 100) {
	        // 2 digits
	        var lastDigit = number % 10, firstDigit = number / 10;
	        if (lastDigit === 0) {
	            return eifelerRegelAppliesToNumber(firstDigit);
	        }
	        return eifelerRegelAppliesToNumber(lastDigit);
	    } else if (number < 10000) {
	        // 3 or 4 digits --> recursively check first digit
	        while (number >= 10) {
	            number = number / 10;
	        }
	        return eifelerRegelAppliesToNumber(number);
	    } else {
	        // Anything larger than 4 digits: recursively check first n-3 digits
	        number = number / 1000;
	        return eifelerRegelAppliesToNumber(number);
	    }
	}
	
	var lb = moment.defineLocale('lb', {
	    months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	    monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	    monthsParseExact : true,
	    weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
	    weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
	    weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat: {
	        LT: 'H:mm [Auer]',
	        LTS: 'H:mm:ss [Auer]',
	        L: 'DD.MM.YYYY',
	        LL: 'D. MMMM YYYY',
	        LLL: 'D. MMMM YYYY H:mm [Auer]',
	        LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
	    },
	    calendar: {
	        sameDay: '[Haut um] LT',
	        sameElse: 'L',
	        nextDay: '[Muer um] LT',
	        nextWeek: 'dddd [um] LT',
	        lastDay: '[Gëschter um] LT',
	        lastWeek: function () {
	            // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
	            switch (this.day()) {
	                case 2:
	                case 4:
	                    return '[Leschten] dddd [um] LT';
	                default:
	                    return '[Leschte] dddd [um] LT';
	            }
	        }
	    },
	    relativeTime : {
	        future : processFutureTime,
	        past : processPastTime,
	        s : 'e puer Sekonnen',
	        ss : '%d Sekonnen',
	        m : processRelativeTime,
	        mm : '%d Minutten',
	        h : processRelativeTime,
	        hh : '%d Stonnen',
	        d : processRelativeTime,
	        dd : '%d Deeg',
	        M : processRelativeTime,
	        MM : '%d Méint',
	        y : processRelativeTime,
	        yy : '%d Joer'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal: '%d.',
	    week: {
	        dow: 1, // Monday is the first day of the week.
	        doy: 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return lb;
	
	})));


/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Lao [lo]
	//! author : Ryan Hart : https://github.com/ryanhart2
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var lo = moment.defineLocale('lo', {
	    months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	    monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	    weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	    weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	    weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
	    },
	    meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
	    isPM: function (input) {
	        return input === 'ຕອນແລງ';
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'ຕອນເຊົ້າ';
	        } else {
	            return 'ຕອນແລງ';
	        }
	    },
	    calendar : {
	        sameDay : '[ມື້ນີ້ເວລາ] LT',
	        nextDay : '[ມື້ອື່ນເວລາ] LT',
	        nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
	        lastDay : '[ມື້ວານນີ້ເວລາ] LT',
	        lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'ອີກ %s',
	        past : '%sຜ່ານມາ',
	        s : 'ບໍ່ເທົ່າໃດວິນາທີ',
	        ss : '%d ວິນາທີ' ,
	        m : '1 ນາທີ',
	        mm : '%d ນາທີ',
	        h : '1 ຊົ່ວໂມງ',
	        hh : '%d ຊົ່ວໂມງ',
	        d : '1 ມື້',
	        dd : '%d ມື້',
	        M : '1 ເດືອນ',
	        MM : '%d ເດືອນ',
	        y : '1 ປີ',
	        yy : '%d ປີ'
	    },
	    dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
	    ordinal : function (number) {
	        return 'ທີ່' + number;
	    }
	});
	
	return lo;
	
	})));


/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Lithuanian [lt]
	//! author : Mindaugas Mozūras : https://github.com/mmozuras
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var units = {
	    'ss' : 'sekundė_sekundžių_sekundes',
	    'm' : 'minutė_minutės_minutę',
	    'mm': 'minutės_minučių_minutes',
	    'h' : 'valanda_valandos_valandą',
	    'hh': 'valandos_valandų_valandas',
	    'd' : 'diena_dienos_dieną',
	    'dd': 'dienos_dienų_dienas',
	    'M' : 'mėnuo_mėnesio_mėnesį',
	    'MM': 'mėnesiai_mėnesių_mėnesius',
	    'y' : 'metai_metų_metus',
	    'yy': 'metai_metų_metus'
	};
	function translateSeconds(number, withoutSuffix, key, isFuture) {
	    if (withoutSuffix) {
	        return 'kelios sekundės';
	    } else {
	        return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
	    }
	}
	function translateSingular(number, withoutSuffix, key, isFuture) {
	    return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
	}
	function special(number) {
	    return number % 10 === 0 || (number > 10 && number < 20);
	}
	function forms(key) {
	    return units[key].split('_');
	}
	function translate(number, withoutSuffix, key, isFuture) {
	    var result = number + ' ';
	    if (number === 1) {
	        return result + translateSingular(number, withoutSuffix, key[0], isFuture);
	    } else if (withoutSuffix) {
	        return result + (special(number) ? forms(key)[1] : forms(key)[0]);
	    } else {
	        if (isFuture) {
	            return result + forms(key)[1];
	        } else {
	            return result + (special(number) ? forms(key)[1] : forms(key)[2]);
	        }
	    }
	}
	var lt = moment.defineLocale('lt', {
	    months : {
	        format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
	        standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
	        isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
	    },
	    monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
	    weekdays : {
	        format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
	        standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
	        isFormat: /dddd HH:mm/
	    },
	    weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
	    weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY-MM-DD',
	        LL : 'YYYY [m.] MMMM D [d.]',
	        LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	        LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
	        l : 'YYYY-MM-DD',
	        ll : 'YYYY [m.] MMMM D [d.]',
	        lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	        llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
	    },
	    calendar : {
	        sameDay : '[Šiandien] LT',
	        nextDay : '[Rytoj] LT',
	        nextWeek : 'dddd LT',
	        lastDay : '[Vakar] LT',
	        lastWeek : '[Praėjusį] dddd LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'po %s',
	        past : 'prieš %s',
	        s : translateSeconds,
	        ss : translate,
	        m : translateSingular,
	        mm : translate,
	        h : translateSingular,
	        hh : translate,
	        d : translateSingular,
	        dd : translate,
	        M : translateSingular,
	        MM : translate,
	        y : translateSingular,
	        yy : translate
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}-oji/,
	    ordinal : function (number) {
	        return number + '-oji';
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return lt;
	
	})));


/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Latvian [lv]
	//! author : Kristaps Karlsons : https://github.com/skakri
	//! author : Jānis Elmeris : https://github.com/JanisE
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var units = {
	    'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
	    'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	    'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	    'h': 'stundas_stundām_stunda_stundas'.split('_'),
	    'hh': 'stundas_stundām_stunda_stundas'.split('_'),
	    'd': 'dienas_dienām_diena_dienas'.split('_'),
	    'dd': 'dienas_dienām_diena_dienas'.split('_'),
	    'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	    'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	    'y': 'gada_gadiem_gads_gadi'.split('_'),
	    'yy': 'gada_gadiem_gads_gadi'.split('_')
	};
	/**
	 * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
	 */
	function format(forms, number, withoutSuffix) {
	    if (withoutSuffix) {
	        // E.g. "21 minūte", "3 minūtes".
	        return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
	    } else {
	        // E.g. "21 minūtes" as in "pēc 21 minūtes".
	        // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
	        return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
	    }
	}
	function relativeTimeWithPlural(number, withoutSuffix, key) {
	    return number + ' ' + format(units[key], number, withoutSuffix);
	}
	function relativeTimeWithSingular(number, withoutSuffix, key) {
	    return format(units[key], number, withoutSuffix);
	}
	function relativeSeconds(number, withoutSuffix) {
	    return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
	}
	
	var lv = moment.defineLocale('lv', {
	    months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
	    monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
	    weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
	    weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
	    weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY.',
	        LL : 'YYYY. [gada] D. MMMM',
	        LLL : 'YYYY. [gada] D. MMMM, HH:mm',
	        LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
	    },
	    calendar : {
	        sameDay : '[Šodien pulksten] LT',
	        nextDay : '[Rīt pulksten] LT',
	        nextWeek : 'dddd [pulksten] LT',
	        lastDay : '[Vakar pulksten] LT',
	        lastWeek : '[Pagājušā] dddd [pulksten] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'pēc %s',
	        past : 'pirms %s',
	        s : relativeSeconds,
	        ss : relativeTimeWithPlural,
	        m : relativeTimeWithSingular,
	        mm : relativeTimeWithPlural,
	        h : relativeTimeWithSingular,
	        hh : relativeTimeWithPlural,
	        d : relativeTimeWithSingular,
	        dd : relativeTimeWithPlural,
	        M : relativeTimeWithSingular,
	        MM : relativeTimeWithPlural,
	        y : relativeTimeWithSingular,
	        yy : relativeTimeWithPlural
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return lv;
	
	})));


/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Montenegrin [me]
	//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var translator = {
	    words: { //Different grammatical cases
	        ss: ['sekund', 'sekunda', 'sekundi'],
	        m: ['jedan minut', 'jednog minuta'],
	        mm: ['minut', 'minuta', 'minuta'],
	        h: ['jedan sat', 'jednog sata'],
	        hh: ['sat', 'sata', 'sati'],
	        dd: ['dan', 'dana', 'dana'],
	        MM: ['mjesec', 'mjeseca', 'mjeseci'],
	        yy: ['godina', 'godine', 'godina']
	    },
	    correctGrammaticalCase: function (number, wordKey) {
	        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	    },
	    translate: function (number, withoutSuffix, key) {
	        var wordKey = translator.words[key];
	        if (key.length === 1) {
	            return withoutSuffix ? wordKey[0] : wordKey[1];
	        } else {
	            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	        }
	    }
	};
	
	var me = moment.defineLocale('me', {
	    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	    monthsParseExact : true,
	    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat: {
	        LT: 'H:mm',
	        LTS : 'H:mm:ss',
	        L: 'DD.MM.YYYY',
	        LL: 'D. MMMM YYYY',
	        LLL: 'D. MMMM YYYY H:mm',
	        LLLL: 'dddd, D. MMMM YYYY H:mm'
	    },
	    calendar: {
	        sameDay: '[danas u] LT',
	        nextDay: '[sjutra u] LT',
	
	        nextWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	            }
	        },
	        lastDay  : '[juče u] LT',
	        lastWeek : function () {
	            var lastWeekDays = [
	                '[prošle] [nedjelje] [u] LT',
	                '[prošlog] [ponedjeljka] [u] LT',
	                '[prošlog] [utorka] [u] LT',
	                '[prošle] [srijede] [u] LT',
	                '[prošlog] [četvrtka] [u] LT',
	                '[prošlog] [petka] [u] LT',
	                '[prošle] [subote] [u] LT'
	            ];
	            return lastWeekDays[this.day()];
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'za %s',
	        past   : 'prije %s',
	        s      : 'nekoliko sekundi',
	        ss     : translator.translate,
	        m      : translator.translate,
	        mm     : translator.translate,
	        h      : translator.translate,
	        hh     : translator.translate,
	        d      : 'dan',
	        dd     : translator.translate,
	        M      : 'mjesec',
	        MM     : translator.translate,
	        y      : 'godinu',
	        yy     : translator.translate
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return me;
	
	})));


/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Maori [mi]
	//! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var mi = moment.defineLocale('mi', {
	    months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
	    monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
	    monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	    monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	    monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	    monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
	    weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
	    weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
	    weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
	    longDateFormat: {
	        LT: 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L: 'DD/MM/YYYY',
	        LL: 'D MMMM YYYY',
	        LLL: 'D MMMM YYYY [i] HH:mm',
	        LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
	    },
	    calendar: {
	        sameDay: '[i teie mahana, i] LT',
	        nextDay: '[apopo i] LT',
	        nextWeek: 'dddd [i] LT',
	        lastDay: '[inanahi i] LT',
	        lastWeek: 'dddd [whakamutunga i] LT',
	        sameElse: 'L'
	    },
	    relativeTime: {
	        future: 'i roto i %s',
	        past: '%s i mua',
	        s: 'te hēkona ruarua',
	        ss: '%d hēkona',
	        m: 'he meneti',
	        mm: '%d meneti',
	        h: 'te haora',
	        hh: '%d haora',
	        d: 'he ra',
	        dd: '%d ra',
	        M: 'he marama',
	        MM: '%d marama',
	        y: 'he tau',
	        yy: '%d tau'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}º/,
	    ordinal: '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return mi;
	
	})));


/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Macedonian [mk]
	//! author : Borislav Mickov : https://github.com/B0k0
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var mk = moment.defineLocale('mk', {
	    months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
	    monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
	    weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
	    weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
	    weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'D.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY H:mm',
	        LLLL : 'dddd, D MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay : '[Денес во] LT',
	        nextDay : '[Утре во] LT',
	        nextWeek : '[Во] dddd [во] LT',
	        lastDay : '[Вчера во] LT',
	        lastWeek : function () {
	            switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[Изминатата] dddd [во] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[Изминатиот] dddd [во] LT';
	            }
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'после %s',
	        past : 'пред %s',
	        s : 'неколку секунди',
	        ss : '%d секунди',
	        m : 'минута',
	        mm : '%d минути',
	        h : 'час',
	        hh : '%d часа',
	        d : 'ден',
	        dd : '%d дена',
	        M : 'месец',
	        MM : '%d месеци',
	        y : 'година',
	        yy : '%d години'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	    ordinal : function (number) {
	        var lastDigit = number % 10,
	            last2Digits = number % 100;
	        if (number === 0) {
	            return number + '-ев';
	        } else if (last2Digits === 0) {
	            return number + '-ен';
	        } else if (last2Digits > 10 && last2Digits < 20) {
	            return number + '-ти';
	        } else if (lastDigit === 1) {
	            return number + '-ви';
	        } else if (lastDigit === 2) {
	            return number + '-ри';
	        } else if (lastDigit === 7 || lastDigit === 8) {
	            return number + '-ми';
	        } else {
	            return number + '-ти';
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return mk;
	
	})));


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Malayalam [ml]
	//! author : Floyd Pink : https://github.com/floydpink
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var ml = moment.defineLocale('ml', {
	    months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
	    monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
	    weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
	    weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm -നു',
	        LTS : 'A h:mm:ss -നു',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm -നു',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
	    },
	    calendar : {
	        sameDay : '[ഇന്ന്] LT',
	        nextDay : '[നാളെ] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[ഇന്നലെ] LT',
	        lastWeek : '[കഴിഞ്ഞ] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s കഴിഞ്ഞ്',
	        past : '%s മുൻപ്',
	        s : 'അൽപ നിമിഷങ്ങൾ',
	        ss : '%d സെക്കൻഡ്',
	        m : 'ഒരു മിനിറ്റ്',
	        mm : '%d മിനിറ്റ്',
	        h : 'ഒരു മണിക്കൂർ',
	        hh : '%d മണിക്കൂർ',
	        d : 'ഒരു ദിവസം',
	        dd : '%d ദിവസം',
	        M : 'ഒരു മാസം',
	        MM : '%d മാസം',
	        y : 'ഒരു വർഷം',
	        yy : '%d വർഷം'
	    },
	    meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if ((meridiem === 'രാത്രി' && hour >= 4) ||
	                meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
	                meridiem === 'വൈകുന്നേരം') {
	            return hour + 12;
	        } else {
	            return hour;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'രാത്രി';
	        } else if (hour < 12) {
	            return 'രാവിലെ';
	        } else if (hour < 17) {
	            return 'ഉച്ച കഴിഞ്ഞ്';
	        } else if (hour < 20) {
	            return 'വൈകുന്നേരം';
	        } else {
	            return 'രാത്രി';
	        }
	    }
	});
	
	return ml;
	
	})));


/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Marathi [mr]
	//! author : Harshad Kale : https://github.com/kalehv
	//! author : Vivek Athalye : https://github.com/vnathalye
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var symbolMap = {
	    '1': '१',
	    '2': '२',
	    '3': '३',
	    '4': '४',
	    '5': '५',
	    '6': '६',
	    '7': '७',
	    '8': '८',
	    '9': '९',
	    '0': '०'
	};
	var numberMap = {
	    '१': '1',
	    '२': '2',
	    '३': '3',
	    '४': '4',
	    '५': '5',
	    '६': '6',
	    '७': '7',
	    '८': '8',
	    '९': '9',
	    '०': '0'
	};
	
	function relativeTimeMr(number, withoutSuffix, string, isFuture)
	{
	    var output = '';
	    if (withoutSuffix) {
	        switch (string) {
	            case 's': output = 'काही सेकंद'; break;
	            case 'ss': output = '%d सेकंद'; break;
	            case 'm': output = 'एक मिनिट'; break;
	            case 'mm': output = '%d मिनिटे'; break;
	            case 'h': output = 'एक तास'; break;
	            case 'hh': output = '%d तास'; break;
	            case 'd': output = 'एक दिवस'; break;
	            case 'dd': output = '%d दिवस'; break;
	            case 'M': output = 'एक महिना'; break;
	            case 'MM': output = '%d महिने'; break;
	            case 'y': output = 'एक वर्ष'; break;
	            case 'yy': output = '%d वर्षे'; break;
	        }
	    }
	    else {
	        switch (string) {
	            case 's': output = 'काही सेकंदां'; break;
	            case 'ss': output = '%d सेकंदां'; break;
	            case 'm': output = 'एका मिनिटा'; break;
	            case 'mm': output = '%d मिनिटां'; break;
	            case 'h': output = 'एका तासा'; break;
	            case 'hh': output = '%d तासां'; break;
	            case 'd': output = 'एका दिवसा'; break;
	            case 'dd': output = '%d दिवसां'; break;
	            case 'M': output = 'एका महिन्या'; break;
	            case 'MM': output = '%d महिन्यां'; break;
	            case 'y': output = 'एका वर्षा'; break;
	            case 'yy': output = '%d वर्षां'; break;
	        }
	    }
	    return output.replace(/%d/i, number);
	}
	
	var mr = moment.defineLocale('mr', {
	    months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
	    monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	    weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
	    weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm वाजता',
	        LTS : 'A h:mm:ss वाजता',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm वाजता',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
	    },
	    calendar : {
	        sameDay : '[आज] LT',
	        nextDay : '[उद्या] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[काल] LT',
	        lastWeek: '[मागील] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future: '%sमध्ये',
	        past: '%sपूर्वी',
	        s: relativeTimeMr,
	        ss: relativeTimeMr,
	        m: relativeTimeMr,
	        mm: relativeTimeMr,
	        h: relativeTimeMr,
	        hh: relativeTimeMr,
	        d: relativeTimeMr,
	        dd: relativeTimeMr,
	        M: relativeTimeMr,
	        MM: relativeTimeMr,
	        y: relativeTimeMr,
	        yy: relativeTimeMr
	    },
	    preparse: function (string) {
	        return string.replace(/[१२३४५६७८९०]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'रात्री') {
	            return hour < 4 ? hour : hour + 12;
	        } else if (meridiem === 'सकाळी') {
	            return hour;
	        } else if (meridiem === 'दुपारी') {
	            return hour >= 10 ? hour : hour + 12;
	        } else if (meridiem === 'सायंकाळी') {
	            return hour + 12;
	        }
	    },
	    meridiem: function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'रात्री';
	        } else if (hour < 10) {
	            return 'सकाळी';
	        } else if (hour < 17) {
	            return 'दुपारी';
	        } else if (hour < 20) {
	            return 'सायंकाळी';
	        } else {
	            return 'रात्री';
	        }
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return mr;
	
	})));


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Malay [ms-my]
	//! note : DEPRECATED, the correct one is [ms]
	//! author : Weldan Jamili : https://github.com/weldan
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var msMy = moment.defineLocale('ms-my', {
	    months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	    weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	    weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	    weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	    longDateFormat : {
	        LT : 'HH.mm',
	        LTS : 'HH.mm.ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY [pukul] HH.mm',
	        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	    },
	    meridiemParse: /pagi|tengahari|petang|malam/,
	    meridiemHour: function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'pagi') {
	            return hour;
	        } else if (meridiem === 'tengahari') {
	            return hour >= 11 ? hour : hour + 12;
	        } else if (meridiem === 'petang' || meridiem === 'malam') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 11) {
	            return 'pagi';
	        } else if (hours < 15) {
	            return 'tengahari';
	        } else if (hours < 19) {
	            return 'petang';
	        } else {
	            return 'malam';
	        }
	    },
	    calendar : {
	        sameDay : '[Hari ini pukul] LT',
	        nextDay : '[Esok pukul] LT',
	        nextWeek : 'dddd [pukul] LT',
	        lastDay : '[Kelmarin pukul] LT',
	        lastWeek : 'dddd [lepas pukul] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'dalam %s',
	        past : '%s yang lepas',
	        s : 'beberapa saat',
	        ss : '%d saat',
	        m : 'seminit',
	        mm : '%d minit',
	        h : 'sejam',
	        hh : '%d jam',
	        d : 'sehari',
	        dd : '%d hari',
	        M : 'sebulan',
	        MM : '%d bulan',
	        y : 'setahun',
	        yy : '%d tahun'
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return msMy;
	
	})));


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Malay [ms]
	//! author : Weldan Jamili : https://github.com/weldan
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var ms = moment.defineLocale('ms', {
	    months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	    weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	    weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	    weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	    longDateFormat : {
	        LT : 'HH.mm',
	        LTS : 'HH.mm.ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY [pukul] HH.mm',
	        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	    },
	    meridiemParse: /pagi|tengahari|petang|malam/,
	    meridiemHour: function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'pagi') {
	            return hour;
	        } else if (meridiem === 'tengahari') {
	            return hour >= 11 ? hour : hour + 12;
	        } else if (meridiem === 'petang' || meridiem === 'malam') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 11) {
	            return 'pagi';
	        } else if (hours < 15) {
	            return 'tengahari';
	        } else if (hours < 19) {
	            return 'petang';
	        } else {
	            return 'malam';
	        }
	    },
	    calendar : {
	        sameDay : '[Hari ini pukul] LT',
	        nextDay : '[Esok pukul] LT',
	        nextWeek : 'dddd [pukul] LT',
	        lastDay : '[Kelmarin pukul] LT',
	        lastWeek : 'dddd [lepas pukul] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'dalam %s',
	        past : '%s yang lepas',
	        s : 'beberapa saat',
	        ss : '%d saat',
	        m : 'seminit',
	        mm : '%d minit',
	        h : 'sejam',
	        hh : '%d jam',
	        d : 'sehari',
	        dd : '%d hari',
	        M : 'sebulan',
	        MM : '%d bulan',
	        y : 'setahun',
	        yy : '%d tahun'
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return ms;
	
	})));


/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Maltese (Malta) [mt]
	//! author : Alessandro Maruccia : https://github.com/alesma
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var mt = moment.defineLocale('mt', {
	    months : 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),
	    monthsShort : 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
	    weekdays : 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),
	    weekdaysShort : 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
	    weekdaysMin : 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Illum fil-]LT',
	        nextDay : '[Għada fil-]LT',
	        nextWeek : 'dddd [fil-]LT',
	        lastDay : '[Il-bieraħ fil-]LT',
	        lastWeek : 'dddd [li għadda] [fil-]LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'f’ %s',
	        past : '%s ilu',
	        s : 'ftit sekondi',
	        ss : '%d sekondi',
	        m : 'minuta',
	        mm : '%d minuti',
	        h : 'siegħa',
	        hh : '%d siegħat',
	        d : 'ġurnata',
	        dd : '%d ġranet',
	        M : 'xahar',
	        MM : '%d xhur',
	        y : 'sena',
	        yy : '%d sni'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}º/,
	    ordinal: '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return mt;
	
	})));


/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Burmese [my]
	//! author : Squar team, mysquar.com
	//! author : David Rossellat : https://github.com/gholadr
	//! author : Tin Aung Lin : https://github.com/thanyawzinmin
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var symbolMap = {
	    '1': '၁',
	    '2': '၂',
	    '3': '၃',
	    '4': '၄',
	    '5': '၅',
	    '6': '၆',
	    '7': '၇',
	    '8': '၈',
	    '9': '၉',
	    '0': '၀'
	};
	var numberMap = {
	    '၁': '1',
	    '၂': '2',
	    '၃': '3',
	    '၄': '4',
	    '၅': '5',
	    '၆': '6',
	    '၇': '7',
	    '၈': '8',
	    '၉': '9',
	    '၀': '0'
	};
	
	var my = moment.defineLocale('my', {
	    months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
	    monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
	    weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
	    weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	    weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	
	    longDateFormat: {
	        LT: 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L: 'DD/MM/YYYY',
	        LL: 'D MMMM YYYY',
	        LLL: 'D MMMM YYYY HH:mm',
	        LLLL: 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar: {
	        sameDay: '[ယနေ.] LT [မှာ]',
	        nextDay: '[မနက်ဖြန်] LT [မှာ]',
	        nextWeek: 'dddd LT [မှာ]',
	        lastDay: '[မနေ.က] LT [မှာ]',
	        lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
	        sameElse: 'L'
	    },
	    relativeTime: {
	        future: 'လာမည့် %s မှာ',
	        past: 'လွန်ခဲ့သော %s က',
	        s: 'စက္ကန်.အနည်းငယ်',
	        ss : '%d စက္ကန့်',
	        m: 'တစ်မိနစ်',
	        mm: '%d မိနစ်',
	        h: 'တစ်နာရီ',
	        hh: '%d နာရီ',
	        d: 'တစ်ရက်',
	        dd: '%d ရက်',
	        M: 'တစ်လ',
	        MM: '%d လ',
	        y: 'တစ်နှစ်',
	        yy: '%d နှစ်'
	    },
	    preparse: function (string) {
	        return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    week: {
	        dow: 1, // Monday is the first day of the week.
	        doy: 4 // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return my;
	
	})));


/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Norwegian Bokmål [nb]
	//! authors : Espen Hovlandsdal : https://github.com/rexxars
	//!           Sigurd Gartmann : https://github.com/sigurdga
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var nb = moment.defineLocale('nb', {
	    months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	    monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	    weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
	    weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY [kl.] HH:mm',
	        LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
	    },
	    calendar : {
	        sameDay: '[i dag kl.] LT',
	        nextDay: '[i morgen kl.] LT',
	        nextWeek: 'dddd [kl.] LT',
	        lastDay: '[i går kl.] LT',
	        lastWeek: '[forrige] dddd [kl.] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'om %s',
	        past : '%s siden',
	        s : 'noen sekunder',
	        ss : '%d sekunder',
	        m : 'ett minutt',
	        mm : '%d minutter',
	        h : 'en time',
	        hh : '%d timer',
	        d : 'en dag',
	        dd : '%d dager',
	        M : 'en måned',
	        MM : '%d måneder',
	        y : 'ett år',
	        yy : '%d år'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return nb;
	
	})));


/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Nepalese [ne]
	//! author : suvash : https://github.com/suvash
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var symbolMap = {
	    '1': '१',
	    '2': '२',
	    '3': '३',
	    '4': '४',
	    '5': '५',
	    '6': '६',
	    '7': '७',
	    '8': '८',
	    '9': '९',
	    '0': '०'
	};
	var numberMap = {
	    '१': '1',
	    '२': '2',
	    '३': '3',
	    '४': '4',
	    '५': '5',
	    '६': '6',
	    '७': '7',
	    '८': '8',
	    '९': '9',
	    '०': '0'
	};
	
	var ne = moment.defineLocale('ne', {
	    months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
	    monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
	    weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
	    weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'Aको h:mm बजे',
	        LTS : 'Aको h:mm:ss बजे',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, Aको h:mm बजे',
	        LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
	    },
	    preparse: function (string) {
	        return string.replace(/[१२३४५६७८९०]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'राति') {
	            return hour < 4 ? hour : hour + 12;
	        } else if (meridiem === 'बिहान') {
	            return hour;
	        } else if (meridiem === 'दिउँसो') {
	            return hour >= 10 ? hour : hour + 12;
	        } else if (meridiem === 'साँझ') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 3) {
	            return 'राति';
	        } else if (hour < 12) {
	            return 'बिहान';
	        } else if (hour < 16) {
	            return 'दिउँसो';
	        } else if (hour < 20) {
	            return 'साँझ';
	        } else {
	            return 'राति';
	        }
	    },
	    calendar : {
	        sameDay : '[आज] LT',
	        nextDay : '[भोलि] LT',
	        nextWeek : '[आउँदो] dddd[,] LT',
	        lastDay : '[हिजो] LT',
	        lastWeek : '[गएको] dddd[,] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%sमा',
	        past : '%s अगाडि',
	        s : 'केही क्षण',
	        ss : '%d सेकेण्ड',
	        m : 'एक मिनेट',
	        mm : '%d मिनेट',
	        h : 'एक घण्टा',
	        hh : '%d घण्टा',
	        d : 'एक दिन',
	        dd : '%d दिन',
	        M : 'एक महिना',
	        MM : '%d महिना',
	        y : 'एक बर्ष',
	        yy : '%d बर्ष'
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return ne;
	
	})));


/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Dutch (Belgium) [nl-be]
	//! author : Joris Röling : https://github.com/jorisroling
	//! author : Jacob Middag : https://github.com/middagj
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
	var monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');
	
	var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
	var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
	
	var nlBe = moment.defineLocale('nl-be', {
	    months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	    monthsShort : function (m, format) {
	        if (!m) {
	            return monthsShortWithDots;
	        } else if (/-MMM-/.test(format)) {
	            return monthsShortWithoutDots[m.month()];
	        } else {
	            return monthsShortWithDots[m.month()];
	        }
	    },
	
	    monthsRegex: monthsRegex,
	    monthsShortRegex: monthsRegex,
	    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
	    monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
	
	    monthsParse : monthsParse,
	    longMonthsParse : monthsParse,
	    shortMonthsParse : monthsParse,
	
	    weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	    weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
	    weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[vandaag om] LT',
	        nextDay: '[morgen om] LT',
	        nextWeek: 'dddd [om] LT',
	        lastDay: '[gisteren om] LT',
	        lastWeek: '[afgelopen] dddd [om] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'over %s',
	        past : '%s geleden',
	        s : 'een paar seconden',
	        ss : '%d seconden',
	        m : 'één minuut',
	        mm : '%d minuten',
	        h : 'één uur',
	        hh : '%d uur',
	        d : 'één dag',
	        dd : '%d dagen',
	        M : 'één maand',
	        MM : '%d maanden',
	        y : 'één jaar',
	        yy : '%d jaar'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
	    ordinal : function (number) {
	        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return nlBe;
	
	})));


/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Dutch [nl]
	//! author : Joris Röling : https://github.com/jorisroling
	//! author : Jacob Middag : https://github.com/middagj
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
	var monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');
	
	var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
	var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
	
	var nl = moment.defineLocale('nl', {
	    months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	    monthsShort : function (m, format) {
	        if (!m) {
	            return monthsShortWithDots;
	        } else if (/-MMM-/.test(format)) {
	            return monthsShortWithoutDots[m.month()];
	        } else {
	            return monthsShortWithDots[m.month()];
	        }
	    },
	
	    monthsRegex: monthsRegex,
	    monthsShortRegex: monthsRegex,
	    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
	    monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
	
	    monthsParse : monthsParse,
	    longMonthsParse : monthsParse,
	    shortMonthsParse : monthsParse,
	
	    weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	    weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
	    weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD-MM-YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[vandaag om] LT',
	        nextDay: '[morgen om] LT',
	        nextWeek: 'dddd [om] LT',
	        lastDay: '[gisteren om] LT',
	        lastWeek: '[afgelopen] dddd [om] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'over %s',
	        past : '%s geleden',
	        s : 'een paar seconden',
	        ss : '%d seconden',
	        m : 'één minuut',
	        mm : '%d minuten',
	        h : 'één uur',
	        hh : '%d uur',
	        d : 'één dag',
	        dd : '%d dagen',
	        M : 'één maand',
	        MM : '%d maanden',
	        y : 'één jaar',
	        yy : '%d jaar'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
	    ordinal : function (number) {
	        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return nl;
	
	})));


/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Nynorsk [nn]
	//! author : https://github.com/mechuwind
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var nn = moment.defineLocale('nn', {
	    months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	    monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	    weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
	    weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
	    weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY [kl.] H:mm',
	        LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
	    },
	    calendar : {
	        sameDay: '[I dag klokka] LT',
	        nextDay: '[I morgon klokka] LT',
	        nextWeek: 'dddd [klokka] LT',
	        lastDay: '[I går klokka] LT',
	        lastWeek: '[Føregåande] dddd [klokka] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'om %s',
	        past : '%s sidan',
	        s : 'nokre sekund',
	        ss : '%d sekund',
	        m : 'eit minutt',
	        mm : '%d minutt',
	        h : 'ein time',
	        hh : '%d timar',
	        d : 'ein dag',
	        dd : '%d dagar',
	        M : 'ein månad',
	        MM : '%d månader',
	        y : 'eit år',
	        yy : '%d år'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return nn;
	
	})));


/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Punjabi (India) [pa-in]
	//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var symbolMap = {
	    '1': '੧',
	    '2': '੨',
	    '3': '੩',
	    '4': '੪',
	    '5': '੫',
	    '6': '੬',
	    '7': '੭',
	    '8': '੮',
	    '9': '੯',
	    '0': '੦'
	};
	var numberMap = {
	    '੧': '1',
	    '੨': '2',
	    '੩': '3',
	    '੪': '4',
	    '੫': '5',
	    '੬': '6',
	    '੭': '7',
	    '੮': '8',
	    '੯': '9',
	    '੦': '0'
	};
	
	var paIn = moment.defineLocale('pa-in', {
	    // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
	    months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	    monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	    weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
	    weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	    weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm ਵਜੇ',
	        LTS : 'A h:mm:ss ਵਜੇ',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
	    },
	    calendar : {
	        sameDay : '[ਅਜ] LT',
	        nextDay : '[ਕਲ] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[ਕਲ] LT',
	        lastWeek : '[ਪਿਛਲੇ] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s ਵਿੱਚ',
	        past : '%s ਪਿਛਲੇ',
	        s : 'ਕੁਝ ਸਕਿੰਟ',
	        ss : '%d ਸਕਿੰਟ',
	        m : 'ਇਕ ਮਿੰਟ',
	        mm : '%d ਮਿੰਟ',
	        h : 'ਇੱਕ ਘੰਟਾ',
	        hh : '%d ਘੰਟੇ',
	        d : 'ਇੱਕ ਦਿਨ',
	        dd : '%d ਦਿਨ',
	        M : 'ਇੱਕ ਮਹੀਨਾ',
	        MM : '%d ਮਹੀਨੇ',
	        y : 'ਇੱਕ ਸਾਲ',
	        yy : '%d ਸਾਲ'
	    },
	    preparse: function (string) {
	        return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
	    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
	    meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'ਰਾਤ') {
	            return hour < 4 ? hour : hour + 12;
	        } else if (meridiem === 'ਸਵੇਰ') {
	            return hour;
	        } else if (meridiem === 'ਦੁਪਹਿਰ') {
	            return hour >= 10 ? hour : hour + 12;
	        } else if (meridiem === 'ਸ਼ਾਮ') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'ਰਾਤ';
	        } else if (hour < 10) {
	            return 'ਸਵੇਰ';
	        } else if (hour < 17) {
	            return 'ਦੁਪਹਿਰ';
	        } else if (hour < 20) {
	            return 'ਸ਼ਾਮ';
	        } else {
	            return 'ਰਾਤ';
	        }
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return paIn;
	
	})));


/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Polish [pl]
	//! author : Rafal Hirsz : https://github.com/evoL
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');
	var monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
	function plural(n) {
	    return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
	}
	function translate(number, withoutSuffix, key) {
	    var result = number + ' ';
	    switch (key) {
	        case 'ss':
	            return result + (plural(number) ? 'sekundy' : 'sekund');
	        case 'm':
	            return withoutSuffix ? 'minuta' : 'minutę';
	        case 'mm':
	            return result + (plural(number) ? 'minuty' : 'minut');
	        case 'h':
	            return withoutSuffix  ? 'godzina'  : 'godzinę';
	        case 'hh':
	            return result + (plural(number) ? 'godziny' : 'godzin');
	        case 'MM':
	            return result + (plural(number) ? 'miesiące' : 'miesięcy');
	        case 'yy':
	            return result + (plural(number) ? 'lata' : 'lat');
	    }
	}
	
	var pl = moment.defineLocale('pl', {
	    months : function (momentToFormat, format) {
	        if (!momentToFormat) {
	            return monthsNominative;
	        } else if (format === '') {
	            // Hack: if format empty we know this is used to generate
	            // RegExp by moment. Give then back both valid forms of months
	            // in RegExp ready format.
	            return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
	        } else if (/D MMMM/.test(format)) {
	            return monthsSubjective[momentToFormat.month()];
	        } else {
	            return monthsNominative[momentToFormat.month()];
	        }
	    },
	    monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
	    weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
	    weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
	    weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Dziś o] LT',
	        nextDay: '[Jutro o] LT',
	        nextWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[W niedzielę o] LT';
	
	                case 2:
	                    return '[We wtorek o] LT';
	
	                case 3:
	                    return '[W środę o] LT';
	
	                case 6:
	                    return '[W sobotę o] LT';
	
	                default:
	                    return '[W] dddd [o] LT';
	            }
	        },
	        lastDay: '[Wczoraj o] LT',
	        lastWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[W zeszłą niedzielę o] LT';
	                case 3:
	                    return '[W zeszłą środę o] LT';
	                case 6:
	                    return '[W zeszłą sobotę o] LT';
	                default:
	                    return '[W zeszły] dddd [o] LT';
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'za %s',
	        past : '%s temu',
	        s : 'kilka sekund',
	        ss : translate,
	        m : translate,
	        mm : translate,
	        h : translate,
	        hh : translate,
	        d : '1 dzień',
	        dd : '%d dni',
	        M : 'miesiąc',
	        MM : translate,
	        y : 'rok',
	        yy : translate
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return pl;
	
	})));


/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Portuguese (Brazil) [pt-br]
	//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var ptBr = moment.defineLocale('pt-br', {
	    months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
	    monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
	    weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
	    weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	    weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D [de] MMMM [de] YYYY',
	        LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
	        LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
	    },
	    calendar : {
	        sameDay: '[Hoje às] LT',
	        nextDay: '[Amanhã às] LT',
	        nextWeek: 'dddd [às] LT',
	        lastDay: '[Ontem às] LT',
	        lastWeek: function () {
	            return (this.day() === 0 || this.day() === 6) ?
	                '[Último] dddd [às] LT' : // Saturday + Sunday
	                '[Última] dddd [às] LT'; // Monday - Friday
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'em %s',
	        past : '%s atrás',
	        s : 'poucos segundos',
	        ss : '%d segundos',
	        m : 'um minuto',
	        mm : '%d minutos',
	        h : 'uma hora',
	        hh : '%d horas',
	        d : 'um dia',
	        dd : '%d dias',
	        M : 'um mês',
	        MM : '%d meses',
	        y : 'um ano',
	        yy : '%d anos'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}º/,
	    ordinal : '%dº'
	});
	
	return ptBr;
	
	})));


/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Portuguese [pt]
	//! author : Jefferson : https://github.com/jalex79
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var pt = moment.defineLocale('pt', {
	    months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
	    monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
	    weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
	    weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	    weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D [de] MMMM [de] YYYY',
	        LLL : 'D [de] MMMM [de] YYYY HH:mm',
	        LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Hoje às] LT',
	        nextDay: '[Amanhã às] LT',
	        nextWeek: 'dddd [às] LT',
	        lastDay: '[Ontem às] LT',
	        lastWeek: function () {
	            return (this.day() === 0 || this.day() === 6) ?
	                '[Último] dddd [às] LT' : // Saturday + Sunday
	                '[Última] dddd [às] LT'; // Monday - Friday
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'em %s',
	        past : 'há %s',
	        s : 'segundos',
	        ss : '%d segundos',
	        m : 'um minuto',
	        mm : '%d minutos',
	        h : 'uma hora',
	        hh : '%d horas',
	        d : 'um dia',
	        dd : '%d dias',
	        M : 'um mês',
	        MM : '%d meses',
	        y : 'um ano',
	        yy : '%d anos'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}º/,
	    ordinal : '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return pt;
	
	})));


/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Romanian [ro]
	//! author : Vlad Gurdiga : https://github.com/gurdiga
	//! author : Valentin Agachi : https://github.com/avaly
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	function relativeTimeWithPlural(number, withoutSuffix, key) {
	    var format = {
	            'ss': 'secunde',
	            'mm': 'minute',
	            'hh': 'ore',
	            'dd': 'zile',
	            'MM': 'luni',
	            'yy': 'ani'
	        },
	        separator = ' ';
	    if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
	        separator = ' de ';
	    }
	    return number + separator + format[key];
	}
	
	var ro = moment.defineLocale('ro', {
	    months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
	    monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
	    weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
	    weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY H:mm',
	        LLLL : 'dddd, D MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay: '[azi la] LT',
	        nextDay: '[mâine la] LT',
	        nextWeek: 'dddd [la] LT',
	        lastDay: '[ieri la] LT',
	        lastWeek: '[fosta] dddd [la] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'peste %s',
	        past : '%s în urmă',
	        s : 'câteva secunde',
	        ss : relativeTimeWithPlural,
	        m : 'un minut',
	        mm : relativeTimeWithPlural,
	        h : 'o oră',
	        hh : relativeTimeWithPlural,
	        d : 'o zi',
	        dd : relativeTimeWithPlural,
	        M : 'o lună',
	        MM : relativeTimeWithPlural,
	        y : 'un an',
	        yy : relativeTimeWithPlural
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return ro;
	
	})));


/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Russian [ru]
	//! author : Viktorminator : https://github.com/Viktorminator
	//! Author : Menelion Elensúle : https://github.com/Oire
	//! author : Коренберг Марк : https://github.com/socketpair
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	function plural(word, num) {
	    var forms = word.split('_');
	    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	}
	function relativeTimeWithPlural(number, withoutSuffix, key) {
	    var format = {
	        'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
	        'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
	        'hh': 'час_часа_часов',
	        'dd': 'день_дня_дней',
	        'MM': 'месяц_месяца_месяцев',
	        'yy': 'год_года_лет'
	    };
	    if (key === 'm') {
	        return withoutSuffix ? 'минута' : 'минуту';
	    }
	    else {
	        return number + ' ' + plural(format[key], +number);
	    }
	}
	var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];
	
	// http://new.gramota.ru/spravka/rules/139-prop : § 103
	// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
	// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
	var ru = moment.defineLocale('ru', {
	    months : {
	        format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
	        standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
	    },
	    monthsShort : {
	        // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
	        format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
	        standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
	    },
	    weekdays : {
	        standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
	        format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
	        isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
	    },
	    weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	    weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	    monthsParse : monthsParse,
	    longMonthsParse : monthsParse,
	    shortMonthsParse : monthsParse,
	
	    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
	    monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
	
	    // копия предыдущего
	    monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
	
	    // полные названия с падежами
	    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,
	
	    // Выражение, которое соотвествует только сокращённым формам
	    monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY г.',
	        LLL : 'D MMMM YYYY г., H:mm',
	        LLLL : 'dddd, D MMMM YYYY г., H:mm'
	    },
	    calendar : {
	        sameDay: '[Сегодня в] LT',
	        nextDay: '[Завтра в] LT',
	        lastDay: '[Вчера в] LT',
	        nextWeek: function (now) {
	            if (now.week() !== this.week()) {
	                switch (this.day()) {
	                    case 0:
	                        return '[В следующее] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[В следующий] dddd [в] LT';
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[В следующую] dddd [в] LT';
	                }
	            } else {
	                if (this.day() === 2) {
	                    return '[Во] dddd [в] LT';
	                } else {
	                    return '[В] dddd [в] LT';
	                }
	            }
	        },
	        lastWeek: function (now) {
	            if (now.week() !== this.week()) {
	                switch (this.day()) {
	                    case 0:
	                        return '[В прошлое] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[В прошлый] dddd [в] LT';
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[В прошлую] dddd [в] LT';
	                }
	            } else {
	                if (this.day() === 2) {
	                    return '[Во] dddd [в] LT';
	                } else {
	                    return '[В] dddd [в] LT';
	                }
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'через %s',
	        past : '%s назад',
	        s : 'несколько секунд',
	        ss : relativeTimeWithPlural,
	        m : relativeTimeWithPlural,
	        mm : relativeTimeWithPlural,
	        h : 'час',
	        hh : relativeTimeWithPlural,
	        d : 'день',
	        dd : relativeTimeWithPlural,
	        M : 'месяц',
	        MM : relativeTimeWithPlural,
	        y : 'год',
	        yy : relativeTimeWithPlural
	    },
	    meridiemParse: /ночи|утра|дня|вечера/i,
	    isPM : function (input) {
	        return /^(дня|вечера)$/.test(input);
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'ночи';
	        } else if (hour < 12) {
	            return 'утра';
	        } else if (hour < 17) {
	            return 'дня';
	        } else {
	            return 'вечера';
	        }
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
	    ordinal: function (number, period) {
	        switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            case 'w':
	            case 'W':
	                return number + '-я';
	            default:
	                return number;
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return ru;
	
	})));


/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Sindhi [sd]
	//! author : Narain Sagar : https://github.com/narainsagar
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var months = [
	    'جنوري',
	    'فيبروري',
	    'مارچ',
	    'اپريل',
	    'مئي',
	    'جون',
	    'جولاءِ',
	    'آگسٽ',
	    'سيپٽمبر',
	    'آڪٽوبر',
	    'نومبر',
	    'ڊسمبر'
	];
	var days = [
	    'آچر',
	    'سومر',
	    'اڱارو',
	    'اربع',
	    'خميس',
	    'جمع',
	    'ڇنڇر'
	];
	
	var sd = moment.defineLocale('sd', {
	    months : months,
	    monthsShort : months,
	    weekdays : days,
	    weekdaysShort : days,
	    weekdaysMin : days,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd، D MMMM YYYY HH:mm'
	    },
	    meridiemParse: /صبح|شام/,
	    isPM : function (input) {
	        return 'شام' === input;
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'صبح';
	        }
	        return 'شام';
	    },
	    calendar : {
	        sameDay : '[اڄ] LT',
	        nextDay : '[سڀاڻي] LT',
	        nextWeek : 'dddd [اڳين هفتي تي] LT',
	        lastDay : '[ڪالهه] LT',
	        lastWeek : '[گزريل هفتي] dddd [تي] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s پوء',
	        past : '%s اڳ',
	        s : 'چند سيڪنڊ',
	        ss : '%d سيڪنڊ',
	        m : 'هڪ منٽ',
	        mm : '%d منٽ',
	        h : 'هڪ ڪلاڪ',
	        hh : '%d ڪلاڪ',
	        d : 'هڪ ڏينهن',
	        dd : '%d ڏينهن',
	        M : 'هڪ مهينو',
	        MM : '%d مهينا',
	        y : 'هڪ سال',
	        yy : '%d سال'
	    },
	    preparse: function (string) {
	        return string.replace(/،/g, ',');
	    },
	    postformat: function (string) {
	        return string.replace(/,/g, '،');
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return sd;
	
	})));


/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Northern Sami [se]
	//! authors : Bård Rolstad Henriksen : https://github.com/karamell
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	
	var se = moment.defineLocale('se', {
	    months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
	    monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
	    weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
	    weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
	    weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'MMMM D. [b.] YYYY',
	        LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
	        LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
	    },
	    calendar : {
	        sameDay: '[otne ti] LT',
	        nextDay: '[ihttin ti] LT',
	        nextWeek: 'dddd [ti] LT',
	        lastDay: '[ikte ti] LT',
	        lastWeek: '[ovddit] dddd [ti] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : '%s geažes',
	        past : 'maŋit %s',
	        s : 'moadde sekunddat',
	        ss: '%d sekunddat',
	        m : 'okta minuhta',
	        mm : '%d minuhtat',
	        h : 'okta diimmu',
	        hh : '%d diimmut',
	        d : 'okta beaivi',
	        dd : '%d beaivvit',
	        M : 'okta mánnu',
	        MM : '%d mánut',
	        y : 'okta jahki',
	        yy : '%d jagit'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return se;
	
	})));


/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Sinhalese [si]
	//! author : Sampath Sitinamaluwa : https://github.com/sampathsris
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	/*jshint -W100*/
	var si = moment.defineLocale('si', {
	    months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
	    monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
	    weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
	    weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
	    weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'a h:mm',
	        LTS : 'a h:mm:ss',
	        L : 'YYYY/MM/DD',
	        LL : 'YYYY MMMM D',
	        LLL : 'YYYY MMMM D, a h:mm',
	        LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
	    },
	    calendar : {
	        sameDay : '[අද] LT[ට]',
	        nextDay : '[හෙට] LT[ට]',
	        nextWeek : 'dddd LT[ට]',
	        lastDay : '[ඊයේ] LT[ට]',
	        lastWeek : '[පසුගිය] dddd LT[ට]',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%sකින්',
	        past : '%sකට පෙර',
	        s : 'තත්පර කිහිපය',
	        ss : 'තත්පර %d',
	        m : 'මිනිත්තුව',
	        mm : 'මිනිත්තු %d',
	        h : 'පැය',
	        hh : 'පැය %d',
	        d : 'දිනය',
	        dd : 'දින %d',
	        M : 'මාසය',
	        MM : 'මාස %d',
	        y : 'වසර',
	        yy : 'වසර %d'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
	    ordinal : function (number) {
	        return number + ' වැනි';
	    },
	    meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
	    isPM : function (input) {
	        return input === 'ප.ව.' || input === 'පස් වරු';
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'ප.ව.' : 'පස් වරු';
	        } else {
	            return isLower ? 'පෙ.ව.' : 'පෙර වරු';
	        }
	    }
	});
	
	return si;
	
	})));


/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Slovak [sk]
	//! author : Martin Minka : https://github.com/k2s
	//! based on work of petrbela : https://github.com/petrbela
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');
	var monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
	function plural(n) {
	    return (n > 1) && (n < 5);
	}
	function translate(number, withoutSuffix, key, isFuture) {
	    var result = number + ' ';
	    switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
	        case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'sekundy' : 'sekúnd');
	            } else {
	                return result + 'sekundami';
	            }
	            break;
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minúty' : 'minút');
	            } else {
	                return result + 'minútami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodín');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dni' : 'dní');
	            } else {
	                return result + 'dňami';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'mesiace' : 'mesiacov');
	            } else {
	                return result + 'mesiacmi';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'rokov');
	            } else {
	                return result + 'rokmi';
	            }
	            break;
	    }
	}
	
	var sk = moment.defineLocale('sk', {
	    months : months,
	    monthsShort : monthsShort,
	    weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
	    weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
	    weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
	    longDateFormat : {
	        LT: 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY H:mm',
	        LLLL : 'dddd D. MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay: '[dnes o] LT',
	        nextDay: '[zajtra o] LT',
	        nextWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[v nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [o] LT';
	                case 3:
	                    return '[v stredu o] LT';
	                case 4:
	                    return '[vo štvrtok o] LT';
	                case 5:
	                    return '[v piatok o] LT';
	                case 6:
	                    return '[v sobotu o] LT';
	            }
	        },
	        lastDay: '[včera o] LT',
	        lastWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[minulú nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[minulý] dddd [o] LT';
	                case 3:
	                    return '[minulú stredu o] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [o] LT';
	                case 6:
	                    return '[minulú sobotu o] LT';
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'za %s',
	        past : 'pred %s',
	        s : translate,
	        ss : translate,
	        m : translate,
	        mm : translate,
	        h : translate,
	        hh : translate,
	        d : translate,
	        dd : translate,
	        M : translate,
	        MM : translate,
	        y : translate,
	        yy : translate
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return sk;
	
	})));


/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Slovenian [sl]
	//! author : Robert Sedovšek : https://github.com/sedovsek
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var result = number + ' ';
	    switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
	        case 'ss':
	            if (number === 1) {
	                result += withoutSuffix ? 'sekundo' : 'sekundi';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
	            } else {
	                result += withoutSuffix || isFuture ? 'sekund' : 'sekund';
	            }
	            return result;
	        case 'm':
	            return withoutSuffix ? 'ena minuta' : 'eno minuto';
	        case 'mm':
	            if (number === 1) {
	                result += withoutSuffix ? 'minuta' : 'minuto';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'minute' : 'minutami';
	            } else {
	                result += withoutSuffix || isFuture ? 'minut' : 'minutami';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'ena ura' : 'eno uro';
	        case 'hh':
	            if (number === 1) {
	                result += withoutSuffix ? 'ura' : 'uro';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'uri' : 'urama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'ure' : 'urami';
	            } else {
	                result += withoutSuffix || isFuture ? 'ur' : 'urami';
	            }
	            return result;
	        case 'd':
	            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
	        case 'dd':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'dan' : 'dnem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
	            } else {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
	            }
	            return result;
	        case 'M':
	            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
	        case 'MM':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
	            } else {
	                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
	            }
	            return result;
	        case 'y':
	            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
	        case 'yy':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'leto' : 'letom';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'leti' : 'letoma';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'leta' : 'leti';
	            } else {
	                result += withoutSuffix || isFuture ? 'let' : 'leti';
	            }
	            return result;
	    }
	}
	
	var sl = moment.defineLocale('sl', {
	    months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
	    monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
	    weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
	    weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY H:mm',
	        LLLL : 'dddd, D. MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay  : '[danes ob] LT',
	        nextDay  : '[jutri ob] LT',
	
	        nextWeek : function () {
	            switch (this.day()) {
	                case 0:
	                    return '[v] [nedeljo] [ob] LT';
	                case 3:
	                    return '[v] [sredo] [ob] LT';
	                case 6:
	                    return '[v] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[v] dddd [ob] LT';
	            }
	        },
	        lastDay  : '[včeraj ob] LT',
	        lastWeek : function () {
	            switch (this.day()) {
	                case 0:
	                    return '[prejšnjo] [nedeljo] [ob] LT';
	                case 3:
	                    return '[prejšnjo] [sredo] [ob] LT';
	                case 6:
	                    return '[prejšnjo] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prejšnji] dddd [ob] LT';
	            }
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'čez %s',
	        past   : 'pred %s',
	        s      : processRelativeTime,
	        ss     : processRelativeTime,
	        m      : processRelativeTime,
	        mm     : processRelativeTime,
	        h      : processRelativeTime,
	        hh     : processRelativeTime,
	        d      : processRelativeTime,
	        dd     : processRelativeTime,
	        M      : processRelativeTime,
	        MM     : processRelativeTime,
	        y      : processRelativeTime,
	        yy     : processRelativeTime
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return sl;
	
	})));


/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Albanian [sq]
	//! author : Flakërim Ismani : https://github.com/flakerimi
	//! author : Menelion Elensúle : https://github.com/Oire
	//! author : Oerd Cukalla : https://github.com/oerd
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var sq = moment.defineLocale('sq', {
	    months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
	    monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
	    weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
	    weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
	    weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
	    weekdaysParseExact : true,
	    meridiemParse: /PD|MD/,
	    isPM: function (input) {
	        return input.charAt(0) === 'M';
	    },
	    meridiem : function (hours, minutes, isLower) {
	        return hours < 12 ? 'PD' : 'MD';
	    },
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Sot në] LT',
	        nextDay : '[Nesër në] LT',
	        nextWeek : 'dddd [në] LT',
	        lastDay : '[Dje në] LT',
	        lastWeek : 'dddd [e kaluar në] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'në %s',
	        past : '%s më parë',
	        s : 'disa sekonda',
	        ss : '%d sekonda',
	        m : 'një minutë',
	        mm : '%d minuta',
	        h : 'një orë',
	        hh : '%d orë',
	        d : 'një ditë',
	        dd : '%d ditë',
	        M : 'një muaj',
	        MM : '%d muaj',
	        y : 'një vit',
	        yy : '%d vite'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return sq;
	
	})));


/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian Cyrillic [sr-cyrl]
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var translator = {
	    words: { //Different grammatical cases
	        ss: ['секунда', 'секунде', 'секунди'],
	        m: ['један минут', 'једне минуте'],
	        mm: ['минут', 'минуте', 'минута'],
	        h: ['један сат', 'једног сата'],
	        hh: ['сат', 'сата', 'сати'],
	        dd: ['дан', 'дана', 'дана'],
	        MM: ['месец', 'месеца', 'месеци'],
	        yy: ['година', 'године', 'година']
	    },
	    correctGrammaticalCase: function (number, wordKey) {
	        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	    },
	    translate: function (number, withoutSuffix, key) {
	        var wordKey = translator.words[key];
	        if (key.length === 1) {
	            return withoutSuffix ? wordKey[0] : wordKey[1];
	        } else {
	            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	        }
	    }
	};
	
	var srCyrl = moment.defineLocale('sr-cyrl', {
	    months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
	    monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
	    monthsParseExact: true,
	    weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
	    weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
	    weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat: {
	        LT: 'H:mm',
	        LTS : 'H:mm:ss',
	        L: 'DD.MM.YYYY',
	        LL: 'D. MMMM YYYY',
	        LLL: 'D. MMMM YYYY H:mm',
	        LLLL: 'dddd, D. MMMM YYYY H:mm'
	    },
	    calendar: {
	        sameDay: '[данас у] LT',
	        nextDay: '[сутра у] LT',
	        nextWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[у] [недељу] [у] LT';
	                case 3:
	                    return '[у] [среду] [у] LT';
	                case 6:
	                    return '[у] [суботу] [у] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[у] dddd [у] LT';
	            }
	        },
	        lastDay  : '[јуче у] LT',
	        lastWeek : function () {
	            var lastWeekDays = [
	                '[прошле] [недеље] [у] LT',
	                '[прошлог] [понедељка] [у] LT',
	                '[прошлог] [уторка] [у] LT',
	                '[прошле] [среде] [у] LT',
	                '[прошлог] [четвртка] [у] LT',
	                '[прошлог] [петка] [у] LT',
	                '[прошле] [суботе] [у] LT'
	            ];
	            return lastWeekDays[this.day()];
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'за %s',
	        past   : 'пре %s',
	        s      : 'неколико секунди',
	        ss     : translator.translate,
	        m      : translator.translate,
	        mm     : translator.translate,
	        h      : translator.translate,
	        hh     : translator.translate,
	        d      : 'дан',
	        dd     : translator.translate,
	        M      : 'месец',
	        MM     : translator.translate,
	        y      : 'годину',
	        yy     : translator.translate
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return srCyrl;
	
	})));


/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian [sr]
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var translator = {
	    words: { //Different grammatical cases
	        ss: ['sekunda', 'sekunde', 'sekundi'],
	        m: ['jedan minut', 'jedne minute'],
	        mm: ['minut', 'minute', 'minuta'],
	        h: ['jedan sat', 'jednog sata'],
	        hh: ['sat', 'sata', 'sati'],
	        dd: ['dan', 'dana', 'dana'],
	        MM: ['mesec', 'meseca', 'meseci'],
	        yy: ['godina', 'godine', 'godina']
	    },
	    correctGrammaticalCase: function (number, wordKey) {
	        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	    },
	    translate: function (number, withoutSuffix, key) {
	        var wordKey = translator.words[key];
	        if (key.length === 1) {
	            return withoutSuffix ? wordKey[0] : wordKey[1];
	        } else {
	            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	        }
	    }
	};
	
	var sr = moment.defineLocale('sr', {
	    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	    monthsParseExact: true,
	    weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
	    weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
	    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat: {
	        LT: 'H:mm',
	        LTS : 'H:mm:ss',
	        L: 'DD.MM.YYYY',
	        LL: 'D. MMMM YYYY',
	        LLL: 'D. MMMM YYYY H:mm',
	        LLLL: 'dddd, D. MMMM YYYY H:mm'
	    },
	    calendar: {
	        sameDay: '[danas u] LT',
	        nextDay: '[sutra u] LT',
	        nextWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[u] [nedelju] [u] LT';
	                case 3:
	                    return '[u] [sredu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	            }
	        },
	        lastDay  : '[juče u] LT',
	        lastWeek : function () {
	            var lastWeekDays = [
	                '[prošle] [nedelje] [u] LT',
	                '[prošlog] [ponedeljka] [u] LT',
	                '[prošlog] [utorka] [u] LT',
	                '[prošle] [srede] [u] LT',
	                '[prošlog] [četvrtka] [u] LT',
	                '[prošlog] [petka] [u] LT',
	                '[prošle] [subote] [u] LT'
	            ];
	            return lastWeekDays[this.day()];
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'za %s',
	        past   : 'pre %s',
	        s      : 'nekoliko sekundi',
	        ss     : translator.translate,
	        m      : translator.translate,
	        mm     : translator.translate,
	        h      : translator.translate,
	        hh     : translator.translate,
	        d      : 'dan',
	        dd     : translator.translate,
	        M      : 'mesec',
	        MM     : translator.translate,
	        y      : 'godinu',
	        yy     : translator.translate
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return sr;
	
	})));


/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : siSwati [ss]
	//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	
	var ss = moment.defineLocale('ss', {
	    months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
	    monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
	    weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
	    weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
	    weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY h:mm A',
	        LLLL : 'dddd, D MMMM YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[Namuhla nga] LT',
	        nextDay : '[Kusasa nga] LT',
	        nextWeek : 'dddd [nga] LT',
	        lastDay : '[Itolo nga] LT',
	        lastWeek : 'dddd [leliphelile] [nga] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'nga %s',
	        past : 'wenteka nga %s',
	        s : 'emizuzwana lomcane',
	        ss : '%d mzuzwana',
	        m : 'umzuzu',
	        mm : '%d emizuzu',
	        h : 'lihora',
	        hh : '%d emahora',
	        d : 'lilanga',
	        dd : '%d emalanga',
	        M : 'inyanga',
	        MM : '%d tinyanga',
	        y : 'umnyaka',
	        yy : '%d iminyaka'
	    },
	    meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 11) {
	            return 'ekuseni';
	        } else if (hours < 15) {
	            return 'emini';
	        } else if (hours < 19) {
	            return 'entsambama';
	        } else {
	            return 'ebusuku';
	        }
	    },
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'ekuseni') {
	            return hour;
	        } else if (meridiem === 'emini') {
	            return hour >= 11 ? hour : hour + 12;
	        } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
	            if (hour === 0) {
	                return 0;
	            }
	            return hour + 12;
	        }
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}/,
	    ordinal : '%d',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return ss;
	
	})));


/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Swedish [sv]
	//! author : Jens Alm : https://github.com/ulmus
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var sv = moment.defineLocale('sv', {
	    months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
	    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	    weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
	    weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
	    weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY-MM-DD',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY [kl.] HH:mm',
	        LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
	        lll : 'D MMM YYYY HH:mm',
	        llll : 'ddd D MMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Idag] LT',
	        nextDay: '[Imorgon] LT',
	        lastDay: '[Igår] LT',
	        nextWeek: '[På] dddd LT',
	        lastWeek: '[I] dddd[s] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'om %s',
	        past : 'för %s sedan',
	        s : 'några sekunder',
	        ss : '%d sekunder',
	        m : 'en minut',
	        mm : '%d minuter',
	        h : 'en timme',
	        hh : '%d timmar',
	        d : 'en dag',
	        dd : '%d dagar',
	        M : 'en månad',
	        MM : '%d månader',
	        y : 'ett år',
	        yy : '%d år'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'e' :
	            (b === 1) ? 'a' :
	            (b === 2) ? 'a' :
	            (b === 3) ? 'e' : 'e';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return sv;
	
	})));


/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Swahili [sw]
	//! author : Fahad Kassim : https://github.com/fadsel
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var sw = moment.defineLocale('sw', {
	    months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
	    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
	    weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
	    weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
	    weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[leo saa] LT',
	        nextDay : '[kesho saa] LT',
	        nextWeek : '[wiki ijayo] dddd [saat] LT',
	        lastDay : '[jana] LT',
	        lastWeek : '[wiki iliyopita] dddd [saat] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s baadaye',
	        past : 'tokea %s',
	        s : 'hivi punde',
	        ss : 'sekunde %d',
	        m : 'dakika moja',
	        mm : 'dakika %d',
	        h : 'saa limoja',
	        hh : 'masaa %d',
	        d : 'siku moja',
	        dd : 'masiku %d',
	        M : 'mwezi mmoja',
	        MM : 'miezi %d',
	        y : 'mwaka mmoja',
	        yy : 'miaka %d'
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return sw;
	
	})));


/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Tamil [ta]
	//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var symbolMap = {
	    '1': '௧',
	    '2': '௨',
	    '3': '௩',
	    '4': '௪',
	    '5': '௫',
	    '6': '௬',
	    '7': '௭',
	    '8': '௮',
	    '9': '௯',
	    '0': '௦'
	};
	var numberMap = {
	    '௧': '1',
	    '௨': '2',
	    '௩': '3',
	    '௪': '4',
	    '௫': '5',
	    '௬': '6',
	    '௭': '7',
	    '௮': '8',
	    '௯': '9',
	    '௦': '0'
	};
	
	var ta = moment.defineLocale('ta', {
	    months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	    monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	    weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
	    weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
	    weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, HH:mm',
	        LLLL : 'dddd, D MMMM YYYY, HH:mm'
	    },
	    calendar : {
	        sameDay : '[இன்று] LT',
	        nextDay : '[நாளை] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[நேற்று] LT',
	        lastWeek : '[கடந்த வாரம்] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s இல்',
	        past : '%s முன்',
	        s : 'ஒரு சில விநாடிகள்',
	        ss : '%d விநாடிகள்',
	        m : 'ஒரு நிமிடம்',
	        mm : '%d நிமிடங்கள்',
	        h : 'ஒரு மணி நேரம்',
	        hh : '%d மணி நேரம்',
	        d : 'ஒரு நாள்',
	        dd : '%d நாட்கள்',
	        M : 'ஒரு மாதம்',
	        MM : '%d மாதங்கள்',
	        y : 'ஒரு வருடம்',
	        yy : '%d ஆண்டுகள்'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}வது/,
	    ordinal : function (number) {
	        return number + 'வது';
	    },
	    preparse: function (string) {
	        return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    // refer http://ta.wikipedia.org/s/1er1
	    meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 2) {
	            return ' யாமம்';
	        } else if (hour < 6) {
	            return ' வைகறை';  // வைகறை
	        } else if (hour < 10) {
	            return ' காலை'; // காலை
	        } else if (hour < 14) {
	            return ' நண்பகல்'; // நண்பகல்
	        } else if (hour < 18) {
	            return ' எற்பாடு'; // எற்பாடு
	        } else if (hour < 22) {
	            return ' மாலை'; // மாலை
	        } else {
	            return ' யாமம்';
	        }
	    },
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'யாமம்') {
	            return hour < 2 ? hour : hour + 12;
	        } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
	            return hour;
	        } else if (meridiem === 'நண்பகல்') {
	            return hour >= 10 ? hour : hour + 12;
	        } else {
	            return hour + 12;
	        }
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return ta;
	
	})));


/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Telugu [te]
	//! author : Krishna Chaitanya Thota : https://github.com/kcthota
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var te = moment.defineLocale('te', {
	    months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
	    monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
	    weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
	    weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm',
	        LTS : 'A h:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm'
	    },
	    calendar : {
	        sameDay : '[నేడు] LT',
	        nextDay : '[రేపు] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[నిన్న] LT',
	        lastWeek : '[గత] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s లో',
	        past : '%s క్రితం',
	        s : 'కొన్ని క్షణాలు',
	        ss : '%d సెకన్లు',
	        m : 'ఒక నిమిషం',
	        mm : '%d నిమిషాలు',
	        h : 'ఒక గంట',
	        hh : '%d గంటలు',
	        d : 'ఒక రోజు',
	        dd : '%d రోజులు',
	        M : 'ఒక నెల',
	        MM : '%d నెలలు',
	        y : 'ఒక సంవత్సరం',
	        yy : '%d సంవత్సరాలు'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}వ/,
	    ordinal : '%dవ',
	    meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'రాత్రి') {
	            return hour < 4 ? hour : hour + 12;
	        } else if (meridiem === 'ఉదయం') {
	            return hour;
	        } else if (meridiem === 'మధ్యాహ్నం') {
	            return hour >= 10 ? hour : hour + 12;
	        } else if (meridiem === 'సాయంత్రం') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'రాత్రి';
	        } else if (hour < 10) {
	            return 'ఉదయం';
	        } else if (hour < 17) {
	            return 'మధ్యాహ్నం';
	        } else if (hour < 20) {
	            return 'సాయంత్రం';
	        } else {
	            return 'రాత్రి';
	        }
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return te;
	
	})));


/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Tetun Dili (East Timor) [tet]
	//! author : Joshua Brooks : https://github.com/joshbrooks
	//! author : Onorio De J. Afonso : https://github.com/marobo
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var tet = moment.defineLocale('tet', {
	    months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juniu_Juliu_Augustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
	    monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Aug_Set_Out_Nov_Dez'.split('_'),
	    weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sexta_Sabadu'.split('_'),
	    weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sext_Sab'.split('_'),
	    weekdaysMin : 'Do_Seg_Te_Ku_Ki_Sex_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Ohin iha] LT',
	        nextDay: '[Aban iha] LT',
	        nextWeek: 'dddd [iha] LT',
	        lastDay: '[Horiseik iha] LT',
	        lastWeek: 'dddd [semana kotuk] [iha] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'iha %s',
	        past : '%s liuba',
	        s : 'minutu balun',
	        ss : 'minutu %d',
	        m : 'minutu ida',
	        mm : 'minutus %d',
	        h : 'horas ida',
	        hh : 'horas %d',
	        d : 'loron ida',
	        dd : 'loron %d',
	        M : 'fulan ida',
	        MM : 'fulan %d',
	        y : 'tinan ida',
	        yy : 'tinan %d'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return tet;
	
	})));


/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Thai [th]
	//! author : Kridsada Thanabulpong : https://github.com/sirn
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var th = moment.defineLocale('th', {
	    months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
	    monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
	    weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
	    weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY เวลา H:mm',
	        LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
	    },
	    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
	    isPM: function (input) {
	        return input === 'หลังเที่ยง';
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'ก่อนเที่ยง';
	        } else {
	            return 'หลังเที่ยง';
	        }
	    },
	    calendar : {
	        sameDay : '[วันนี้ เวลา] LT',
	        nextDay : '[พรุ่งนี้ เวลา] LT',
	        nextWeek : 'dddd[หน้า เวลา] LT',
	        lastDay : '[เมื่อวานนี้ เวลา] LT',
	        lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'อีก %s',
	        past : '%sที่แล้ว',
	        s : 'ไม่กี่วินาที',
	        ss : '%d วินาที',
	        m : '1 นาที',
	        mm : '%d นาที',
	        h : '1 ชั่วโมง',
	        hh : '%d ชั่วโมง',
	        d : '1 วัน',
	        dd : '%d วัน',
	        M : '1 เดือน',
	        MM : '%d เดือน',
	        y : '1 ปี',
	        yy : '%d ปี'
	    }
	});
	
	return th;
	
	})));


/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Tagalog (Philippines) [tl-ph]
	//! author : Dan Hagman : https://github.com/hagmandan
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var tlPh = moment.defineLocale('tl-ph', {
	    months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
	    monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
	    weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
	    weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
	    weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'MM/D/YYYY',
	        LL : 'MMMM D, YYYY',
	        LLL : 'MMMM D, YYYY HH:mm',
	        LLLL : 'dddd, MMMM DD, YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: 'LT [ngayong araw]',
	        nextDay: '[Bukas ng] LT',
	        nextWeek: 'LT [sa susunod na] dddd',
	        lastDay: 'LT [kahapon]',
	        lastWeek: 'LT [noong nakaraang] dddd',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'sa loob ng %s',
	        past : '%s ang nakalipas',
	        s : 'ilang segundo',
	        ss : '%d segundo',
	        m : 'isang minuto',
	        mm : '%d minuto',
	        h : 'isang oras',
	        hh : '%d oras',
	        d : 'isang araw',
	        dd : '%d araw',
	        M : 'isang buwan',
	        MM : '%d buwan',
	        y : 'isang taon',
	        yy : '%d taon'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}/,
	    ordinal : function (number) {
	        return number;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return tlPh;
	
	})));


/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Klingon [tlh]
	//! author : Dominika Kruk : https://github.com/amaranthrose
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');
	
	function translateFuture(output) {
	    var time = output;
	    time = (output.indexOf('jaj') !== -1) ?
	    time.slice(0, -3) + 'leS' :
	    (output.indexOf('jar') !== -1) ?
	    time.slice(0, -3) + 'waQ' :
	    (output.indexOf('DIS') !== -1) ?
	    time.slice(0, -3) + 'nem' :
	    time + ' pIq';
	    return time;
	}
	
	function translatePast(output) {
	    var time = output;
	    time = (output.indexOf('jaj') !== -1) ?
	    time.slice(0, -3) + 'Hu’' :
	    (output.indexOf('jar') !== -1) ?
	    time.slice(0, -3) + 'wen' :
	    (output.indexOf('DIS') !== -1) ?
	    time.slice(0, -3) + 'ben' :
	    time + ' ret';
	    return time;
	}
	
	function translate(number, withoutSuffix, string, isFuture) {
	    var numberNoun = numberAsNoun(number);
	    switch (string) {
	        case 'ss':
	            return numberNoun + ' lup';
	        case 'mm':
	            return numberNoun + ' tup';
	        case 'hh':
	            return numberNoun + ' rep';
	        case 'dd':
	            return numberNoun + ' jaj';
	        case 'MM':
	            return numberNoun + ' jar';
	        case 'yy':
	            return numberNoun + ' DIS';
	    }
	}
	
	function numberAsNoun(number) {
	    var hundred = Math.floor((number % 1000) / 100),
	    ten = Math.floor((number % 100) / 10),
	    one = number % 10,
	    word = '';
	    if (hundred > 0) {
	        word += numbersNouns[hundred] + 'vatlh';
	    }
	    if (ten > 0) {
	        word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
	    }
	    if (one > 0) {
	        word += ((word !== '') ? ' ' : '') + numbersNouns[one];
	    }
	    return (word === '') ? 'pagh' : word;
	}
	
	var tlh = moment.defineLocale('tlh', {
	    months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
	    monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	    weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	    weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[DaHjaj] LT',
	        nextDay: '[wa’leS] LT',
	        nextWeek: 'LLL',
	        lastDay: '[wa’Hu’] LT',
	        lastWeek: 'LLL',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : translateFuture,
	        past : translatePast,
	        s : 'puS lup',
	        ss : translate,
	        m : 'wa’ tup',
	        mm : translate,
	        h : 'wa’ rep',
	        hh : translate,
	        d : 'wa’ jaj',
	        dd : translate,
	        M : 'wa’ jar',
	        MM : translate,
	        y : 'wa’ DIS',
	        yy : translate
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return tlh;
	
	})));


/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Turkish [tr]
	//! authors : Erhan Gundogan : https://github.com/erhangundogan,
	//!           Burak Yiğit Kaya: https://github.com/BYK
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var suffixes = {
	    1: '\'inci',
	    5: '\'inci',
	    8: '\'inci',
	    70: '\'inci',
	    80: '\'inci',
	    2: '\'nci',
	    7: '\'nci',
	    20: '\'nci',
	    50: '\'nci',
	    3: '\'üncü',
	    4: '\'üncü',
	    100: '\'üncü',
	    6: '\'ncı',
	    9: '\'uncu',
	    10: '\'uncu',
	    30: '\'uncu',
	    60: '\'ıncı',
	    90: '\'ıncı'
	};
	
	var tr = moment.defineLocale('tr', {
	    months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
	    monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
	    weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
	    weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
	    weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[bugün saat] LT',
	        nextDay : '[yarın saat] LT',
	        nextWeek : '[gelecek] dddd [saat] LT',
	        lastDay : '[dün] LT',
	        lastWeek : '[geçen] dddd [saat] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s sonra',
	        past : '%s önce',
	        s : 'birkaç saniye',
	        ss : '%d saniye',
	        m : 'bir dakika',
	        mm : '%d dakika',
	        h : 'bir saat',
	        hh : '%d saat',
	        d : 'bir gün',
	        dd : '%d gün',
	        M : 'bir ay',
	        MM : '%d ay',
	        y : 'bir yıl',
	        yy : '%d yıl'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
	    ordinal : function (number) {
	        if (number === 0) {  // special case for zero
	            return number + '\'ıncı';
	        }
	        var a = number % 10,
	            b = number % 100 - a,
	            c = number >= 100 ? 100 : null;
	        return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return tr;
	
	})));


/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Talossan [tzl]
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v
	//! author : Iustì Canun
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	// After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
	// This is currently too difficult (maybe even impossible) to add.
	var tzl = moment.defineLocale('tzl', {
	    months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
	    monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
	    weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
	    weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
	    weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
	    longDateFormat : {
	        LT : 'HH.mm',
	        LTS : 'HH.mm.ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM [dallas] YYYY',
	        LLL : 'D. MMMM [dallas] YYYY HH.mm',
	        LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
	    },
	    meridiemParse: /d\'o|d\'a/i,
	    isPM : function (input) {
	        return 'd\'o' === input.toLowerCase();
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'd\'o' : 'D\'O';
	        } else {
	            return isLower ? 'd\'a' : 'D\'A';
	        }
	    },
	    calendar : {
	        sameDay : '[oxhi à] LT',
	        nextDay : '[demà à] LT',
	        nextWeek : 'dddd [à] LT',
	        lastDay : '[ieiri à] LT',
	        lastWeek : '[sür el] dddd [lasteu à] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'osprei %s',
	        past : 'ja%s',
	        s : processRelativeTime,
	        ss : processRelativeTime,
	        m : processRelativeTime,
	        mm : processRelativeTime,
	        h : processRelativeTime,
	        hh : processRelativeTime,
	        d : processRelativeTime,
	        dd : processRelativeTime,
	        M : processRelativeTime,
	        MM : processRelativeTime,
	        y : processRelativeTime,
	        yy : processRelativeTime
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        's': ['viensas secunds', '\'iensas secunds'],
	        'ss': [number + ' secunds', '' + number + ' secunds'],
	        'm': ['\'n míut', '\'iens míut'],
	        'mm': [number + ' míuts', '' + number + ' míuts'],
	        'h': ['\'n þora', '\'iensa þora'],
	        'hh': [number + ' þoras', '' + number + ' þoras'],
	        'd': ['\'n ziua', '\'iensa ziua'],
	        'dd': [number + ' ziuas', '' + number + ' ziuas'],
	        'M': ['\'n mes', '\'iens mes'],
	        'MM': [number + ' mesen', '' + number + ' mesen'],
	        'y': ['\'n ar', '\'iens ar'],
	        'yy': [number + ' ars', '' + number + ' ars']
	    };
	    return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
	}
	
	return tzl;
	
	})));


/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Central Atlas Tamazight Latin [tzm-latn]
	//! author : Abdel Said : https://github.com/abdelsaid
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var tzmLatn = moment.defineLocale('tzm-latn', {
	    months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	    monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	    weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	    weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	    weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[asdkh g] LT',
	        nextDay: '[aska g] LT',
	        nextWeek: 'dddd [g] LT',
	        lastDay: '[assant g] LT',
	        lastWeek: 'dddd [g] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'dadkh s yan %s',
	        past : 'yan %s',
	        s : 'imik',
	        ss : '%d imik',
	        m : 'minuḍ',
	        mm : '%d minuḍ',
	        h : 'saɛa',
	        hh : '%d tassaɛin',
	        d : 'ass',
	        dd : '%d ossan',
	        M : 'ayowr',
	        MM : '%d iyyirn',
	        y : 'asgas',
	        yy : '%d isgasn'
	    },
	    week : {
	        dow : 6, // Saturday is the first day of the week.
	        doy : 12  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return tzmLatn;
	
	})));


/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Central Atlas Tamazight [tzm]
	//! author : Abdel Said : https://github.com/abdelsaid
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var tzm = moment.defineLocale('tzm', {
	    months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	    monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	    weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	    weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	    weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
	        nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
	        nextWeek: 'dddd [ⴴ] LT',
	        lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
	        lastWeek: 'dddd [ⴴ] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
	        past : 'ⵢⴰⵏ %s',
	        s : 'ⵉⵎⵉⴽ',
	        ss : '%d ⵉⵎⵉⴽ',
	        m : 'ⵎⵉⵏⵓⴺ',
	        mm : '%d ⵎⵉⵏⵓⴺ',
	        h : 'ⵙⴰⵄⴰ',
	        hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
	        d : 'ⴰⵙⵙ',
	        dd : '%d oⵙⵙⴰⵏ',
	        M : 'ⴰⵢoⵓⵔ',
	        MM : '%d ⵉⵢⵢⵉⵔⵏ',
	        y : 'ⴰⵙⴳⴰⵙ',
	        yy : '%d ⵉⵙⴳⴰⵙⵏ'
	    },
	    week : {
	        dow : 6, // Saturday is the first day of the week.
	        doy : 12  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return tzm;
	
	})));


/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Ukrainian [uk]
	//! author : zemlanin : https://github.com/zemlanin
	//! Author : Menelion Elensúle : https://github.com/Oire
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	function plural(word, num) {
	    var forms = word.split('_');
	    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	}
	function relativeTimeWithPlural(number, withoutSuffix, key) {
	    var format = {
	        'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
	        'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
	        'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
	        'dd': 'день_дні_днів',
	        'MM': 'місяць_місяці_місяців',
	        'yy': 'рік_роки_років'
	    };
	    if (key === 'm') {
	        return withoutSuffix ? 'хвилина' : 'хвилину';
	    }
	    else if (key === 'h') {
	        return withoutSuffix ? 'година' : 'годину';
	    }
	    else {
	        return number + ' ' + plural(format[key], +number);
	    }
	}
	function weekdaysCaseReplace(m, format) {
	    var weekdays = {
	        'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
	        'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
	        'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
	    };
	
	    if (!m) {
	        return weekdays['nominative'];
	    }
	
	    var nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
	        'accusative' :
	        ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
	            'genitive' :
	            'nominative');
	    return weekdays[nounCase][m.day()];
	}
	function processHoursFunction(str) {
	    return function () {
	        return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
	    };
	}
	
	var uk = moment.defineLocale('uk', {
	    months : {
	        'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
	        'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
	    },
	    monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
	    weekdays : weekdaysCaseReplace,
	    weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	    weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY р.',
	        LLL : 'D MMMM YYYY р., HH:mm',
	        LLLL : 'dddd, D MMMM YYYY р., HH:mm'
	    },
	    calendar : {
	        sameDay: processHoursFunction('[Сьогодні '),
	        nextDay: processHoursFunction('[Завтра '),
	        lastDay: processHoursFunction('[Вчора '),
	        nextWeek: processHoursFunction('[У] dddd ['),
	        lastWeek: function () {
	            switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return processHoursFunction('[Минулої] dddd [').call(this);
	                case 1:
	                case 2:
	                case 4:
	                    return processHoursFunction('[Минулого] dddd [').call(this);
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'за %s',
	        past : '%s тому',
	        s : 'декілька секунд',
	        ss : relativeTimeWithPlural,
	        m : relativeTimeWithPlural,
	        mm : relativeTimeWithPlural,
	        h : 'годину',
	        hh : relativeTimeWithPlural,
	        d : 'день',
	        dd : relativeTimeWithPlural,
	        M : 'місяць',
	        MM : relativeTimeWithPlural,
	        y : 'рік',
	        yy : relativeTimeWithPlural
	    },
	    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
	    meridiemParse: /ночі|ранку|дня|вечора/,
	    isPM: function (input) {
	        return /^(дня|вечора)$/.test(input);
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'ночі';
	        } else if (hour < 12) {
	            return 'ранку';
	        } else if (hour < 17) {
	            return 'дня';
	        } else {
	            return 'вечора';
	        }
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
	    ordinal: function (number, period) {
	        switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            default:
	                return number;
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return uk;
	
	})));


/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Urdu [ur]
	//! author : Sawood Alam : https://github.com/ibnesayeed
	//! author : Zack : https://github.com/ZackVision
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var months = [
	    'جنوری',
	    'فروری',
	    'مارچ',
	    'اپریل',
	    'مئی',
	    'جون',
	    'جولائی',
	    'اگست',
	    'ستمبر',
	    'اکتوبر',
	    'نومبر',
	    'دسمبر'
	];
	var days = [
	    'اتوار',
	    'پیر',
	    'منگل',
	    'بدھ',
	    'جمعرات',
	    'جمعہ',
	    'ہفتہ'
	];
	
	var ur = moment.defineLocale('ur', {
	    months : months,
	    monthsShort : months,
	    weekdays : days,
	    weekdaysShort : days,
	    weekdaysMin : days,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd، D MMMM YYYY HH:mm'
	    },
	    meridiemParse: /صبح|شام/,
	    isPM : function (input) {
	        return 'شام' === input;
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'صبح';
	        }
	        return 'شام';
	    },
	    calendar : {
	        sameDay : '[آج بوقت] LT',
	        nextDay : '[کل بوقت] LT',
	        nextWeek : 'dddd [بوقت] LT',
	        lastDay : '[گذشتہ روز بوقت] LT',
	        lastWeek : '[گذشتہ] dddd [بوقت] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s بعد',
	        past : '%s قبل',
	        s : 'چند سیکنڈ',
	        ss : '%d سیکنڈ',
	        m : 'ایک منٹ',
	        mm : '%d منٹ',
	        h : 'ایک گھنٹہ',
	        hh : '%d گھنٹے',
	        d : 'ایک دن',
	        dd : '%d دن',
	        M : 'ایک ماہ',
	        MM : '%d ماہ',
	        y : 'ایک سال',
	        yy : '%d سال'
	    },
	    preparse: function (string) {
	        return string.replace(/،/g, ',');
	    },
	    postformat: function (string) {
	        return string.replace(/,/g, '،');
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return ur;
	
	})));


/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Uzbek Latin [uz-latn]
	//! author : Rasulbek Mirzayev : github.com/Rasulbeeek
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var uzLatn = moment.defineLocale('uz-latn', {
	    months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
	    monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
	    weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
	    weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
	    weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'D MMMM YYYY, dddd HH:mm'
	    },
	    calendar : {
	        sameDay : '[Bugun soat] LT [da]',
	        nextDay : '[Ertaga] LT [da]',
	        nextWeek : 'dddd [kuni soat] LT [da]',
	        lastDay : '[Kecha soat] LT [da]',
	        lastWeek : '[O\'tgan] dddd [kuni soat] LT [da]',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'Yaqin %s ichida',
	        past : 'Bir necha %s oldin',
	        s : 'soniya',
	        ss : '%d soniya',
	        m : 'bir daqiqa',
	        mm : '%d daqiqa',
	        h : 'bir soat',
	        hh : '%d soat',
	        d : 'bir kun',
	        dd : '%d kun',
	        M : 'bir oy',
	        MM : '%d oy',
	        y : 'bir yil',
	        yy : '%d yil'
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});
	
	return uzLatn;
	
	})));


/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Uzbek [uz]
	//! author : Sardor Muminov : https://github.com/muminoff
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var uz = moment.defineLocale('uz', {
	    months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
	    monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
	    weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
	    weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
	    weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'D MMMM YYYY, dddd HH:mm'
	    },
	    calendar : {
	        sameDay : '[Бугун соат] LT [да]',
	        nextDay : '[Эртага] LT [да]',
	        nextWeek : 'dddd [куни соат] LT [да]',
	        lastDay : '[Кеча соат] LT [да]',
	        lastWeek : '[Утган] dddd [куни соат] LT [да]',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'Якин %s ичида',
	        past : 'Бир неча %s олдин',
	        s : 'фурсат',
	        ss : '%d фурсат',
	        m : 'бир дакика',
	        mm : '%d дакика',
	        h : 'бир соат',
	        hh : '%d соат',
	        d : 'бир кун',
	        dd : '%d кун',
	        M : 'бир ой',
	        MM : '%d ой',
	        y : 'бир йил',
	        yy : '%d йил'
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return uz;
	
	})));


/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Vietnamese [vi]
	//! author : Bang Nguyen : https://github.com/bangnk
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var vi = moment.defineLocale('vi', {
	    months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
	    monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
	    weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	    weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	    weekdaysParseExact : true,
	    meridiemParse: /sa|ch/i,
	    isPM : function (input) {
	        return /^ch$/i.test(input);
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 12) {
	            return isLower ? 'sa' : 'SA';
	        } else {
	            return isLower ? 'ch' : 'CH';
	        }
	    },
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM [năm] YYYY',
	        LLL : 'D MMMM [năm] YYYY HH:mm',
	        LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
	        l : 'DD/M/YYYY',
	        ll : 'D MMM YYYY',
	        lll : 'D MMM YYYY HH:mm',
	        llll : 'ddd, D MMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Hôm nay lúc] LT',
	        nextDay: '[Ngày mai lúc] LT',
	        nextWeek: 'dddd [tuần tới lúc] LT',
	        lastDay: '[Hôm qua lúc] LT',
	        lastWeek: 'dddd [tuần rồi lúc] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : '%s tới',
	        past : '%s trước',
	        s : 'vài giây',
	        ss : '%d giây' ,
	        m : 'một phút',
	        mm : '%d phút',
	        h : 'một giờ',
	        hh : '%d giờ',
	        d : 'một ngày',
	        dd : '%d ngày',
	        M : 'một tháng',
	        MM : '%d tháng',
	        y : 'một năm',
	        yy : '%d năm'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}/,
	    ordinal : function (number) {
	        return number;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return vi;
	
	})));


/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Pseudo [x-pseudo]
	//! author : Andrew Hood : https://github.com/andrewhood125
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var xPseudo = moment.defineLocale('x-pseudo', {
	    months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
	    monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
	    weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
	    weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[T~ódá~ý át] LT',
	        nextDay : '[T~ómó~rró~w át] LT',
	        nextWeek : 'dddd [át] LT',
	        lastDay : '[Ý~ést~érdá~ý át] LT',
	        lastWeek : '[L~ást] dddd [át] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'í~ñ %s',
	        past : '%s á~gó',
	        s : 'á ~féw ~sécó~ñds',
	        ss : '%d s~écóñ~ds',
	        m : 'á ~míñ~úté',
	        mm : '%d m~íñú~tés',
	        h : 'á~ñ hó~úr',
	        hh : '%d h~óúrs',
	        d : 'á ~dáý',
	        dd : '%d d~áýs',
	        M : 'á ~móñ~th',
	        MM : '%d m~óñt~hs',
	        y : 'á ~ýéár',
	        yy : '%d ý~éárs'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return xPseudo;
	
	})));


/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Yoruba Nigeria [yo]
	//! author : Atolagbe Abisoye : https://github.com/andela-batolagbe
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var yo = moment.defineLocale('yo', {
	    months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
	    monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
	    weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
	    weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
	    weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY h:mm A',
	        LLLL : 'dddd, D MMMM YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[Ònì ni] LT',
	        nextDay : '[Ọ̀la ni] LT',
	        nextWeek : 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
	        lastDay : '[Àna ni] LT',
	        lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'ní %s',
	        past : '%s kọjá',
	        s : 'ìsẹjú aayá die',
	        ss :'aayá %d',
	        m : 'ìsẹjú kan',
	        mm : 'ìsẹjú %d',
	        h : 'wákati kan',
	        hh : 'wákati %d',
	        d : 'ọjọ́ kan',
	        dd : 'ọjọ́ %d',
	        M : 'osù kan',
	        MM : 'osù %d',
	        y : 'ọdún kan',
	        yy : 'ọdún %d'
	    },
	    dayOfMonthOrdinalParse : /ọjọ́\s\d{1,2}/,
	    ordinal : 'ọjọ́ %d',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4 // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return yo;
	
	})));


/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Chinese (China) [zh-cn]
	//! author : suupic : https://github.com/suupic
	//! author : Zeno Zeng : https://github.com/zenozeng
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var zhCn = moment.defineLocale('zh-cn', {
	    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	    weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
	    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY/MM/DD',
	        LL : 'YYYY年M月D日',
	        LLL : 'YYYY年M月D日Ah点mm分',
	        LLLL : 'YYYY年M月D日ddddAh点mm分',
	        l : 'YYYY/M/D',
	        ll : 'YYYY年M月D日',
	        lll : 'YYYY年M月D日 HH:mm',
	        llll : 'YYYY年M月D日dddd HH:mm'
	    },
	    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	    meridiemHour: function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === '凌晨' || meridiem === '早上' ||
	                meridiem === '上午') {
	            return hour;
	        } else if (meridiem === '下午' || meridiem === '晚上') {
	            return hour + 12;
	        } else {
	            // '中午'
	            return hour >= 11 ? hour : hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        var hm = hour * 100 + minute;
	        if (hm < 600) {
	            return '凌晨';
	        } else if (hm < 900) {
	            return '早上';
	        } else if (hm < 1130) {
	            return '上午';
	        } else if (hm < 1230) {
	            return '中午';
	        } else if (hm < 1800) {
	            return '下午';
	        } else {
	            return '晚上';
	        }
	    },
	    calendar : {
	        sameDay : '[今天]LT',
	        nextDay : '[明天]LT',
	        nextWeek : '[下]ddddLT',
	        lastDay : '[昨天]LT',
	        lastWeek : '[上]ddddLT',
	        sameElse : 'L'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            case 'M':
	                return number + '月';
	            case 'w':
	            case 'W':
	                return number + '周';
	            default:
	                return number;
	        }
	    },
	    relativeTime : {
	        future : '%s内',
	        past : '%s前',
	        s : '几秒',
	        ss : '%d 秒',
	        m : '1 分钟',
	        mm : '%d 分钟',
	        h : '1 小时',
	        hh : '%d 小时',
	        d : '1 天',
	        dd : '%d 天',
	        M : '1 个月',
	        MM : '%d 个月',
	        y : '1 年',
	        yy : '%d 年'
	    },
	    week : {
	        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});
	
	return zhCn;
	
	})));


/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Chinese (Hong Kong) [zh-hk]
	//! author : Ben : https://github.com/ben-lin
	//! author : Chris Lam : https://github.com/hehachris
	//! author : Konstantin : https://github.com/skfd
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var zhHk = moment.defineLocale('zh-hk', {
	    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	    weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY/MM/DD',
	        LL : 'YYYY年M月D日',
	        LLL : 'YYYY年M月D日 HH:mm',
	        LLLL : 'YYYY年M月D日dddd HH:mm',
	        l : 'YYYY/M/D',
	        ll : 'YYYY年M月D日',
	        lll : 'YYYY年M月D日 HH:mm',
	        llll : 'YYYY年M月D日dddd HH:mm'
	    },
	    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
	            return hour;
	        } else if (meridiem === '中午') {
	            return hour >= 11 ? hour : hour + 12;
	        } else if (meridiem === '下午' || meridiem === '晚上') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        var hm = hour * 100 + minute;
	        if (hm < 600) {
	            return '凌晨';
	        } else if (hm < 900) {
	            return '早上';
	        } else if (hm < 1130) {
	            return '上午';
	        } else if (hm < 1230) {
	            return '中午';
	        } else if (hm < 1800) {
	            return '下午';
	        } else {
	            return '晚上';
	        }
	    },
	    calendar : {
	        sameDay : '[今天]LT',
	        nextDay : '[明天]LT',
	        nextWeek : '[下]ddddLT',
	        lastDay : '[昨天]LT',
	        lastWeek : '[上]ddddLT',
	        sameElse : 'L'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            case 'd' :
	            case 'D' :
	            case 'DDD' :
	                return number + '日';
	            case 'M' :
	                return number + '月';
	            case 'w' :
	            case 'W' :
	                return number + '週';
	            default :
	                return number;
	        }
	    },
	    relativeTime : {
	        future : '%s內',
	        past : '%s前',
	        s : '幾秒',
	        ss : '%d 秒',
	        m : '1 分鐘',
	        mm : '%d 分鐘',
	        h : '1 小時',
	        hh : '%d 小時',
	        d : '1 天',
	        dd : '%d 天',
	        M : '1 個月',
	        MM : '%d 個月',
	        y : '1 年',
	        yy : '%d 年'
	    }
	});
	
	return zhHk;
	
	})));


/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Chinese (Taiwan) [zh-tw]
	//! author : Ben : https://github.com/ben-lin
	//! author : Chris Lam : https://github.com/hehachris
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(1)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	var zhTw = moment.defineLocale('zh-tw', {
	    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	    weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY/MM/DD',
	        LL : 'YYYY年M月D日',
	        LLL : 'YYYY年M月D日 HH:mm',
	        LLLL : 'YYYY年M月D日dddd HH:mm',
	        l : 'YYYY/M/D',
	        ll : 'YYYY年M月D日',
	        lll : 'YYYY年M月D日 HH:mm',
	        llll : 'YYYY年M月D日dddd HH:mm'
	    },
	    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
	            return hour;
	        } else if (meridiem === '中午') {
	            return hour >= 11 ? hour : hour + 12;
	        } else if (meridiem === '下午' || meridiem === '晚上') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        var hm = hour * 100 + minute;
	        if (hm < 600) {
	            return '凌晨';
	        } else if (hm < 900) {
	            return '早上';
	        } else if (hm < 1130) {
	            return '上午';
	        } else if (hm < 1230) {
	            return '中午';
	        } else if (hm < 1800) {
	            return '下午';
	        } else {
	            return '晚上';
	        }
	    },
	    calendar : {
	        sameDay : '[今天]LT',
	        nextDay : '[明天]LT',
	        nextWeek : '[下]ddddLT',
	        lastDay : '[昨天]LT',
	        lastWeek : '[上]ddddLT',
	        sameElse : 'L'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            case 'd' :
	            case 'D' :
	            case 'DDD' :
	                return number + '日';
	            case 'M' :
	                return number + '月';
	            case 'w' :
	            case 'W' :
	                return number + '週';
	            default :
	                return number;
	        }
	    },
	    relativeTime : {
	        future : '%s內',
	        past : '%s前',
	        s : '幾秒',
	        ss : '%d 秒',
	        m : '1 分鐘',
	        mm : '%d 分鐘',
	        h : '1 小時',
	        hh : '%d 小時',
	        d : '1 天',
	        dd : '%d 天',
	        M : '1 個月',
	        MM : '%d 個月',
	        y : '1 年',
	        yy : '%d 年'
	    }
	});
	
	return zhTw;
	
	})));


/***/ },
/* 279 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;
	
	process.listeners = function (name) { return [] }
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var asap = __webpack_require__(329);
	
	function noop() {}
	
	// States:
	//
	// 0 - pending
	// 1 - fulfilled with _value
	// 2 - rejected with _value
	// 3 - adopted the state of another promise, _value
	//
	// once the state is no longer pending (0) it is immutable
	
	// All `_` prefixed properties will be reduced to `_{random number}`
	// at build time to obfuscate them and discourage their use.
	// We don't use symbols or Object.defineProperty to fully hide them
	// because the performance isn't good enough.
	
	
	// to avoid using try/catch inside critical functions, we
	// extract them to here.
	var LAST_ERROR = null;
	var IS_ERROR = {};
	function getThen(obj) {
	  try {
	    return obj.then;
	  } catch (ex) {
	    LAST_ERROR = ex;
	    return IS_ERROR;
	  }
	}
	
	function tryCallOne(fn, a) {
	  try {
	    return fn(a);
	  } catch (ex) {
	    LAST_ERROR = ex;
	    return IS_ERROR;
	  }
	}
	function tryCallTwo(fn, a, b) {
	  try {
	    fn(a, b);
	  } catch (ex) {
	    LAST_ERROR = ex;
	    return IS_ERROR;
	  }
	}
	
	module.exports = Promise;
	
	function Promise(fn) {
	  if (typeof this !== 'object') {
	    throw new TypeError('Promises must be constructed via new');
	  }
	  if (typeof fn !== 'function') {
	    throw new TypeError('not a function');
	  }
	  this._45 = 0;
	  this._81 = 0;
	  this._65 = null;
	  this._54 = null;
	  if (fn === noop) return;
	  doResolve(fn, this);
	}
	Promise._10 = null;
	Promise._97 = null;
	Promise._61 = noop;
	
	Promise.prototype.then = function(onFulfilled, onRejected) {
	  if (this.constructor !== Promise) {
	    return safeThen(this, onFulfilled, onRejected);
	  }
	  var res = new Promise(noop);
	  handle(this, new Handler(onFulfilled, onRejected, res));
	  return res;
	};
	
	function safeThen(self, onFulfilled, onRejected) {
	  return new self.constructor(function (resolve, reject) {
	    var res = new Promise(noop);
	    res.then(resolve, reject);
	    handle(self, new Handler(onFulfilled, onRejected, res));
	  });
	};
	function handle(self, deferred) {
	  while (self._81 === 3) {
	    self = self._65;
	  }
	  if (Promise._10) {
	    Promise._10(self);
	  }
	  if (self._81 === 0) {
	    if (self._45 === 0) {
	      self._45 = 1;
	      self._54 = deferred;
	      return;
	    }
	    if (self._45 === 1) {
	      self._45 = 2;
	      self._54 = [self._54, deferred];
	      return;
	    }
	    self._54.push(deferred);
	    return;
	  }
	  handleResolved(self, deferred);
	}
	
	function handleResolved(self, deferred) {
	  asap(function() {
	    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;
	    if (cb === null) {
	      if (self._81 === 1) {
	        resolve(deferred.promise, self._65);
	      } else {
	        reject(deferred.promise, self._65);
	      }
	      return;
	    }
	    var ret = tryCallOne(cb, self._65);
	    if (ret === IS_ERROR) {
	      reject(deferred.promise, LAST_ERROR);
	    } else {
	      resolve(deferred.promise, ret);
	    }
	  });
	}
	function resolve(self, newValue) {
	  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
	  if (newValue === self) {
	    return reject(
	      self,
	      new TypeError('A promise cannot be resolved with itself.')
	    );
	  }
	  if (
	    newValue &&
	    (typeof newValue === 'object' || typeof newValue === 'function')
	  ) {
	    var then = getThen(newValue);
	    if (then === IS_ERROR) {
	      return reject(self, LAST_ERROR);
	    }
	    if (
	      then === self.then &&
	      newValue instanceof Promise
	    ) {
	      self._81 = 3;
	      self._65 = newValue;
	      finale(self);
	      return;
	    } else if (typeof then === 'function') {
	      doResolve(then.bind(newValue), self);
	      return;
	    }
	  }
	  self._81 = 1;
	  self._65 = newValue;
	  finale(self);
	}
	
	function reject(self, newValue) {
	  self._81 = 2;
	  self._65 = newValue;
	  if (Promise._97) {
	    Promise._97(self, newValue);
	  }
	  finale(self);
	}
	function finale(self) {
	  if (self._45 === 1) {
	    handle(self, self._54);
	    self._54 = null;
	  }
	  if (self._45 === 2) {
	    for (var i = 0; i < self._54.length; i++) {
	      handle(self, self._54[i]);
	    }
	    self._54 = null;
	  }
	}
	
	function Handler(onFulfilled, onRejected, promise){
	  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
	  this.onRejected = typeof onRejected === 'function' ? onRejected : null;
	  this.promise = promise;
	}
	
	/**
	 * Take a potentially misbehaving resolver function and make sure
	 * onFulfilled and onRejected are only called once.
	 *
	 * Makes no guarantees about asynchrony.
	 */
	function doResolve(fn, promise) {
	  var done = false;
	  var res = tryCallTwo(fn, function (value) {
	    if (done) return;
	    done = true;
	    resolve(promise, value);
	  }, function (reason) {
	    if (done) return;
	    done = true;
	    reject(promise, reason);
	  })
	  if (!done && res === IS_ERROR) {
	    done = true;
	    reject(promise, LAST_ERROR);
	  }
	}


/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	if (false) {
	  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
	    Symbol.for &&
	    Symbol.for('react.element')) ||
	    0xeac7;
	
	  var isValidElement = function(object) {
	    return typeof object === 'object' &&
	      object !== null &&
	      object.$$typeof === REACT_ELEMENT_TYPE;
	  };
	
	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = __webpack_require__(540)();
	}


/***/ },
/* 282 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var PooledClass = __webpack_require__(36);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	
	var CallbackQueue = function () {
	  function CallbackQueue(arg) {
	    _classCallCheck(this, CallbackQueue);
	
	    this._callbacks = null;
	    this._contexts = null;
	    this._arg = arg;
	  }
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._callbacks.push(callback);
	    this._contexts = this._contexts || [];
	    this._contexts.push(context);
	  };
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.notifyAll = function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    var arg = this._arg;
	    if (callbacks && contexts) {
	      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i], arg);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  };
	
	  CallbackQueue.prototype.checkpoint = function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  };
	
	  CallbackQueue.prototype.rollback = function rollback(len) {
	    if (this._callbacks && this._contexts) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  };
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.reset = function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  };
	
	  /**
	   * `PooledClass` looks for this.
	   */
	
	
	  CallbackQueue.prototype.destructor = function destructor() {
	    this.reset();
	  };
	
	  return CallbackQueue;
	}();
	
	module.exports = PooledClass.addPoolingTo(CallbackQueue);

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(44);
	var ReactDOMComponentTree = __webpack_require__(15);
	var ReactInstrumentation = __webpack_require__(25);
	
	var quoteAttributeValueForBrowser = __webpack_require__(606);
	var warning = __webpack_require__(11);
	
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },
	
	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }
	
	    if (false) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },
	
	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	
	    if (false) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },
	
	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }
	
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  }
	
	};
	
	module.exports = DOMPropertyOperations;

/***/ },
/* 285 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};
	
	module.exports = ReactDOMComponentFlags;

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(14);
	
	var LinkedValueUtils = __webpack_require__(107);
	var ReactDOMComponentTree = __webpack_require__(15);
	var ReactUpdates = __webpack_require__(26);
	
	var warning = __webpack_require__(11);
	
	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  if (props.valueLink !== undefined && !didWarnValueLink) {
	     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	       false ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	       false ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function (inst, props) {
	    if (false) {
	      checkSelectPropTypes(inst, props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },
	
	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },
	
	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;

/***/ },
/* 287 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyComponentFactory;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};
	
	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ },
/* 288 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};
	
	module.exports = ReactFeatureFlags;

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(8);
	
	var genericComponentClass = null;
	var textComponentClass = null;
	
	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  }
	};
	
	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};
	
	module.exports = ReactHostComponent;

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(565);
	
	var containsNode = __webpack_require__(508);
	var focusNode = __webpack_require__(152);
	var getActiveElement = __webpack_require__(153);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var DOMLazyTree = __webpack_require__(43);
	var DOMProperty = __webpack_require__(44);
	var React = __webpack_require__(48);
	var ReactBrowserEventEmitter = __webpack_require__(75);
	var ReactCurrentOwner = __webpack_require__(28);
	var ReactDOMComponentTree = __webpack_require__(15);
	var ReactDOMContainerInfo = __webpack_require__(559);
	var ReactDOMFeatureFlags = __webpack_require__(561);
	var ReactFeatureFlags = __webpack_require__(288);
	var ReactInstanceMap = __webpack_require__(60);
	var ReactInstrumentation = __webpack_require__(25);
	var ReactMarkupChecksum = __webpack_require__(575);
	var ReactReconciler = __webpack_require__(45);
	var ReactUpdateQueue = __webpack_require__(110);
	var ReactUpdates = __webpack_require__(26);
	
	var emptyObject = __webpack_require__(57);
	var instantiateReactComponent = __webpack_require__(298);
	var invariant = __webpack_require__(8);
	var setInnerHTML = __webpack_require__(79);
	var shouldUpdateReactComponent = __webpack_require__(116);
	var warning = __webpack_require__(11);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var instancesByReactRootID = {};
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props.child;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }
	
	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );
	
	  if (markerName) {
	    console.timeEnd(markerName);
	  }
	
	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (false) {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (false) {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}
	
	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}
	
	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}
	
	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}
	
	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}
	
	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (false) {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  return this.props.child;
	};
	TopLevelWrapper.isReactTopLevelWrapper = true;
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    return prevComponent;
	  },
	
	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
	
	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !React.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
	
	     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	
	    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });
	
	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props.child;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
	
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
	
	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }
	
	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },
	
	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (false) {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
	
	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }
	
	    if (false) {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: hostNode._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  }
	};
	
	module.exports = ReactMount;

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var React = __webpack_require__(48);
	
	var invariant = __webpack_require__(8);
	
	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,
	
	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (React.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};
	
	module.exports = ReactNodeTypes;

/***/ },
/* 293 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
	
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }
	
	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;

/***/ },
/* 295 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	
	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}
	
	module.exports = forEachAccumulated;

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactNodeTypes = __webpack_require__(292);
	
	function getHostComponentFromComposite(inst) {
	  var type;
	
	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }
	
	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}
	
	module.exports = getHostComponentFromComposite;

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(17);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(14);
	
	var ReactCompositeComponent = __webpack_require__(556);
	var ReactEmptyComponent = __webpack_require__(287);
	var ReactHostComponent = __webpack_require__(289);
	
	var getNextDebugID = __webpack_require__(603);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;
	
	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    var type = element.type;
	    if (typeof type !== 'function' && typeof type !== 'string') {
	      var info = '';
	      if (false) {
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
	        }
	      }
	      info += getDeclarationErrorAddendum(element._owner);
	       true ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
	    }
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	
	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }
	
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (false) {
	    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (false) {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	module.exports = instantiateReactComponent;

/***/ },
/* 299 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	
	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }
	
	  if (nodeName === 'textarea') {
	    return true;
	  }
	
	  return false;
	}
	
	module.exports = isTextInputElement;

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(17);
	var escapeTextContentForBrowser = __webpack_require__(78);
	var setInnerHTML = __webpack_require__(79);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;
	
	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      if (node.nodeType === 3) {
	        node.nodeValue = text;
	        return;
	      }
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactCurrentOwner = __webpack_require__(28);
	var REACT_ELEMENT_TYPE = __webpack_require__(571);
	
	var getIteratorFn = __webpack_require__(602);
	var invariant = __webpack_require__(8);
	var KeyEscapeUtils = __webpack_require__(106);
	var warning = __webpack_require__(11);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (false) {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (false) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = connectAdvanced;
	
	var _hoistNonReactStatics = __webpack_require__(157);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(2);
	
	var _Subscription = __webpack_require__(615);
	
	var _Subscription2 = _interopRequireDefault(_Subscription);
	
	var _PropTypes = __webpack_require__(304);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var hotReloadingVersion = 0;
	var dummyState = {};
	function noop() {}
	function makeSelectorStateful(sourceSelector, store) {
	  // wrap the selector in an object that tracks its results between runs.
	  var selector = {
	    run: function runComponentSelector(props) {
	      try {
	        var nextProps = sourceSelector(store.getState(), props);
	        if (nextProps !== selector.props || selector.error) {
	          selector.shouldComponentUpdate = true;
	          selector.props = nextProps;
	          selector.error = null;
	        }
	      } catch (error) {
	        selector.shouldComponentUpdate = true;
	        selector.error = error;
	      }
	    }
	  };
	
	  return selector;
	}
	
	function connectAdvanced(
	/*
	  selectorFactory is a func that is responsible for returning the selector function used to
	  compute new props from state, props, and dispatch. For example:
	     export default connectAdvanced((dispatch, options) => (state, props) => ({
	      thing: state.things[props.thingId],
	      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
	    }))(YourComponent)
	   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
	  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
	  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
	   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
	  props. Do not use connectAdvanced directly without memoizing results between calls to your
	  selector, otherwise the Connect component will re-render on every state or props change.
	*/
	selectorFactory) {
	  var _contextTypes, _childContextTypes;
	
	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref$getDisplayName = _ref.getDisplayName,
	      getDisplayName = _ref$getDisplayName === undefined ? function (name) {
	    return 'ConnectAdvanced(' + name + ')';
	  } : _ref$getDisplayName,
	      _ref$methodName = _ref.methodName,
	      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,
	      _ref$renderCountProp = _ref.renderCountProp,
	      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,
	      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
	      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,
	      _ref$storeKey = _ref.storeKey,
	      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
	      _ref$withRef = _ref.withRef,
	      withRef = _ref$withRef === undefined ? false : _ref$withRef,
	      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);
	
	  var subscriptionKey = storeKey + 'Subscription';
	  var version = hotReloadingVersion++;
	
	  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _PropTypes.storeShape, _contextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _contextTypes);
	  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _childContextTypes);
	
	  return function wrapWithConnect(WrappedComponent) {
	    (0, _invariant2.default)(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + ('connect. Instead received ' + JSON.stringify(WrappedComponent)));
	
	    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
	
	    var displayName = getDisplayName(wrappedComponentName);
	
	    var selectorFactoryOptions = _extends({}, connectOptions, {
	      getDisplayName: getDisplayName,
	      methodName: methodName,
	      renderCountProp: renderCountProp,
	      shouldHandleStateChanges: shouldHandleStateChanges,
	      storeKey: storeKey,
	      withRef: withRef,
	      displayName: displayName,
	      wrappedComponentName: wrappedComponentName,
	      WrappedComponent: WrappedComponent
	    });
	
	    var Connect = function (_Component) {
	      _inherits(Connect, _Component);
	
	      function Connect(props, context) {
	        _classCallCheck(this, Connect);
	
	        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
	
	        _this.version = version;
	        _this.state = {};
	        _this.renderCount = 0;
	        _this.store = props[storeKey] || context[storeKey];
	        _this.propsMode = Boolean(props[storeKey]);
	        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);
	
	        (0, _invariant2.default)(_this.store, 'Could not find "' + storeKey + '" in either the context or props of ' + ('"' + displayName + '". Either wrap the root component in a <Provider>, ') + ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".'));
	
	        _this.initSelector();
	        _this.initSubscription();
	        return _this;
	      }
	
	      Connect.prototype.getChildContext = function getChildContext() {
	        var _ref2;
	
	        // If this component received store from props, its subscription should be transparent
	        // to any descendants receiving store+subscription from context; it passes along
	        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows
	        // Connect to control ordering of notifications to flow top-down.
	        var subscription = this.propsMode ? null : this.subscription;
	        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;
	      };
	
	      Connect.prototype.componentDidMount = function componentDidMount() {
	        if (!shouldHandleStateChanges) return;
	
	        // componentWillMount fires during server side rendering, but componentDidMount and
	        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
	        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
	        // To handle the case where a child component may have triggered a state change by
	        // dispatching an action in its componentWillMount, we have to re-run the select and maybe
	        // re-render.
	        this.subscription.trySubscribe();
	        this.selector.run(this.props);
	        if (this.selector.shouldComponentUpdate) this.forceUpdate();
	      };
	
	      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        this.selector.run(nextProps);
	      };
	
	      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
	        return this.selector.shouldComponentUpdate;
	      };
	
	      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
	        if (this.subscription) this.subscription.tryUnsubscribe();
	        this.subscription = null;
	        this.notifyNestedSubs = noop;
	        this.store = null;
	        this.selector.run = noop;
	        this.selector.shouldComponentUpdate = false;
	      };
	
	      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
	        (0, _invariant2.default)(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));
	        return this.wrappedInstance;
	      };
	
	      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
	        this.wrappedInstance = ref;
	      };
	
	      Connect.prototype.initSelector = function initSelector() {
	        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
	        this.selector = makeSelectorStateful(sourceSelector, this.store);
	        this.selector.run(this.props);
	      };
	
	      Connect.prototype.initSubscription = function initSubscription() {
	        if (!shouldHandleStateChanges) return;
	
	        // parentSub's source should match where store came from: props vs. context. A component
	        // connected to the store via props shouldn't use subscription from context, or vice versa.
	        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
	        this.subscription = new _Subscription2.default(this.store, parentSub, this.onStateChange.bind(this));
	
	        // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in
	        // the middle of the notification loop, where `this.subscription` will then be null. An
	        // extra null check every change can be avoided by copying the method onto `this` and then
	        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's
	        // listeners logic is changed to not call listeners that have been unsubscribed in the
	        // middle of the notification loop.
	        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
	      };
	
	      Connect.prototype.onStateChange = function onStateChange() {
	        this.selector.run(this.props);
	
	        if (!this.selector.shouldComponentUpdate) {
	          this.notifyNestedSubs();
	        } else {
	          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
	          this.setState(dummyState);
	        }
	      };
	
	      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
	        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it
	        // needs to notify nested subs. Once called, it unimplements itself until further state
	        // changes occur. Doing it this way vs having a permanent `componentDidMount` that does
	        // a boolean check every time avoids an extra method call most of the time, resulting
	        // in some perf boost.
	        this.componentDidUpdate = undefined;
	        this.notifyNestedSubs();
	      };
	
	      Connect.prototype.isSubscribed = function isSubscribed() {
	        return Boolean(this.subscription) && this.subscription.isSubscribed();
	      };
	
	      Connect.prototype.addExtraProps = function addExtraProps(props) {
	        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;
	        // make a shallow copy so that fields added don't leak to the original selector.
	        // this is especially important for 'ref' since that's a reference back to the component
	        // instance. a singleton memoized selector would then be holding a reference to the
	        // instance, preventing the instance from being garbage collected, and that would be bad
	        var withExtras = _extends({}, props);
	        if (withRef) withExtras.ref = this.setWrappedInstance;
	        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
	        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
	        return withExtras;
	      };
	
	      Connect.prototype.render = function render() {
	        var selector = this.selector;
	        selector.shouldComponentUpdate = false;
	
	        if (selector.error) {
	          throw selector.error;
	        } else {
	          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));
	        }
	      };
	
	      return Connect;
	    }(_react.Component);
	
	    Connect.WrappedComponent = WrappedComponent;
	    Connect.displayName = displayName;
	    Connect.childContextTypes = childContextTypes;
	    Connect.contextTypes = contextTypes;
	    Connect.propTypes = contextTypes;
	
	    if (false) {
	      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
	        // We are hot reloading!
	        if (this.version !== version) {
	          this.version = version;
	          this.initSelector();
	
	          if (this.subscription) this.subscription.tryUnsubscribe();
	          this.initSubscription();
	          if (shouldHandleStateChanges) this.subscription.trySubscribe();
	        }
	      };
	    }
	
	    return (0, _hoistNonReactStatics2.default)(Connect, WrappedComponent);
	  };
	}

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.wrapMapToPropsConstant = wrapMapToPropsConstant;
	exports.getDependsOnOwnProps = getDependsOnOwnProps;
	exports.wrapMapToPropsFunc = wrapMapToPropsFunc;
	
	var _verifyPlainObject = __webpack_require__(305);
	
	var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function wrapMapToPropsConstant(getConstant) {
	  return function initConstantSelector(dispatch, options) {
	    var constant = getConstant(dispatch, options);
	
	    function constantSelector() {
	      return constant;
	    }
	    constantSelector.dependsOnOwnProps = false;
	    return constantSelector;
	  };
	}
	
	// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
	// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
	// whether mapToProps needs to be invoked when props have changed.
	// 
	// A length of one signals that mapToProps does not depend on props from the parent component.
	// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
	// therefore not reporting its length accurately..
	function getDependsOnOwnProps(mapToProps) {
	  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
	}
	
	// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
	// this function wraps mapToProps in a proxy function which does several things:
	// 
	//  * Detects whether the mapToProps function being called depends on props, which
	//    is used by selectorFactory to decide if it should reinvoke on props changes.
	//    
	//  * On first call, handles mapToProps if returns another function, and treats that
	//    new function as the true mapToProps for subsequent calls.
	//    
	//  * On first call, verifies the first result is a plain object, in order to warn
	//    the developer that their mapToProps function is not returning a valid result.
	//    
	function wrapMapToPropsFunc(mapToProps, methodName) {
	  return function initProxySelector(dispatch, _ref) {
	    var displayName = _ref.displayName;
	
	    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
	      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
	    };
	
	    // allow detectFactoryAndVerify to get ownProps
	    proxy.dependsOnOwnProps = true;
	
	    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
	      proxy.mapToProps = mapToProps;
	      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
	      var props = proxy(stateOrDispatch, ownProps);
	
	      if (typeof props === 'function') {
	        proxy.mapToProps = props;
	        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
	        props = proxy(stateOrDispatch, ownProps);
	      }
	
	      if (false) (0, _verifyPlainObject2.default)(props, displayName, methodName);
	
	      return props;
	    };
	
	    return proxy;
	  };
	}

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.storeShape = exports.subscriptionShape = undefined;
	
	var _react = __webpack_require__(2);
	
	var subscriptionShape = exports.subscriptionShape = _react.PropTypes.shape({
	  trySubscribe: _react.PropTypes.func.isRequired,
	  tryUnsubscribe: _react.PropTypes.func.isRequired,
	  notifyNestedSubs: _react.PropTypes.func.isRequired,
	  isSubscribed: _react.PropTypes.func.isRequired
	});
	
	var storeShape = exports.storeShape = _react.PropTypes.shape({
	  subscribe: _react.PropTypes.func.isRequired,
	  dispatch: _react.PropTypes.func.isRequired,
	  getState: _react.PropTypes.func.isRequired
	});

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = verifyPlainObject;
	
	var _isPlainObject = __webpack_require__(101);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _warning = __webpack_require__(118);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function verifyPlainObject(value, displayName, methodName) {
	  if (!(0, _isPlainObject2.default)(value)) {
	    (0, _warning2.default)(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');
	  }
	}

/***/ },
/* 306 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * This action type will be dispatched by the history actions below.
	 * If you're writing a middleware to watch for navigation events, be sure to
	 * look for actions of this type.
	 */
	var CALL_HISTORY_METHOD = exports.CALL_HISTORY_METHOD = '@@router/CALL_HISTORY_METHOD';
	
	function updateLocation(method) {
	  return function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return {
	      type: CALL_HISTORY_METHOD,
	      payload: { method: method, args: args }
	    };
	  };
	}
	
	/**
	 * These actions correspond to the history API.
	 * The associated routerMiddleware will capture these events before they get to
	 * your reducer and reissue them as the matching function on your history.
	 */
	var push = exports.push = updateLocation('push');
	var replace = exports.replace = updateLocation('replace');
	var go = exports.go = updateLocation('go');
	var goBack = exports.goBack = updateLocation('goBack');
	var goForward = exports.goForward = updateLocation('goForward');
	
	var routerActions = exports.routerActions = { push: push, replace: replace, go: go, goBack: goBack, goForward: goForward };

/***/ },
/* 307 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.routerReducer = routerReducer;
	/**
	 * This action type will be dispatched when your history
	 * receives a location change.
	 */
	var LOCATION_CHANGE = exports.LOCATION_CHANGE = '@@router/LOCATION_CHANGE';
	
	var initialState = {
	  locationBeforeTransitions: null
	};
	
	/**
	 * This reducer will update the state with the most recent location history
	 * has transitioned to. This may not be in sync with the router, particularly
	 * if you have asynchronously-loaded routes, so reading from and relying on
	 * this state is discouraged.
	 */
	function routerReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	
	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      type = _ref.type,
	      payload = _ref.payload;
	
	  if (type === LOCATION_CHANGE) {
	    return _extends({}, state, { locationBeforeTransitions: payload });
	  }
	
	  return state;
	}

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _PropTypes = __webpack_require__(121);
	
	var _ContextUtils = __webpack_require__(120);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var _React$PropTypes = _react2.default.PropTypes,
	    bool = _React$PropTypes.bool,
	    object = _React$PropTypes.object,
	    string = _React$PropTypes.string,
	    func = _React$PropTypes.func,
	    oneOfType = _React$PropTypes.oneOfType;
	
	
	function isLeftClickEvent(event) {
	  return event.button === 0;
	}
	
	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}
	
	// TODO: De-duplicate against hasAnyProperties in createTransitionManager.
	function isEmptyObject(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p)) return false;
	  }return true;
	}
	
	function resolveToLocation(to, router) {
	  return typeof to === 'function' ? to(router.location) : to;
	}
	
	/**
	 * A <Link> is used to create an <a> element that links to a route.
	 * When that route is active, the link gets the value of its
	 * activeClassName prop.
	 *
	 * For example, assuming you have the following route:
	 *
	 *   <Route path="/posts/:postID" component={Post} />
	 *
	 * You could use the following component to link to that route:
	 *
	 *   <Link to={`/posts/${post.id}`} />
	 *
	 * Links may pass along location state and/or query string parameters
	 * in the state/query props, respectively.
	 *
	 *   <Link ... query={{ show: true }} state={{ the: 'state' }} />
	 */
	var Link = _react2.default.createClass({
	  displayName: 'Link',
	
	
	  mixins: [(0, _ContextUtils.ContextSubscriber)('router')],
	
	  contextTypes: {
	    router: _PropTypes.routerShape
	  },
	
	  propTypes: {
	    to: oneOfType([string, object, func]),
	    query: object,
	    hash: string,
	    state: object,
	    activeStyle: object,
	    activeClassName: string,
	    onlyActiveOnIndex: bool.isRequired,
	    onClick: func,
	    target: string
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      onlyActiveOnIndex: false,
	      style: {}
	    };
	  },
	  handleClick: function handleClick(event) {
	    if (this.props.onClick) this.props.onClick(event);
	
	    if (event.defaultPrevented) return;
	
	    var router = this.context.router;
	
	    !router ?  false ? (0, _invariant2.default)(false, '<Link>s rendered outside of a router context cannot navigate.') : (0, _invariant2.default)(false) : void 0;
	
	    if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;
	
	    // If target prop is set (e.g. to "_blank"), let browser handle link.
	    /* istanbul ignore if: untestable with Karma */
	    if (this.props.target) return;
	
	    event.preventDefault();
	
	    router.push(resolveToLocation(this.props.to, router));
	  },
	  render: function render() {
	    var _props = this.props,
	        to = _props.to,
	        activeClassName = _props.activeClassName,
	        activeStyle = _props.activeStyle,
	        onlyActiveOnIndex = _props.onlyActiveOnIndex,
	        props = _objectWithoutProperties(_props, ['to', 'activeClassName', 'activeStyle', 'onlyActiveOnIndex']);
	
	    // Ignore if rendered outside the context of router to simplify unit testing.
	
	
	    var router = this.context.router;
	
	
	    if (router) {
	      // If user does not specify a `to` prop, return an empty anchor tag.
	      if (!to) {
	        return _react2.default.createElement('a', props);
	      }
	
	      var toLocation = resolveToLocation(to, router);
	      props.href = router.createHref(toLocation);
	
	      if (activeClassName || activeStyle != null && !isEmptyObject(activeStyle)) {
	        if (router.isActive(toLocation, onlyActiveOnIndex)) {
	          if (activeClassName) {
	            if (props.className) {
	              props.className += ' ' + activeClassName;
	            } else {
	              props.className = activeClassName;
	            }
	          }
	
	          if (activeStyle) props.style = _extends({}, props.style, activeStyle);
	        }
	      }
	    }
	
	    return _react2.default.createElement('a', _extends({}, props, { onClick: this.handleClick }));
	  }
	});
	
	exports.default = Link;
	module.exports = exports['default'];

/***/ },
/* 309 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.isPromise = isPromise;
	function isPromise(obj) {
	  return obj && typeof obj.then === 'function';
	}

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(32);
	
	var _PatternUtils = __webpack_require__(46);
	
	var _InternalPropTypes = __webpack_require__(62);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes,
	    string = _React$PropTypes.string,
	    object = _React$PropTypes.object;
	
	/**
	 * A <Redirect> is used to declare another URL path a client should
	 * be sent to when they request a given URL.
	 *
	 * Redirects are placed alongside routes in the route configuration
	 * and are traversed in the same manner.
	 */
	/* eslint-disable react/require-render-return */
	
	var Redirect = _react2.default.createClass({
	  displayName: 'Redirect',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element) {
	      var route = (0, _RouteUtils.createRouteFromReactElement)(element);
	
	      if (route.from) route.path = route.from;
	
	      route.onEnter = function (nextState, replace) {
	        var location = nextState.location,
	            params = nextState.params;
	
	
	        var pathname = void 0;
	        if (route.to.charAt(0) === '/') {
	          pathname = (0, _PatternUtils.formatPattern)(route.to, params);
	        } else if (!route.to) {
	          pathname = location.pathname;
	        } else {
	          var routeIndex = nextState.routes.indexOf(route);
	          var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);
	          var pattern = parentPattern.replace(/\/*$/, '/') + route.to;
	          pathname = (0, _PatternUtils.formatPattern)(pattern, params);
	        }
	
	        replace({
	          pathname: pathname,
	          query: route.query || location.query,
	          state: route.state || location.state
	        });
	      };
	
	      return route;
	    },
	    getRoutePattern: function getRoutePattern(routes, routeIndex) {
	      var parentPattern = '';
	
	      for (var i = routeIndex; i >= 0; i--) {
	        var route = routes[i];
	        var pattern = route.path || '';
	
	        parentPattern = pattern.replace(/\/*$/, '/') + parentPattern;
	
	        if (pattern.indexOf('/') === 0) break;
	      }
	
	      return '/' + parentPattern;
	    }
	  },
	
	  propTypes: {
	    path: string,
	    from: string, // Alias for path
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _InternalPropTypes.falsy,
	    children: _InternalPropTypes.falsy
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? (0, _invariant2.default)(false, '<Redirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = Redirect;
	module.exports = exports['default'];

/***/ },
/* 311 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.createRouterObject = createRouterObject;
	exports.assignRouterState = assignRouterState;
	function createRouterObject(history, transitionManager, state) {
	  var router = _extends({}, history, {
	    setRouteLeaveHook: transitionManager.listenBeforeLeavingRoute,
	    isActive: transitionManager.isActive
	  });
	
	  return assignRouterState(router, state);
	}
	
	function assignRouterState(router, _ref) {
	  var location = _ref.location,
	      params = _ref.params,
	      routes = _ref.routes;
	
	  router.location = location;
	  router.params = params;
	  router.routes = routes;
	
	  return router;
	}

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = createMemoryHistory;
	
	var _useQueries = __webpack_require__(156);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _useBasename = __webpack_require__(155);
	
	var _useBasename2 = _interopRequireDefault(_useBasename);
	
	var _createMemoryHistory = __webpack_require__(523);
	
	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createMemoryHistory(options) {
	  // signatures and type checking differ between `useQueries` and
	  // `createMemoryHistory`, have to create `memoryHistory` first because
	  // `useQueries` doesn't understand the signature
	  var memoryHistory = (0, _createMemoryHistory2.default)(options);
	  var createHistory = function createHistory() {
	    return memoryHistory;
	  };
	  var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
	  return history;
	}
	module.exports = exports['default'];

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	exports.default = function (createHistory) {
	  var history = void 0;
	  if (canUseDOM) history = (0, _useRouterHistory2.default)(createHistory)();
	  return history;
	};
	
	var _useRouterHistory = __webpack_require__(316);
	
	var _useRouterHistory2 = _interopRequireDefault(_useRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	module.exports = exports['default'];

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = createTransitionManager;
	
	var _routerWarning = __webpack_require__(47);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _computeChangedRoutes2 = __webpack_require__(627);
	
	var _computeChangedRoutes3 = _interopRequireDefault(_computeChangedRoutes2);
	
	var _TransitionUtils = __webpack_require__(624);
	
	var _isActive2 = __webpack_require__(631);
	
	var _isActive3 = _interopRequireDefault(_isActive2);
	
	var _getComponents = __webpack_require__(628);
	
	var _getComponents2 = _interopRequireDefault(_getComponents);
	
	var _matchRoutes = __webpack_require__(633);
	
	var _matchRoutes2 = _interopRequireDefault(_matchRoutes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function hasAnyProperties(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p)) return true;
	  }return false;
	}
	
	function createTransitionManager(history, routes) {
	  var state = {};
	
	  // Signature should be (location, indexOnly), but needs to support (path,
	  // query, indexOnly)
	  function isActive(location, indexOnly) {
	    location = history.createLocation(location);
	
	    return (0, _isActive3.default)(location, indexOnly, state.location, state.routes, state.params);
	  }
	
	  var partialNextState = void 0;
	
	  function match(location, callback) {
	    if (partialNextState && partialNextState.location === location) {
	      // Continue from where we left off.
	      finishMatch(partialNextState, callback);
	    } else {
	      (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
	        if (error) {
	          callback(error);
	        } else if (nextState) {
	          finishMatch(_extends({}, nextState, { location: location }), callback);
	        } else {
	          callback();
	        }
	      });
	    }
	  }
	
	  function finishMatch(nextState, callback) {
	    var _computeChangedRoutes = (0, _computeChangedRoutes3.default)(state, nextState),
	        leaveRoutes = _computeChangedRoutes.leaveRoutes,
	        changeRoutes = _computeChangedRoutes.changeRoutes,
	        enterRoutes = _computeChangedRoutes.enterRoutes;
	
	    (0, _TransitionUtils.runLeaveHooks)(leaveRoutes, state);
	
	    // Tear down confirmation hooks for left routes
	    leaveRoutes.filter(function (route) {
	      return enterRoutes.indexOf(route) === -1;
	    }).forEach(removeListenBeforeHooksForRoute);
	
	    // change and enter hooks are run in series
	    (0, _TransitionUtils.runChangeHooks)(changeRoutes, state, nextState, function (error, redirectInfo) {
	      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);
	
	      (0, _TransitionUtils.runEnterHooks)(enterRoutes, nextState, finishEnterHooks);
	    });
	
	    function finishEnterHooks(error, redirectInfo) {
	      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);
	
	      // TODO: Fetch components after state is updated.
	      (0, _getComponents2.default)(nextState, function (error, components) {
	        if (error) {
	          callback(error);
	        } else {
	          // TODO: Make match a pure function and have some other API
	          // for "match and update state".
	          callback(null, null, state = _extends({}, nextState, { components: components }));
	        }
	      });
	    }
	
	    function handleErrorOrRedirect(error, redirectInfo) {
	      if (error) callback(error);else callback(null, redirectInfo);
	    }
	  }
	
	  var RouteGuid = 1;
	
	  function getRouteID(route) {
	    var create = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	    return route.__id__ || create && (route.__id__ = RouteGuid++);
	  }
	
	  var RouteHooks = Object.create(null);
	
	  function getRouteHooksForRoutes(routes) {
	    return routes.map(function (route) {
	      return RouteHooks[getRouteID(route)];
	    }).filter(function (hook) {
	      return hook;
	    });
	  }
	
	  function transitionHook(location, callback) {
	    (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
	      if (nextState == null) {
	        // TODO: We didn't actually match anything, but hang
	        // onto error/nextState so we don't have to matchRoutes
	        // again in the listen callback.
	        callback();
	        return;
	      }
	
	      // Cache some state here so we don't have to
	      // matchRoutes() again in the listen callback.
	      partialNextState = _extends({}, nextState, { location: location });
	
	      var hooks = getRouteHooksForRoutes((0, _computeChangedRoutes3.default)(state, partialNextState).leaveRoutes);
	
	      var result = void 0;
	      for (var i = 0, len = hooks.length; result == null && i < len; ++i) {
	        // Passing the location arg here indicates to
	        // the user that this is a transition hook.
	        result = hooks[i](location);
	      }
	
	      callback(result);
	    });
	  }
	
	  /* istanbul ignore next: untestable with Karma */
	  function beforeUnloadHook() {
	    // Synchronously check to see if any route hooks want
	    // to prevent the current window/tab from closing.
	    if (state.routes) {
	      var hooks = getRouteHooksForRoutes(state.routes);
	
	      var message = void 0;
	      for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {
	        // Passing no args indicates to the user that this is a
	        // beforeunload hook. We don't know the next location.
	        message = hooks[i]();
	      }
	
	      return message;
	    }
	  }
	
	  var unlistenBefore = void 0,
	      unlistenBeforeUnload = void 0;
	
	  function removeListenBeforeHooksForRoute(route) {
	    var routeID = getRouteID(route);
	    if (!routeID) {
	      return;
	    }
	
	    delete RouteHooks[routeID];
	
	    if (!hasAnyProperties(RouteHooks)) {
	      // teardown transition & beforeunload hooks
	      if (unlistenBefore) {
	        unlistenBefore();
	        unlistenBefore = null;
	      }
	
	      if (unlistenBeforeUnload) {
	        unlistenBeforeUnload();
	        unlistenBeforeUnload = null;
	      }
	    }
	  }
	
	  /**
	   * Registers the given hook function to run before leaving the given route.
	   *
	   * During a normal transition, the hook function receives the next location
	   * as its only argument and can return either a prompt message (string) to show the user,
	   * to make sure they want to leave the page; or `false`, to prevent the transition.
	   * Any other return value will have no effect.
	   *
	   * During the beforeunload event (in browsers) the hook receives no arguments.
	   * In this case it must return a prompt message to prevent the transition.
	   *
	   * Returns a function that may be used to unbind the listener.
	   */
	  function listenBeforeLeavingRoute(route, hook) {
	    var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);
	    var routeID = getRouteID(route, true);
	
	    RouteHooks[routeID] = hook;
	
	    if (thereWereNoRouteHooks) {
	      // setup transition & beforeunload hooks
	      unlistenBefore = history.listenBefore(transitionHook);
	
	      if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);
	    }
	
	    return function () {
	      removeListenBeforeHooksForRoute(route);
	    };
	  }
	
	  /**
	   * This is the API for stateful environments. As the location
	   * changes, we update state and call the listener. We can also
	   * gracefully handle errors and redirects.
	   */
	  function listen(listener) {
	    function historyListener(location) {
	      if (state.location === location) {
	        listener(null, state);
	      } else {
	        match(location, function (error, redirectLocation, nextState) {
	          if (error) {
	            listener(error);
	          } else if (redirectLocation) {
	            history.replace(redirectLocation);
	          } else if (nextState) {
	            listener(null, nextState);
	          } else {
	             false ? (0, _routerWarning2.default)(false, 'Location "%s" did not match any routes', location.pathname + location.search + location.hash) : void 0;
	          }
	        });
	      }
	    }
	
	    // TODO: Only use a single history listener. Otherwise we'll end up with
	    // multiple concurrent calls to match.
	
	    // Set up the history listener first in case the initial match redirects.
	    var unsubscribe = history.listen(historyListener);
	
	    if (state.location) {
	      // Picking up on a matchContext.
	      listener(null, state);
	    } else {
	      historyListener(history.getCurrentLocation());
	    }
	
	    return unsubscribe;
	  }
	
	  return {
	    isActive: isActive,
	    match: match,
	    listenBeforeLeavingRoute: listenBeforeLeavingRoute,
	    listen: listen
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.createMemoryHistory = exports.hashHistory = exports.browserHistory = exports.applyRouterMiddleware = exports.formatPattern = exports.useRouterHistory = exports.match = exports.routerShape = exports.locationShape = exports.RouterContext = exports.createRoutes = exports.Route = exports.Redirect = exports.IndexRoute = exports.IndexRedirect = exports.withRouter = exports.IndexLink = exports.Link = exports.Router = undefined;
	
	var _RouteUtils = __webpack_require__(32);
	
	Object.defineProperty(exports, 'createRoutes', {
	  enumerable: true,
	  get: function get() {
	    return _RouteUtils.createRoutes;
	  }
	});
	
	var _PropTypes = __webpack_require__(121);
	
	Object.defineProperty(exports, 'locationShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes.locationShape;
	  }
	});
	Object.defineProperty(exports, 'routerShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes.routerShape;
	  }
	});
	
	var _PatternUtils = __webpack_require__(46);
	
	Object.defineProperty(exports, 'formatPattern', {
	  enumerable: true,
	  get: function get() {
	    return _PatternUtils.formatPattern;
	  }
	});
	
	var _Router2 = __webpack_require__(623);
	
	var _Router3 = _interopRequireDefault(_Router2);
	
	var _Link2 = __webpack_require__(308);
	
	var _Link3 = _interopRequireDefault(_Link2);
	
	var _IndexLink2 = __webpack_require__(619);
	
	var _IndexLink3 = _interopRequireDefault(_IndexLink2);
	
	var _withRouter2 = __webpack_require__(634);
	
	var _withRouter3 = _interopRequireDefault(_withRouter2);
	
	var _IndexRedirect2 = __webpack_require__(620);
	
	var _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);
	
	var _IndexRoute2 = __webpack_require__(621);
	
	var _IndexRoute3 = _interopRequireDefault(_IndexRoute2);
	
	var _Redirect2 = __webpack_require__(310);
	
	var _Redirect3 = _interopRequireDefault(_Redirect2);
	
	var _Route2 = __webpack_require__(622);
	
	var _Route3 = _interopRequireDefault(_Route2);
	
	var _RouterContext2 = __webpack_require__(122);
	
	var _RouterContext3 = _interopRequireDefault(_RouterContext2);
	
	var _match2 = __webpack_require__(632);
	
	var _match3 = _interopRequireDefault(_match2);
	
	var _useRouterHistory2 = __webpack_require__(316);
	
	var _useRouterHistory3 = _interopRequireDefault(_useRouterHistory2);
	
	var _applyRouterMiddleware2 = __webpack_require__(625);
	
	var _applyRouterMiddleware3 = _interopRequireDefault(_applyRouterMiddleware2);
	
	var _browserHistory2 = __webpack_require__(626);
	
	var _browserHistory3 = _interopRequireDefault(_browserHistory2);
	
	var _hashHistory2 = __webpack_require__(630);
	
	var _hashHistory3 = _interopRequireDefault(_hashHistory2);
	
	var _createMemoryHistory2 = __webpack_require__(312);
	
	var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Router = _Router3.default; /* components */
	
	exports.Link = _Link3.default;
	exports.IndexLink = _IndexLink3.default;
	exports.withRouter = _withRouter3.default;
	
	/* components (configuration) */
	
	exports.IndexRedirect = _IndexRedirect3.default;
	exports.IndexRoute = _IndexRoute3.default;
	exports.Redirect = _Redirect3.default;
	exports.Route = _Route3.default;
	
	/* utils */
	
	exports.RouterContext = _RouterContext3.default;
	exports.match = _match3.default;
	exports.useRouterHistory = _useRouterHistory3.default;
	exports.applyRouterMiddleware = _applyRouterMiddleware3.default;
	
	/* histories */
	
	exports.browserHistory = _browserHistory3.default;
	exports.hashHistory = _hashHistory3.default;
	exports.createMemoryHistory = _createMemoryHistory3.default;

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = useRouterHistory;
	
	var _useQueries = __webpack_require__(156);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _useBasename = __webpack_require__(155);
	
	var _useBasename2 = _interopRequireDefault(_useBasename);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function useRouterHistory(createHistory) {
	  return function (options) {
	    var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
	    return history;
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(635);


/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _slider = __webpack_require__(641);
	
	var _slider2 = _interopRequireDefault(_slider);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _slider2.default;

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(50);
	
	var ReactCurrentOwner = __webpack_require__(28);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty)
	  // Strip regex characters so we can use it for regex
	  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  // Remove hasOwnProperty from the template to make it generic
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}
	
	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);
	
	var setItem;
	var getItem;
	var removeItem;
	var getItemIDs;
	var addRoot;
	var removeRoot;
	var getRootIDs;
	
	if (canUseCollections) {
	  var itemMap = new Map();
	  var rootIDSet = new Set();
	
	  setItem = function (id, item) {
	    itemMap.set(id, item);
	  };
	  getItem = function (id) {
	    return itemMap.get(id);
	  };
	  removeItem = function (id) {
	    itemMap['delete'](id);
	  };
	  getItemIDs = function () {
	    return Array.from(itemMap.keys());
	  };
	
	  addRoot = function (id) {
	    rootIDSet.add(id);
	  };
	  removeRoot = function (id) {
	    rootIDSet['delete'](id);
	  };
	  getRootIDs = function () {
	    return Array.from(rootIDSet.keys());
	  };
	} else {
	  var itemByKey = {};
	  var rootByKey = {};
	
	  // Use non-numeric keys to prevent V8 performance issues:
	  // https://github.com/facebook/react/pull/7232
	  var getKeyFromID = function (id) {
	    return '.' + id;
	  };
	  var getIDFromKey = function (key) {
	    return parseInt(key.substr(1), 10);
	  };
	
	  setItem = function (id, item) {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  };
	  getItem = function (id) {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  };
	  removeItem = function (id) {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  };
	  getItemIDs = function () {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  };
	
	  addRoot = function (id) {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  };
	  removeRoot = function (id) {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  };
	  getRootIDs = function () {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  };
	}
	
	var unmountedIDs = [];
	
	function purgeDeep(id) {
	  var item = getItem(id);
	  if (item) {
	    var childIDs = item.childIDs;
	
	    removeItem(id);
	    childIDs.forEach(purgeDeep);
	  }
	}
	
	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}
	
	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}
	
	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	   false ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}
	
	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = getItem(id);
	    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.childIDs = nextChildIDs;
	
	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = getItem(nextChildID);
	      !nextChild ?  false ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ?  false ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ?  false ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent id is missing.
	      }
	      !(nextChild.parentID === id) ?  false ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    var item = {
	      element: element,
	      parentID: parentID,
	      text: null,
	      childIDs: [],
	      isMounted: false,
	      updateCount: 0
	    };
	    setItem(id, item);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = getItem(id);
	    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = getItem(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }
	
	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = getItem(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var name = getDisplayName(topElement);
	      var owner = topElement._owner;
	      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
	    }
	
	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;
	
	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = getItem(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = getItem(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = getItem(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = getItem(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = getItem(id);
	    return item ? item.updateCount : 0;
	  },
	
	
	  getRootIDs: getRootIDs,
	  getRegisteredIDs: getItemIDs
	};
	
	module.exports = ReactComponentTreeHook;

/***/ },
/* 320 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	module.exports = REACT_ELEMENT_TYPE;

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (false) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var canDefineProperty = false;
	if (false) {
	  try {
	    // $FlowFixMe https://github.com/facebook/flow/issues/285
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	module.exports = canDefineProperty;

/***/ },
/* 323 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ },
/* 324 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports["default"] = compose;
	/**
	 * Composes single-argument functions from right to left. The rightmost
	 * function can take multiple arguments as it provides the signature for
	 * the resulting composite function.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing the argument functions
	 * from right to left. For example, compose(f, g, h) is identical to doing
	 * (...args) => f(g(h(...args))).
	 */
	
	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }
	
	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  }
	
	  if (funcs.length === 1) {
	    return funcs[0];
	  }
	
	  var last = funcs[funcs.length - 1];
	  var rest = funcs.slice(0, -1);
	  return function () {
	    return rest.reduceRight(function (composed, f) {
	      return f(composed);
	    }, last.apply(undefined, arguments));
	  };
	}

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.ActionTypes = undefined;
	exports['default'] = createStore;
	
	var _isPlainObject = __webpack_require__(101);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _symbolObservable = __webpack_require__(661);
	
	var _symbolObservable2 = _interopRequireDefault(_symbolObservable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = exports.ActionTypes = {
	  INIT: '@@redux/INIT'
	};
	
	/**
	 * Creates a Redux store that holds the state tree.
	 * The only way to change the data in the store is to call `dispatch()` on it.
	 *
	 * There should only be a single store in your app. To specify how different
	 * parts of the state tree respond to actions, you may combine several reducers
	 * into a single reducer function by using `combineReducers`.
	 *
	 * @param {Function} reducer A function that returns the next state tree, given
	 * the current state tree and the action to handle.
	 *
	 * @param {any} [preloadedState] The initial state. You may optionally specify it
	 * to hydrate the state from the server in universal apps, or to restore a
	 * previously serialized user session.
	 * If you use `combineReducers` to produce the root reducer function, this must be
	 * an object with the same shape as `combineReducers` keys.
	 *
	 * @param {Function} enhancer The store enhancer. You may optionally specify it
	 * to enhance the store with third-party capabilities such as middleware,
	 * time travel, persistence, etc. The only store enhancer that ships with Redux
	 * is `applyMiddleware()`.
	 *
	 * @returns {Store} A Redux store that lets you read the state, dispatch actions
	 * and subscribe to changes.
	 */
	function createStore(reducer, preloadedState, enhancer) {
	  var _ref2;
	
	  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = preloadedState;
	    preloadedState = undefined;
	  }
	
	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }
	
	    return enhancer(createStore)(reducer, preloadedState);
	  }
	
	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }
	
	  var currentReducer = reducer;
	  var currentState = preloadedState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;
	
	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }
	
	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    return currentState;
	  }
	
	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected listener to be a function.');
	    }
	
	    var isSubscribed = true;
	
	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);
	
	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }
	
	      isSubscribed = false;
	
	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }
	
	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!(0, _isPlainObject2['default'])(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }
	
	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }
	
	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }
	
	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }
	
	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      listeners[i]();
	    }
	
	    return action;
	  }
	
	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }
	
	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.INIT });
	  }
	
	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/zenparsing/es-observable
	   */
	  function observable() {
	    var _ref;
	
	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	      subscribe: function subscribe(observer) {
	        if (typeof observer !== 'object') {
	          throw new TypeError('Expected the observer to be an object.');
	        }
	
	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }
	
	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[_symbolObservable2['default']] = function () {
	      return this;
	    }, _ref;
	  }
	
	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });
	
	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
	}

/***/ },
/* 326 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ },
/* 327 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	if (typeof Promise === 'undefined') {
	  // Rejection tracking prevents a common issue where React gets into an
	  // inconsistent state due to an error, but it gets swallowed by a Promise,
	  // and the user has no idea what causes React's erratic future behavior.
	  __webpack_require__(539).enable();
	  window.Promise = __webpack_require__(538);
	}
	
	// fetch() polyfill for making API calls.
	__webpack_require__(663);
	
	// Object.assign() is commonly used with React.
	// It will use the native implementation if it's present and isn't buggy.
	Object.assign = __webpack_require__(14);


/***/ },
/* 329 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";
	
	// Use the fastest means possible to execute a task in its own turn, with
	// priority over other events including IO, animation, reflow, and redraw
	// events in browsers.
	//
	// An exception thrown by a task will permanently interrupt the processing of
	// subsequent tasks. The higher level `asap` function ensures that if an
	// exception is thrown by a task, that the task queue will continue flushing as
	// soon as possible, but if you use `rawAsap` directly, you are responsible to
	// either ensure that no exceptions are thrown from your task, or to manually
	// call `rawAsap.requestFlush` if an exception is thrown.
	module.exports = rawAsap;
	function rawAsap(task) {
	    if (!queue.length) {
	        requestFlush();
	        flushing = true;
	    }
	    // Equivalent to push, but avoids a function call.
	    queue[queue.length] = task;
	}
	
	var queue = [];
	// Once a flush has been requested, no further calls to `requestFlush` are
	// necessary until the next `flush` completes.
	var flushing = false;
	// `requestFlush` is an implementation-specific method that attempts to kick
	// off a `flush` event as quickly as possible. `flush` will attempt to exhaust
	// the event queue before yielding to the browser's own event loop.
	var requestFlush;
	// The position of the next task to execute in the task queue. This is
	// preserved between calls to `flush` so that it can be resumed if
	// a task throws an exception.
	var index = 0;
	// If a task schedules additional tasks recursively, the task queue can grow
	// unbounded. To prevent memory exhaustion, the task queue will periodically
	// truncate already-completed tasks.
	var capacity = 1024;
	
	// The flush function processes all tasks that have been scheduled with
	// `rawAsap` unless and until one of those tasks throws an exception.
	// If a task throws an exception, `flush` ensures that its state will remain
	// consistent and will resume where it left off when called again.
	// However, `flush` does not make any arrangements to be called again if an
	// exception is thrown.
	function flush() {
	    while (index < queue.length) {
	        var currentIndex = index;
	        // Advance the index before calling the task. This ensures that we will
	        // begin flushing on the next task the task throws an error.
	        index = index + 1;
	        queue[currentIndex].call();
	        // Prevent leaking memory for long chains of recursive calls to `asap`.
	        // If we call `asap` within tasks scheduled by `asap`, the queue will
	        // grow, but to avoid an O(n) walk for every task we execute, we don't
	        // shift tasks off the queue after they have been executed.
	        // Instead, we periodically shift 1024 tasks off the queue.
	        if (index > capacity) {
	            // Manually shift all values starting at the index back to the
	            // beginning of the queue.
	            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {
	                queue[scan] = queue[scan + index];
	            }
	            queue.length -= index;
	            index = 0;
	        }
	    }
	    queue.length = 0;
	    index = 0;
	    flushing = false;
	}
	
	// `requestFlush` is implemented using a strategy based on data collected from
	// every available SauceLabs Selenium web driver worker at time of writing.
	// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593
	
	// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that
	// have WebKitMutationObserver but not un-prefixed MutationObserver.
	// Must use `global` or `self` instead of `window` to work in both frames and web
	// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.
	
	/* globals self */
	var scope = typeof global !== "undefined" ? global : self;
	var BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;
	
	// MutationObservers are desirable because they have high priority and work
	// reliably everywhere they are implemented.
	// They are implemented in all modern browsers.
	//
	// - Android 4-4.3
	// - Chrome 26-34
	// - Firefox 14-29
	// - Internet Explorer 11
	// - iPad Safari 6-7.1
	// - iPhone Safari 7-7.1
	// - Safari 6-7
	if (typeof BrowserMutationObserver === "function") {
	    requestFlush = makeRequestCallFromMutationObserver(flush);
	
	// MessageChannels are desirable because they give direct access to the HTML
	// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera
	// 11-12, and in web workers in many engines.
	// Although message channels yield to any queued rendering and IO tasks, they
	// would be better than imposing the 4ms delay of timers.
	// However, they do not work reliably in Internet Explorer or Safari.
	
	// Internet Explorer 10 is the only browser that has setImmediate but does
	// not have MutationObservers.
	// Although setImmediate yields to the browser's renderer, it would be
	// preferrable to falling back to setTimeout since it does not have
	// the minimum 4ms penalty.
	// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and
	// Desktop to a lesser extent) that renders both setImmediate and
	// MessageChannel useless for the purposes of ASAP.
	// https://github.com/kriskowal/q/issues/396
	
	// Timers are implemented universally.
	// We fall back to timers in workers in most engines, and in foreground
	// contexts in the following browsers.
	// However, note that even this simple case requires nuances to operate in a
	// broad spectrum of browsers.
	//
	// - Firefox 3-13
	// - Internet Explorer 6-9
	// - iPad Safari 4.3
	// - Lynx 2.8.7
	} else {
	    requestFlush = makeRequestCallFromTimer(flush);
	}
	
	// `requestFlush` requests that the high priority event queue be flushed as
	// soon as possible.
	// This is useful to prevent an error thrown in a task from stalling the event
	// queue if the exception handled by Node.js’s
	// `process.on("uncaughtException")` or by a domain.
	rawAsap.requestFlush = requestFlush;
	
	// To request a high priority event, we induce a mutation observer by toggling
	// the text of a text node between "1" and "-1".
	function makeRequestCallFromMutationObserver(callback) {
	    var toggle = 1;
	    var observer = new BrowserMutationObserver(callback);
	    var node = document.createTextNode("");
	    observer.observe(node, {characterData: true});
	    return function requestCall() {
	        toggle = -toggle;
	        node.data = toggle;
	    };
	}
	
	// The message channel technique was discovered by Malte Ubl and was the
	// original foundation for this library.
	// http://www.nonblocking.io/2011/06/windownexttick.html
	
	// Safari 6.0.5 (at least) intermittently fails to create message ports on a
	// page's first load. Thankfully, this version of Safari supports
	// MutationObservers, so we don't need to fall back in that case.
	
	// function makeRequestCallFromMessageChannel(callback) {
	//     var channel = new MessageChannel();
	//     channel.port1.onmessage = callback;
	//     return function requestCall() {
	//         channel.port2.postMessage(0);
	//     };
	// }
	
	// For reasons explained above, we are also unable to use `setImmediate`
	// under any circumstances.
	// Even if we were, there is another bug in Internet Explorer 10.
	// It is not sufficient to assign `setImmediate` to `requestFlush` because
	// `setImmediate` must be called *by name* and therefore must be wrapped in a
	// closure.
	// Never forget.
	
	// function makeRequestCallFromSetImmediate(callback) {
	//     return function requestCall() {
	//         setImmediate(callback);
	//     };
	// }
	
	// Safari 6.0 has a problem where timers will get lost while the user is
	// scrolling. This problem does not impact ASAP because Safari 6.0 supports
	// mutation observers, so that implementation is used instead.
	// However, if we ever elect to use timers in Safari, the prevalent work-around
	// is to add a scroll event listener that calls for a flush.
	
	// `setTimeout` does not call the passed callback if the delay is less than
	// approximately 7 in web workers in Firefox 8 through 18, and sometimes not
	// even then.
	
	function makeRequestCallFromTimer(callback) {
	    return function requestCall() {
	        // We dispatch a timeout with a specified delay of 0 for engines that
	        // can reliably accommodate that request. This will usually be snapped
	        // to a 4 milisecond delay, but once we're flushing, there's no delay
	        // between events.
	        var timeoutHandle = setTimeout(handleTimer, 0);
	        // However, since this timer gets frequently dropped in Firefox
	        // workers, we enlist an interval handle that will try to fire
	        // an event 20 times per second until it succeeds.
	        var intervalHandle = setInterval(handleTimer, 50);
	
	        function handleTimer() {
	            // Whichever timer succeeds will cancel both timers and
	            // execute the callback.
	            clearTimeout(timeoutHandle);
	            clearInterval(intervalHandle);
	            callback();
	        }
	    };
	}
	
	// This is for `asap.js` only.
	// Its name will be periodically randomized to break any code that depends on
	// its existence.
	rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;
	
	// ASAP was originally a nextTick shim included in Q. This was factored out
	// into this ASAP package. It was later adapted to RSVP which made further
	// amendments. These decisions, particularly to marginalize MessageChannel and
	// to capture the MutationObserver implementation in a closure, were integrated
	// back into ASAP proper.
	// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _actionsConstant = __webpack_require__(22);
	
	var _api2 = __webpack_require__(51);
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var formApi = function formApi(action, successDispatch, errorDispatch, getState, dispatch, loadingDispatch) {
	    var _api;
	
	    var api = (_api = {}, _defineProperty(_api, _actionsConstant.ACTION_POST_OTP, _api2.postOTP), _defineProperty(_api, _actionsConstant.ACTION_GET_OTP_PREFIX, _api2.getOTP), _defineProperty(_api, _actionsConstant.ACTION_GET_ADDRESS, _api2.getAddress), _defineProperty(_api, _actionsConstant.ACTION_POST_PARTIAL_APPLICATION, _api2.postPartialApplication), _defineProperty(_api, _actionsConstant.ACTION_GET_MY_INFO, _api2.getMyInfoDetails), _defineProperty(_api, _actionsConstant.ACTION_SUBMIT_FULL_APPLICATION, _api2.postFullApplication), _defineProperty(_api, _actionsConstant.ACTION_CHECK_PENDING_APPLICATION, _api2.checkPendingApplication), _defineProperty(_api, _actionsConstant.ACTION_GET_PENDING_APPLICATION, _api2.getPendingApplications), _defineProperty(_api, _actionsConstant.ACTION_GET_TENOR_TABLE_DATA, _api2.getTenorTableData), _defineProperty(_api, _actionsConstant.ACTION_GET_BANK_LIST, _api2.getBankList), _defineProperty(_api, _actionsConstant.ACTION_VALIDATE_TIN, _api2.validateTIN), _defineProperty(_api, _actionsConstant.ACTION_VALIDATE_USERNAME, _api2.validateUsername), _defineProperty(_api, _actionsConstant.ACTION_GET_ENCRYPTION_PARAMS, _api2.getEncryptionParams), _defineProperty(_api, _actionsConstant.ACTION_GET_USER_STATUS, _api2.getUserStatus), _api);
	    return api[action.type]({ action: action, successDispatch: successDispatch, errorDispatch: errorDispatch, getState: getState, dispatch: dispatch, loadingDispatch: loadingDispatch });
	};
	exports.default = formApi;

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _actionCreators = __webpack_require__(3);
	
	var _ToggleButton = __webpack_require__(63);
	
	var _ToggleButton2 = _interopRequireDefault(_ToggleButton);
	
	var _path = __webpack_require__(4);
	
	var _checkBoxDefaultValue = __webpack_require__(128);
	
	var _ValidatorHOC = __webpack_require__(20);
	
	var _utils = __webpack_require__(9);
	
	__webpack_require__(451);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var AccordianToggleButton = function AccordianToggleButton(props) {
	    var title = props.title;
	    var content = props.content;
	    var additionalOnClick = props.additionalOnClick;
	
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 5);
	
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var errorMsg = _getInputStates2[3];
	    var inputValue = _getInputStates2[4];
	
	    var isAccordianOpen = props.forcedOpen ? true : props.state.getIn((0, _path.accordianPath)(props.step, props.inputID), false);
	    var accordianContentState = isAccordianOpen ? "--open" : "--close";
	    var readMoreLess = isAccordianOpen ? "Read Less" : "Read More";
	    var errorClass = isDirty && !isValid ? "--error" : "";
	
	    return _react2.default.createElement(
	        "div",
	        { id: props.inputID, className: "accordian-toggle-button--block" + errorClass },
	        _react2.default.createElement(
	            "div",
	            {
	                className: "accordian-toggle-button--block-header-container",
	                onClick: function onClick() {
	                    return isAccordianOpen ? props.dispatchCloseAccordian(props.step, props.inputID) : props.dispatchOpenAccordian(props.step, props.inputID);
	                }
	            },
	            _react2.default.createElement(
	                "div",
	                { className: "accordian-toggle-button--block-header-title" },
	                _react2.default.createElement(
	                    "span",
	                    null,
	                    title,
	                    !isValid && errorMsg !== "" && _react2.default.createElement(
	                        "span",
	                        { className: "accordian-toggle-button--error" },
	                        "" + errorMsg
	                    ),
	                    _react2.default.createElement(
	                        "span",
	                        { className: "accordian-toggle-button--read-more" },
	                        props.forcedOpen || !props.content ? "" : readMoreLess
	                    )
	                )
	            ),
	            title && _react2.default.createElement(_ToggleButton2.default, Object.assign({
	                inputID: props.inputID,
	                onClick: function onClick(e) {
	                    e.stopPropagation();
	                    if (additionalOnClick) {
	                        additionalOnClick(props.inputID, props.step, !inputValue);
	                    }
	                    props.dispatchOnCheck(props.inputID, props.step, !inputValue);
	                }
	            }, props))
	        ),
	        content && _react2.default.createElement(
	            "div",
	            { className: "accordian-toggle-button--block-content-container" + accordianContentState },
	            isAccordianOpen && _react2.default.createElement(
	                "div",
	                { className: "accordian-toggle-button--block-content" },
	                _react2.default.createElement(
	                    "ul",
	                    { className: "accordian-toggle-button--block-content-list" },
	                    props.content.map(function (desc, i) {
	                        return _react2.default.createElement(
	                            "li",
	                            { key: i, className: "bulletedPoint-item-desc" },
	                            desc
	                        );
	                    })
	                )
	            )
	        )
	    );
	};
	
	AccordianToggleButton.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    title: _react.PropTypes.string.isRequired,
	    content: _react.PropTypes.array,
	    inputID: _react.PropTypes.string.isRequired,
	    forcedOpen: _react.PropTypes.bool,
	    additionalOnClick: _react.PropTypes.func
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchOpenAccordian: (0, _redux.bindActionCreators)(_actionCreators.openAccordian, dispatch),
	        dispatchCloseAccordian: (0, _redux.bindActionCreators)(_actionCreators.closeAccordian, dispatch),
	        dispatchOnCheck: (0, _redux.bindActionCreators)(_actionCreators.onCheck, dispatch)
	    };
	};
	
	var enchance = (0, _redux.compose)(_ValidatorHOC.validatorHOC, (0, _checkBoxDefaultValue.checkBoxDefaultValue)(), (0, _reactRedux.connect)(null, mapDispatchToProps));
	
	exports.default = enchance(AccordianToggleButton);

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(7);
	
	var _store = __webpack_require__(132);
	
	var _store2 = _interopRequireDefault(_store);
	
	var _reactRouter = __webpack_require__(315);
	
	var _StateToProps = __webpack_require__(363);
	
	var _StateToProps2 = _interopRequireDefault(_StateToProps);
	
	var _Form = __webpack_require__(349);
	
	var _Form2 = _interopRequireDefault(_Form);
	
	var _Congratulation = __webpack_require__(369);
	
	var _Congratulation2 = _interopRequireDefault(_Congratulation);
	
	var _NotFound = __webpack_require__(374);
	
	var _NotFound2 = _interopRequireDefault(_NotFound);
	
	var _utils = __webpack_require__(9);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// import AppRouter from './AppRouter'
	__webpack_require__(658).polyfill();
	var pathname = (0, _utils.detectPathName)();
	
	var App = function App(props) {
	    return _react2.default.createElement(
	        _reactRedux.Provider,
	        { store: _store2.default },
	        _react2.default.createElement(
	            _reactRouter.Router,
	            { history: _store.history },
	            _react2.default.createElement(
	                _reactRouter.Route,
	                { path: pathname + "congratulation", component: _StateToProps2.default },
	                _react2.default.createElement(_reactRouter.IndexRoute, {
	                    component: (0, _Congratulation2.default)({ FormConfig: props.FormConfig, productsConfig: props.productConfig })
	                })
	            ),
	            _react2.default.createElement(
	                _reactRouter.Route,
	                { path: pathname + "error", component: _StateToProps2.default },
	                _react2.default.createElement(_reactRouter.IndexRoute, { component: (0, _NotFound2.default)({ FormConfig: props.FormConfig }) })
	            ),
	            _react2.default.createElement(
	                _reactRouter.Route,
	                { path: pathname, component: _StateToProps2.default },
	                _react2.default.createElement(_reactRouter.IndexRoute, {
	                    component: (0, _Form2.default)({
	                        FormConfig: props.FormConfig,
	                        productsConfig: props.productConfig,
	                        formData: props.formData
	                    })
	                }),
	                _react2.default.createElement(_reactRouter.Route, {
	                    path: "/:pid",
	                    component: (0, _Form2.default)({
	                        FormConfig: props.FormConfig,
	                        productsConfig: props.productConfig,
	                        formData: props.formData
	                    })
	                })
	            )
	        )
	    );
	};
	
	App.propTypes = {
	    FormConfig: _react.PropTypes.func.isRequired,
	    productConfig: _react.PropTypes.object.isRequired,
	    formData: _react.PropTypes.object.isRequired
	};
	
	exports.default = App;

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _TextInput = __webpack_require__(21);
	
	var _TextInput2 = _interopRequireDefault(_TextInput);
	
	var _Dropdown = __webpack_require__(34);
	
	var _Dropdown2 = _interopRequireDefault(_Dropdown);
	
	var _ToggleInputWithTitle = __webpack_require__(130);
	
	var _ToggleInputWithTitle2 = _interopRequireDefault(_ToggleInputWithTitle);
	
	var _ToggleInput = __webpack_require__(37);
	
	var _ToggleInput2 = _interopRequireDefault(_ToggleInput);
	
	var _CrossSelling = __webpack_require__(338);
	
	var _CrossSelling2 = _interopRequireDefault(_CrossSelling);
	
	var _inputValidation = __webpack_require__(18);
	
	var _actionCreators = __webpack_require__(3);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _path = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var privMilesPids = ["001333", "001515", "001853"];
	
	var PrivMilesLinkCard = function PrivMilesLinkCard(props) {
	    var showFlyer = props.state.getIn((0, _path.dataPath)([props.product + "-" + _inputsConstant.LINK_TO_FLYER_MILES]));
	    var showAsia = props.state.getIn((0, _path.dataPath)([props.product + "-" + _inputsConstant.LINK_TO_ASIA_MILES]));
	    var kryslylerNumber = props.state.getIn(["data", "products", props.products.first(), _inputsConstant.KRYSFLYER_MEMBERSHIP_NUMBER], "");
	    var asiaMiles = props.state.getIn(["data", "products", props.products.first(), _inputsConstant.ASIA_MILES_MEMBERSHIP_NUMBER], "");
	    showFlyer = kryslylerNumber ? true : showFlyer;
	    showAsia = asiaMiles ? true : showAsia;
	    return _react2.default.createElement(
	        "div",
	        null,
	        _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_ToggleInput2.default, {
	                description: props.inputLabels[_inputsConstant.LINK_TO_FLYER_MILES],
	                state: props.state,
	                step: props.step,
	                inputID: props.product + "-" + _inputsConstant.LINK_TO_FLYER_MILES,
	                value: showFlyer,
	                onClick: function onClick() {
	                    var toggleStatus = props.state.getIn((0, _path.dataPath)([props.product + "-" + _inputsConstant.LINK_TO_FLYER_MILES]), false);
	                    return toggleStatus ? props.dispatch((0, _actionCreators.removeKrisOrAsia)(["data", "products", props.products.first(), _inputsConstant.KRYSFLYER_MEMBERSHIP_NUMBER], props.step, props.product + "-" + _inputsConstant.LINK_TO_FLYER_MILES, false)) : props.dispatch((0, _actionCreators.onToggle)(props.step, props.product + "-" + _inputsConstant.LINK_TO_FLYER_MILES, true));
	                }
	            }),
	            showFlyer && _react2.default.createElement(_TextInput2.default, Object.assign({
	                inputLabel: props.inputLabels[_inputsConstant.KRYSFLYER_MEMBERSHIP_NUMBER],
	                inputID: props.product + "-" + _inputsConstant.KRYSFLYER_MEMBERSHIP_NUMBER,
	                validators: [_inputValidation.validateFilledInput, _inputValidation.checkKrisFlyer],
	                onChange: function onChange(e) {
	                    var value = e.target.value;
	                    var validators = [_inputValidation.validateFilledInput, _inputValidation.checkKrisFlyer, (0, _inputValidation.checkSize)(10)];
	                    var status = validators.map(function (x) {
	                        return x(props.formData);
	                    }).map(function (x) {
	                        return x(value);
	                    }).filter(function (x) {
	                        return !x.status;
	                    });
	
	                    return props.dispatch((0, _actionCreators.editInputByPath)(props.step, props.product + "-" + _inputsConstant.KRYSFLYER_MEMBERSHIP_NUMBER, ["data", "products", props.products.first(), _inputsConstant.KRYSFLYER_MEMBERSHIP_NUMBER], value, status));
	                },
	                value: props.state.getIn(["data", "products", props.products.first(), _inputsConstant.KRYSFLYER_MEMBERSHIP_NUMBER], "")
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_ToggleInput2.default, {
	                description: props.inputLabels[_inputsConstant.LINK_TO_ASIA_MILES],
	                state: props.state,
	                step: props.step,
	                inputID: props.product + "-" + _inputsConstant.LINK_TO_ASIA_MILES,
	                value: showAsia,
	                onClick: function onClick() {
	                    var toggleStatus = props.state.getIn((0, _path.dataPath)([props.product + "-" + _inputsConstant.LINK_TO_ASIA_MILES]), false);
	                    return toggleStatus ? props.dispatch((0, _actionCreators.removeKrisOrAsia)(["data", "products", props.products.first(), _inputsConstant.ASIA_MILES_MEMBERSHIP_NUMBER], props.step, props.product + "-" + _inputsConstant.LINK_TO_ASIA_MILES, false)) : props.dispatch((0, _actionCreators.onToggle)(props.step, props.product + "-" + _inputsConstant.LINK_TO_ASIA_MILES, true));
	                }
	            }),
	            showAsia && _react2.default.createElement(_TextInput2.default, Object.assign({
	                inputLabel: props.inputLabels[_inputsConstant.ASIA_MILES_MEMBERSHIP_NUMBER],
	                inputID: props.product + "-" + _inputsConstant.ASIA_MILES_MEMBERSHIP_NUMBER,
	                validators: [_inputValidation.validateFilledInput, _inputValidation.checkAsiaMiles],
	                onChange: function onChange(e) {
	                    var value = e.target.value;
	                    var validators = [_inputValidation.validateFilledInput, (0, _inputValidation.checkSize)(10), _inputValidation.checkAsiaMiles];
	                    var status = validators.map(function (x) {
	                        return x(props.formData);
	                    }).map(function (x) {
	                        return x(value);
	                    }).filter(function (x) {
	                        return !x.status;
	                    });
	
	                    return props.dispatch((0, _actionCreators.editInputByPath)(props.step, props.product + "-" + _inputsConstant.ASIA_MILES_MEMBERSHIP_NUMBER, ["data", "products", props.products.first(), _inputsConstant.ASIA_MILES_MEMBERSHIP_NUMBER], value, status));
	                },
	                value: props.state.getIn(["data", "products", props.products.first(), _inputsConstant.ASIA_MILES_MEMBERSHIP_NUMBER], "")
	            }, props))
	        )
	    );
	};
	
	PrivMilesLinkCard.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    inputLabels: _react.PropTypes.object.isRequired,
	    inputValues: _react.PropTypes.object.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    dispatch: _react.PropTypes.func.isRequired,
	    products: _reactImmutableProptypes2.default.list.isRequired,
	    product: _react.PropTypes.string
	};
	
	var HOCDropdown = function HOCDropdown(props) {
	    switch (props.productType) {
	        case "CASA":
	            return _react2.default.createElement(_Dropdown2.default, Object.assign({
	                inputID: _inputsConstant.CARD_LIMIT + "_" + props.cardType,
	                inputLabel: props.inputLabels[_inputsConstant.CARD_LIMIT],
	                dropdownItems: props.inputValues[_inputsConstant.CARD_LIMIT],
	                onClick: function onClick(item) {
	                    props.dispatch((0, _actionCreators.updateDailyCardLimit)(props.pids, props.cardType, item.value));
	                },
	                value: props.state.getIn(["ui", "accountDetails", _inputsConstant.CARD_LIMIT + "_" + props.cardType, "value"])
	            }, props));
	        case "Card":
	            return _react2.default.createElement(_Dropdown2.default, Object.assign({
	                inputID: _inputsConstant.CREDIT_LIMIT + "_" + props.cardType,
	                inputLabel: props.inputLabels[_inputsConstant.CREDIT_LIMIT],
	                dropdownItems: props.inputValues[_inputsConstant.CREDIT_LIMIT],
	                onClick: function onClick(item) {
	                    props.dispatch((0, _actionCreators.updateCreditLimit)(props.pids, props.cardType, item.value));
	                },
	                value: props.state.getIn(["ui", "accountDetails", _inputsConstant.CREDIT_LIMIT + "_" + props.cardType, "value"])
	            }, props));
	        case "CASH+":
	            return _react2.default.createElement(_Dropdown2.default, Object.assign({
	                inputID: _inputsConstant.CREDIT_LIMIT + "_" + props.cardType,
	                inputLabel: props.inputLabels[_inputsConstant.CREDIT_LIMIT],
	                dropdownItems: props.inputValues[_inputsConstant.CREDIT_LIMIT],
	                onClick: function onClick(item) {
	                    props.dispatch((0, _actionCreators.updateCreditLimit)(props.pids, props.cardType, item.value));
	                },
	                value: props.state.getIn(["ui", "accountDetails", _inputsConstant.CREDIT_LIMIT + "_" + props.cardType, "value"])
	            }, props));
	        default:
	            return null;
	    }
	};
	
	HOCDropdown.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    productType: _react.PropTypes.string.isRequired,
	    cardType: _react.PropTypes.string.isRequired,
	    inputLabels: _react.PropTypes.object.isRequired,
	    inputValues: _react.PropTypes.object.isRequired,
	    pids: _reactImmutableProptypes2.default.list.isRequired,
	    dispatch: _react.PropTypes.func.isRequired
	};
	
	var CardDetails = function CardDetails(props) {
	    var productsConfig = props.productsConfig;
	    var formData = props.formData;
	    var FormConfig = props.FormConfig;
	
	    var accountDetails = new FormConfig(props.step);
	    var buttons = accountDetails.buttons;
	
	    var isCreditSureProduct = props.productType === "Card" || props.productType === "CASH+";
	    var validatorsArray = [_inputValidation.validateFilledInput, _inputValidation.onlyLettersAndSpace, (0, _inputValidation.checkMaxSize)(19)];
	    var validator = function validator(value, validators) {
	        return validators.map(function (x) {
	            return x(formData);
	        }).map(function (x) {
	            return x(value);
	        }).filter(function (x) {
	            return !x.status;
	        });
	    };
	    var firstProduct = props.pids.first();
	    var cardImgPath = productsConfig.products[firstProduct].imgPath;
	    var isSameDayDeliveryOn = productsConfig.sameDayDelivery ? productsConfig.sameDayDelivery : false;
	    var crossSellProductIds = productsConfig.crossSellReference[props.state.getIn((0, _path.productIdPath)()).first()];
	    var mandatoryProductIds = crossSellProductIds ? crossSellProductIds.filter(function (product) {
	        return product.mandatory;
	    }).map(function (product) {
	        return product.pid;
	    }) : [];
	    var crossSellProducts = crossSellProductIds ? crossSellProductIds.map(function (product) {
	        return productsConfig.products[product.pid];
	    }) : [];
	
	    var nameOnCardOnChange = function nameOnCardOnChange(e) {
	        return e.target.value.length < 20 && props.dispatch((0, _actionCreators.editMultipleNameOnCard)(props.pids, props.cardType, e.target.value.toUpperCase(), validator(e.target.value, validatorsArray), props.step));
	    };
	
	    return _react2.default.createElement(
	        "div",
	        null,
	        _react2.default.createElement(
	            "div",
	            { className: "account-details--separator-flex-card account-details-row" },
	            _react2.default.createElement(
	                "div",
	                { className: "account-details--card-container-flex" },
	                _react2.default.createElement(
	                    "div",
	                    { className: "card-type" },
	                    _react2.default.createElement("img", { src: cardImgPath, alt: "card" })
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "account-details-name-on-card" },
	                    props.state.getIn(["ui", "accountDetails", _inputsConstant.NAME_ON_CARD + "_" + props.cardType, "value"], "").substr(0, 19)
	                )
	            ),
	            _react2.default.createElement(
	                "div",
	                { className: "account-details--separator-flex" },
	                _react2.default.createElement(_TextInput2.default, Object.assign({
	                    inputLabel: props.inputLabels.nameOntheCard,
	                    inputID: _inputsConstant.NAME_ON_CARD + "_" + props.cardType,
	                    validators: validatorsArray,
	                    onChange: nameOnCardOnChange,
	                    value: props.state.getIn(["ui", "accountDetails", _inputsConstant.NAME_ON_CARD + "_" + props.cardType, "value"], "").substr(0, 19)
	                }, props)),
	                props.cardType !== "700778" ? _react2.default.createElement(
	                    "div",
	                    { className: "account-details--separator" },
	                    HOCDropdown(props)
	                ) : _react2.default.createElement(
	                    "p",
	                    { style: { paddingLeft: "14px" } },
	                    props.inputLabels.cashPlusPlaceholder
	                )
	            )
	        ),
	        privMilesPids.includes(props.cardType) && _react2.default.createElement(PrivMilesLinkCard, Object.assign({ product: props.cardType }, props)),
	        props.productType === "CASA" && _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_ToggleInputWithTitle2.default, Object.assign({
	                title: props.inputLabels.activateAtms,
	                description: props.inputDescriptions.activateAtms,
	                inputID: _inputsConstant.ACTIVATE_ATM + "_" + props.cardType,
	                onClick: function onClick() {
	                    props.dispatch((0, _actionCreators.editMultipleAtmAccess)(props.pids, props.cardType, true));
	                },
	                value: props.state.getIn(["ui", "accountDetails", _inputsConstant.ACTIVATE_ATM + "_" + props.cardType, "value"])
	            }, props))
	        ),
	        isCreditSureProduct && _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_ToggleInput2.default, Object.assign({ description: props.inputLabels[_inputsConstant.CREDIT_SURE], inputID: _inputsConstant.CREDIT_SURE }, props, {
	                setPath: function setPath(value) {
	                    props.dispatch((0, _actionCreators.editInputByPath)(props.step, _inputsConstant.CREDIT_SURE, ["data", "products", props.products.first(), _inputsConstant.CREDIT_SURE], value ? "Yes" : "No", []));
	                }
	            }))
	        ),
	        props.productType === "Card" && isSameDayDeliveryOn && _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_ToggleInput2.default, Object.assign({ description: props.inputLabels[_inputsConstant.SAME_DAY_DELIVERY], inputID: _inputsConstant.SAME_DAY_DELIVERY }, props, {
	                setPath: function setPath(value) {
	                    props.dispatch((0, _actionCreators.editInputByPath)(props.step, _inputsConstant.SAME_DAY_DELIVERY, ["data", "products", props.products.first(), _inputsConstant.SAME_DAY_DELIVERY], value ? "Yes" : "No", []));
	                }
	            }))
	        ),
	        crossSellProducts.length > 0 && _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_CrossSelling2.default, Object.assign({}, props, {
	                crossSellProducts: crossSellProducts,
	                mandatoryProductIds: mandatoryProductIds,
	                buttons: buttons
	            }))
	        )
	    );
	};
	
	CardDetails.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    productType: _react.PropTypes.string.isRequired,
	    pids: _reactImmutableProptypes2.default.list.isRequired,
	    cardType: _react.PropTypes.string.isRequired,
	    inputLabels: _react.PropTypes.object.isRequired,
	    inputDescriptions: _react.PropTypes.object.isRequired,
	    dispatch: _react.PropTypes.func.isRequired,
	    productsConfig: _react.PropTypes.object.isRequired,
	    formData: _react.PropTypes.object.isRequired
	};
	
	exports.default = CardDetails;

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _actionCreators = __webpack_require__(3);
	
	var _utils = __webpack_require__(9);
	
	var _checkBoxDefaultValue = __webpack_require__(128);
	
	var _ValidatorHOC = __webpack_require__(20);
	
	var _ToggleButton = __webpack_require__(63);
	
	var _ToggleButton2 = _interopRequireDefault(_ToggleButton);
	
	__webpack_require__(453);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CheckboxInput = function CheckboxInput(props) {
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 5);
	
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var errorMsg = _getInputStates2[3];
	    var inputValue = _getInputStates2[4];
	
	    var errorClass = isDirty && !isValid ? "--error" : "";
	    var error = props.msgErrorCheckboxInput || errorMsg;
	
	    return _react2.default.createElement(
	        "div",
	        { id: props.inputID, className: "checkboxInput--container" + errorClass },
	        _react2.default.createElement(
	            "div",
	            { className: "checkboxInput--content" },
	            _react2.default.createElement("div", { dangerouslySetInnerHTML: { __html: props.description } }),
	            isDirty && !isValid && _react2.default.createElement(
	                "span",
	                { className: "checkboxInput--error" },
	                "" + error
	            )
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "checkboxInput--checkbox" },
	            _react2.default.createElement(_ToggleButton2.default, Object.assign({
	                inputID: props.inputID,
	                onClick: function onClick() {
	                    return props.dispatchOnCheck(props.inputID, props.step, !inputValue);
	                }
	            }, props))
	        )
	    );
	};
	
	CheckboxInput.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    description: _react.PropTypes.string,
	    inputID: _react.PropTypes.string,
	    step: _react.PropTypes.string.isRequired,
	    dispatchOnCheck: _react.PropTypes.func
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchOnCheck: (0, _redux.bindActionCreators)(_actionCreators.onCheck, dispatch)
	    };
	};
	
	var enchance = (0, _redux.compose)(_ValidatorHOC.validatorHOC, (0, _checkBoxDefaultValue.checkBoxDefaultValue)(false), (0, _reactRedux.connect)(null, mapDispatchToProps));
	
	exports.default = enchance(CheckboxInput);

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	__webpack_require__(454);
	
	var _CpfTableMobile = __webpack_require__(337);
	
	var _CpfTableMobile2 = _interopRequireDefault(_CpfTableMobile);
	
	var _CpfTableDesktop = __webpack_require__(336);
	
	var _CpfTableDesktop2 = _interopRequireDefault(_CpfTableDesktop);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CpfTable = function CpfTable(props) {
	    return _react2.default.createElement(
	        "div",
	        null,
	        _react2.default.createElement(
	            "div",
	            { className: "real-cpfTable-desktop" },
	            _react2.default.createElement(_CpfTableDesktop2.default, props)
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "real-cpfTable-mobile" },
	            _react2.default.createElement(_CpfTableMobile2.default, props)
	        )
	    );
	};
	
	exports.default = CpfTable;

/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	__webpack_require__(455);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var generateTableRows = function generateTableRows(tableContent) {
	    return tableContent.map(function (row, i) {
	        var rowData = Object.keys(row);
	        return _react2.default.createElement(
	            "div",
	            { key: i },
	            _react2.default.createElement("div", { className: "cpf-table--separator" }),
	            _react2.default.createElement(
	                "div",
	                { className: "cpf-table--row-flex" },
	                rowData.map(function (data, index) {
	                    return _react2.default.createElement(
	                        "div",
	                        { key: index, className: "cpf-table--row-item" },
	                        row[data]
	                    );
	                })
	            )
	        );
	    });
	};
	
	var CpfTableDesktop = function CpfTableDesktop(props) {
	    return _react2.default.createElement(
	        "div",
	        { className: "cpf-table--main-container-flex" },
	        _react2.default.createElement(
	            "div",
	            { className: "cpf-table--titles-container-flex" },
	            props.colTitles.map(function (title, i) {
	                return _react2.default.createElement(
	                    "div",
	                    { key: i, className: "cpf-table--title-flex" },
	                    title
	                );
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "cpf-table--rows-container-flex" },
	            generateTableRows(props.tableContent, props)
	        )
	    );
	};
	
	CpfTableDesktop.propTypes = {
	    tableContent: _react.PropTypes.array.isRequired,
	    colTitles: _react.PropTypes.array.isRequired
	};
	
	exports.default = CpfTableDesktop;

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	__webpack_require__(456);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _path = __webpack_require__(4);
	
	var _actionCreators = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* global FORMS_CNFG_GLBL */
	var Row = function Row(props) {
	    var handleClick = props.handleClick;
	    var arrowClass = props.arrowClass;
	    var header = props.header;
	    var data = props.data;
	    var contentClass = props.contentClass;
	    var bodyTitle = props.bodyTitle;
	    var restOfDataKeysExceptHeader = props.restOfDataKeysExceptHeader;
	    var isRowOpen = props.isRowOpen;
	
	    return _react2.default.createElement(
	        "div",
	        { className: "cpf-table-mobile-container-item" },
	        _react2.default.createElement(
	            "div",
	            { className: "cpf-table-mobile-title-container", onClick: handleClick },
	            _react2.default.createElement("img", { src: FORMS_CNFG_GLBL.imgPath + "/arrow.svg", alt: "tick", className: arrowClass }),
	            _react2.default.createElement(
	                "div",
	                { className: "cpf-table-mobile-title-checkbox-container" },
	                _react2.default.createElement(
	                    "div",
	                    { className: "cpf-table-mobile-title" },
	                    "" + data[header]
	                )
	            )
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "cpf-table-mobile-content-container " + contentClass },
	            isRowOpen && bodyTitle.map(function (itemTitle, i) {
	                var currentTitleKey = restOfDataKeysExceptHeader[i];
	                return _react2.default.createElement(RowItem, { key: i, title: itemTitle, data: data[currentTitleKey] });
	            })
	        )
	    );
	};
	
	var RowItem = function RowItem(props) {
	    return _react2.default.createElement(
	        "div",
	        { className: "cpf-table-mobile-content-item-container" },
	        _react2.default.createElement(
	            "div",
	            { className: "cpf-table-mobile-content-item-title" },
	            props.title
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "cpf-table-mobile-content-item-data" },
	            props.data
	        )
	    );
	};
	
	var CpfTableMobile = function CpfTableMobile(props) {
	    var dispatch = props.dispatch;
	    var state = props.state;
	    var colTitles = props.colTitles;
	    var tableContent = props.tableContent;
	
	    var bodyTitle = colTitles.filter(function (title, i) {
	        return i !== 0;
	    });
	    return _react2.default.createElement(
	        "div",
	        { className: "cpf-table-mobile-container" },
	        tableContent.map(function (data, i) {
	            var dataKeys = Object.keys(data);
	            var header = dataKeys[0];
	            var isRowOpen = state.getIn((0, _path.tableStatePath)(_inputsConstant.UNSECRUED_LOAN_TABLE, i), true);
	            var restOfDataKeysExceptHeader = dataKeys.filter(function (x) {
	                return x !== header;
	            });
	            var arrowClass = isRowOpen ? "cpf-table-mobile-arrow--selected" : "cpf-table-mobile-arrow";
	            var contentClass = isRowOpen ? "cpf-table-mobile-content-container--selected" : "";
	            var handleClick = function handleClick() {
	                return isRowOpen ? dispatch((0, _actionCreators.collapseTableRow)(_inputsConstant.UNSECRUED_LOAN_TABLE, i)) : dispatch((0, _actionCreators.expandTableRow)(_inputsConstant.UNSECRUED_LOAN_TABLE, i));
	            };
	            return _react2.default.createElement(Row, {
	                key: i,
	                restOfDataKeysExceptHeader: restOfDataKeysExceptHeader,
	                arrowClass: arrowClass,
	                contentClass: contentClass,
	                handleClick: handleClick,
	                bodyTitle: bodyTitle,
	                data: data,
	                dispatch: dispatch,
	                header: header,
	                index: i,
	                isRowOpen: isRowOpen,
	                pid: props.pid
	            });
	        })
	    );
	};
	
	Row.propTypes = {
	    handleClick: _react.PropTypes.func.isRequired,
	    arrowClass: _react.PropTypes.string.isRequired,
	    header: _react.PropTypes.string.isRequired,
	    data: _react.PropTypes.object.isRequired,
	    contentClass: _react.PropTypes.string.isRequired,
	    bodyTitle: _react.PropTypes.array.isRequired,
	    restOfDataKeysExceptHeader: _react.PropTypes.array.isRequired,
	    isRowOpen: _react.PropTypes.bool.isRequired
	};
	
	RowItem.propTypes = {
	    title: _react.PropTypes.string.isRequired,
	    data: _react.PropTypes.string.isRequired
	};
	
	CpfTableMobile.propTypes = {
	    dispatch: _react.PropTypes.func.isRequired,
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    colTitles: _react.PropTypes.array.isRequired,
	    tableContent: _react.PropTypes.array.isRequired,
	    pid: _react.PropTypes.string
	};
	
	exports.default = CpfTableMobile;

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	__webpack_require__(457);
	
	var _CrossSellingDesktop = __webpack_require__(339);
	
	var _CrossSellingDesktop2 = _interopRequireDefault(_CrossSellingDesktop);
	
	var _CrossSellingMobile = __webpack_require__(340);
	
	var _CrossSellingMobile2 = _interopRequireDefault(_CrossSellingMobile);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CrossSelling = function CrossSelling(props) {
	    return _react2.default.createElement(
	        "div",
	        null,
	        _react2.default.createElement(
	            "div",
	            { className: "crossSelling-desktop" },
	            _react2.default.createElement(_CrossSellingDesktop2.default, props)
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "crossSelling-mobile" },
	            _react2.default.createElement(_CrossSellingMobile2.default, props)
	        )
	    );
	};
	
	exports.default = CrossSelling;

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSlick = __webpack_require__(318);
	
	var _reactSlick2 = _interopRequireDefault(_reactSlick);
	
	__webpack_require__(150);
	
	__webpack_require__(458);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _immutable = __webpack_require__(13);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _utils = __webpack_require__(9);
	
	var _common = __webpack_require__(65);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var responsive = [{ breakpoint: 10500,
	    settings: {
	        dots: true,
	        infinite: false,
	        speed: 500,
	        slidesToShow: 1.01,
	        centerMode: true,
	        focusOnSelect: true
	    }
	}];
	
	var addCrossProduct = function addCrossProduct(app, productCurrencies, familyType, productType, productId, typeOfProduct) {
	    var name = app.state.getIn(["ui", "accountDetails", "nameOntheCard_" + familyType, "value"], app.state.getIn(["data", "fullName"]));
	    var preferedDailyLimit = app.state.getIn(["ui", "accountDetails", "cardLimit_" + familyType, "value"], "2000");
	    var activateAtms = app.state.getIn(["ui", "accountDetails", "activateAtms_" + familyType, "value"], true);
	    var toggleSameValue = app.state.getIn(["data", "samePurposeToggle"], false);
	    var casaProducts = app.state.getIn(["data", "products"]).filter(function (value, index) {
	        return typeOfProduct.getIn(["products", index, "type"], false) === "CASA";
	    });
	
	    var defaultValues = toggleSameValue ? casaProducts.first().get("currencies").first() : (0, _immutable.Map)({ purposeOfFunds: "", sourceOfFunds: "", countryOfFunds: "SG" });
	
	    switch (productType) {
	        case "CASA":
	            if (productId === "SAVJS") {
	                return app.dispatch((0, _actionCreators.addSAVJSProduct)(productId, productCurrencies, familyType, defaultValues));
	            }
	            app.dispatch((0, _actionCreators.addCrossProductCasa)(productId, productCurrencies, familyType, { name: name.toUpperCase(), preferedDailyLimit: preferedDailyLimit, activateAtms: activateAtms }, defaultValues));
	            break;
	        case "Card":
	            app.dispatch((0, _actionCreators.addCrossProductCards)(productId, familyType, name.toUpperCase(), preferedDailyLimit, activateAtms));
	            break;
	        default:
	            app.dispatch((0, _actionCreators.addCrossProductUnsecuredLoan)(productId));
	    }
	    return null;
	};
	
	var CrossSellingItem = function CrossSellingItem(props) {
	    var productsConfig = props.productsConfig;
	
	    var typeOfProduct = (0, _immutable.fromJS)(productsConfig);
	    var productIds = props.state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	    var productIsSelected = productIds.includes(props.product.pid);
	    var selected = productIsSelected ? "--selected" : "";
	    var buttonDisableClass = props.isMandatory ? "crossSelling-item-button--disable" : "";
	    var buttonText = productIsSelected ? props.buttons.remove : props.buttons.add;
	    buttonText = props.isMandatory ? props.buttons.mandatory : buttonText;
	    var imagePath = productsConfig.products[props.product.pid].imgPathCrossell;
	    var disable = props.disable ? " crossSelling-item-info-container--disable" : "";
	    return _react2.default.createElement(
	        "div",
	        { className: "crossSelling-item" + selected },
	        _react2.default.createElement(
	            "div",
	            { className: "crossSelling-item-info-box" + selected },
	            _react2.default.createElement(
	                "div",
	                { className: "crossSelling-item-info" + selected },
	                _react2.default.createElement(
	                    "div",
	                    { className: "crossSelling-item-info-container" + selected + disable },
	                    _react2.default.createElement("img", {
	                        className: "crossSelling-item-image",
	                        src: imagePath,
	                        alt: "productImg"
	                    }),
	                    _react2.default.createElement(
	                        "div",
	                        { className: "crossSelling-titleDescButton" },
	                        _react2.default.createElement(
	                            "div",
	                            { className: "crossSelling-titleAndDesc" },
	                            _react2.default.createElement(
	                                "div",
	                                { className: "crossSelling-item-title-container" },
	                                _react2.default.createElement(
	                                    "div",
	                                    { className: "crossSelling-item-title" + selected },
	                                    props.product.productName
	                                )
	                            ),
	                            _react2.default.createElement(
	                                "button",
	                                {
	                                    className: "crossSelling-item-button " + buttonDisableClass,
	                                    onClick: function onClick() {
	                                        var productCurrencies = (0, _immutable.Map)(_defineProperty({}, props.product.pid, typeOfProduct.getIn(["products", props.product.pid, "currencies", "values"])));
	                                        var familyType = typeOfProduct.getIn(["products", props.product.pid, "pid"]);
	                                        var productType = typeOfProduct.getIn(["products", props.product.pid, "type"]);
	                                        if (productType === "personalLoan" || productType === "balanceTransfer") {
	                                            props.dispatch((0, _actionCreators.getTenorTableData)(props.product.pid, productType === "personalLoan" ? "PL" : "BT"));
	                                        }
	                                        return productIsSelected ? props.dispatch((0, _actionCreators.removeCrossProduct)(props.product.pid)) : addCrossProduct({ state: props.state, dispatch: props.dispatch }, productCurrencies, familyType, productType, props.product.pid, typeOfProduct);
	                                    }
	                                },
	                                buttonText
	                            )
	                        ),
	                        _react2.default.createElement(
	                            "div",
	                            { className: "crossSelling-item-desc-container" },
	                            _react2.default.createElement(
	                                "ul",
	                                null,
	                                props.product.productDesc.map(function (desc, i) {
	                                    return _react2.default.createElement("li", { key: i, className: "crossSelling-item-desc" + selected, dangerouslySetInnerHTML: { __html: desc } });
	                                })
	                            )
	                        )
	                    )
	                )
	            )
	        )
	    );
	};
	
	var CrossSellingDesktop = function CrossSellingDesktop(props) {
	    var formData = props.formData;
	
	    var productIds = props.state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	    return _react2.default.createElement(
	        "div",
	        { className: "crossSelling-container" },
	        _react2.default.createElement(
	            "div",
	            { className: "crossSelling-title" },
	            formData.formSteps.accountDetails["crossSellSubtitle-Default"]
	        ),
	        props.crossSellProducts.length > 1 ? _react2.default.createElement(
	            "div",
	            { className: "crossSelling-items-container" },
	            _react2.default.createElement(
	                _reactSlick2.default,
	                { responsive: responsive },
	                props.crossSellProducts.map(function (product, i) {
	                    return _react2.default.createElement(CrossSellingItem, Object.assign({}, props, {
	                        key: i,
	                        product: product,
	                        isMandatory: props.mandatoryProductIds.includes(product.pid),
	                        dispatch: props.dispatch,
	                        state: props.state,
	                        disable: (0, _utils.isExistCreditOrDebit)(product.pid, productIds, _common.CREDIT_CARDS, _common.DEDIT_CARDS),
	                        buttons: props.buttons
	                    }));
	                })
	            )
	        ) : _react2.default.createElement(
	            "div",
	            { className: "crossSelling-items-container" },
	            props.crossSellProducts.map(function (product, i) {
	                return _react2.default.createElement(CrossSellingItem, Object.assign({}, props, {
	                    key: i,
	                    product: product,
	                    isMandatory: props.mandatoryProductIds.includes(product.pid),
	                    dispatch: props.dispatch,
	                    state: props.state,
	                    disable: false,
	                    buttons: props.buttons
	                }));
	            })
	        )
	    );
	};
	
	CrossSellingItem.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    productsConfig: _react.PropTypes.object.isRequired,
	    product: _react.PropTypes.object.isRequired,
	    isMandatory: _react.PropTypes.bool.isRequired,
	    dispatch: _react.PropTypes.func.isRequired,
	    buttons: _react.PropTypes.object.isRequired
	};
	
	CrossSellingDesktop.propTypes = {
	    buttons: _react.PropTypes.object.isRequired,
	    crossSellProducts: _react.PropTypes.array.isRequired,
	    formData: _react.PropTypes.object.isRequired,
	    state: _reactImmutableProptypes2.default.map.isRequired
	};
	
	exports.default = CrossSellingDesktop;

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSlick = __webpack_require__(318);
	
	var _reactSlick2 = _interopRequireDefault(_reactSlick);
	
	__webpack_require__(150);
	
	__webpack_require__(459);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _immutable = __webpack_require__(13);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _utils = __webpack_require__(9);
	
	var _common = __webpack_require__(65);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var responsive = [{ breakpoint: 800,
	    settings: {
	        dots: true,
	        infinite: false,
	        speed: 500,
	        slidesToShow: 1.05
	    }
	}];
	
	var addCrossProduct = function addCrossProduct(app, productCurrencies, familyType, productType, productId, typeOfProduct) {
	    var name = app.state.getIn(["ui", "accountDetails", "nameOntheCard_" + familyType, "value"], app.state.getIn(["data", "fullName"]));
	    var preferedDailyLimit = app.state.getIn(["ui", "accountDetails", "cardLimit_" + familyType, "value"], "2000");
	    var activateAtms = app.state.getIn(["ui", "accountDetails", "activateAtms_" + familyType, "value"], true);
	    var toggleSameValue = app.state.getIn(["data", "samePurposeToggle"], false);
	    var casaProducts = app.state.getIn(["data", "products"]).filter(function (value, index) {
	        return typeOfProduct.getIn(["products", index, "type"], false) === "CASA";
	    });
	
	    var defaultValues = toggleSameValue ? casaProducts.first().get("currencies").first() : (0, _immutable.Map)({ purposeOfFunds: "", sourceOfFunds: "", countryOfFunds: "SG" });
	
	    switch (productType) {
	        case "CASA":
	            if (productId === "SAVJS") {
	                return app.dispatch((0, _actionCreators.addSAVJSProduct)(productId, productCurrencies, familyType, defaultValues));
	            }
	            app.dispatch((0, _actionCreators.addCrossProductCasa)(productId, productCurrencies, familyType, { name: name.toUpperCase(), preferedDailyLimit: preferedDailyLimit, activateAtms: activateAtms }, defaultValues));
	            break;
	        case "Card":
	            app.dispatch((0, _actionCreators.addCrossProductCards)(productId, familyType, name.toUpperCase(), preferedDailyLimit, activateAtms));
	            break;
	        default:
	            app.dispatch((0, _actionCreators.addCrossProductUnsecuredLoan)(productId));
	    }
	    return null;
	};
	
	var CrossSellingItem = function CrossSellingItem(props) {
	    var productsConfig = props.productsConfig;
	
	    var typeOfProduct = (0, _immutable.fromJS)(productsConfig);
	    var productIds = props.state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	    var productIsSelected = productIds.includes(props.product.pid);
	    var selected = productIsSelected ? "--selected" : "";
	    var buttonDisableClass = props.isMandatory ? "crossSelling-item-button--disable" : "";
	    var buttonText = productIsSelected ? props.buttons.remove : props.buttons.add;
	    buttonText = props.isMandatory ? props.buttons.mandatory : buttonText;
	    var imagePath = productsConfig.products[props.product.pid].imgPathCrossell;
	    var disable = props.disable ? " crossSelling-item-info-container--disable" : "";
	    return _react2.default.createElement(
	        "div",
	        { className: "crossSelling-item" + selected },
	        _react2.default.createElement(
	            "div",
	            { className: "crossSelling-item-info-box--mobile" + selected },
	            _react2.default.createElement(
	                "div",
	                { className: "crossSelling-item-info" + selected },
	                _react2.default.createElement(
	                    "div",
	                    { className: "crossSelling-item-info-container" + selected + disable },
	                    _react2.default.createElement("img", {
	                        className: "crossSelling-item-image",
	                        src: imagePath,
	                        alt: "productImg"
	                    }),
	                    _react2.default.createElement(
	                        "div",
	                        { className: "crossSelling-titleDescButton" },
	                        _react2.default.createElement(
	                            "div",
	                            { className: "crossSelling-titleAndDesc--mobile" },
	                            _react2.default.createElement(
	                                "div",
	                                { className: "crossSelling-item-title-container" },
	                                _react2.default.createElement(
	                                    "div",
	                                    { className: "crossSelling-item-title" + selected },
	                                    props.product.productName
	                                )
	                            ),
	                            _react2.default.createElement(
	                                "div",
	                                { className: "crossSelling-item-desc-container" },
	                                _react2.default.createElement(
	                                    "ul",
	                                    null,
	                                    props.product.productDesc.map(function (desc, i) {
	                                        return _react2.default.createElement("li", { key: i, className: "crossSelling-item-desc" + selected, dangerouslySetInnerHTML: { __html: desc } });
	                                    })
	                                )
	                            )
	                        ),
	                        _react2.default.createElement(
	                            "button",
	                            {
	                                className: "crossSelling-item-button " + buttonDisableClass,
	                                onClick: function onClick() {
	                                    var productCurrencies = (0, _immutable.Map)(_defineProperty({}, props.product.pid, typeOfProduct.getIn(["products", props.product.pid, "currencies", "values"])));
	                                    var familyType = typeOfProduct.getIn(["products", props.product.pid, "pid"]);
	                                    var productType = typeOfProduct.getIn(["products", props.product.pid, "type"]);
	                                    if (productType === "personalLoan" || productType === "balanceTransfer") {
	                                        props.dispatch((0, _actionCreators.getTenorTableData)(props.product.pid, productType === "personalLoan" ? "PL" : "BT"));
	                                    }
	                                    return productIsSelected ? props.dispatch((0, _actionCreators.removeCrossProduct)(props.product.pid)) : addCrossProduct({ state: props.state, dispatch: props.dispatch }, productCurrencies, familyType, productType, props.product.pid, typeOfProduct);
	                                }
	                            },
	                            buttonText
	                        )
	                    )
	                )
	            )
	        )
	    );
	};
	
	var CrossSellingMobile = function CrossSellingMobile(props) {
	    var formData = props.formData;
	
	    var productIds = props.state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	    return _react2.default.createElement(
	        "div",
	        { className: "crossSelling-container--mobile" },
	        _react2.default.createElement(
	            "div",
	            { className: "crossSelling-title" },
	            formData.formSteps.accountDetails["crossSellSubtitle-Default"]
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "crossSelling-items-container--mobile" },
	            _react2.default.createElement(
	                _reactSlick2.default,
	                { responsive: responsive },
	                props.crossSellProducts.map(function (product, i) {
	                    return _react2.default.createElement(CrossSellingItem, Object.assign({}, props, {
	                        key: i,
	                        product: product,
	                        isMandatory: props.mandatoryProductIds.includes(product.pid),
	                        dispatch: props.dispatch,
	                        state: props.state,
	                        disable: (0, _utils.isExistCreditOrDebit)(product.pid, productIds, _common.CREDIT_CARDS, _common.DEDIT_CARDS),
	                        buttons: props.buttons
	                    }));
	                })
	            )
	        )
	    );
	};
	
	CrossSellingItem.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    productsConfig: _react.PropTypes.object.isRequired,
	    product: _react.PropTypes.object.isRequired,
	    isMandatory: _react.PropTypes.bool.isRequired,
	    dispatch: _react.PropTypes.func.isRequired,
	    buttons: _react.PropTypes.object.isRequired
	};
	
	CrossSellingMobile.propTypes = {
	    buttons: _react.PropTypes.object.isRequired,
	    crossSellProducts: _react.PropTypes.array.isRequired,
	    formData: _react.PropTypes.object.isRequired,
	    state: _reactImmutableProptypes2.default.map.isRequired
	};
	
	exports.default = CrossSellingMobile;

/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _immutable = __webpack_require__(13);
	
	var _Dropdown = __webpack_require__(34);
	
	var _Dropdown2 = _interopRequireDefault(_Dropdown);
	
	var _DropdownWithFlag = __webpack_require__(52);
	
	var _DropdownWithFlag2 = _interopRequireDefault(_DropdownWithFlag);
	
	var _ToggleInput = __webpack_require__(37);
	
	var _ToggleInput2 = _interopRequireDefault(_ToggleInput);
	
	var _actionCreators = __webpack_require__(3);
	
	var _countriesMaps = __webpack_require__(23);
	
	var _inputsConstant = __webpack_require__(10);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var currencyFullName = {
	    SGD: "Singapore Dollar",
	    EUR: "Euro",
	    USD: "U.S. Dollar",
	    AUD: "Australian Dollar",
	    GBP: "British Pound",
	    CHN: "Chinese Yuan",
	    JPY: "Japanese Yuan",
	    HKD: "Hong Kong Dollar",
	    CAD: "Canadian Dollar",
	    NZD: "New Zealand Dollar",
	    CHF: "Swiss Franc"
	};
	
	var purposeOfFundsFunction = function purposeOfFundsFunction(sameValues, props) {
	    if (sameValues) {
	        return function (item) {
	            return props.dispatch((0, _actionCreators.updatePurposeOfFundsForAll)(item.value));
	        };
	    }
	    return props.pid === "CURFX" ? function (item) {
	        return props.dispatch((0, _actionCreators.updatePurposeOfFundsForFx)(item.value, "CURFX"));
	    } : function (item) {
	        return props.dispatch((0, _actionCreators.updatePurposeOfFunds)(props.currency, item.value, props.pid, props.familyType));
	    };
	};
	
	var sourceOfFundsFunction = function sourceOfFundsFunction(sameValues, props) {
	    if (sameValues) {
	        return function (item) {
	            return props.dispatch((0, _actionCreators.updateSourceOfFundsForAll)(item.value));
	        };
	    }
	    return props.pid === "CURFX" ? function (item) {
	        return props.dispatch((0, _actionCreators.updateSourceOfFundsForFx)(item.value, "CURFX"));
	    } : function (item) {
	        return props.dispatch((0, _actionCreators.updateSourceOfFunds)(props.currency, item.value, props.pid, props.familyType));
	    };
	};
	
	var countryOfFundsFunction = function countryOfFundsFunction(sameValues, props) {
	    if (sameValues) {
	        return function (item) {
	            return props.dispatch((0, _actionCreators.updateCountryOfFundsForAll)(item.value));
	        };
	    }
	    return props.pid === "CURFX" ? function (item) {
	        return props.dispatch((0, _actionCreators.updateCountryOfFundsForFx)(item.value, "CURFX"));
	    } : function (item) {
	        return props.dispatch((0, _actionCreators.updateCountryOfFunds)(props.currency, item.value, props.pid, props.familyType));
	    };
	};
	
	var CurrencyDetails = function (_Component) {
	    _inherits(CurrencyDetails, _Component);
	
	    function CurrencyDetails() {
	        _classCallCheck(this, CurrencyDetails);
	
	        return _possibleConstructorReturn(this, (CurrencyDetails.__proto__ || Object.getPrototypeOf(CurrencyDetails)).apply(this, arguments));
	    }
	
	    _createClass(CurrencyDetails, [{
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            var FormConfig = props.FormConfig;
	            var productsConfig = props.productsConfig;
	
	            var typeOfProduct = (0, _immutable.fromJS)(productsConfig.products);
	            var sameValues = props.state.getIn(["data", "samePurposeToggle"], false);
	            var purposeOfFundsOnClick = purposeOfFundsFunction(sameValues, props);
	            var sourceOfFundsOnClick = sourceOfFundsFunction(sameValues, props);
	            var countryOfFundsOnClick = countryOfFundsFunction(sameValues, props);
	
	            var _ref = new FormConfig("accountDetails");
	
	            var inputLabels = _ref.inputLabels;
	
	            var additionalTitle = void 0;
	            if (props.pid !== "SAVJS") {
	                additionalTitle = props.pid !== ("CURDAA" || "CURJP") ? "Additional information for " + typeOfProduct.getIn([props.pid, "productName"]) : "Additional information for " + currencyFullName[props.currency];
	            } else {
	                additionalTitle = null;
	            }
	            var familyType = typeOfProduct.getIn([props.pid, "family"]);
	            var isDebt1 = familyType === "debt1";
	
	            return _react2.default.createElement(
	                "div",
	                null,
	                _react2.default.createElement(
	                    "p",
	                    { className: "account-details--currency" },
	                    additionalTitle
	                ),
	                _react2.default.createElement(_Dropdown2.default, Object.assign({
	                    inputID: props.pid + "-" + _inputsConstant.PURPOSE_OF_FUNDS + "-" + props.currency,
	                    inputLabel: inputLabels[_inputsConstant.PURPOSE_OF_FUNDS],
	                    dropdownItems: props.inputValues[_inputsConstant.PURPOSE_OF_FUNDS],
	                    onClick: purposeOfFundsOnClick,
	                    value: props.state.getIn(["data", "products", props.pid, "currencies", props.currency, "purposeOfFunds"])
	                }, props)),
	                _react2.default.createElement(
	                    "div",
	                    { className: "account-details--separator" },
	                    _react2.default.createElement(_Dropdown2.default, Object.assign({
	                        inputID: props.pid + "-" + _inputsConstant.SOURCE_OF_FUNDS + "-" + props.currency,
	                        inputLabel: inputLabels[_inputsConstant.SOURCE_OF_FUNDS],
	                        dropdownItems: props.inputValues[_inputsConstant.SOURCE_OF_FUNDS],
	                        onClick: sourceOfFundsOnClick,
	                        value: props.state.getIn(["data", "products", props.pid, "currencies", props.currency, "sourceOfFunds"])
	                    }, props))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "account-details--separator" },
	                    _react2.default.createElement(_DropdownWithFlag2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.COUNTRY_OF_FUNDS],
	                        inputID: props.pid + "-" + _inputsConstant.COUNTRY_OF_FUNDS + "-" + props.currency,
	                        dropdownWithFlagItems: _countriesMaps.countriesLabelValue,
	                        onClick: countryOfFundsOnClick,
	                        value: props.state.getIn(["data", "products", props.pid, "currencies", props.currency, "countryOfFunds"])
	                    }, props))
	                ),
	                props.isFirst && props.displayToggle && _react2.default.createElement(
	                    "div",
	                    { className: "account-details--separator" },
	                    _react2.default.createElement(_ToggleInput2.default, Object.assign({
	                        description: "Is the purpose and source of funds same for all accounts ?",
	                        inputID: "samePurposeToggle",
	                        componentDidMount: function componentDidMount() {
	                            var primaryValue = props.state.getIn(["data", "products", props.pid, "currencies"], (0, _immutable.List)((0, _immutable.Map)({
	                                purposeOfFunds: "",
	                                sourceOfFunds: "",
	                                countryOfFunds: "SG"
	                            }))).first();
	                            return props.dispatch((0, _actionCreators.toggleSameStatus)(true, primaryValue, props.pid, props.currency));
	                        },
	                        onClick: function onClick() {
	                            var primaryValue = props.state.getIn(["data", "products", props.pid, "currencies"]).first();
	                            if (isDebt1) {
	                                return null;
	                            }
	                            return props.dispatch((0, _actionCreators.toggleSameStatus)(!sameValues, primaryValue, props.pid, props.currency));
	                        },
	                        value: sameValues
	                    }, props))
	                )
	            );
	        }
	    }]);
	
	    return CurrencyDetails;
	}(_react.Component);
	
	exports.default = CurrencyDetails;

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _immutable = __webpack_require__(13);
	
	var _actionCreators = __webpack_require__(3);
	
	__webpack_require__(460);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Currency = function Currency(props) {
	    var isSelected = props.selectedCurrencies.has(props.currency) ? "input-items input-items--selected" : "input-items";
	    return _react2.default.createElement(
	        "div",
	        { className: isSelected, onClick: props.onClick },
	        props.currency
	    );
	};
	
	var CurrencySelection = function CurrencySelection(props) {
	    var selectedCurrencies = props.state.getIn(["data", "products", props.pid, "currencies"], (0, _immutable.Map)());
	    return _react2.default.createElement(
	        "div",
	        { className: "selection-input-container" },
	        _react2.default.createElement(
	            "div",
	            { className: "input-label" },
	            "Currencies"
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "input-selection" },
	            props.currencies.map(function (currency) {
	                return _react2.default.createElement(Currency, {
	                    currency: currency,
	                    selectedCurrencies: selectedCurrencies,
	                    onClick: function onClick() {
	                        if (props.clickable) {
	                            props.dispatchUpdateCurrencies(currency, props.step, props.inputID, props.pid);
	                        }
	                    },
	                    key: "currency-" + currency
	                });
	            })
	        )
	    );
	};
	
	CurrencySelection.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    pid: _react.PropTypes.string.isRequired,
	    currency: _react.PropTypes.string,
	    currencies: _reactImmutableProptypes2.default.list.isRequired
	};
	
	Currency.propTypes = {
	    selectedCurrencies: _reactImmutableProptypes2.default.map.isRequired,
	    onClick: _react.PropTypes.func.isRequired,
	    currency: _react.PropTypes.string.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchUpdateCurrencies: (0, _redux.bindActionCreators)(_actionCreators.updateCurrencies, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(CurrencySelection);

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(7);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _redux = __webpack_require__(6);
	
	var _actionCreators = __webpack_require__(3);
	
	__webpack_require__(461);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DialogModal = function DialogModal(props) {
	    var formData = props.formData;
	    var dialogType = props.dialogType;
	
	    return _react2.default.createElement(
	        "div",
	        { className: "dialog-back-container" },
	        _react2.default.createElement(
	            "div",
	            { className: "dialog-containter" },
	            _react2.default.createElement(
	                "div",
	                { className: "dialog-content-container" },
	                _react2.default.createElement(
	                    "div",
	                    { className: "dialog-content" },
	                    formData[dialogType].content
	                ),
	                formData[dialogType].primaryButton && _react2.default.createElement(
	                    "a",
	                    { href: formData[dialogType].primaryButton.link, className: "dialog-primary-button" },
	                    formData[dialogType].primaryButton.text
	                ),
	                formData[dialogType].secondaryButton && _react2.default.createElement(
	                    "button",
	                    {
	                        onClick: function onClick() {
	                            return props.dispatchCloseDialogModal(dialogType);
	                        },
	                        className: "dialog-secondary-button"
	                    },
	                    formData[dialogType].secondaryButton.text
	                )
	            )
	        )
	    );
	};
	
	DialogModal.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    dispatchCloseDialogModal: _react.PropTypes.func.isRequired,
	    formData: _react.PropTypes.object.isRequired,
	    dialogType: _react.PropTypes.string.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchCloseDialogModal: (0, _redux.bindActionCreators)(_actionCreators.closeDialogModal, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(DialogModal);

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	__webpack_require__(462);
	
	var _elementResizeEvent = __webpack_require__(148);
	
	var _elementResizeEvent2 = _interopRequireDefault(_elementResizeEvent);
	
	var _Accordian = __webpack_require__(19);
	
	var _Accordian2 = _interopRequireDefault(_Accordian);
	
	var _path = __webpack_require__(4);
	
	var _actionCreators = __webpack_require__(3);
	
	var _utils = __webpack_require__(9);
	
	var _ValidatorHOC = __webpack_require__(20);
	
	var _api = __webpack_require__(51);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var getErrorContainerStyle = function getErrorContainerStyle(validOrNotDirty) {
	    return validOrNotDirty ? "" : "draw-signature--main-container--error";
	};
	
	var DrawSignature = function DrawSignature(props) {
	    var FormConfig = props.FormConfig;
	
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 5);
	
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var errorMsg = _getInputStates2[3];
	    var inputValue = _getInputStates2[4];
	
	    var fileUploadErrorMsg = props.formData["formInputErrorMessages"]["fileUploadError"];
	    var showErrorLabel = (0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : "file-upload--error";
	    var descriptionContent = inputValue ? inputValue.replace(/^.*[\\\/]/, "") : props.description;
	    var canvasContainerDivRef = document.getElementById("draw-signature--canvas-frame");
	    var isCanvasEditable = props.state.getIn((0, _path.uiDrawSignatureIsEditablePath)(props.step, props.inputID), false);
	    var isCanvasTouched = isCanvasEditable ? "--invisible" : "";
	    var signatureContent = props.state.getIn((0, _path.uiSignatureImageContentPath)(props.step, props.inputID), "");
	    var errorContainerStyle = getErrorContainerStyle((0, _utils.isValidOrNotDirty)(isValid, isDirty));
	    var canvasWidth = canvasContainerDivRef ? canvasContainerDivRef.offsetWidth : 600;
	    var canvasHeight = 200;
	    var ctx = void 0;
	    var canvasRef = void 0;
	    var flag = false;
	    var prevX = 0;
	    var currX = 0;
	    var prevY = 0;
	    var currY = 0;
	    var dot_flag = false;
	    var x = "black";
	    var y = 2;
	    var signature = new FormConfig(props.step);
	    var termsAndConditions = signature.termsAndConditions;
	    var inputDescriptions = signature.inputDescriptions;
	
	
	    if (canvasContainerDivRef) {
	        (0, _elementResizeEvent2.default)(canvasContainerDivRef, function () {
	            if (ctx) {
	                ctx.canvas.width = canvasContainerDivRef.offsetWidth;
	            }
	        });
	    }
	
	    var draw = function draw() {
	        ctx.beginPath();
	        ctx.moveTo(prevX, prevY);
	        ctx.lineTo(currX, currY);
	        ctx.strokeStyle = x;
	        ctx.lineWidth = y;
	        ctx.stroke();
	        ctx.closePath();
	    };
	
	    var findxy = function findxy(res, e) {
	        var rect = canvasRef.getBoundingClientRect();
	        if (res === "down") {
	            prevX = currX;
	            prevY = currY;
	            currX = e.touches[0].clientX - rect.left;
	            currY = e.touches[0].clientY - rect.top;
	            flag = true;
	            dot_flag = true;
	
	            if (dot_flag) {
	                ctx.beginPath();
	                ctx.fillStyle = x;
	                ctx.fillRect(currX, currY, 2, 2);
	                ctx.closePath();
	                dot_flag = false;
	            }
	        }
	
	        if (res === "up" || res === "out") {
	            flag = false;
	        }
	
	        if (res === "move") {
	            if (flag) {
	                prevX = currX;
	                prevY = currY;
	                currX = e.touches[0].clientX - rect.left;
	                currY = e.touches[0].clientY - rect.top;
	                draw();
	            }
	        }
	    };
	
	    return _react2.default.createElement(
	        "div",
	        { id: props.inputID },
	        _react2.default.createElement(
	            "div",
	            { className: "draw-signature--main-container-flex " + errorContainerStyle },
	            _react2.default.createElement(
	                "div",
	                { className: "draw-signature--container" },
	                _react2.default.createElement(
	                    "div",
	                    { id: "title", className: "draw-signature--text-container" },
	                    _react2.default.createElement(
	                        "div",
	                        { className: "draw-signature--title " + showErrorLabel },
	                        "" + props.title + ((0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : " " + errorMsg)
	                    ),
	                    _react2.default.createElement(
	                        "div",
	                        { className: "draw-signature--description" },
	                        descriptionContent
	                    )
	                )
	            ),
	            _react2.default.createElement(
	                "div",
	                { className: "draw-signature--canvas-main-container" },
	                _react2.default.createElement(
	                    "div",
	                    { id: "draw-signature--canvas-frame", className: "draw-signature--canvas-frame-container" },
	                    _react2.default.createElement(
	                        "div",
	                        {
	                            className: "draw-signature--canvas-text-wrapper" + isCanvasTouched,
	                            onTouchEnd: function onTouchEnd() {
	                                return !signatureContent && props.dispatchSetCanvasTouched(props.step, props.inputID, true);
	                            },
	                            onClick: function onClick() {
	                                return !signatureContent && props.dispatchSetCanvasTouched(props.step, props.inputID, true);
	                            }
	                        },
	                        _react2.default.createElement(
	                            "div",
	                            { className: "draw-signature--canvas-text" },
	                            signatureContent ? inputDescriptions.drawSignatureClear : inputDescriptions.drawSignatureTouch
	                        )
	                    ),
	                    signatureContent ? _react2.default.createElement("img", { src: signatureContent }) : _react2.default.createElement("canvas", {
	                        className: "draw-signature--canvas",
	                        ref: function ref(canvas) {
	                            canvasRef = canvas;
	                            ctx = canvas ? canvas.getContext("2d") : null;
	                            if (ctx) {
	                                ctx.fillStyle = "white";
	                                ctx.fillRect(0, 0, canvasRef.width, canvasRef.height);
	                            }
	                        },
	                        id: "canvas",
	                        width: canvasWidth,
	                        height: canvasHeight,
	                        onTouchStart: function onTouchStart(e) {
	                            e.preventDefault();
	                            e.stopPropagation();
	                            findxy("down", e);
	                            return false;
	                        },
	                        onTouchMove: function onTouchMove(e) {
	                            e.preventDefault();
	                            findxy("move", e);
	                        },
	                        onTouchEnd: function onTouchEnd(e) {
	                            e.preventDefault();
	                            e.stopPropagation();
	                            findxy("up", e);
	                        },
	                        onTouchCancel: function onTouchCancel(e) {
	                            e.preventDefault();
	                            e.stopPropagation();
	                            findxy("out", e);
	                        }
	                    })
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "draw-signature--buttons-container" },
	                    _react2.default.createElement(
	                        "div",
	                        {
	                            className: "draw-signature--button-save",
	                            onClick: function onClick() {
	                                var content = canvasRef ? canvasRef.toDataURL() : signatureContent;
	                                props.dispatchSetSignatureImageContent(props.step, props.inputID, content);
	                                var actions = {
	                                    successDispatch: function successDispatch() {
	                                        return props.dispatchSetSignatureStatusToTrue(props.step, props.inputID);
	                                    },
	                                    errorDispatch: function errorDispatch() {
	                                        return props.dispatchErrorUploadFile(fileUploadErrorMsg);
	                                    },
	                                    progressDispatch: function progressDispatch(progress) {
	                                        return props.dispatchupdateUploadProgress(props.step, props.inputID, progress);
	                                    }
	                                };
	                                canvasRef.toBlob(function (blob) {
	                                    (0, _utils.fileUploadHelper)(blob, (0, _api.fileUploadUrl)(), props.inputID, actions);
	                                });
	                            }
	                        },
	                        "Save"
	                    ),
	                    _react2.default.createElement(
	                        "div",
	                        {
	                            className: "draw-signature--button-cancel",
	                            onClick: function onClick() {
	                                // ctx.clearRect(0, 0, canvasRef.width, canvasRef.height);
	                                props.dispatchClearSignatureImageContent(props.step, props.inputID, "");
	                            }
	                        },
	                        "Clear"
	                    )
	                ),
	                _react2.default.createElement("div", { className: "draw-signature--separator" }),
	                _react2.default.createElement(_Accordian2.default, Object.assign({}, props, {
	                    title: termsAndConditions["signature"],
	                    content: termsAndConditions["signatureContent"],
	                    inputID: "default"
	                }))
	            )
	        )
	    );
	};
	
	DrawSignature.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    inputID: _react.PropTypes.string.isRequired,
	    title: _react.PropTypes.string.isRequired,
	    description: _react.PropTypes.string,
	    FormConfig: _react.PropTypes.func.isRequired,
	    formData: _react.PropTypes.object.isRequired,
	    dispatchClearSignatureImageContent: _react.PropTypes.func.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchSetSignatureImageContent: (0, _redux.bindActionCreators)(_actionCreators.setSignatureImageContent, dispatch),
	        dispatchSetSignatureImageWidth: (0, _redux.bindActionCreators)(_actionCreators.setSignatureImageWidth, dispatch),
	        dispatchSetSignatureImageHeight: (0, _redux.bindActionCreators)(_actionCreators.setSignatureImageHeight, dispatch),
	        dispatchSetCanvasTouched: (0, _redux.bindActionCreators)(_actionCreators.setDrawSignatureIsTouched, dispatch),
	        dispatchClearSignatureImageContent: (0, _redux.bindActionCreators)(_actionCreators.clearSignatureImageContent, dispatch),
	        dispatchupdateUploadProgress: (0, _redux.bindActionCreators)(_actionCreators.updateUploadProgress, dispatch),
	        dispatchSetSignatureStatusToTrue: (0, _redux.bindActionCreators)(_actionCreators.setSignatureStatusToTrue, dispatch),
	        dispatchSetDrawSignatureDirtyToFalse: (0, _redux.bindActionCreators)(_actionCreators.setDrawSignatureDirtyToFalse, dispatch),
	        dispatchErrorUploadFile: (0, _redux.bindActionCreators)(_actionCreators.errorUploadFile, dispatch)
	    };
	};
	
	exports.default = (0, _ValidatorHOC.validatorHOC)((0, _reactRedux.connect)(null, mapDispatchToProps)(DrawSignature));

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* global FORMS_CNFG_GLBL */
	
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _reactScrollLockComponent = __webpack_require__(317);
	
	var _reactScrollLockComponent2 = _interopRequireDefault(_reactScrollLockComponent);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _countriesMaps = __webpack_require__(23);
	
	__webpack_require__(463);
	
	var _utils = __webpack_require__(9);
	
	var _ValidatorHOC = __webpack_require__(20);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var getFlag = function getFlag(value) {
	    return value ? FORMS_CNFG_GLBL.imgPath + "/countriesFlags/" + value.toLowerCase() + ".svg" : "";
	};
	var getFlagClass = function getFlagClass(flagSrc) {
	    return flagSrc ? "" : "--invisible";
	};
	var getFocus = function getFocus(isFocus, isValid, isDirty, value) {
	    return isFocus || value || !(0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "--focused" : "";
	};
	var getErrorContainerStyle = function getErrorContainerStyle(validOrNotDirty) {
	    return validOrNotDirty ? "" : "dropdownWithFlag--content--error";
	};
	var DropdownWithFlag = function DropdownWithFlag(props) {
	    var renderDropdownWithFlagItems = function renderDropdownWithFlagItems(myFunc) {
	        return function (item, i) {
	            return _react2.default.createElement(
	                "div",
	                {
	                    key: i,
	                    onClick: myFunc ? function () {
	                        myFunc(item);
	                        props.dispatchOnBlurInput(props.step, props.inputID, false);
	                    } : function () {
	                        props.dispatchOnEditInput(props.inputID, item.value, true, props.step);
	                        props.dispatchOnBlurInput(props.step, props.inputID, false);
	                    },
	                    className: "dropdownWithFlag-selection-item"
	                },
	                item.label
	            );
	        };
	    };
	
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 5);
	
	    var isFocus = _getInputStates2[0];
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var errorMsg = _getInputStates2[3];
	    var inputValue = _getInputStates2[4];
	
	
	    var mapValueToLabel = function mapValueToLabel(arrayOfItems, value) {
	        var item = arrayOfItems.find(function (x) {
	            return x.value === value;
	        });
	        return item ? item.label : value;
	    };
	    var value = props.value ? props.value : inputValue;
	    var focus = getFocus(isFocus, isValid, isDirty, value);
	    var showErrorLabel = (0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : "dropdownLabel--error";
	    var searchFocus = isFocus || !(!isValid || isDirty) ? "--focused" : "";
	    var errorContainerStyle = getErrorContainerStyle((0, _utils.isValidOrNotDirty)(isValid, isDirty));
	
	    // const country = countriesNamesMap[value];
	    // const countryCode = country ? country : value;
	
	    var flagSrc = getFlag(value);
	    var flagVisibility = getFlagClass(flagSrc);
	    var renderItems = renderDropdownWithFlagItems(props.onClick);
	    var searchValue = props.state.getIn((0, _path.uiDropDownSearchValuePath)(props.step, props.inputID), "");
	    var disabled = props.disabled ? props.disabled : false;
	    var searchRef = void 0;
	
	    return _react2.default.createElement(
	        "div",
	        { id: props.inputID, className: "dropdownWithFlag", tabIndex: "1" },
	        _react2.default.createElement(
	            "div",
	            {
	                className: "dropdownWithFlag-container" + focus,
	                onClick: function onClick() {
	                    if (disabled) {
	                        return null;
	                    }
	                    if (isFocus) {
	                        return props.dispatchOnBlurInput(props.step, props.inputID, false);
	                    }
	                    var searchInput = searchRef;
	                    setTimeout(function () {
	                        return searchInput.focus();
	                    }, 0);
	                    return props.dispatchOnFocusInput(props.step, props.inputID, true);
	                }
	            },
	            _react2.default.createElement(
	                "div",
	                { className: "dropdownWithFlag--content " + errorContainerStyle },
	                _react2.default.createElement(
	                    "div",
	                    { className: "dropdownWithFlag--content-left" },
	                    _react2.default.createElement(
	                        "div",
	                        { className: "dropdownWithFlag--inputLabel" + focus + " " + showErrorLabel },
	                        "" + props.inputLabel + ((0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : " " + errorMsg)
	                    ),
	                    _react2.default.createElement(
	                        "div",
	                        { className: "dropdownWithFlag-input-container" },
	                        _react2.default.createElement(
	                            "div",
	                            { className: "dropdownWithFlag-input-flag-container" },
	                            _react2.default.createElement("img", {
	                                className: "dropdownWithFlag-input-flag" + flagVisibility,
	                                src: flagSrc,
	                                alt: "flag"
	                            })
	                        ),
	                        _react2.default.createElement(
	                            "div",
	                            { className: "dropdownWithFlag--value-text" },
	                            mapValueToLabel(_countriesMaps.countriesLabelValue, value)
	                        )
	                    )
	                ),
	                _react2.default.createElement("img", {
	                    className: "dropdownWithFlag--inputArrow",
	                    src: FORMS_CNFG_GLBL.imgPath + "/icon-arrow-solid-down.svg",
	                    alt: "dropdownWithFlag-arrow"
	                })
	            )
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "dropdown--search-and-selection-flex-container" + searchFocus },
	            _react2.default.createElement(
	                "div",
	                { className: "dropdownWithFlag--input-container" + searchFocus },
	                _react2.default.createElement("img", {
	                    src: FORMS_CNFG_GLBL.imgPath + "/cross-grey.svg",
	                    onClick: function onClick() {
	                        return props.dispatchOnBlurInput(props.step, props.inputID, false);
	                    },
	                    className: "dropdownWithFlag--input-searchInput--crossIcon",
	                    alt: "crossIcon"
	                }),
	                _react2.default.createElement("input", { // onKeyDown={handleKeyEvents}
	                    onChange: function onChange(e) {
	                        return props.dispatchOnEditDropDownSearchInput(props.step, props.inputID, e.target.value);
	                    },
	                    onFocus: function onFocus() {
	                        props.dispatchOnFocusInput(props.step, props.inputID, true);
	                    }
	                    // onBlur={() => {
	                    //     props.dispatchOnBlurInput(props.step, props.inputID, false);
	                    // }}
	                    , className: "dropdownWithFlag--searchValue" + searchFocus,
	                    value: searchValue,
	                    placeholder: "Search",
	                    ref: function ref(search) {
	                        return searchRef = search;
	                    }
	                }),
	                _react2.default.createElement("img", {
	                    src: FORMS_CNFG_GLBL.imgPath + "/search_icon.svg",
	                    className: "dropdownWithFlag--input-searchInput--icon",
	                    alt: "searchIcon"
	                })
	            ),
	            _react2.default.createElement(
	                _reactScrollLockComponent2.default,
	                null,
	                _react2.default.createElement(
	                    "div",
	                    { className: "dropdownWithFlag-selection" + searchFocus },
	                    props.dropdownWithFlagItems.filter(function (item) {
	                        return item.label.toLowerCase().includes(searchValue.toLowerCase());
	                    }).map(renderItems),
	                    _react2.default.createElement("div", { className: "iphone-fix" })
	                )
	            )
	        )
	    );
	};
	
	DropdownWithFlag.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    title: _react.PropTypes.string,
	    inputLabel: _react.PropTypes.string,
	    inputID: _react.PropTypes.string,
	    description: _react.PropTypes.string,
	    dropdownWithFlagItems: _react.PropTypes.array,
	    dispatchOnFocusInput: _react.PropTypes.func,
	    dispatchOnBlurInput: _react.PropTypes.func,
	    dispatchOnEditInput: _react.PropTypes.func,
	    step: _react.PropTypes.string.isRequired,
	    value: _react.PropTypes.string,
	    onClick: _react.PropTypes.func,
	    disabled: _react.PropTypes.bool
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchOnFocusInput: (0, _redux.bindActionCreators)(_actionCreators.onFocusInput, dispatch),
	        dispatchOnBlurInput: (0, _redux.bindActionCreators)(_actionCreators.onBlurInput, dispatch),
	        dispatchOnEditInput: (0, _redux.bindActionCreators)(_actionCreators.editInput, dispatch),
	        dispatchOnEditDropDownSearchInput: (0, _redux.bindActionCreators)(_actionCreators.editDropDownSearchInput, dispatch)
	    };
	};
	
	exports.default = (0, _ValidatorHOC.validatorHOC)((0, _reactRedux.connect)(null, mapDispatchToProps)(DropdownWithFlag));

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* global FORMS_CNFG_GLBL */
	
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactScrollLockComponent = __webpack_require__(317);
	
	var _reactScrollLockComponent2 = _interopRequireDefault(_reactScrollLockComponent);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _utils = __webpack_require__(9);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	__webpack_require__(464);
	
	var _ValidatorHOC = __webpack_require__(20);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var getValue = function getValue(propsValue, inputValue) {
	    return propsValue ? propsValue : inputValue;
	};
	
	var getFocus = function getFocus(isFocus, value, isValid, isDirty) {
	    return isFocus || value || !(0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "--focused" : "";
	};
	
	var EditableDropdown = function EditableDropdown(props) {
	    var renderDropdownItems = function renderDropdownItems(myFunc) {
	        return function (item, i) {
	            return _react2.default.createElement(
	                "div",
	                {
	                    key: i,
	                    onClick: myFunc ? function () {
	                        myFunc(item);
	                        props.dispatchOnBlurInput(props.step, props.inputID, false);
	                    } : function () {
	                        props.dispatchOnEditInput(props.inputID, item.value, true, props.step);
	                        props.dispatchOnBlurInput(props.step, props.inputID, false);
	                    },
	                    className: "dropdown-selection-item"
	                },
	                item.label
	            );
	        };
	    };
	
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 5);
	
	    var isFocus = _getInputStates2[0];
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var errorMsg = _getInputStates2[3];
	    var inputValue = _getInputStates2[4];
	    var dropdownItems = props.dropdownItems;
	
	    var mapValueToLabel = function mapValueToLabel(arrayOfItems, value) {
	        var item = arrayOfItems.find(function (x) {
	            return x.value === value;
	        });
	        //return item ? item.label : value;
	        return item ? item.label : "";
	    };
	    var value = getValue(props.value, inputValue);
	    var focus = getFocus(isFocus, value, isValid, isDirty);
	    var searchValue = props.state.getIn((0, _path.uiDropDownSearchValuePath)(props.step, props.inputID), "");
	    var showErrorLabel = (0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : "dropdownLabel--error";
	    var containerErrorStyle = (0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : "dropdown--content--error";
	    // const searchFocus = isFocus || !(!isValid || isDirty) ? "--focused" : "";
	    var searchFocus = isFocus ? "--focused" : "";
	    var renderItems = renderDropdownItems(props.onClick);
	    var searchRef = void 0;
	
	    return _react2.default.createElement(
	        "div",
	        { id: props.inputID, className: "dropdown", tabIndex: "1" },
	        _react2.default.createElement(
	            "div",
	            { className: "dropdown--vertical-container" },
	            _react2.default.createElement(
	                "div",
	                {
	                    className: "dropdown-container" + focus,
	                    onClick: function onClick() {
	                        if (isFocus) {
	                            return props.dispatchOnBlurInput(props.step, props.inputID, false);
	                        }
	                        var searchInput = searchRef;
	                        if (dropdownItems.length > 5) {
	                            setTimeout(function () {
	                                return searchInput.focus();
	                            }, 0);
	                        }
	                        return props.dispatchOnFocusInput(props.step, props.inputID, true);
	                    }
	                },
	                _react2.default.createElement(
	                    "div",
	                    { className: "dropdown--content " + containerErrorStyle },
	                    _react2.default.createElement(
	                        "div",
	                        { className: "dropdown--content-left" },
	                        _react2.default.createElement(
	                            "div",
	                            { className: "dropdown--inputLabel" + focus + " " + showErrorLabel },
	                            "" + props.inputLabel + ((0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : " " + errorMsg)
	                        ),
	                        _react2.default.createElement(
	                            "div",
	                            { className: "dropdown--value-text" },
	                            mapValueToLabel(dropdownItems, value)
	                        )
	                    ),
	                    _react2.default.createElement("img", {
	                        className: "dropdown--inputArrow",
	                        src: FORMS_CNFG_GLBL.imgPath + "/icon-arrow-solid-down.svg",
	                        alt: "dropdown-arrow"
	                    })
	                )
	            ),
	            _react2.default.createElement(
	                "div",
	                { className: "dropdown--search-and-selection-flex-container" + searchFocus },
	                dropdownItems.length > 5 && _react2.default.createElement(
	                    "div",
	                    { className: "dropdown--input-container" + searchFocus },
	                    _react2.default.createElement("img", {
	                        src: FORMS_CNFG_GLBL.imgPath + "/cross-grey.svg",
	                        onClick: function onClick() {
	                            return props.dispatchOnBlurInput(props.step, props.inputID, false);
	                        },
	                        className: "dropdown--input-searchInput--crossIcon",
	                        alt: "crossIcon"
	                    }),
	                    _react2.default.createElement("input", { // onKeyDown={handleKeyEvents}
	                        onChange: function onChange(e) {
	                            return props.dispatchOnEditDropDownSearchInput(props.step, props.inputID, e.target.value);
	                        },
	                        onFocus: function onFocus() {
	                            props.dispatchOnFocusInput(props.step, props.inputID + "Search", true);
	                        },
	                        className: "dropdown--searchValue" + searchFocus,
	                        value: searchValue,
	                        placeholder: "Search",
	                        ref: function ref(search) {
	                            return searchRef = search;
	                        }
	                    }),
	                    _react2.default.createElement("img", {
	                        src: FORMS_CNFG_GLBL.imgPath + "/search_icon.svg",
	                        className: "dropdown--input-searchInput--icon",
	                        alt: "searchIcon"
	                    })
	                ),
	                _react2.default.createElement(
	                    _reactScrollLockComponent2.default,
	                    null,
	                    _react2.default.createElement(
	                        "div",
	                        { className: "dropdown-selection" + searchFocus },
	                        props.dropdownItems.filter(function (item) {
	                            return item.label.toLowerCase().includes(searchValue.toLowerCase());
	                        }).map(renderItems),
	                        _react2.default.createElement("div", { className: "iphone-fix" })
	                    )
	                )
	            )
	        )
	    );
	};
	
	EditableDropdown.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    title: _react.PropTypes.string,
	    inputLabel: _react.PropTypes.string,
	    inputID: _react.PropTypes.string,
	    description: _react.PropTypes.string,
	    dropdownItems: _react.PropTypes.array,
	    path: _react.PropTypes.array,
	    dispatchOnFocusInput: _react.PropTypes.func,
	    dispatchOnBlurInput: _react.PropTypes.func,
	    dispatchOnEditInput: _react.PropTypes.func,
	    step: _react.PropTypes.string.isRequired,
	    value: _react.PropTypes.string,
	    onClick: _react.PropTypes.func
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchOnFocusInput: (0, _redux.bindActionCreators)(_actionCreators.onFocusInput, dispatch),
	        dispatchOnBlurInput: (0, _redux.bindActionCreators)(_actionCreators.onBlurInput, dispatch),
	        dispatchOnEditInput: (0, _redux.bindActionCreators)(_actionCreators.editInput, dispatch),
	        dispatchOnEditDropDownSearchInput: (0, _redux.bindActionCreators)(_actionCreators.editDropDownSearchInput, dispatch)
	    };
	};
	
	exports.default = (0, _ValidatorHOC.validatorHOC)((0, _reactRedux.connect)(null, mapDispatchToProps)(EditableDropdown));

/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* global FORMS_CNFG_GLBL */
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _actionCreators = __webpack_require__(3);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _utils = __webpack_require__(9);
	
	__webpack_require__(465);
	
	var _ValidatorHOC = __webpack_require__(20);
	
	var _path = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var validator = function validator(value, validators, formData) {
	    return validators.map(function (x) {
	        return x(formData);
	    }).map(function (x) {
	        return x(value);
	    }).filter(function (x) {
	        return !x.status;
	    });
	};
	
	var Icon = function Icon(props) {
	    var visibility = props.isValid ? "--visible" : "--invisible";
	    var tick = _react2.default.createElement("img", { className: "textInputTick" + visibility, src: FORMS_CNFG_GLBL.imgPath + "/Tick.svg", alt: "tick" });
	    var cross = _react2.default.createElement("img", { className: "textInputTick--visible", src: FORMS_CNFG_GLBL.imgPath + "/cross.svg", alt: "tick" });
	
	    return (0, _utils.isValidOrNotDirty)(props.isValid, props.isDirty) ? tick : cross;
	};
	
	var getErrorContainerStyle = function getErrorContainerStyle(validOrNotDirty) {
	    return validOrNotDirty ? "" : "textInputLabel-container--error";
	};
	var PasswordInput = function PasswordInput(props) {
	    var formData = props.formData;
	
	    var _getInputStatesByPath = (0, _utils.getInputStatesByPath)(props.state, props.step, props.inputID, (0, _path.appDataPath)([props.inputID]));
	
	    var _getInputStatesByPath2 = _slicedToArray(_getInputStatesByPath, 5);
	
	    var isFocus = _getInputStatesByPath2[0];
	    var isValid = _getInputStatesByPath2[1];
	    var isDirty = _getInputStatesByPath2[2];
	    var errorMsg = _getInputStatesByPath2[3];
	    var inputValue = _getInputStatesByPath2[4];
	
	    var isLoading = props.state.getIn((0, _path.uiInProgressPath)(props.step, props.inputID), false);
	    var value = props.value ? props.value : inputValue;
	    var isValidOrNotDirtyVar = (0, _utils.isValidOrNotDirty)(isValid, isDirty);
	    var focus = isFocus || value.length > 0 || !isValidOrNotDirtyVar ? "--focused" : "";
	
	    var showErrorLabel = isValidOrNotDirtyVar ? "" : "textInputLabel--error";
	    var errorContainerStyle = getErrorContainerStyle(isValidOrNotDirtyVar);
	    var isDOB = props.inputID === _inputsConstant.DATE_OF_BIRTH;
	    var keyCode = void 0;
	
	    var handleOnChange = function handleOnChange(e) {
	        var val = isDOB && e.target.value.length === 2 && keyCode !== 8 || isDOB && e.target.value.length === 5 && keyCode !== 8 ? e.target.value + "/" : e.target.value;
	        var upperCaseValue = props.upperCase ? val.toUpperCase() : val;
	
	        return props.dispatchEditInputByPath(props.step, props.inputID, (0, _path.appDataPath)([props.inputID]), upperCaseValue, validator(upperCaseValue, props.validators, formData));
	    };
	    var spinner = _react2.default.createElement("img", {
	        className: "textInputTick--spinner",
	        src: FORMS_CNFG_GLBL.imgPath + "/loading_icon_dark.svg",
	        alt: "primary-button"
	    });
	
	    return _react2.default.createElement(
	        "div",
	        {
	            id: props.inputID,
	            className: "textInputContainer " + errorContainerStyle,
	            onKeyDown: function onKeyDown(e) {
	                keyCode = e.keyCode;
	            },
	            onFocus: function onFocus() {
	                props.dispatchOnFocusInput(props.step, props.inputID, true);
	            },
	            onBlur: function onBlur() {
	                props.dispatchOnBlurInput(props.step, props.inputID, false);
	                return props.additionalOnBlur && props.additionalOnBlur();
	            }
	        },
	        _react2.default.createElement(
	            "div",
	            { className: "textInputContent" },
	            _react2.default.createElement(
	                "label",
	                { className: "textInputLabel" + focus + " " + showErrorLabel },
	                "" + props.inputLabel + ((0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : " " + errorMsg)
	            ),
	            _react2.default.createElement("input", {
	                disabled: false,
	                value: value,
	                onChange: props.onChange ? props.onChange : handleOnChange,
	                type: "password",
	                className: "textInput" + focus
	            }),
	            isLoading && spinner,
	            !isLoading && value && _react2.default.createElement(Icon, { isValid: isValid, isDirty: isDirty })
	        )
	    );
	};
	
	PasswordInput.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    title: _react.PropTypes.string,
	    inputLabel: _react.PropTypes.string,
	    inputID: _react.PropTypes.string,
	    description: _react.PropTypes.string,
	    dropdownItems: _react.PropTypes.array,
	    path: _react.PropTypes.array,
	    dispatchOnFocusInput: _react.PropTypes.func,
	    dispatchOnBlurInput: _react.PropTypes.func,
	    dispatchOnEditInputByPath: _react.PropTypes.func,
	    step: _react.PropTypes.string.isRequired,
	    value: _react.PropTypes.string,
	    onChange: _react.PropTypes.func,
	    formData: _react.PropTypes.object.isRequired,
	    additionalOnBlur: _react.PropTypes.func
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchOnFocusInput: (0, _redux.bindActionCreators)(_actionCreators.onFocusInput, dispatch),
	        dispatchOnBlurInput: (0, _redux.bindActionCreators)(_actionCreators.onBlurInput, dispatch),
	        dispatchEditInputByPath: (0, _redux.bindActionCreators)(_actionCreators.editInputByPath, dispatch)
	    };
	};
	
	exports.default = (0, _ValidatorHOC.validatorHOC)((0, _reactRedux.connect)(null, mapDispatchToProps)(PasswordInput));

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	__webpack_require__(467);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _utils = __webpack_require__(9);
	
	var _ValidatorHOC = __webpack_require__(20);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var getErrorContainerStyle = function getErrorContainerStyle(validOrNotDirty) {
	    return validOrNotDirty ? "" : "file-upload--container--error";
	};
	var FileUploadDefault = function FileUploadDefault(props) {
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 5);
	
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var errorMsg = _getInputStates2[3];
	    var inputValue = _getInputStates2[4];
	
	    var showErrorLabel = isValid || !isDirty ? "" : "file-upload--error";
	    var fileSize = props.state.getIn((0, _path.uploadFileSizePath)(props.inputID));
	    var fileSizeString = fileSize ? " - " + fileSize : "";
	    var descriptionContent = inputValue ? inputValue.replace(/^.*[\\\/]/, "") + fileSizeString : props.description;
	    var checkInputStatus = props.state.getIn((0, _path.uiUploadStatusPath)(props.step, props.inputID), "none");
	    var isFileSelected = checkInputStatus === "uploading" ? "--selected" : "";
	    var errorContainerStyle = getErrorContainerStyle((0, _utils.isValidOrNotDirty)(isValid, isDirty));
	    var inputProgressValue = props.state.getIn((0, _path.uiUploadProgressPath)(props.step, props.inputID), 0);
	    var fileInputRef = null;
	    var checkFileExtension = function checkFileExtension(file, allowedExtensions) {
	        return allowedExtensions.includes(file.split(".").pop());
	    };
	
	    var handleOnChange = function handleOnChange() {
	        var file = fileInputRef.files[0];
	        var extensionIsAllowed = checkFileExtension(file.name, ["jpg", "png", "pdf", "JPG", "PNG", "PDF"]);
	        if (extensionIsAllowed) {
	            if (file.size <= 1000000) {
	                props.dispatchupdateUploadProgress(props.step, props.inputID, 100);
	                props.dispatchUploadFile(props.step, props.inputID, file.name, (0, _utils.bytesToSize)(file.size), []);
	            } else {
	                props.dispatchShowErrorMsg(props.step, props.inputID, "file size cannot exceed 1MB");
	                props.dispatch((0, _actionCreators.removeValidFlag)(props.step, props.inputID));
	            }
	        } else {
	            props.dispatchShowErrorMsg(props.step, props.inputID, "can only be either jpg, png or pdf");
	            props.dispatch((0, _actionCreators.removeValidFlag)(props.step, props.inputID));
	        }
	    };
	    var fileUploadContainer = function fileUploadContainer() {
	        return _react2.default.createElement(
	            "div",
	            { className: "file-upload-button" + isFileSelected },
	            _react2.default.createElement("progress", { className: "file-upload-progress", max: "100", value: inputProgressValue }),
	            _react2.default.createElement(
	                "div",
	                { className: "file-upload-button--text" },
	                checkInputStatus === "none" ? "UPLOAD" : "EDIT"
	            ),
	            _react2.default.createElement("input", {
	                accept: ".jpg,.JPG,.png,.pdf,.PDF,.PNG",
	                id: "file" + props.inputID,
	                ref: function ref(i) {
	                    fileInputRef = i;
	                },
	                type: "file",
	                className: "file-upload-input",
	                onClick: function onClick() {
	                    fileInputRef.value = null;
	                    props.dispatchupdateUploadProgress(props.step, props.inputID, 0);
	                },
	                onChange: handleOnChange
	            })
	        );
	    };
	    return _react2.default.createElement(
	        "div",
	        { id: props.inputID, className: "file-upload--container " + errorContainerStyle },
	        _react2.default.createElement(
	            "div",
	            { className: "file-upload--text-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "file-upload--title " + showErrorLabel },
	                "" + props.title + (isValid || !isDirty ? "" : " " + errorMsg)
	            ),
	            _react2.default.createElement(
	                "div",
	                { className: "file-upload--description" },
	                descriptionContent
	            )
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "file-upload--button-container" },
	            fileUploadContainer()
	        )
	    );
	};
	
	FileUploadDefault.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    inputID: _react.PropTypes.string.isRequired,
	    description: _react.PropTypes.string.isRequired,
	    title: _react.PropTypes.string.isRequired,
	    dispatchUploadFile: _react.PropTypes.func.isRequired,
	    dispatchShowErrorMsg: _react.PropTypes.func.isRequired,
	    dispatchupdateUploadProgress: _react.PropTypes.func.isRequired,
	    formData: _react.PropTypes.object.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchUploadFile: (0, _redux.bindActionCreators)(_actionCreators.uploadFile, dispatch),
	        dispatchupdateUploadProgress: (0, _redux.bindActionCreators)(_actionCreators.updateUploadProgress, dispatch),
	        dispatchShowErrorMsg: (0, _redux.bindActionCreators)(_actionCreators.showErrorMsg, dispatch),
	        dispatchErrorUploadFile: (0, _redux.bindActionCreators)(_actionCreators.errorUploadFile, dispatch)
	    };
	};
	
	exports.default = (0, _ValidatorHOC.validatorHOC)((0, _reactRedux.connect)(null, mapDispatchToProps)(FileUploadDefault));

/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _redux = __webpack_require__(6);
	
	var _reactRedux = __webpack_require__(7);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _componentConfig = __webpack_require__(389);
	
	var _componentConfig2 = _interopRequireDefault(_componentConfig);
	
	var _immutable = __webpack_require__(13);
	
	__webpack_require__(505);
	
	var _PrimaryButton = __webpack_require__(358);
	
	var _PrimaryButton2 = _interopRequireDefault(_PrimaryButton);
	
	var _GenericErrorMessage = __webpack_require__(351);
	
	var _GenericErrorMessage2 = _interopRequireDefault(_GenericErrorMessage);
	
	var _Loader = __webpack_require__(353);
	
	var _Loader2 = _interopRequireDefault(_Loader);
	
	var _DialogModal = __webpack_require__(343);
	
	var _DialogModal2 = _interopRequireDefault(_DialogModal);
	
	var _utils = __webpack_require__(9);
	
	var _api = __webpack_require__(51);
	
	var _passProps = __webpack_require__(82);
	
	var _stepsEnum = __webpack_require__(85);
	
	var _stepsEnum2 = _interopRequireDefault(_stepsEnum);
	
	var _scrollIntoView = __webpack_require__(125);
	
	var _scrollIntoView2 = _interopRequireDefault(_scrollIntoView);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// import {formConfig} from "../config/form";
	
	// import {uiStructurePath} from "../constants/path";
	/* global FORMS_CNFG_GLBL */
	var OTP_STEP = "otp";
	var SUMMARY = "summary";
	var PENDING_APP = "pendingApplication";
	var UPLOAD_DOCUMENT = "uploadDocuments";
	
	var getInvalidInputs = function getInvalidInputs(state) {
	    var currentShownSteps = state.getIn((0, _path.shownStepsPath)(), (0, _immutable.List)());
	    var uiState = state.getIn(_path.ui);
	    var currentUIStateToCheck = uiState.filter(function (v, uiStep) {
	        return currentShownSteps.includes(uiStep);
	    });
	    var filteredStepInput = currentUIStateToCheck.map(function (inputsInStep) {
	        return inputsInStep.filter(function (x) {
	            return x.has("isValid") && !(x.get("isValid") || x.get("readOnly"));
	        });
	    });
	    return filteredStepInput.filter(function (inputsInStep) {
	        return inputsInStep.count();
	    });
	};
	
	var scrollToUsername = function scrollToUsername() {
	    var element = document.querySelector("#username");
	    (0, _scrollIntoView2.default)(element, { time: 500, align: { top: 0 } });
	};
	
	var submitPartialApplication = function submitPartialApplication(currentStep, nextStep, props) {
	    return (
	        // nextStep &&
	        props.dispatchPostPartialApplication(currentStep, nextStep, props.productsConfig)
	    );
	};
	
	var renderButtonAccordingToStep = function renderButtonAccordingToStep(props, step, nextStep) {
	    var state = props.state;
	    var formData = props.formData;
	    var productsConfig = props.productsConfig;
	
	    var currentStep = state.getIn((0, _path.currentStepPath)());
	    var transitTo = state.getIn((0, _path.transitToPath)());
	    var inputsToDispatchForError = getInvalidInputs(state);
	    var isButtonLoading = state.getIn((0, _path.uiIsSpinnerActivePath)(step), false);
	
	    var username = props.state.getIn((0, _path.dataPath)(["username"]), "");
	    var isUsernameValid = props.state.getIn((0, _path.uiIsValidPath)("digitalServices", "username"), false);
	
	    var submit = function submit() {
	        if (step === OTP_STEP) {
	            return props.dispatchPostOTP(step, nextStep, state.getIn(["data", "otp"]));
	        }
	        if (step === SUMMARY) {
	            if (isUsernameValid && username) {
	                return props.dispatch((0, _actionCreators.validateUsername)(username, formData, props.dispatchSubmitFullApplication, scrollToUsername));
	            }
	            return props.dispatchSubmitFullApplication();
	        }
	        if (step === PENDING_APP) {
	            var selectPendingApplications = state.getIn((0, _path.dataPath)(["pendingApplications"]), (0, _immutable.List)());
	            return selectPendingApplications.count() > 0 ? props.dispatchGetPendingApplications(productsConfig) : props.dispatchGenericError("Please select at least one pending application");
	        }
	        if (step === UPLOAD_DOCUMENT) {
	            if (state.getIn((0, _path.dataPath)(["residentialStatus"])) === "P" && state.getIn((0, _path.dataPath)(["submitPR1-2Year"]), false)) {
	                var actions = { successDispatch: function successDispatch() {
	                        return {};
	                    }, errorDispatch: function errorDispatch() {
	                        return {};
	                    }, progressDispatch: function progressDispatch() {
	                        return {};
	                    } };
	                var file = document.getElementById("fileuploadDocumentsNricBack");
	                (0, _utils.fileUploadHelper)(file.files[0], (0, _api.fileUploadUrl)(), "uploadDocumentsNricBack", actions);
	                console.log("residentialStatus");
	            }
	        }
	        return submitPartialApplication(step, nextStep, props);
	    };
	    var handleOnClick = function handleOnClick() {
	        var isAlreadyScrolled = false;
	        if (inputsToDispatchForError.count() > 0) {
	            return inputsToDispatchForError.map(function (invalidInputs, inValidStep) {
	                return invalidInputs.map(function (inputState, invalidInput) {
	                    if (!isAlreadyScrolled) {
	                        var element = document.querySelector("#" + invalidInput);
	                        (0, _scrollIntoView2.default)(element, { time: 500, align: { top: 0 } });
	                        isAlreadyScrolled = true;
	                    }
	
	                    return invalidInput.includes("tnc") ? props.dispatchShowErrorMsg(inValidStep, invalidInput, (0, _utils.getErrorMsg)("t&c", formData)) : props.dispatchShowErrorMsg(inValidStep, invalidInput, (0, _utils.getErrorMsg)("fieldEmpty", formData));
	                });
	            });
	        }
	        if (step === "declaration" || step === "summary") {
	            var countriesSelected = state.getIn((0, _path.dataPath)(["countries"]), (0, _immutable.List)());
	            var isUSResident = state.getIn((0, _path.dataPath)(["usResident"]));
	            var isUSCitizen = state.getIn((0, _path.dataPath)(["usCitizen"]));
	            var isUSPermCard = state.getIn((0, _path.dataPath)(["residentCardHolder"]));
	            var isUS = isUSResident || isUSCitizen || isUSPermCard;
	            var countriesContainsUS = countriesSelected.find(function (country) {
	                return country.get("country") === "US";
	            });
	            var productIds = state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	            var genericErrorToShow = (0, _utils.sellingCasa)(productIds, productsConfig) ? formData.formInputErrorMessages.selectUsResidencyError : formData.formInputErrorMessages.cashPlusUsResidencyError;
	            return (0, _utils.sellingCasa)(productIds, productsConfig) && isUS && !countriesContainsUS ? props.dispatchGenericError(genericErrorToShow) : submit();
	        }
	        return submit();
	    };
	    return transitTo === step || currentStep === step ? _react2.default.createElement(_PrimaryButton2.default, Object.assign({
	        idForButton: _stepsEnum2.default[currentStep] + "_" + currentStep,
	        step: currentStep
	    }, props, {
	        onClick: function onClick() {
	            return !isButtonLoading && handleOnClick();
	        }
	    })) : null;
	};
	
	var switchContainerAccordingToStep = function switchContainerAccordingToStep(props, step, nextStep) {
	    var state = props.state;
	
	    var currentStep = state.getIn((0, _path.currentStepPath)());
	    var transitTo = state.getIn((0, _path.transitToPath)());
	    var transitFrom = state.getIn((0, _path.transitFromPath)());
	
	    return transitTo === nextStep || transitFrom === currentStep || currentStep === step ? "section-container-full" : "section-container";
	};
	
	var renderCurrentStep = function renderCurrentStep(props, step, nextStep) {
	    if (!step) {
	        return null;
	    }
	    var isStepInShownStep = props.state.getIn((0, _path.shownStepsPath)()).includes(step);
	    var componentToRender = _componentConfig2.default[step](Object.assign({}, props, { step: step }));
	
	    return isStepInShownStep ? _react2.default.createElement(
	        "div",
	        { key: step, id: step, className: switchContainerAccordingToStep(props, step, nextStep) },
	        _react2.default.createElement(
	            "div",
	            { className: "form-container" },
	            componentToRender,
	            _react2.default.createElement(
	                "div",
	                { className: "input-item" },
	                renderButtonAccordingToStep(props, step, nextStep)
	            )
	        )
	    ) : null;
	};
	var renderAppStructure = function renderAppStructure(props) {
	    var appStructure = props.state.getIn(_path.ui, (0, _immutable.Map)());
	    var doesContainInputs = function doesContainInputs(k) {
	        return props.state.getIn((0, _path.uiStepPath)(k)).count() > 0;
	    };
	    var filteredAppStructure = appStructure.filter(function (v, k) {
	        return doesContainInputs(k);
	    });
	    var listOfSteps = filteredAppStructure.keySeq();
	    console.log(listOfSteps.toString());
	    return listOfSteps.map(function (step, index) {
	        return renderCurrentStep(props, step, listOfSteps.get(index + 1));
	    });
	};
	
	var Form = function Form(props) {
	    var appStructure = renderAppStructure(props);
	    var isExpanded = props.state.getIn((0, _path.rightPanelExpandedPath)(), false);
	    // const tablet = /Android|iPad|IEMobile|Opera Mini/i.test(navigator.userAgent);
	    var rightPannelState = isExpanded ? "--expanded" : "";
	    var showDialogModal = props.state.getIn((0, _path.dialogModalPath)("MCAModal"), false);
	    var isPageLoading = props.state.getIn((0, _path.pageLoadingPath)(), false);
	    var showMyInfoDialog = props.state.getIn((0, _path.dialogModalPath)("myInfoModal"), false);
	    var showMyInfoDownDialog = props.state.getIn((0, _path.dialogModalPath)("myInfoDownModal"), false);
	    return _react2.default.createElement(
	        "div",
	        { className: "uob-form-demo" },
	        _react2.default.createElement(
	            "div",
	            { className: "left-panel" },
	            _react2.default.createElement("div", {
	                className: "uob-form--form-cover" + rightPannelState,
	                onClick: function onClick() {
	                    props.dispatchSetRightPanelExpanded(!isExpanded);
	                }
	            }),
	            _react2.default.createElement(
	                "div",
	                { className: "left-panel-content" },
	                _react2.default.createElement(
	                    "div",
	                    { className: "logo-alignement" },
	                    _react2.default.createElement("img", { className: "left-panel--logo", src: FORMS_CNFG_GLBL.imgPath + "/uobLogo.svg", alt: "logo" }),
	                    appStructure
	                )
	            )
	        ),
	        _react2.default.createElement(
	            "div",
	            {
	                className: "right-panel" + rightPannelState,
	                onClick: function onClick() {
	                    props.dispatchSetRightPanelExpanded(!isExpanded);
	                }
	            },
	            _react2.default.createElement(
	                "div",
	                { className: "uob-form--expand-right-panel-button-flex-container" },
	                _react2.default.createElement("img", {
	                    src: FORMS_CNFG_GLBL.imgPath + "/info_icon.svg",
	                    className: "uob-form-info--icon" + rightPannelState,
	                    alt: "infoIcon"
	                }),
	                _react2.default.createElement(
	                    "div",
	                    { className: "uob-form--expand-right-panel-button" + rightPannelState },
	                    "Need help?"
	                )
	            ),
	            _react2.default.createElement(
	                "div",
	                { className: "uob-form-right-column-container" + rightPannelState },
	                _react2.default.createElement(
	                    "h2",
	                    { className: "uob-form-right-column-text" },
	                    "Need help?"
	                ),
	                _react2.default.createElement(
	                    "p",
	                    { className: "uob-form-right-column-description" },
	                    "Feel free to contact our team for support"
	                ),
	                _react2.default.createElement(
	                    "p",
	                    { className: "uob-form-right-column-sub-title" },
	                    "Singapore"
	                ),
	                _react2.default.createElement(
	                    "p",
	                    { className: "uob-form-right-column-text" },
	                    " 1800 222 2121"
	                ),
	                _react2.default.createElement(
	                    "p",
	                    { className: "uob-form-right-column-sub-title" },
	                    "Overseas Customers"
	                ),
	                _react2.default.createElement(
	                    "p",
	                    { className: "uob-form-right-column-text" },
	                    " +65 6222 2121 "
	                )
	            )
	        ),
	        _react2.default.createElement(_GenericErrorMessage2.default, props),
	        isPageLoading && _react2.default.createElement(_Loader2.default, null),
	        showDialogModal && _react2.default.createElement(_DialogModal2.default, Object.assign({ dialogType: "MCAModal" }, props)),
	        showMyInfoDialog && _react2.default.createElement(_DialogModal2.default, Object.assign({ dialogType: "myInfoModal" }, props)),
	        showMyInfoDownDialog && _react2.default.createElement(_DialogModal2.default, Object.assign({ dialogType: "myInfoDownModal" }, props))
	    );
	};
	
	Form.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    dispatchUpdateProductId: _react.PropTypes.func.isRequired,
	    dispatchSetRightPanelExpanded: _react.PropTypes.func.isRequired,
	    params: _react.PropTypes.object.isRequired,
	    dispatch: _react.PropTypes.func.isRequired
	};
	
	renderButtonAccordingToStep.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    dispatchGenericError: _react.PropTypes.func.isRequired,
	    formData: _react.PropTypes.object.isRequired,
	    productsConfig: _react.PropTypes.object.isRequired
	};
	
	renderCurrentStep.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchUpdateProductId: (0, _redux.bindActionCreators)(_actionCreators.updateProductId, dispatch),
	        dispatchPostPartialApplication: (0, _redux.bindActionCreators)(_actionCreators.postPartialApplication, dispatch),
	        dispatchPostOTP: (0, _redux.bindActionCreators)(_actionCreators.postOTP, dispatch),
	        dispatchShowErrorMsg: (0, _redux.bindActionCreators)(_actionCreators.showErrorMsg, dispatch),
	        dispatchSubmitFullApplication: (0, _redux.bindActionCreators)(_actionCreators.submitFullApplication, dispatch),
	        dispatchSetRightPanelExpanded: (0, _redux.bindActionCreators)(_actionCreators.setRightPanelExpanded, dispatch),
	        dispatchGetPendingApplications: (0, _redux.bindActionCreators)(_actionCreators.getPendingApplications, dispatch),
	        dispatchGenericError: (0, _redux.bindActionCreators)(_actionCreators.showGenericErrorMessage, dispatch)
	    };
	};
	
	exports.default = (0, _passProps.passProps)((0, _reactRedux.connect)(null, mapDispatchToProps)(Form));

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* global FORMS_CNFG_GLBL */
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _utils = __webpack_require__(9);
	
	__webpack_require__(469);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _ValidatorHOC = __webpack_require__(20);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var getErrorContainerStyle = function getErrorContainerStyle(ValidOrNotDirty) {
	    return ValidOrNotDirty ? "" : "single-selection-input--error";
	};
	var GenderSelection = function GenderSelection(props) {
	    var gender = props.state.getIn(props.path, null);
	
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 4);
	
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var errorMsg = _getInputStates2[3];
	
	    var isReadOnly = props.state.getIn((0, _path.isReadOnlyPath)(props.step, props.inputID), false);
	    var readOnlyClass = isReadOnly ? "single-selection-input--readonly" : "";
	    var errorContainerStyle = getErrorContainerStyle((0, _utils.isValidOrNotDirty)(isValid, isDirty));
	    var showErrorLabel = isValid || !isDirty ? "" : "GenderSelectionLabel--error";
	    return _react2.default.createElement(
	        "div",
	        { className: "single-selection-input--focused " + readOnlyClass + " " + errorContainerStyle },
	        _react2.default.createElement(
	            "div",
	            { className: "single-selection-input-title-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "single-selection-input-title " + showErrorLabel },
	                "Gender" + (isValid || !isDirty ? "" : " " + errorMsg)
	            ),
	            isReadOnly && _react2.default.createElement("img", {
	                className: "read-only-single-selection-input--verified-icon",
	                src: FORMS_CNFG_GLBL.imgPath + "/non-editable-icon4.svg",
	                alt: "verified-icon"
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "single-selection-input-container" },
	            _react2.default.createElement(
	                "div",
	                {
	                    className: gender === "M" ? "single-selection-input-button--selected" : "single-selection-input-button",
	                    onClick: function onClick() {
	                        props.dispatchChooseGender("M", props.step, props.inputID, props.path);
	                    }
	                },
	                _react2.default.createElement(
	                    "div",
	                    { className: "single-selection-input-button-content" },
	                    _react2.default.createElement("img", {
	                        src: FORMS_CNFG_GLBL.imgPath + "/icon-male.svg",
	                        className: "single-selection-input-button-icon",
	                        alt: "gender-male"
	                    }),
	                    "Male"
	                )
	            ),
	            _react2.default.createElement(
	                "div",
	                {
	                    className: gender === "F" ? "single-selection-input-button--selected" : "single-selection-input-button",
	                    onClick: function onClick() {
	                        props.dispatchChooseGender("F", props.step, props.inputID, props.path);
	                    }
	                },
	                _react2.default.createElement("img", {
	                    src: FORMS_CNFG_GLBL.imgPath + "/icon-female.svg",
	                    className: "single-selection-input-button-icon",
	                    alt: "gender-female"
	                }),
	                "Female"
	            )
	        )
	    );
	};
	
	GenderSelection.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    path: _react.PropTypes.array.isRequired,
	    inputID: _react.PropTypes.string.isRequired,
	    dispatchChooseGender: _react.PropTypes.func.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchChooseGender: (0, _redux.bindActionCreators)(_actionCreators.chooseGender, dispatch)
	    };
	};
	
	exports.default = (0, _ValidatorHOC.validatorHOC)((0, _reactRedux.connect)(null, mapDispatchToProps)(GenderSelection));

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	__webpack_require__(470);
	
	var _path = __webpack_require__(4);
	
	var _actionCreators = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var GenericErrorMessage = function GenericErrorMessage(props) {
	    var messageContent = props.state.getIn((0, _path.genericErrorPath)(), "");
	    var visibility = messageContent === "" ? "--hidden" : "";
	
	    return _react2.default.createElement(
	        "div",
	        { className: "generic-error-message--wrapper-flex" + visibility },
	        _react2.default.createElement(
	            "div",
	            { className: "generic-error-message--icon-wrapper" },
	            _react2.default.createElement("img", {
	                className: "generic-error-message--icon-signal",
	                src: FORMS_CNFG_GLBL.imgPath + "/error-message-icon.svg",
	                alt: "errorIcon"
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "generic-error-message--message-text" },
	            messageContent
	        ),
	        _react2.default.createElement(
	            "div",
	            {
	                className: "generic-error-message--icon-wrapper",
	                onClick: function onClick() {
	                    props.dispatchClearGenericErrorMessage();
	                }
	            },
	            _react2.default.createElement("img", {
	                className: "generic-error-message--icon-cross",
	                src: FORMS_CNFG_GLBL.imgPath + "/cross-white.svg",
	                alt: "removeIcon"
	            })
	        )
	    );
	}; /* global FORMS_CNFG_GLBL */
	
	
	GenericErrorMessage.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    dispatchClearGenericErrorMessage: _react.PropTypes.func.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchClearGenericErrorMessage: (0, _redux.bindActionCreators)(_actionCreators.clearGenericErrorMessage, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(GenericErrorMessage);

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _TextInput = __webpack_require__(21);
	
	var _TextInput2 = _interopRequireDefault(_TextInput);
	
	var _ToggleInput = __webpack_require__(37);
	
	var _ToggleInput2 = _interopRequireDefault(_ToggleInput);
	
	var _actionCreators = __webpack_require__(3);
	
	var _inputValidation = __webpack_require__(18);
	
	var _inputsConstant = __webpack_require__(10);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Krisflyer = function (_Component) {
	    _inherits(Krisflyer, _Component);
	
	    function Krisflyer() {
	        _classCallCheck(this, Krisflyer);
	
	        return _possibleConstructorReturn(this, (Krisflyer.__proto__ || Object.getPrototypeOf(Krisflyer)).apply(this, arguments));
	    }
	
	    _createClass(Krisflyer, [{
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            var FormConfig = props.FormConfig;
	            var formData = props.formData;
	
	            var isMember = props.state.getIn(["data", props.product + "-" + _inputsConstant.IS_EXISTING_KRISFLYER_MEMBER], true);
	
	            var _ref = new FormConfig(props.step);
	
	            var inputLabels = _ref.inputLabels;
	
	
	            return _react2.default.createElement(
	                "div",
	                null,
	                _react2.default.createElement(
	                    "div",
	                    { className: "account-details--separator" },
	                    _react2.default.createElement(_ToggleInput2.default, Object.assign({
	                        description: inputLabels[_inputsConstant.IS_EXISTING_KRISFLYER_MEMBER],
	                        inputID: props.product + "-" + _inputsConstant.IS_EXISTING_KRISFLYER_MEMBER,
	                        value: isMember
	                    }, props))
	                ),
	                isMember ? _react2.default.createElement(
	                    "div",
	                    { className: "account-details--separator" },
	                    _react2.default.createElement(_TextInput2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.KRYSFLYER_MEMBERSHIP_NUMBER],
	                        inputID: props.product + "-" + _inputsConstant.KRYSFLYER_MEMBERSHIP_NUMBER
	                        // validators={[validateFilledInput, checkSize(10)]}
	                        , onChange: function onChange(e) {
	                            var value = e.target.value;
	                            var validators = [_inputValidation.validateFilledInput, _inputValidation.checkKrisFlyer, (0, _inputValidation.checkSize)(10)];
	                            var status = validators.map(function (x) {
	                                return x(formData);
	                            }).map(function (x) {
	                                return x(value);
	                            }).filter(function (x) {
	                                return !x.status;
	                            });
	
	                            return props.dispatch((0, _actionCreators.editInputByPath)(props.step, props.product + "-" + _inputsConstant.KRYSFLYER_MEMBERSHIP_NUMBER, ["data", "products", props.products.first(), _inputsConstant.KRYSFLYER_MEMBERSHIP_NUMBER], value, status));
	                        },
	                        value: props.state.getIn(["data", "products", props.products.first(), _inputsConstant.KRYSFLYER_MEMBERSHIP_NUMBER], "")
	                    }, props))
	                ) : null,
	                _react2.default.createElement(
	                    "div",
	                    { className: "account-details--separator" },
	                    _react2.default.createElement(_TextInput2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.KRISFLYER_FIRST_NAME],
	                        inputID: props.product + "-" + _inputsConstant.KRISFLYER_FIRST_NAME
	                        // validators={[validateFilledInput, checkFullName]}
	                        , onChange: function onChange(e) {
	                            var value = e.target.value;
	                            var validators = [_inputValidation.validateFilledInput, _inputValidation.checkFullName, (0, _inputValidation.checkMaxSize)(30)];
	                            var status = validators.map(function (x) {
	                                return x(formData);
	                            }).map(function (x) {
	                                return x(value);
	                            }).filter(function (x) {
	                                return !x.status;
	                            });
	
	                            return props.dispatch((0, _actionCreators.editInputByPath)(props.step, props.product + "-" + _inputsConstant.KRISFLYER_FIRST_NAME, ["data", "products", props.products.first(), _inputsConstant.KRISFLYER_FIRST_NAME], value, status));
	                        },
	                        value: props.state.getIn(["data", "products", props.products.first(), _inputsConstant.KRISFLYER_FIRST_NAME], "")
	                    }, props))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "account-details--separator" },
	                    _react2.default.createElement(_TextInput2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.KRISFLYER_LAST_NAME],
	                        inputID: props.product + "-" + _inputsConstant.KRISFLYER_LAST_NAME,
	                        onChange: function onChange(e) {
	                            var value = e.target.value;
	                            var validators = [_inputValidation.validateFilledInput, _inputValidation.checkFullName, (0, _inputValidation.checkMaxSize)(30)];
	                            var status = validators.map(function (x) {
	                                return x(formData);
	                            }).map(function (x) {
	                                return x(value);
	                            }).filter(function (x) {
	                                return !x.status;
	                            });
	
	                            return props.dispatch((0, _actionCreators.editInputByPath)(props.step, props.product + "-" + _inputsConstant.KRISFLYER_LAST_NAME, ["data", "products", props.products.first(), _inputsConstant.KRISFLYER_LAST_NAME], value, status));
	                        },
	                        value: props.state.getIn(["data", "products", props.products.first(), _inputsConstant.KRISFLYER_LAST_NAME], "")
	                    }, props))
	                )
	            );
	        }
	    }]);
	
	    return Krisflyer;
	}(_react.Component);
	
	exports.default = Krisflyer;

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	__webpack_require__(471);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Loader = function Loader() {
	    return _react2.default.createElement(
	        "div",
	        null,
	        _react2.default.createElement("div", { id: "fader", className: "fade in", style: { display: "block" } }),
	        _react2.default.createElement(
	            "div",
	            { className: "loader fade in", style: { display: "block" } },
	            _react2.default.createElement("div", null),
	            _react2.default.createElement("div", null),
	            _react2.default.createElement("div", null),
	            _react2.default.createElement("div", null)
	        ),
	        _react2.default.createElement("div", { className: "loader-backdrop-sm fade in", style: { display: "block" } }),
	        _react2.default.createElement("div", { className: "loader-backdrop fade in", style: { display: "block" } }),
	        _react2.default.createElement("div", { className: "loader-text fade in", style: { display: "block" } })
	    );
	};
	exports.default = Loader;

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	__webpack_require__(472);
	
	var _TextInput = __webpack_require__(21);
	
	var _TextInput2 = _interopRequireDefault(_TextInput);
	
	var _ReadOnlyTextInput = __webpack_require__(53);
	
	var _ReadOnlyTextInput2 = _interopRequireDefault(_ReadOnlyTextInput);
	
	var _EditableTextInput = __webpack_require__(126);
	
	var _EditableTextInput2 = _interopRequireDefault(_EditableTextInput);
	
	var _actionCreators = __webpack_require__(3);
	
	var _inputValidation = __webpack_require__(18);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _path = __webpack_require__(4);
	
	var _immutable = __webpack_require__(13);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var LocalAddressInput = function LocalAddressInput(props) {
	    var getAddressData = function getAddressData(id) {
	        return props.state.getIn((0, _path.dataPath)([id]));
	    };
	    var isPostalServiceDown = props.state.getIn((0, _path.postalCodeServiceStatusPath)(), false);
	    var isTriesExceeded = props.state.getIn((0, _path.postalCodeCountExceededPath)(props.inputID + "PostalCode"), false);
	    var isReadOnlyInputs = props.state.getIn((0, _path.readOnlyPath)(), (0, _immutable.Map)());
	    var showEditableBlockAndStreet = function showEditableBlockAndStreet(inputId) {
	        return (isPostalServiceDown || isTriesExceeded) && !isReadOnlyInputs.get(inputId);
	    };
	    var showReadOnlyBlockAndStreet = function showReadOnlyBlockAndStreet(inputId) {
	        return isReadOnlyInputs.get(inputId);
	    };
	    var addressFormat = props.state.getIn((0, _path.dataPath)([props.inputID + "AddressFormat"]), "");
	    var propertyType = props.state.getIn((0, _path.dataPath)([_inputsConstant.PROPERTY_TYPE]), "");
	    var addressStreet = props.state.getIn((0, _path.dataPath)([props.inputID + "Street"]), "");
	    var addressBlock = props.state.getIn((0, _path.dataPath)([props.inputID + "Block"]), "");
	    var addressUnitNumber = props.state.getIn((0, _path.dataPath)([props.inputID + "UnitNumber"]), "");
	    var addressLevel = props.state.getIn((0, _path.dataPath)([props.inputID + "Level"]), "");
	    var addressBuilding = props.state.getIn((0, _path.dataPath)([props.inputID + "Building"]), "");
	
	    var levelandUnitValidator = function levelandUnitValidator(field) {
	        return addressFormat[0] === "H" || ["H3", "H5", "EC"].includes(propertyType) ? [_inputValidation.validateFilledInput, _inputValidation.onlyAlphanumeric, (0, _inputValidation.checkMaxSizeComponent)(props, _actionCreators.editInput, props.inputID + "Building", addressBuilding, 27 - addressUnitNumber.length - addressLevel.length), (0, _inputValidation.checkMaxSize)(4), (0, _inputValidation.validateSameAddress)(field, props.state)] : [_inputValidation.noValidation, _inputValidation.onlyAlphanumeric, (0, _inputValidation.checkMaxSizeComponent)(props, _actionCreators.editInput, props.inputID + "Building", addressBuilding, 27 - addressUnitNumber.length - addressLevel.length), (0, _inputValidation.checkMaxSize)(4), (0, _inputValidation.validateSameAddress)(field, props.state)];
	    };
	
	    var getaddressFormatLabel = function getaddressFormatLabel(addressFormatCode) {
	        var FormConfig = props.FormConfig;
	
	        var localAddress = new FormConfig("homeMailingAddress");
	        var inputValues = localAddress.inputValues;
	
	        var addressFormatList = inputValues[_inputsConstant.PROPERTY_TYPE] || [];
	
	        var filteredAddressFormat = addressFormatList.filter(function (format) {
	            return format.value === addressFormatCode;
	        }) || [];
	        if (filteredAddressFormat.length) {
	            return filteredAddressFormat[0].label || "";
	        }
	        return "";
	    };
	
	    var homePropertyType = getaddressFormatLabel(addressFormat);
	    var showHomePropertyType = homePropertyType && homePropertyType !== "";
	
	    return _react2.default.createElement(
	        "div",
	        null,
	        _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_TextInput2.default, Object.assign({}, props, {
	                type: "Postal",
	                inputLabel: props.inputLabels[props.inputID + "PostalCode"],
	                inputID: props.inputID + "PostalCode",
	                validators: [_inputValidation.validateFilledInput, _inputValidation.checkNumbers, (0, _inputValidation.checkSize)(6), (0, _inputValidation.validateSameAddress)(props.inputID + "PostalCode", props.state)]
	            }))
	        ),
	        showEditableBlockAndStreet(props.inputID + "Block") && _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_EditableTextInput2.default, Object.assign({}, props, {
	                inputLabel: props.inputLabels[props.inputID + "Block"],
	                inputID: props.inputID + "Block",
	                validators: [_inputValidation.validateFilledInput, _inputValidation.onlyAlphanumeric, (0, _inputValidation.checkMaxSizeComponent)(props, _actionCreators.editInput, props.inputID + "Street", addressStreet, 29 - addressBlock.length), (0, _inputValidation.checkMaxSize)(6)]
	            }))
	        ),
	        showEditableBlockAndStreet(props.inputID + "Street") && _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_EditableTextInput2.default, Object.assign({}, props, {
	                inputLabel: props.inputLabels[props.inputID + "Street"],
	                inputID: props.inputID + "Street",
	                validators: [_inputValidation.validateFilledInput, _inputValidation.onlyAlphanumeric, (0, _inputValidation.checkMaxSize)(29 - addressBlock.length)]
	            }))
	        ),
	        showEditableBlockAndStreet(props.inputID + "Building") && _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_TextInput2.default, Object.assign({}, props, {
	                inputLabel: props.inputLabels[props.inputID + "Building"],
	                inputID: props.inputID + "Building",
	                validators: [_inputValidation.noValidation, (0, _inputValidation.checkMaxSize)(27 - addressUnitNumber.length - addressLevel.length)],
	                upperCase: true
	            }))
	        ),
	        getAddressData(props.inputID + "Block") && showReadOnlyBlockAndStreet(props.inputID + "Block") ? _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_ReadOnlyTextInput2.default, Object.assign({}, props, {
	                inputLabel: props.inputLabels[props.inputID + "Block"],
	                inputID: props.inputID + "Block"
	            }))
	        ) : null,
	        getAddressData(props.inputID + "Street") && showReadOnlyBlockAndStreet(props.inputID + "Street") ? _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_ReadOnlyTextInput2.default, Object.assign({}, props, {
	                inputLabel: props.inputLabels[props.inputID + "Street"],
	                inputID: props.inputID + "Street"
	            }))
	        ) : null,
	        getAddressData(props.inputID + "Building") && showReadOnlyBlockAndStreet(props.inputID + "Building") ? _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_ReadOnlyTextInput2.default, Object.assign({}, props, {
	                inputLabel: props.inputLabels[props.inputID + "Building"],
	                inputID: props.inputID + "Building"
	            }))
	        ) : null,
	        _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(
	                "div",
	                { className: "homeMailingAddress-unitNumber-container" },
	                _react2.default.createElement(
	                    "div",
	                    { style: { flex: "1" } },
	                    isReadOnlyInputs.get(props.inputID + "Level", false) ? _react2.default.createElement(_ReadOnlyTextInput2.default, Object.assign({}, props, {
	                        inputLabel: props.inputLabels[props.inputID + "Level"],
	                        inputID: props.inputID + "Level",
	                        validators: levelandUnitValidator(props.inputID + "Level")
	                    })) : _react2.default.createElement(_EditableTextInput2.default, Object.assign({}, props, {
	                        inputLabel: props.inputLabels[props.inputID + "Level"],
	                        inputID: props.inputID + "Level",
	                        validators: levelandUnitValidator(props.inputID + "Level")
	                    }))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "homeMailingAddress-unitNumber-dash" },
	                    " - "
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { style: { flex: "1" } },
	                    isReadOnlyInputs.get(props.inputID + "UnitNumber", false) ? _react2.default.createElement(_ReadOnlyTextInput2.default, Object.assign({}, props, {
	                        inputLabel: "Unit Number",
	                        inputID: props.inputID + "UnitNumber",
	                        validators: levelandUnitValidator(props.inputID + "UnitNumber")
	                    })) : _react2.default.createElement(_EditableTextInput2.default, Object.assign({}, props, {
	                        inputLabel: props.inputLabels[props.inputID + "UnitNumber"],
	                        inputID: props.inputID + "UnitNumber",
	                        validators: levelandUnitValidator(props.inputID + "UnitNumber")
	                    }))
	                )
	            )
	        ),
	        showHomePropertyType && _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_ReadOnlyTextInput2.default, Object.assign({}, props, {
	                inputLabel: props.inputLabels[_inputsConstant.PROPERTY_TYPE],
	                value: homePropertyType
	            }))
	        )
	    );
	};
	
	LocalAddressInput.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    inputID: _react.PropTypes.string.isRequired,
	    inputLabels: _react.PropTypes.object.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired
	};
	
	exports.default = LocalAddressInput;

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	__webpack_require__(503);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Main = function Main(props) {
	    return _react2.default.createElement(
	        "div",
	        null,
	        _react2.default.cloneElement(props.children, props)
	    );
	};
	
	Main.propTypes = {
	    children: _react.PropTypes.object.isRequired
	};
	
	exports.default = Main;

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _TextInput = __webpack_require__(21);
	
	var _TextInput2 = _interopRequireDefault(_TextInput);
	
	var _inputValidation = __webpack_require__(18);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var OverseasAddressInput = function OverseasAddressInput(props) {
	    return _react2.default.createElement(
	        "div",
	        null,
	        _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_TextInput2.default, Object.assign({}, props, {
	                inputLabel: props.inputLabels[props.inputID + "Add1"],
	                inputID: props.inputID + "Add1",
	                validators: [_inputValidation.validateFilledInput, (0, _inputValidation.checkMaxSize)(30)]
	            }))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_TextInput2.default, Object.assign({}, props, {
	                inputLabel: props.inputLabels[props.inputID + "Add2"],
	                inputID: props.inputID + "Add2",
	                validators: [_inputValidation.noValidation, (0, _inputValidation.checkMaxSize)(30)]
	            }))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_TextInput2.default, Object.assign({}, props, {
	                inputLabel: props.inputLabels[props.inputID + "Add3"],
	                inputID: props.inputID + "Add3",
	                validators: [_inputValidation.noValidation, (0, _inputValidation.checkMaxSize)(30)]
	            }))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_TextInput2.default, Object.assign({}, props, {
	                inputLabel: props.inputLabels[props.inputID + "Add4"],
	                inputID: props.inputID + "Add4",
	                validators: [_inputValidation.noValidation, (0, _inputValidation.checkMaxSize)(30)]
	            }))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_TextInput2.default, Object.assign({}, props, {
	                inputLabel: props.inputLabels[props.inputID + "City"],
	                inputID: props.inputID + "City",
	                validators: [_inputValidation.validateFilledInput, (0, _inputValidation.checkMaxSize)(20)]
	            }))
	        )
	    );
	};
	
	OverseasAddressInput.propTypes = {
	    inputID: _react.PropTypes.string.isRequired,
	    inputLabels: _react.PropTypes.object.isRequired
	};
	
	exports.default = OverseasAddressInput;

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _EditablePasswordInput = __webpack_require__(347);
	
	var _EditablePasswordInput2 = _interopRequireDefault(_EditablePasswordInput);
	
	var _ReadOnlyTextInput = __webpack_require__(53);
	
	var _ReadOnlyTextInput2 = _interopRequireDefault(_ReadOnlyTextInput);
	
	var _PostalCodeInput = __webpack_require__(129);
	
	var _PostalCodeInput2 = _interopRequireDefault(_PostalCodeInput);
	
	var _PrependTextInput = __webpack_require__(84);
	
	var _PrependTextInput2 = _interopRequireDefault(_PrependTextInput);
	
	var _PhoneInput = __webpack_require__(83);
	
	var _PhoneInput2 = _interopRequireDefault(_PhoneInput);
	
	var _path = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PasswordInput = function PasswordInput(props) {
	    var isReadOnly = props.state.getIn((0, _path.isReadOnlyPath)(props.step, props.inputID), false) || props.readOnly;
	    var textInputs = {
	        Phone: _react2.default.createElement(_PhoneInput2.default, props),
	        Postal: _react2.default.createElement(_PostalCodeInput2.default, props),
	        Prepend: _react2.default.createElement(_PrependTextInput2.default, props)
	    };
	    var input = props.type ? textInputs[props.type] : _react2.default.createElement(_EditablePasswordInput2.default, props);
	    return isReadOnly ? _react2.default.createElement(_ReadOnlyTextInput2.default, props) : input;
	};
	
	PasswordInput.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    inputID: _react.PropTypes.string.isRequired,
	    readOnly: _react.PropTypes.bool,
	    type: _react.PropTypes.string
	};
	
	exports.default = PasswordInput;

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	__webpack_require__(476);
	
	var _path = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* global FORMS_CNFG_GLBL */
	var PrimaryButton = function PrimaryButton(props) {
	    var isLoading = props.state.getIn((0, _path.uiIsSpinnerActivePath)(props.step), false);
	    var currentStep = props.state.getIn((0, _path.currentStepPath)(), "");
	    var isFinalSubmit = currentStep === "summary";
	    var finalSubmitText = isLoading ? "" : "Confirm";
	    var continueText = isLoading ? "" : "Continue";
	    var spinner = isLoading ? _react2.default.createElement("img", {
	        className: "primary-button--spinner",
	        src: FORMS_CNFG_GLBL.imgPath + "/loading_icon.svg",
	        alt: "primary-button"
	    }) : false;
	
	    return _react2.default.createElement(
	        "div",
	        { className: "primary-button--main-container" },
	        spinner,
	        _react2.default.createElement(
	            "button",
	            { id: props.idForButton, className: "primary-button", onClick: props.onClick },
	            isFinalSubmit ? finalSubmitText : continueText
	        )
	    );
	};
	
	PrimaryButton.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    onClick: _react.PropTypes.func.isRequired,
	    idForButton: _react.PropTypes.string.isRequired
	};
	
	exports.default = PrimaryButton;

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _CardDetails = __webpack_require__(333);
	
	var _CardDetails2 = _interopRequireDefault(_CardDetails);
	
	var _CurrencySelection = __webpack_require__(342);
	
	var _CurrencySelection2 = _interopRequireDefault(_CurrencySelection);
	
	var _CurrencyDetails = __webpack_require__(341);
	
	var _CurrencyDetails2 = _interopRequireDefault(_CurrencyDetails);
	
	var _Krisflyer = __webpack_require__(352);
	
	var _Krisflyer2 = _interopRequireDefault(_Krisflyer);
	
	var _CheckboxInput = __webpack_require__(334);
	
	var _CheckboxInput2 = _interopRequireDefault(_CheckboxInput);
	
	var _TextInput = __webpack_require__(21);
	
	var _TextInput2 = _interopRequireDefault(_TextInput);
	
	var _TenorTable = __webpack_require__(364);
	
	var _TenorTable2 = _interopRequireDefault(_TenorTable);
	
	var _ReadOnlyTextInput = __webpack_require__(53);
	
	var _ReadOnlyTextInput2 = _interopRequireDefault(_ReadOnlyTextInput);
	
	var _Dropdown = __webpack_require__(34);
	
	var _Dropdown2 = _interopRequireDefault(_Dropdown);
	
	var _immutable = __webpack_require__(13);
	
	var _utils = __webpack_require__(9);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _inputValidation = __webpack_require__(18);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var defaultTableValues = (0, _immutable.fromJS)([]);
	
	var isFirstCasa = function isFirstCasa(selectedCasaProducts, firstProduct) {
	    return selectedCasaProducts.first() === firstProduct;
	};
	
	var filterCasaProducts = function filterCasaProducts(allSelectedProducts, typeOfProduct) {
	    return allSelectedProducts.filter(function (value) {
	        return typeOfProduct.getIn([value, "type"], false) === "CASA";
	    });
	};
	
	var UnsecuredLoansSpec = function UnsecuredLoansSpec(props) {
	    var FormConfig = props.FormConfig;
	    var productsConfig = props.productsConfig;
	    var formData = props.formData;
	
	    var typeOfProduct = (0, _immutable.fromJS)(productsConfig.products);
	
	    var _ref = new FormConfig(props.step);
	
	    var inputLabels = _ref.inputLabels;
	    var plTableRowTitles = _ref.plTableRowTitles;
	    var btTableRowTitles = _ref.btTableRowTitles;
	
	    var pid = props.products.first();
	    var tenorTableData = props.state.getIn((0, _path.tenorTableDataPath)(pid), defaultTableValues);
	    if (!tenorTableData.size) {
	        return _react2.default.createElement("div", null);
	    }
	    var promotionCode = props.state.getIn((0, _path.dataPath)(["products", pid, "promotionCode"]), "");
	    var selectedRow = tenorTableData && tenorTableData.filter(function (entry) {
	        return entry.get("promotionCode") === promotionCode;
	    }).first();
	    var minLoanAmt = Number(selectedRow && selectedRow.get("minimumLoanAmount"));
	    var maxLoanAmt = Number(selectedRow && selectedRow.get("maximumLoanAmount"));
	    var loanAmount = props.state.getIn(["data", "products", pid, "unsecuredLoanAmount"], 0);
	    var filteredPLTableData = tenorTableData.map(function (tenor) {
	        return (0, _immutable.Map)({
	            loanTenor: Number(tenor.get("tenor")),
	            processingFeeBase: Number(tenor.get("processingFeeBase")),
	            processingFeeAbs: (0, _utils.calProcessingFee)(loanAmount, Number(tenor.get("processingFeeBase"))),
	            annualInterestRate: Number(tenor.get("air")),
	            effectiveInterestRate: Number(tenor.get("eir")),
	            monthlyRepayments: (0, _utils.calMonthlyRepayments)(Number(loanAmount), Number(tenor.get("eir")), Number(tenor.get("tenor"))),
	            totalInterestPayable: (0, _utils.caltotalInterestPayable)(Number(loanAmount), Number(tenor.get("eir")), Number(tenor.get("tenor"))),
	            promoCode: tenor.get("promotionCode")
	        });
	    });
	    var filteredBTTableData = tenorTableData.map(function (tenor) {
	        return (0, _immutable.Map)({
	            loanTenor: Number(tenor.get("tenor")),
	            processingFeeBase: Number(tenor.get("processingFeeBase")),
	            processingFeeAbs: (0, _utils.calProcessingFee)(loanAmount, Number(tenor.get("processingFeeBase"))),
	            annualInterestRate: Number(tenor.get("air")),
	            creditCardIR: Number(tenor.get("eir")),
	            cashPlusIR: Number(tenor.get("eir")),
	            promoCode: tenor.get("promotionCode")
	        });
	    });
	    var promoCodes = tenorTableData.map(function (tenor) {
	        return tenor.get("promotionCode");
	    });
	    var bankList = props.state.getIn((0, _path.bankListDataPath)(), (0, _immutable.List)()).toJS();
	    var productType = typeOfProduct.getIn([pid, "type"]);
	    return _react2.default.createElement(
	        "div",
	        null,
	        _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_TextInput2.default, Object.assign({
	                inputLabel: inputLabels.uLLoanAmount,
	                inputID: _inputsConstant.UNSECURED_LOAN_AMOUNT + "-" + pid,
	                onChange: function onChange(e) {
	                    var value = e.target.value;
	                    var validators = [_inputValidation.validateFilledInput, _inputValidation.checkNumbers, (0, _inputValidation.plBtMaxAmount)(maxLoanAmt)];
	                    if (productType === "personalLoan") {
	                        validators.push((0, _inputValidation.personalLoanMinAmount)(minLoanAmt));
	                    }
	                    if (productType === "balanceTransfer") {
	                        validators.push((0, _inputValidation.balanceTransferMinAmount)(minLoanAmt));
	                    }
	                    var status = validators.map(function (x) {
	                        return x(formData);
	                    }).map(function (x) {
	                        return x(value);
	                    }).filter(function (x) {
	                        return !x.status;
	                    });
	                    props.dispatch((0, _actionCreators.editInputByPath)(props.step, _inputsConstant.UNSECURED_LOAN_AMOUNT + "-" + pid, ["data", "products", pid, _inputsConstant.UNSECURED_LOAN_AMOUNT], e.target.value, status));
	                },
	                value: props.state.getIn(["data", "products", pid, _inputsConstant.UNSECURED_LOAN_AMOUNT], "")
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_TenorTable2.default, Object.assign({
	                colTitles: productType === "personalLoan" ? plTableRowTitles : btTableRowTitles,
	                promoCodes: promoCodes,
	                pid: pid,
	                tableContent: productType === "personalLoan" ? filteredPLTableData.toJS() : filteredBTTableData.toJS()
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_Dropdown2.default, Object.assign({
	                inputLabel: inputLabels.uLBeneficiaryBank,
	                inputID: _inputsConstant.UNSECURED_LOAN_BENEFICIARY_BANK + "-" + pid,
	                dropdownItems: bankList,
	                onClick: function onClick(item) {
	                    props.dispatch((0, _actionCreators.editDropdownByPath)(props.step, _inputsConstant.UNSECURED_LOAN_BENEFICIARY_BANK + "-" + pid, ["data", "products", pid, _inputsConstant.UNSECURED_LOAN_BENEFICIARY_BANK], item.value, []));
	                    props.dispatch((0, _actionCreators.editDropdownByPath)(props.step, _inputsConstant.UNSECURED_LOAN_BENEFICIARY_BANK_NAME + "-" + pid, ["data", "products", pid, _inputsConstant.UNSECURED_LOAN_BENEFICIARY_BANK_NAME], item.label, []));
	                },
	                value: props.state.getIn(["data", "products", pid, _inputsConstant.UNSECURED_LOAN_BENEFICIARY_BANK], "")
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_TextInput2.default, Object.assign({
	                inputLabel: inputLabels.uLBeneficiaryAccount,
	                inputID: _inputsConstant.UNSECURED_LOAN_BENEFICIARY_ACCOUNT + "-" + pid,
	                onChange: function onChange(e) {
	                    var value = e.target.value;
	                    var validators = [_inputValidation.validateFilledInput, _inputValidation.checkNumbers, (0, _inputValidation.checkMaxSize)(15)];
	                    var status = validators.map(function (x) {
	                        return x(formData);
	                    }).map(function (x) {
	                        return x(value);
	                    }).filter(function (x) {
	                        return !x.status;
	                    });
	
	                    props.dispatch((0, _actionCreators.editInputByPath)(props.step, _inputsConstant.UNSECURED_LOAN_BENEFICIARY_ACCOUNT + "-" + pid, ["data", "products", pid, _inputsConstant.UNSECURED_LOAN_BENEFICIARY_ACCOUNT], e.target.value, status));
	                },
	                value: props.state.getIn(["data", "products", pid, _inputsConstant.UNSECURED_LOAN_BENEFICIARY_ACCOUNT], "")
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_ReadOnlyTextInput2.default, Object.assign({
	                inputLabel: inputLabels.uLBeneficiaryName,
	                inputID: _inputsConstant.UNSECURED_LOAN_BENEFICIARY_NAME + "-" + pid,
	                value: props.state.getIn(["data", "fullName"], "")
	            }, props))
	        )
	    );
	};
	
	UnsecuredLoansSpec.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    products: _reactImmutableProptypes2.default.list.isRequired,
	    dispatch: _react.PropTypes.func.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired,
	    productsConfig: _react.PropTypes.object.isRequired,
	    formData: _react.PropTypes.object.isRequired
	};
	
	var CardSpec = function CardSpec(props) {
	    var FormConfig = props.FormConfig;
	    var formData = props.formData;
	
	    var _ref2 = new FormConfig(props.step);
	
	    var inputLabels = _ref2.inputLabels;
	
	    var validatorsArray = [_inputValidation.validateFilledInput];
	
	    return _react2.default.createElement(
	        "div",
	        null,
	        props.familyType === "CARD2" ? _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_TextInput2.default, Object.assign({
	                inputLabel: inputLabels.asiaMilesMembershipNumber,
	                inputID: "" + _inputsConstant.ASIA_MILES_MEMBERSHIP_NUMBER,
	                validators: validatorsArray,
	                onChange: function onChange(e) {
	                    var value = e.target.value;
	                    var validators = [_inputValidation.validateFilledInput];
	                    var status = validators.map(function (x) {
	                        return x(formData);
	                    }).map(function (x) {
	                        return x(value);
	                    }).filter(function (x) {
	                        return !x.status;
	                    });
	
	                    return props.dispatch((0, _actionCreators.editInputByPath)(props.step, _inputsConstant.ASIA_MILES_MEMBERSHIP_NUMBER, ["data", "products", props.products.first(), _inputsConstant.ASIA_MILES_MEMBERSHIP_NUMBER], value, status));
	                },
	                value: props.state.getIn(["data", "products", props.products.first(), _inputsConstant.ASIA_MILES_MEMBERSHIP_NUMBER], "")
	            }, props))
	        ) : null,
	        props.familyType === "001803" ? _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_TextInput2.default, Object.assign({
	                inputLabel: inputLabels.singtelMembershipNumber,
	                inputID: "" + _inputsConstant.SINGTEL_MEMBERSHIP_NUMBER,
	                validators: validatorsArray,
	                onChange: function onChange(e) {
	                    var value = e.target.value;
	                    var validators = [_inputValidation.validateFilledInput, _inputValidation.checkNumbers, (0, _inputValidation.checkMaxSize)(8)];
	                    var status = validators.map(function (x) {
	                        return x(formData);
	                    }).map(function (x) {
	                        return x(value);
	                    }).filter(function (x) {
	                        return !x.status;
	                    });
	
	                    return props.dispatch((0, _actionCreators.editInputByPath)(props.step, _inputsConstant.SINGTEL_MEMBERSHIP_NUMBER, ["data", "products", props.products.first(), _inputsConstant.SINGTEL_MEMBERSHIP_NUMBER], value, status));
	                },
	                value: props.state.getIn(["data", "products", props.products.first(), _inputsConstant.SINGTEL_MEMBERSHIP_NUMBER], "")
	            }, props))
	        ) : null
	    );
	};
	
	CardSpec.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    products: _reactImmutableProptypes2.default.list.isRequired,
	    dispatch: _react.PropTypes.func.isRequired,
	    familyType: _react.PropTypes.string.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired,
	    formData: _react.PropTypes.object.isRequired
	};
	
	var sortProductIds = function sortProductIds(productIds, typeOfProduct) {
	    return productIds.sort(function (a, b) {
	        return typeOfProduct.getIn([a, "rank"], 0) < typeOfProduct.getIn([b, "rank"], 0);
	    });
	};
	
	var CasaSpec = function CasaSpec(props) {
	    var FormConfig = props.FormConfig;
	    var productsConfig = props.productsConfig;
	
	    var typeOfProduct = (0, _immutable.fromJS)(productsConfig.products);
	
	    var _ref3 = new FormConfig(props.step);
	
	    var inputValues = _ref3.inputValues;
	
	    var sortedProducts = sortProductIds(props.products, typeOfProduct);
	    var sortedProductIds = sortProductIds(props.state.getIn(["app", "productId"]), typeOfProduct);
	    var firstProduct = sortedProducts.first();
	    var currenciesConfig = typeOfProduct.getIn([firstProduct, "currencies", "values"]);
	    var displayCurrencySelection = typeOfProduct.getIn([firstProduct, "currencies", "displayed"], false);
	    var currencySelectionClickable = typeOfProduct.getIn([firstProduct, "currencies", "clickable"], false);
	    var isKrisFlyerAccount = props.products.includes("CURKF");
	    var selectedCasaProducts = filterCasaProducts(sortedProductIds, typeOfProduct);
	    var isFirst = isFirstCasa(selectedCasaProducts, firstProduct);
	    var hideCdd = props.state.getIn(["data", "samePurposeToggle"], true);
	
	    return _react2.default.createElement(
	        "div",
	        null,
	        displayCurrencySelection ? _react2.default.createElement(
	            "div",
	            { style: { marginTop: "30px" } },
	            _react2.default.createElement(_CurrencySelection2.default, Object.assign({
	                inputID: _inputsConstant.CURRENCIES,
	                clickable: currencySelectionClickable,
	                pid: firstProduct,
	                currencies: currenciesConfig
	            }, props))
	        ) : null,
	        (!hideCdd || isFirst) && props.products && props.products.slice(0, 1).map(function (product) {
	            var currencies = props.state.getIn(["data", "products", product, "currencies"], (0, _immutable.List)());
	            var firstCurrency = currencies.keySeq().first();
	            var firstCasaValues = props.state.getIn(["data", "products", selectedCasaProducts.first()]);
	
	            return _react2.default.createElement(
	                "div",
	                { key: "productBlock-" + props.familyType },
	                _react2.default.createElement(_CurrencyDetails2.default, Object.assign({
	                    inputValues: inputValues,
	                    currency: firstCurrency,
	                    key: "currencyDetails-" + props.pid + "-" + firstCurrency,
	                    pid: product,
	                    isFirst: isFirst,
	                    displayToggle: selectedCasaProducts.size > 1 || firstCasaValues && firstCasaValues.get("currencies").size > 1
	                }, props))
	            );
	        }),
	        !hideCdd && props.products && props.products.slice(1).map(function (product) {
	            var currencies = props.state.getIn(["data", "products", product, "currencies"], (0, _immutable.List)());
	
	            return currencies.keySeq().map(function (currencyKey) {
	                return _react2.default.createElement(_CurrencyDetails2.default, Object.assign({
	                    inputValues: inputValues,
	                    currency: currencyKey,
	                    key: "currencyDetails-" + props.pid + "-" + currencyKey,
	                    pid: product,
	                    isFirst: false
	                }, props));
	            });
	        }),
	        isKrisFlyerAccount ? _react2.default.createElement(_Krisflyer2.default, Object.assign({ product: "CURKF" }, props)) : null
	    );
	};
	
	CasaSpec.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    products: _reactImmutableProptypes2.default.list.isRequired,
	    dispatch: _react.PropTypes.func.isRequired,
	    familyType: _react.PropTypes.string.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired,
	    productsConfig: _react.PropTypes.object.isRequired
	};
	
	var ProductBlock = function (_Component) {
	    _inherits(ProductBlock, _Component);
	
	    function ProductBlock() {
	        _classCallCheck(this, ProductBlock);
	
	        return _possibleConstructorReturn(this, (ProductBlock.__proto__ || Object.getPrototypeOf(ProductBlock)).apply(this, arguments));
	    }
	
	    _createClass(ProductBlock, [{
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            var FormConfig = props.FormConfig;
	            var productsConfig = props.productsConfig;
	
	            var typeOfProduct = (0, _immutable.fromJS)(productsConfig.products);
	
	            var _ref4 = new FormConfig(props.step);
	
	            var inputLabels = _ref4.inputLabels;
	            var inputDescriptions = _ref4.inputDescriptions;
	            var inputValues = _ref4.inputValues;
	            var termsAndConditions = _ref4.termsAndConditions;
	
	            var firstProduct = props.products.first();
	            var termsAndConditionsToShow = termsAndConditions[firstProduct] || termsAndConditions.default;
	            var productsId = props.state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	            // const firstProductId = productsId.first();
	            // const firstProductAndWithCS = props.products.includes(firstProductId) && !props.doesHaveCrossSell;
	            var productsInfo = productsId.map(function (id) {
	                return typeOfProduct.getIn([id]);
	            });
	            var highestRank = (0, _utils.getHighestRankProduct)(productsInfo).get("rank");
	            var productsToShowCardDetails = productsInfo.filter(function (product) {
	                return product.get("rank") === highestRank;
	            }).map(function (product) {
	                return product.get("pid");
	            });
	            var currentProduct = typeOfProduct.get(firstProduct, (0, _immutable.Map)());
	            return _react2.default.createElement(
	                "div",
	                { id: props.familyType },
	                _react2.default.createElement(
	                    "div",
	                    { className: "account-details--separator border-bottom" },
	                    _react2.default.createElement(
	                        "div",
	                        { className: "account-details--title" },
	                        _react2.default.createElement(
	                            "span",
	                            null,
	                            "Details for "
	                        ),
	                        props.products.map(function (product, index) {
	                            return index === 0 ? _react2.default.createElement(
	                                "span",
	                                { key: "account-details-title-" + index, className: "account-details--title-currency" },
	                                typeOfProduct.getIn([product, "productName"])
	                            ) : _react2.default.createElement(
	                                "span",
	                                { key: "account-details-title-" + index, className: "account-details--title-currency" },
	                                " ",
	                                "& ",
	                                typeOfProduct.getIn([product, "productName"])
	                            );
	                        })
	                    ),
	                    props.familyType === "SAVJS" || props.productType === "personalLoan" || props.productType === "balanceTransfer" || !productsToShowCardDetails.includes(currentProduct.get("pid")) ? null : _react2.default.createElement(_CardDetails2.default, Object.assign({
	                        inputLabels: inputLabels,
	                        inputValues: inputValues,
	                        inputDescriptions: inputDescriptions,
	                        cardType: props.familyType,
	                        pids: props.products
	                    }, props)),
	                    props.productType === "CASA" && _react2.default.createElement(CasaSpec, props),
	                    props.productType === "Card" && _react2.default.createElement(CardSpec, props),
	                    props.productType === "personalLoan" && _react2.default.createElement(UnsecuredLoansSpec, props),
	                    props.productType === "balanceTransfer" && _react2.default.createElement(UnsecuredLoansSpec, props),
	                    _react2.default.createElement(
	                        "div",
	                        null,
	                        _react2.default.createElement("div", { style: { height: "30px" } }),
	                        _react2.default.createElement(_CheckboxInput2.default, Object.assign({
	                            inputID: "tnc-" + props.familyType,
	                            description: termsAndConditionsToShow
	                        }, props))
	                    )
	                )
	            );
	        }
	    }]);
	
	    return ProductBlock;
	}(_react.Component);
	
	exports.default = ProductBlock;

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* global FORMS_CNFG_GLBL */
	
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _countriesMaps = __webpack_require__(23);
	
	var _utils = __webpack_require__(9);
	
	__webpack_require__(477);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DropdownWithFlag = function DropdownWithFlag(props) {
	    var renderDropdownWithFlagItems = function renderDropdownWithFlagItems(item, i) {
	        return _react2.default.createElement(
	            "div",
	            { key: i, className: "dropdownWithFlag-selection-item" },
	            item.label
	        );
	    };
	
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 5);
	
	    var isFocus = _getInputStates2[0];
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var inputValue = _getInputStates2[4];
	    var dropdownWithFlagItems = props.dropdownWithFlagItems;
	
	    var mapValueToLabel = function mapValueToLabel(arrayOfItems, value) {
	        var item = arrayOfItems.find(function (x) {
	            return x.value === value;
	        });
	        return item ? item.label : value;
	    };
	    var value = props.value ? props.value : inputValue;
	    var focus = isFocus || value || !(0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "--focused" : "";
	    var searchFocus = "";
	    var country = (0, _utils.swapMap)(_countriesMaps.countriesNamesMap)[value];
	    var countryCode = country ? country : value;
	    var flagSrc = countryCode ? FORMS_CNFG_GLBL.imgPath + "/countriesFlags/" + countryCode.toLowerCase() + ".svg" : null;
	    var flagVisibility = flagSrc ? "" : "--invisible";
	    // const focusSearch = focused ? "--focused" : "";
	    var searchValue = props.state.getIn((0, _path.uiDropDownSearchValuePath)(props.step, props.inputID), "");
	
	    return _react2.default.createElement(
	        "div",
	        { className: "dropdownWithFlag--readonly" },
	        _react2.default.createElement(
	            "div",
	            { className: "dropdownWithFlag-container" + focus, tabIndex: "1" },
	            _react2.default.createElement(
	                "div",
	                { className: "dropdownWithFlag--content" },
	                _react2.default.createElement(
	                    "div",
	                    { className: "dropdownWithFlag--content-left" },
	                    _react2.default.createElement(
	                        "div",
	                        { className: "dropdownWithFlag--inputLabel" + focus },
	                        "" + props.inputLabel
	                    ),
	                    _react2.default.createElement(
	                        "div",
	                        { className: "dropdownWithFlag-input-container" },
	                        _react2.default.createElement(
	                            "div",
	                            { className: "dropdownWithFlag-input-flag-container" },
	                            _react2.default.createElement("img", {
	                                className: "dropdownWithFlag-input-flag" + flagVisibility,
	                                src: flagSrc,
	                                alt: "flagVisibility"
	                            })
	                        ),
	                        _react2.default.createElement(
	                            "div",
	                            { className: "dropdownWithFlag--value-text" },
	                            mapValueToLabel(dropdownWithFlagItems, value)
	                        )
	                    )
	                ),
	                _react2.default.createElement("img", {
	                    className: "read-only-dropdownWithFlag--inputArrow",
	                    src: FORMS_CNFG_GLBL.imgPath + "/non-editable-icon4.svg",
	                    alt: "dropdownWithFlag-arrow"
	                })
	            )
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "dropdownWithFlag--input-container" + searchFocus },
	            _react2.default.createElement("input", { // onKeyDown={handleKeyEvents}
	                onChange: function onChange(e) {
	                    return props.dispatchOnEditDropDownSearchInput(props.step, props.inputID, e.target.value);
	                },
	                onFocus: function onFocus() {
	                    props.dispatchOnFocusInput(props.step, props.inputID, true);
	                },
	                onBlur: function onBlur() {
	                    props.dispatchOnBlurInput(props.step, props.inputID, false);
	                },
	                className: "dropdownWithFlag--searchValue" + searchFocus,
	                value: searchValue,
	                placeholder: "Search"
	            }),
	            _react2.default.createElement("img", {
	                src: FORMS_CNFG_GLBL.imgPath + "/search_icon.svg",
	                className: "dropdownWithFlag--input-searchInput--icon",
	                alt: "searchIcon"
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "dropdownWithFlag-selection" + searchFocus },
	            props.dropdownWithFlagItems.filter(function (item) {
	                return item.label.toLowerCase().includes(searchValue.toLowerCase());
	            }).map(renderDropdownWithFlagItems)
	        )
	    );
	};
	
	DropdownWithFlag.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    title: _react.PropTypes.string,
	    inputLabel: _react.PropTypes.string,
	    inputID: _react.PropTypes.string,
	    description: _react.PropTypes.string,
	    dropdownWithFlagItems: _react.PropTypes.array,
	    dispatchOnFocusInput: _react.PropTypes.func,
	    dispatchOnBlurInput: _react.PropTypes.func,
	    dispatchOnEditInput: _react.PropTypes.func,
	    step: _react.PropTypes.string.isRequired,
	    value: _react.PropTypes.string,
	    onClick: _react.PropTypes.func
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchOnFocusInput: (0, _redux.bindActionCreators)(_actionCreators.onFocusInput, dispatch),
	        dispatchOnBlurInput: (0, _redux.bindActionCreators)(_actionCreators.onBlurInput, dispatch),
	        dispatchOnEditInput: (0, _redux.bindActionCreators)(_actionCreators.editInput, dispatch),
	        dispatchOnEditDropDownSearchInput: (0, _redux.bindActionCreators)(_actionCreators.editDropDownSearchInput, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(DropdownWithFlag);

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* global FORMS_CNFG_GLBL */
	
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _utils = __webpack_require__(9);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	__webpack_require__(478);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ReadOnlyDropdown = function ReadOnlyDropdown(props) {
	    var renderDropdownItems = function renderDropdownItems(item, i) {
	        return _react2.default.createElement(
	            "div",
	            { key: i, className: "dropdown-selection-item" },
	            item.label
	        );
	    };
	
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 5);
	
	    var isFocus = _getInputStates2[0];
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var errorMsg = _getInputStates2[3];
	    var inputValue = _getInputStates2[4];
	    var dropdownItems = props.dropdownItems;
	
	    var mapValueToLabel = function mapValueToLabel(arrayOfItems, value) {
	        var item = arrayOfItems.find(function (x) {
	            return x.value === value;
	        });
	        return item.label;
	    };
	    var value = props.value ? props.value : inputValue;
	    var focus = isFocus || value || !(isValid || !isDirty) ? "--focused" : "";
	    var searchValue = props.state.getIn((0, _path.uiDropDownSearchValuePath)(props.step, props.inputID), "");
	    var searchFocus = "";
	
	    return _react2.default.createElement(
	        "div",
	        { className: "ready-only-dropdown" },
	        _react2.default.createElement(
	            "div",
	            { className: "dropdown--vertical-container", tabIndex: "1" },
	            _react2.default.createElement(
	                "div",
	                { className: "ready-only-dropdown-container" + focus },
	                _react2.default.createElement(
	                    "div",
	                    { className: "dropdown--content" },
	                    _react2.default.createElement(
	                        "div",
	                        { className: "dropdown--content-left" },
	                        _react2.default.createElement(
	                            "div",
	                            { className: "dropdown--inputLabel" + focus },
	                            "" + props.inputLabel + (isValid || !isDirty ? "" : " - " + errorMsg)
	                        ),
	                        _react2.default.createElement(
	                            "div",
	                            { className: "dropdown--value-text" },
	                            mapValueToLabel(dropdownItems, value)
	                        )
	                    ),
	                    _react2.default.createElement("img", {
	                        className: "read-only-dropdown--inputArrow",
	                        src: FORMS_CNFG_GLBL.imgPath + "/non-editable-icon4.svg",
	                        alt: "dropdown-arrow"
	                    })
	                )
	            ),
	            _react2.default.createElement(
	                "div",
	                { className: "dropdown--input-container" + searchFocus },
	                _react2.default.createElement("input", { // onKeyDown={handleKeyEvents}
	                    className: "dropdown--searchValue" + searchFocus,
	                    value: searchValue,
	                    placeholder: "Search"
	                }),
	                _react2.default.createElement("img", {
	                    src: FORMS_CNFG_GLBL.imgPath + "/search_icon.svg",
	                    alt: "searchIcon",
	                    className: "dropdown--input-searchInput--icon"
	                })
	            )
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "dropdown-selection" + searchFocus },
	            props.dropdownItems.filter(function (item) {
	                var isObject = (typeof item === "undefined" ? "undefined" : _typeof(item)) === "object";
	                var newItem = isObject ? item.label : item;
	                return newItem.toLowerCase().includes(searchValue.toLowerCase()) ? newItem : null;
	            }).map(renderDropdownItems)
	        )
	    );
	};
	
	ReadOnlyDropdown.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    title: _react.PropTypes.string,
	    inputLabel: _react.PropTypes.string,
	    inputID: _react.PropTypes.string,
	    description: _react.PropTypes.string,
	    dropdownItems: _react.PropTypes.array,
	    path: _react.PropTypes.array,
	    dispatchOnFocusInput: _react.PropTypes.func,
	    dispatchOnBlurInput: _react.PropTypes.func,
	    dispatchOnEditInput: _react.PropTypes.func,
	    step: _react.PropTypes.string.isRequired,
	    value: _react.PropTypes.string,
	    onClick: _react.PropTypes.func
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchOnFocusInput: (0, _redux.bindActionCreators)(_actionCreators.onFocusInput, dispatch),
	        dispatchOnBlurInput: (0, _redux.bindActionCreators)(_actionCreators.onBlurInput, dispatch),
	        dispatchOnEditInput: (0, _redux.bindActionCreators)(_actionCreators.editInput, dispatch),
	        dispatchOnEditDropDownSearchInput: (0, _redux.bindActionCreators)(_actionCreators.editDropDownSearchInput, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(ReadOnlyDropdown);

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* global FORMS_CNFG_GLBL */
	
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _reactAvatarEditor = __webpack_require__(543);
	
	var _reactAvatarEditor2 = _interopRequireDefault(_reactAvatarEditor);
	
	var _elementResizeEvent = __webpack_require__(148);
	
	var _elementResizeEvent2 = _interopRequireDefault(_elementResizeEvent);
	
	var _Accordian = __webpack_require__(19);
	
	var _Accordian2 = _interopRequireDefault(_Accordian);
	
	__webpack_require__(480);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _utils = __webpack_require__(9);
	
	var _api = __webpack_require__(51);
	
	var _ValidatorHOC = __webpack_require__(20);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var fileInputRef = null;
	var avatarEditor = null;
	var rtime = void 0;
	var timeout = false;
	var delta = 200;
	
	var ButtonBar = function ButtonBar(props) {
	    var tmpImg = props.state.getIn((0, _path.uiSignatureImageTmpContentPath)(props.step, props.inputID), "");
	    var uploadInProgress = props.state.getIn(["app", props.step, props.inputID], false);
	    return _react2.default.createElement(
	        "div",
	        { className: "signature--avatar-editor-buttons-bar" },
	        _react2.default.createElement(
	            "div",
	            {
	                className: "signature--avatar-editor-button",
	                value: "scale up",
	                onClick: function onClick() {
	                    return props.scale < 5 ? props.dispatchSetSignatureImageScale(props.step, props.inputID, props.scale + 0.25) : null;
	                }
	            },
	            _react2.default.createElement("img", {
	                className: "signature--avatar-editor-button-icon",
	                src: FORMS_CNFG_GLBL.imgPath + "/icon-zoom-in.svg",
	                alt: "zoomInIcon"
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            {
	                className: "signature--avatar-editor-button",
	                value: "scale down",
	                onClick: function onClick() {
	                    return props.scale > 1 ? props.dispatchSetSignatureImageScale(props.step, props.inputID, props.scale - 0.25) : null;
	                }
	            },
	            _react2.default.createElement("img", {
	                className: "signature--avatar-editor-button-icon",
	                src: FORMS_CNFG_GLBL.imgPath + "/icon-zoom-out.svg",
	                alt: "zoomOutIcon"
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            {
	                className: "signature--avatar-editor-button",
	                value: "rotate left",
	                onClick: function onClick() {
	                    return props.rotation === -360 ? props.dispatchSetSignatureImageRotation(props.step, props.inputID, -90) : props.dispatchSetSignatureImageRotation(props.step, props.inputID, props.rotation - 90);
	                }
	            },
	            _react2.default.createElement("img", {
	                className: "signature--avatar-editor-button-icon",
	                src: FORMS_CNFG_GLBL.imgPath + "/icon-rotate-left.svg",
	                alt: "rotateLeftIcon"
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            {
	                className: "signature--avatar-editor-button",
	                value: "rotate right",
	                onClick: function onClick() {
	                    return props.rotation === 360 ? props.dispatchSetSignatureImageRotation(props.step, props.inputID, 90) : props.dispatchSetSignatureImageRotation(props.step, props.inputID, props.rotation + 90);
	                }
	            },
	            _react2.default.createElement("img", {
	                className: "signature--avatar-editor-button-icon",
	                src: FORMS_CNFG_GLBL.imgPath + "/icon-rotate-right.svg",
	                alt: "rotateRightIcon"
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "signature--avatar-editor-right-side-buttons-wrapper-flex" },
	            _react2.default.createElement(
	                "div",
	                { className: uploadInProgress ? "signature--right-side-button-progress" : "signature--right-side-button", onClick: props.handleCrop },
	                "Save"
	            ),
	            _react2.default.createElement(
	                "div",
	                {
	                    className: "signature--right-side-button-undo",
	                    onClick: function onClick() {
	                        props.dispatchSetSignatureImageRotation(props.step, props.inputID, 0);
	                        props.dispatchSetSignatureImageScale(props.step, props.inputID, 1);
	                        props.dispatchSetSignatureImageContent(props.step, props.inputID, tmpImg);
	                    }
	                },
	                "Clear"
	            )
	        )
	    );
	};
	
	ButtonBar.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    inputID: _react.PropTypes.string.isRequired,
	    dispatchSetSignatureImageRotation: _react.PropTypes.func.isRequired,
	    dispatchSetSignatureImageScale: _react.PropTypes.func.isRequired,
	    dispatchSetSignatureImageContent: _react.PropTypes.func.isRequired,
	    handleCrop: _react.PropTypes.func.isRequired,
	    dispatchShowErrorMsg: _react.PropTypes.func.isRequired,
	    dispatchUploadFile: _react.PropTypes.func.isRequired
	};
	
	var getShowErrorLabel = function getShowErrorLabel(isValid, isDirty) {
	    return (0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : "file-upload--error";
	};
	var getDescriptionContent = function getDescriptionContent(inputValue, description) {
	    return inputValue ? inputValue.replace(/^.*[\\\/]/, "") : description;
	};
	var getIsFileSelected = function getIsFileSelected(checkInputStatus) {
	    return checkInputStatus === "uploading" ? "--selected" : "";
	};
	var getVisibility = function getVisibility(img) {
	    return img === "" ? "--hidden" : "";
	};
	var getBrowseText = function getBrowseText(inputValue) {
	    return inputValue ? "BROWSE AGAIN" : "BROWSE";
	};
	var getCanvasWidth = function getCanvasWidth(editorFrameDiv, state, step, inputID) {
	    return editorFrameDiv ? state.getIn((0, _path.uiSignatureImageWidthPath)(step, inputID), editorFrameDiv.offsetWidth) : state.getIn((0, _path.uiSignatureImageWidthPath)(step, inputID), 600);
	};
	var spinner = _react2.default.createElement("img", {
	    className: "signature-progress--spinner",
	    src: FORMS_CNFG_GLBL.imgPath + "/loading_icon_dark.svg",
	    alt: "primary-button"
	});
	var Signature = function Signature(props) {
	    var _getInputStates = (0, _utils.getInputStates)(props.state, props.step, props.inputID);
	
	    var _getInputStates2 = _slicedToArray(_getInputStates, 5);
	
	    var isValid = _getInputStates2[1];
	    var isDirty = _getInputStates2[2];
	    var errorMsg = _getInputStates2[3];
	    var inputValue = _getInputStates2[4];
	
	    var showErrorLabel = getShowErrorLabel(isValid, isDirty);
	    var descriptionContent = getDescriptionContent(inputValue, props.description);
	    var checkInputStatus = props.state.getIn((0, _path.uiUploadStatusPath)(props.step, props.inputID), "none");
	    var isFileSelected = getIsFileSelected(checkInputStatus);
	    var inputProgressValue = props.state.getIn((0, _path.uiUploadProgressPath)(props.step, props.inputID), 0);
	    var img = props.state.getIn((0, _path.uiSignatureImageContentPath)(props.step, props.inputID), "");
	    var rotation = props.state.getIn((0, _path.uiSignatureImageRotationPath)(props.step, props.inputID), 0);
	    var scale = props.state.getIn((0, _path.uiSignatureImageScalePath)(props.step, props.inputID), 1);
	    var visibility = getVisibility(img);
	    var uploadInProgress = props.state.getIn(["app", props.step, props.inputID], false);
	    var editorFrameDiv = document.getElementById("avatar-editor-frame-div");
	    var canvasWidth = getCanvasWidth(editorFrameDiv, props.state, props.step, props.inputID);
	    var canvasHeight = props.state.getIn((0, _path.uiSignatureImageHeightPath)(props.step, props.inputID), 200);
	    var browseText = uploadInProgress ? "" : getBrowseText(inputValue);
	
	    var FormConfig = props.FormConfig;
	    var formData = props.formData;
	
	    var fileUploadErrorMsg = props.formData["formInputErrorMessages"]["fileUploadError"];
	    var signature = new FormConfig(props.step);
	    var termsAndConditions = signature.termsAndConditions;
	
	    var errorContainerStyle = (0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : "signature--main-container--error";
	    var MAX_QUALITY_IMAGE = 0.9;
	    var TYPE_IMAGE = "image/jpeg";
	    var handleCrop = function handleCrop() {
	        if (uploadInProgress) {
	            return;
	        }
	        var fileData = avatarEditor.getImage().toDataURL();
	        var actions = {
	            successDispatch: function successDispatch() {
	                return props.dispatchSetSignatureStatusToTrue(props.step, props.inputID);
	            },
	            errorDispatch: function errorDispatch() {
	                return props.dispatchErrorUploadFile(fileUploadErrorMsg);
	            },
	            progressDispatch: function progressDispatch(progress) {
	                return props.dispatchupdateUploadProgress(props.step, props.inputID, progress);
	            }
	        };
	        props.dispatchSetSignatureImageContent(props.step, props.inputID, fileData);
	        props.dispatchSetSignatureImageRotation(props.step, props.inputID, 0);
	        props.dispatchSetSignatureImageScale(props.step, props.inputID, 1);
	        avatarEditor.getImage().toBlob(function (blob) {
	            (0, _utils.fileUploadHelper)(blob, (0, _api.fileUploadUrl)(), props.inputID, actions);
	        }, TYPE_IMAGE, MAX_QUALITY_IMAGE);
	    };
	
	    var resizeend = function resizeend() {
	        if (new Date() - rtime < delta) {
	            setTimeout(resizeend, delta);
	        } else {
	            timeout = false;
	            props.dispatchSetSignatureImageWidth(props.step, props.inputID, editorFrameDiv.offsetWidth);
	            //  props.dispatchSetSignatureImageHeight(props.step, props.inputID, editorFrameDiv.offsetHeight);
	        }
	    };
	
	    if (editorFrameDiv) {
	        (0, _elementResizeEvent2.default)(editorFrameDiv, function () {
	            rtime = new Date();
	            if (timeout === false) {
	                timeout = true;
	                setTimeout(resizeend, delta);
	            }
	        });
	    }
	
	    var setEditorRef = function setEditorRef(editor) {
	        avatarEditor = editor;
	    };
	    var checkFileExtension = function checkFileExtension(file, allowedExtensions) {
	        return allowedExtensions.includes(file.split(".").pop());
	    };
	
	    var handleOnChange = function handleOnChange() {
	        var file = fileInputRef.files[0];
	        var extensionIsAllowed = checkFileExtension(file.name, ["jpg", "png", "JPG", "PNG"]);
	        if (!extensionIsAllowed) {
	            return props.dispatchShowErrorMsg(props.step, props.inputID, "can only be either jpg or png");
	        }
	        if (file.size > 1000000) {
	            return props.dispatchShowErrorMsg(props.step, props.inputID, "file size cannot exceed 1MB");
	        }
	        var read = new window.FileReader();
	        fileInputRef = file;
	        read.readAsDataURL(fileInputRef);
	        read.onloadend = function () {
	            props.dispatchSetSignatureImageContent(props.step, props.inputID, read.result);
	            props.dispatchSetSignatureTmpImageContent(props.step, props.inputID, read.result);
	            props.dispatchSetSignatureImageRotation(props.step, props.inputID, 0);
	            props.dispatchSetSignatureImageScale(props.step, props.inputID, 1);
	        };
	        return props.dispatchUploadFile(props.step, props.inputID, file.name, file.size, [{ status: false, errorMsg: formData.formInputErrorMessages.signatureConfirmToUpload }]);
	    };
	
	    var handleFileSelectOnClick = function handleFileSelectOnClick(e) {
	        if (uploadInProgress) {
	            e.preventDefault();
	            return;
	        }
	    };
	
	    var fileUploadContainer = function fileUploadContainer() {
	        return _react2.default.createElement(
	            "div",
	            { className: "signature-button " + isFileSelected },
	            _react2.default.createElement("progress", { className: "signature-progress", max: "100", value: inputProgressValue }),
	            _react2.default.createElement(
	                "div",
	                { className: uploadInProgress ? "signature-button--text-progress" : "signature-button--text" },
	                uploadInProgress && spinner,
	                browseText
	            ),
	            _react2.default.createElement("input", {
	                ref: function ref(i) {
	                    fileInputRef = i;
	                },
	                type: "file",
	                className: uploadInProgress ? "signature-input-progress" : "signature-input",
	                onClick: handleFileSelectOnClick,
	                onChange: handleOnChange
	            })
	        );
	    };
	
	    var updateReferencial = function updateReferencial() {
	        return rotation === -270 || rotation === -90 || rotation === 270 || rotation === 90;
	    };
	
	    return _react2.default.createElement(
	        "div",
	        { id: props.inputID, className: "signature--main-container-flex " + errorContainerStyle },
	        _react2.default.createElement(
	            "div",
	            { className: "signature--container" },
	            _react2.default.createElement(
	                "div",
	                { className: "signature--text-container" },
	                _react2.default.createElement(
	                    "div",
	                    { className: "signature--title " + showErrorLabel },
	                    _react2.default.createElement(
	                        "p",
	                        null,
	                        "" + props.title
	                    ),
	                    "" + ((0, _utils.isValidOrNotDirty)(isValid, isDirty) ? "" : " " + errorMsg)
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "signature--description" },
	                    descriptionContent,
	                    isValid && isDirty && _react2.default.createElement(
	                        "b",
	                        null,
	                        " Uploaded "
	                    ),
	                    isValid && isDirty && _react2.default.createElement("img", { src: FORMS_CNFG_GLBL.imgPath + "/Tick.svg", alt: "tick" })
	                )
	            ),
	            _react2.default.createElement(
	                "div",
	                { className: "signature--button-container" },
	                fileUploadContainer()
	            )
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "signature--avatar-editor-main-container" + visibility },
	            _react2.default.createElement(
	                "div",
	                { id: "avatar-editor-frame-div", className: "signature--avatar-editor-frame-container" },
	                _react2.default.createElement(_reactAvatarEditor2.default, {
	                    ref: setEditorRef,
	                    image: img,
	                    height: updateReferencial() ? canvasWidth - 0 : canvasHeight - 0,
	                    width: updateReferencial() ? canvasHeight - 0 : canvasWidth - 0,
	                    border: 1,
	                    borderRadius: 2,
	                    onSave: handleCrop,
	                    color: [0, 0, 0, 0.3] // RGBA
	                    , scale: parseFloat(scale),
	                    rotate: rotation
	                })
	            ),
	            _react2.default.createElement(ButtonBar, Object.assign({
	                scale: scale,
	                rotation: rotation,
	                dispatchSetSignatureImageRotation: props.dispatchSetSignatureImageRotation,
	                dispatchSetSignatureImageScale: props.dispatchSetSignatureImageScale,
	                dispatchSetSignatureImageContent: props.dispatchSetSignatureImageContent,
	                dispatchShowErrorMsg: props.dispatchShowErrorMsg,
	                dispatchUploadFile: props.dispatchUploadFile,
	                handleCrop: handleCrop
	            }, props)),
	            _react2.default.createElement("div", { className: "draw-signature--separator" }),
	            _react2.default.createElement(_Accordian2.default, Object.assign({}, props, {
	                title: termsAndConditions["signature"],
	                content: termsAndConditions["signatureContent"],
	                inputID: "default"
	            }))
	        )
	    );
	};
	
	Signature.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    inputID: _react.PropTypes.string.isRequired,
	    title: _react.PropTypes.string.isRequired,
	    description: _react.PropTypes.string,
	    dispatchSetSignatureImageRotation: _react.PropTypes.func.isRequired,
	    dispatchSetSignatureImageScale: _react.PropTypes.func.isRequired,
	    dispatchSetSignatureImageContent: _react.PropTypes.func.isRequired,
	    formData: _react.PropTypes.object.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired,
	    dispatchShowErrorMsg: _react.PropTypes.func.isRequired,
	    dispatchUploadFile: _react.PropTypes.func.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchSetSignatureImageContent: (0, _redux.bindActionCreators)(_actionCreators.setSignatureImageContent, dispatch),
	        dispatchSetSignatureImageScale: (0, _redux.bindActionCreators)(_actionCreators.setSignatureImageScale, dispatch),
	        dispatchSetSignatureImageRotation: (0, _redux.bindActionCreators)(_actionCreators.setSignatureImageRotation, dispatch),
	        dispatchSetSignatureImageWidth: (0, _redux.bindActionCreators)(_actionCreators.setSignatureImageWidth, dispatch),
	        dispatchSetSignatureImageHeight: (0, _redux.bindActionCreators)(_actionCreators.setSignatureImageHeight, dispatch),
	        dispatchSetSignatureTmpImageContent: (0, _redux.bindActionCreators)(_actionCreators.setSignatureTmpImagContent, dispatch),
	        dispatchUploadFile: (0, _redux.bindActionCreators)(_actionCreators.uploadFile, dispatch),
	        dispatchShowErrorMsg: (0, _redux.bindActionCreators)(_actionCreators.showErrorMsg, dispatch),
	        dispatchupdateUploadProgress: (0, _redux.bindActionCreators)(_actionCreators.updateUploadProgress, dispatch),
	        dispatchSetSignatureStatusToTrue: (0, _redux.bindActionCreators)(_actionCreators.setSignatureStatusToTrue, dispatch),
	        dispatchErrorUploadFile: (0, _redux.bindActionCreators)(_actionCreators.errorUploadFile, dispatch)
	    };
	};
	
	exports.default = (0, _ValidatorHOC.validatorHOC)((0, _reactRedux.connect)(null, mapDispatchToProps)(Signature));

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _reactRedux = __webpack_require__(7);
	
	var _Main = __webpack_require__(355);
	
	var _Main2 = _interopRequireDefault(_Main);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var mapStateToProps = function mapStateToProps(store) {
	    return {
	        state: store.state
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps)(_Main2.default);

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	__webpack_require__(481);
	
	var _TenorTableMobile = __webpack_require__(366);
	
	var _TenorTableMobile2 = _interopRequireDefault(_TenorTableMobile);
	
	var _TenorTableDesktop = __webpack_require__(365);
	
	var _TenorTableDesktop2 = _interopRequireDefault(_TenorTableDesktop);
	
	var _path = __webpack_require__(4);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _actionCreators = __webpack_require__(3);
	
	var _immutable = __webpack_require__(13);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TenorTable = function (_Component) {
	    _inherits(TenorTable, _Component);
	
	    function TenorTable() {
	        _classCallCheck(this, TenorTable);
	
	        return _possibleConstructorReturn(this, (TenorTable.__proto__ || Object.getPrototypeOf(TenorTable)).apply(this, arguments));
	    }
	
	    _createClass(TenorTable, [{
	        key: "componentWillReceiveProps",
	        value: function componentWillReceiveProps(nextProps) {
	            var isPromoCodeSelected = nextProps.state.getIn((0, _path.dataPath)(["products", this.props.pid, "promotionCodeTenor"]), "");
	            var promoCodeData = nextProps.state.getIn((0, _path.dataPath)(["products", this.props.pid, "promotionCode"]), "");
	            var tenorData = nextProps.state.getIn((0, _path.dataPath)(["products", this.props.pid, "tenor"]), "");
	            var isTableOpenBefore = nextProps.state.getIn((0, _path.allTableStatePath)(_inputsConstant.UNSECRUED_LOAN_TABLE + "-" + nextProps.pid), (0, _immutable.Map)()).count() > 0;
	            if (nextProps.tableContent.length > 0 && !isPromoCodeSelected) {
	                var firstRow = nextProps.tableContent[0];
	                this.props.dispatch((0, _actionCreators.selectTableRow)(_inputsConstant.UNSECRUED_LOAN_TABLE, this.props.pid, promoCodeData || firstRow.promoCode, tenorData || firstRow.loanTenor));
	            }
	            if (!isTableOpenBefore) {
	                this.props.dispatch((0, _actionCreators.expandTableRow)(_inputsConstant.UNSECRUED_LOAN_TABLE + "-" + nextProps.pid, 0));
	            }
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            return _react2.default.createElement(
	                "div",
	                null,
	                _react2.default.createElement(
	                    "div",
	                    { className: "tenorTable-desktop" },
	                    _react2.default.createElement(_TenorTableDesktop2.default, props)
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "tenorTable-mobile" },
	                    _react2.default.createElement(_TenorTableMobile2.default, props)
	                )
	            );
	        }
	    }]);
	
	    return TenorTable;
	}(_react.Component);
	
	TenorTable.propTypes = {
	    dispatch: _react.PropTypes.func.isRequired,
	    pid: _react.PropTypes.string.isRequired,
	    tableContent: _react.PropTypes.array.isRequired
	};
	
	exports.default = TenorTable;

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	__webpack_require__(482);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _path = __webpack_require__(4);
	
	var _actionCreators = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var generateTableRows = function generateTableRows(tableContent, props) {
	    var state = props.state;
	    var dispatch = props.dispatch;
	
	    var selectedRow = state.getIn((0, _path.dataPath)(["products", props.pid, "promotionCodeTenor"]), "");
	    return tableContent.map(function (row, i) {
	        var rowData = Object.keys(row);
	        var promoCode = row[rowData.pop()];
	        var checkboxSelectedClass = selectedRow === promoCode + row.loanTenor ? "tenor-table--row-item-checkbox--selected" : "tenor-table--row-item-checkbox";
	        var rowSelectedClass = selectedRow === promoCode + row.loanTenor ? "tenor-table--row-flex--selected" : "tenor-table--row-flex";
	        return _react2.default.createElement(
	            "div",
	            { key: i },
	            _react2.default.createElement("div", { className: "tenor-table--separator" }),
	            _react2.default.createElement(
	                "div",
	                { className: rowSelectedClass },
	                _react2.default.createElement(
	                    "div",
	                    {
	                        className: checkboxSelectedClass,
	                        onClick: function onClick() {
	                            return dispatch((0, _actionCreators.selectTableRow)(_inputsConstant.UNSECRUED_LOAN_TABLE, props.pid, promoCode, row.loanTenor));
	                        }
	                    },
	                    selectedRow === promoCode + row.loanTenor && _react2.default.createElement("div", { className: "tenor-table--row-item-checkbox-inner-circle" })
	                ),
	                rowData.map(function (data, index) {
	                    return _react2.default.createElement(
	                        "div",
	                        { key: index, className: "tenor-table--row-item" },
	                        parseFloat(row[data]) || 0
	                    );
	                })
	            )
	        );
	    });
	};
	
	var TenorTableDesktop = function TenorTableDesktop(props) {
	    return _react2.default.createElement(
	        "div",
	        { className: "tenor-table--main-container-flex" },
	        _react2.default.createElement(
	            "div",
	            { className: "tenor-table--titles-container-flex" },
	            _react2.default.createElement("div", { className: "tenor-table--row-item-checkbox--title" }),
	            props.colTitles.map(function (title, i) {
	                return _react2.default.createElement(
	                    "div",
	                    { key: i, className: "tenor-table--title-flex" },
	                    title
	                );
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "tenor-table--rows-container-flex" },
	            generateTableRows(props.tableContent, props)
	        )
	    );
	};
	
	TenorTableDesktop.propTypes = {
	    tableContent: _react.PropTypes.array.isRequired,
	    colTitles: _react.PropTypes.array.isRequired
	};
	
	exports.default = TenorTableDesktop;

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	__webpack_require__(483);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _path = __webpack_require__(4);
	
	var _actionCreators = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* global FORMS_CNFG_GLBL */
	var Row = function Row(props) {
	    var rowSelectedClass = props.rowSelectedClass;
	    var handleClick = props.handleClick;
	    var arrowClass = props.arrowClass;
	    var header = props.header;
	    var data = props.data;
	    var checkboxSelectedClass = props.checkboxSelectedClass;
	    var contentClass = props.contentClass;
	    var bodyTitle = props.bodyTitle;
	    var dispatch = props.dispatch;
	    var restOfDataKeysExceptHeader = props.restOfDataKeysExceptHeader;
	    var isRowOpen = props.isRowOpen;
	    var promoCode = props.promoCode;
	    var selectedRow = props.selectedRow;
	
	    return _react2.default.createElement(
	        "div",
	        { className: rowSelectedClass },
	        _react2.default.createElement(
	            "div",
	            { className: "table-mobile-title-container", onClick: handleClick },
	            _react2.default.createElement("img", { src: FORMS_CNFG_GLBL.imgPath + "/arrow.svg", alt: "tick", className: arrowClass }),
	            _react2.default.createElement(
	                "div",
	                { className: "table-mobile-title-checkbox-container" },
	                _react2.default.createElement(
	                    "div",
	                    { className: "table-mobile-title" },
	                    data[header] + " Months"
	                ),
	                _react2.default.createElement(
	                    "div",
	                    {
	                        className: checkboxSelectedClass,
	                        onClick: function onClick(e) {
	                            e.stopPropagation();
	                            dispatch((0, _actionCreators.selectTableRow)(_inputsConstant.UNSECRUED_LOAN_TABLE, props.pid, promoCode, data.loanTenor));
	                        }
	                    },
	                    selectedRow === promoCode + data.loanTenor && _react2.default.createElement("div", { className: "table-mobile-checkbox-inner-circle" })
	                )
	            )
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "table-mobile-content-container " + contentClass },
	            isRowOpen && bodyTitle.map(function (itemTitle, i) {
	                var currentTitleKey = restOfDataKeysExceptHeader[i];
	                return _react2.default.createElement(RowItem, { key: i, title: itemTitle, data: "" + data[currentTitleKey] });
	            })
	        )
	    );
	};
	
	var RowItem = function RowItem(props) {
	    return _react2.default.createElement(
	        "div",
	        { className: "table-mobile-content-item-container" },
	        _react2.default.createElement(
	            "div",
	            { className: "table-mobile-content-item-title" },
	            props.title
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "table-mobile-content-item-data" },
	            parseFloat(props.data) || 0
	        )
	    );
	};
	
	var TenorTableMobile = function TenorTableMobile(props) {
	    var dispatch = props.dispatch;
	    var state = props.state;
	    var colTitles = props.colTitles;
	    var tableContent = props.tableContent;
	
	    var selectedRow = state.getIn((0, _path.dataPath)(["products", props.pid, "promotionCodeTenor"]), "");
	    var bodyTitle = colTitles.filter(function (title, i) {
	        return i !== 0;
	    });
	    return _react2.default.createElement(
	        "div",
	        { className: "table-mobile-container" },
	        tableContent.map(function (data, i) {
	            var dataKeys = Object.keys(data);
	            var promoCode = data[dataKeys.pop()];
	            var checkboxSelectedClass = selectedRow === promoCode + data.loanTenor ? "table-mobile-checkbox--selected" : "table-mobile-checkbox";
	            var rowSelectedClass = selectedRow === promoCode + data.loanTenor ? "table-mobile-container-item--selected" : "table-mobile-container-item";
	
	            var header = dataKeys[0];
	            var isRowOpen = state.getIn((0, _path.tableStatePath)(_inputsConstant.UNSECRUED_LOAN_TABLE + "-" + props.pid, i));
	            var restOfDataKeysExceptHeader = dataKeys.filter(function (x) {
	                return x !== header;
	            });
	            var arrowClass = isRowOpen ? "table-mobile-arrow--selected" : "table-mobile-arrow";
	            var contentClass = isRowOpen ? "table-mobile-content-container--selected" : "";
	            var handleClick = function handleClick() {
	                return isRowOpen ? dispatch((0, _actionCreators.collapseTableRow)(_inputsConstant.UNSECRUED_LOAN_TABLE + "-" + props.pid, i)) : dispatch((0, _actionCreators.expandTableRow)(_inputsConstant.UNSECRUED_LOAN_TABLE + "-" + props.pid, i));
	            };
	            return _react2.default.createElement(Row, {
	                key: i,
	                checkboxSelectedClass: checkboxSelectedClass,
	                rowSelectedClass: rowSelectedClass,
	                restOfDataKeysExceptHeader: restOfDataKeysExceptHeader,
	                arrowClass: arrowClass,
	                contentClass: contentClass,
	                handleClick: handleClick,
	                bodyTitle: bodyTitle,
	                data: data,
	                dispatch: dispatch,
	                header: header,
	                index: i,
	                isRowOpen: isRowOpen,
	                promoCode: promoCode,
	                pid: props.pid,
	                selectedRow: selectedRow
	            });
	        })
	    );
	};
	
	Row.propTypes = {
	    handleClick: _react.PropTypes.func.isRequired,
	    arrowClass: _react.PropTypes.string.isRequired,
	    header: _react.PropTypes.string.isRequired,
	    data: _react.PropTypes.object.isRequired,
	    contentClass: _react.PropTypes.string.isRequired,
	    bodyTitle: _react.PropTypes.array.isRequired,
	    restOfDataKeysExceptHeader: _react.PropTypes.array.isRequired,
	    isRowOpen: _react.PropTypes.bool,
	    rowSelectedClass: _react.PropTypes.string.isRequired,
	    checkboxSelectedClass: _react.PropTypes.string.isRequired,
	    dispatch: _react.PropTypes.func.isRequired,
	    promoCode: _react.PropTypes.string.isRequired,
	    selectedRow: _react.PropTypes.string.isRequired
	};
	
	RowItem.propTypes = {
	    title: _react.PropTypes.string.isRequired,
	    data: _react.PropTypes.string.isRequired
	};
	
	TenorTableMobile.propTypes = {
	    dispatch: _react.PropTypes.func.isRequired,
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    colTitles: _react.PropTypes.array.isRequired,
	    tableContent: _react.PropTypes.array.isRequired,
	    pid: _react.PropTypes.string.isRequired
	};
	
	exports.default = TenorTableMobile;

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _immutable = __webpack_require__(13);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _ProductBlock = __webpack_require__(359);
	
	var _ProductBlock2 = _interopRequireDefault(_ProductBlock);
	
	var _path = __webpack_require__(4);
	
	__webpack_require__(487);
	
	var _actionCreators = __webpack_require__(3);
	
	var _utils = __webpack_require__(9);
	
	var _Accordian = __webpack_require__(19);
	
	var _Accordian2 = _interopRequireDefault(_Accordian);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var sortProductIds = function sortProductIds(productIds, typeOfProduct) {
	    return productIds.sort(function (a, b) {
	        return typeOfProduct.getIn([a, "rank"], 0) < typeOfProduct.getIn([b, "rank"], 0);
	    });
	};
	
	var defineProductFamilies = function defineProductFamilies(productIds, familyOfProduct) {
	    return sortProductIds(productIds, familyOfProduct).reduce(function (reduction, value) {
	        var family = familyOfProduct.getIn([value, "pid"]);
	        var currentTypes = reduction.getIn([family], (0, _immutable.List)());
	
	        return reduction.setIn([family], currentTypes.push(value));
	    }, (0, _immutable.OrderedMap)());
	};
	
	var AccountDetails = function (_Component) {
	    _inherits(AccountDetails, _Component);
	
	    function AccountDetails() {
	        _classCallCheck(this, AccountDetails);
	
	        return _possibleConstructorReturn(this, (AccountDetails.__proto__ || Object.getPrototypeOf(AccountDetails)).apply(this, arguments));
	    }
	
	    _createClass(AccountDetails, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            var props = this.props;
	            var productsConfig = props.productsConfig;
	
	            var typeOfProduct = (0, _immutable.fromJS)(productsConfig.products);
	            var products = props.state.getIn(["app", "productId"]);
	            props.dispatch((0, _actionCreators.getBankList)());
	            products.map(function (pid) {
	                var productType = typeOfProduct.getIn([pid, "type"]);
	                if (productType === "personalLoan" || productType === "balanceTransfer") {
	                    if (productType === "personalLoan") {
	                        props.dispatch((0, _actionCreators.getTenorTableData)(pid, "PL"));
	                    } else {
	                        props.dispatch((0, _actionCreators.getTenorTableData)(pid, "BT"));
	                    }
	                }
	                if (!props.state.hasIn(["data", "products", pid])) {
	                    var productCurrencies = (0, _immutable.Map)(_defineProperty({}, pid, typeOfProduct.getIn([pid, "currencies", "values"])));
	                    var familyType = typeOfProduct.getIn([pid, "pid"]);
	                    var name = props.state.getIn(["data", "fullName"]);
	                    var preferedDailyLimit = "2000";
	                    var activateAtms = typeOfProduct.getIn([pid, "atmActivited"], true);
	                    var defaultValues = (0, _immutable.Map)({ purposeOfFunds: "", sourceOfFunds: "", countryOfFunds: "SG" });
	
	                    if (productType === "CASA") {
	                        props.dispatch((0, _actionCreators.initAccountDetailsWithCasa)(pid, productCurrencies, familyType, {
	                            name: name.toUpperCase().substr(0, 19).replace(/[^a-zA-Z ]/g, ""),
	                            preferedDailyLimit: preferedDailyLimit,
	                            activateAtms: activateAtms
	                        }, defaultValues));
	                    } else {
	                        props.dispatch((0, _actionCreators.initAccountDetailsWithCards)(pid, familyType, name.toUpperCase().substr(0, 19).replace(/[^a-zA-Z ]/g, ""), preferedDailyLimit, activateAtms));
	                    }
	                }
	                return products;
	            });
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            var FormConfig = props.FormConfig;
	            var productsConfig = props.productsConfig;
	
	            var typeOfProduct = (0, _immutable.fromJS)(productsConfig.products);
	            var familyOfProduct = (0, _immutable.fromJS)(productsConfig.products);
	            var accountDetails = new FormConfig(props.step);
	            var title = accountDetails.title;
	            var subtitle = accountDetails.subtitle;
	
	            var _accountDetails$getPo = accountDetails.getPostMessage("CASA");
	
	            var _accountDetails$getPo2 = _slicedToArray(_accountDetails$getPo, 2);
	
	            var casaPostMessage = _accountDetails$getPo2[0];
	            var casaPostMessageContent = _accountDetails$getPo2[1];
	
	            var _accountDetails$getPo3 = accountDetails.getPostMessage("Card");
	
	            var _accountDetails$getPo4 = _slicedToArray(_accountDetails$getPo3, 2);
	
	            var cardPostMessage = _accountDetails$getPo4[0];
	            var cardPostMessageContent = _accountDetails$getPo4[1];
	
	            var productIds = props.state.getIn((0, _path.productIdPath)());
	            var firstProduct = productIds.first();
	            var crossSellProductIds = productsConfig.crossSellReference[firstProduct];
	            var crossSellProducts = crossSellProductIds ? crossSellProductIds.map(function (product) {
	                return productsConfig.products[product.pid];
	            }) : [];
	            var productFamilies = defineProductFamilies(productIds, familyOfProduct);
	            var productsAdditionalMsg = productIds.filter(function (pid) {
	                return typeOfProduct.getIn([pid, "additionalMsg"], "") !== "";
	            }).map(function (pid, i) {
	                return _react2.default.createElement(
	                    "div",
	                    { key: i },
	                    typeOfProduct.getIn([pid, "additionalMsg"]),
	                    _react2.default.createElement("br", null)
	                );
	            });
	            return _react2.default.createElement(
	                "div",
	                null,
	                _react2.default.createElement(
	                    "h1",
	                    null,
	                    title
	                ),
	                _react2.default.createElement("div", { className: "uob-form-separator" }),
	                _react2.default.createElement(
	                    "p",
	                    null,
	                    subtitle
	                ),
	                productFamilies.map(function (products, familyType) {
	                    var pid = products.first();
	                    var productType = typeOfProduct.getIn([pid, "type"]);
	                    return _react2.default.createElement(_ProductBlock2.default, Object.assign({
	                        familyType: familyType,
	                        productType: productType,
	                        products: products,
	                        key: "productBlock-" + familyType,
	                        doesHaveCrossSell: crossSellProducts.length > 0
	                    }, props));
	                }).toList(),
	                productsAdditionalMsg.count() > 0 && _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_Accordian2.default, Object.assign({}, props, { title: productsAdditionalMsg, inputID: "extraMsg" }))
	                ),
	                casaPostMessage && (0, _utils.sellingCasa)(productIds, productsConfig) && _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator--negative-margin" },
	                    _react2.default.createElement(_Accordian2.default, Object.assign({}, props, {
	                        title: casaPostMessage,
	                        content: casaPostMessageContent,
	                        inputID: "casa"
	                    }))
	                ),
	                cardPostMessage && (0, _utils.sellingCards)(productIds, productsConfig) && _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator--negative-margin" },
	                    _react2.default.createElement(_Accordian2.default, Object.assign({}, props, {
	                        title: cardPostMessage,
	                        content: cardPostMessageContent,
	                        inputID: "card"
	                    }))
	                )
	            );
	        }
	    }]);
	
	    return AccountDetails;
	}(_react.Component);
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchAddValidFlag: (0, _redux.bindActionCreators)(_actionCreators.addValidFlag, dispatch),
	        dispatchUpdateCurrencies: (0, _redux.bindActionCreators)(_actionCreators.updateCurrencies, dispatch),
	        dispatchUpdateCountryOfFunds: (0, _redux.bindActionCreators)(_actionCreators.updateCountryOfFunds, dispatch),
	        dispatchOnToggleSamePurpose: (0, _redux.bindActionCreators)(_actionCreators.onToggleSamePurpose, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(AccountDetails);

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _TextInput = __webpack_require__(21);
	
	var _TextInput2 = _interopRequireDefault(_TextInput);
	
	var _PhoneInput = __webpack_require__(83);
	
	var _PhoneInput2 = _interopRequireDefault(_PhoneInput);
	
	var _Accordian = __webpack_require__(19);
	
	var _Accordian2 = _interopRequireDefault(_Accordian);
	
	var _ToggleInput = __webpack_require__(37);
	
	var _ToggleInput2 = _interopRequireDefault(_ToggleInput);
	
	var _DropdownWithFlag = __webpack_require__(52);
	
	var _DropdownWithFlag2 = _interopRequireDefault(_DropdownWithFlag);
	
	var _countriesMaps = __webpack_require__(23);
	
	var _actionCreators = __webpack_require__(3);
	
	var _inputValidation = __webpack_require__(18);
	
	__webpack_require__(488);
	
	var _immutable = __webpack_require__(13);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _path = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var BasicInfo = function (_Component) {
	    _inherits(BasicInfo, _Component);
	
	    function BasicInfo() {
	        _classCallCheck(this, BasicInfo);
	
	        return _possibleConstructorReturn(this, (BasicInfo.__proto__ || Object.getPrototypeOf(BasicInfo)).apply(this, arguments));
	    }
	
	    _createClass(BasicInfo, [{
	        key: "componentDidMount",
	
	        // DEMO
	        value: function componentDidMount() {
	            // this.props.dispatchInit();
	            // const props = this.props;
	            // const isMyInfoFlow = props.state.getIn(myInfoFlagPath());
	            // return !isMyInfoFlow && props.dispatch(removeNRIC()) && props.dispatch(onToggle(props.step, IS_SG, false));
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            var FormConfig = props.FormConfig;
	
	            var basicInfo = new FormConfig(props.step);
	            var inputLabels = basicInfo.inputLabels;
	            var title = basicInfo.title;
	            var subtitle = basicInfo.subtitle;
	            var inputValues = basicInfo.inputValues;
	
	            var _basicInfo$getPostMes = basicInfo.getPostMessage();
	
	            var _basicInfo$getPostMes2 = _slicedToArray(_basicInfo$getPostMes, 2);
	
	            var postMessage = _basicInfo$getPostMes2[0];
	            var postMessageContent = _basicInfo$getPostMes2[1];
	
	            var hanYuPinYinName = props.state.getIn((0, _path.dataPath)(["hanYuPinYinName"]));
	            var aliasName = props.state.getIn((0, _path.dataPath)(["aliasName"]));
	            var hanyuPinYinAliasName = props.state.getIn((0, _path.dataPath)(["hanyuPinYinAliasName"]));
	            var marriedName = props.state.getIn((0, _path.dataPath)(["marriedName"]));
	            var otherNames = (0, _immutable.List)([hanYuPinYinName, aliasName, hanyuPinYinAliasName, marriedName]);
	            var isMyInfoFlow = props.state.getIn((0, _path.myInfoFlagPath)());
	            var isSG = props.state.getIn((0, _path.dataPath)([_inputsConstant.IS_SG]));
	            var countriesWithNoSG = _countriesMaps.countriesLabelValue.filter(function (country) {
	                return country.value !== "SG";
	            });
	            var residentialStatus = props.state.getIn((0, _path.dataPath)(["residentialStatus"]));
	            var getResidentialStatusLabel = function getResidentialStatusLabel() {
	                var rs = inputValues.residentialStatus.find(function (x) {
	                    return x.value === residentialStatus;
	                });
	                return rs ? rs.label : "";
	            };
	            var currentStep = props.state.getIn((0, _path.currentStepPath)(), "");
	            var disabledBasicStep = currentStep !== "basicInfo" && currentStep !== "otp" ? true : false;
	
	            return _react2.default.createElement(
	                "div",
	                null,
	                _react2.default.createElement(
	                    "h1",
	                    null,
	                    title
	                ),
	                _react2.default.createElement("div", { className: "uob-form-separator" }),
	                _react2.default.createElement(
	                    "p",
	                    null,
	                    subtitle
	                ),
	                _react2.default.createElement(
	                    "div",
	                    null,
	                    _react2.default.createElement(_TextInput2.default, Object.assign({
	                        inputLabel: inputLabels.fullName,
	                        inputID: _inputsConstant.FULL_NAME,
	                        disabled: disabledBasicStep,
	                        validators: [_inputValidation.validateFilledInput, _inputValidation.checkFullName, (0, _inputValidation.checkMaxSize)(70)]
	                    }, props))
	                ),
	                otherNames.some(function (v) {
	                    return v;
	                }) ? _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoOtherNames" },
	                    otherNames.map(function (v, i) {
	                        return _react2.default.createElement(
	                            "div",
	                            { className: "basicInfoOtherNames-items", key: i },
	                            v
	                        );
	                    })
	                ) : null,
	                !isMyInfoFlow && _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_ToggleInput2.default, {
	                        description: inputLabels.isSG,
	                        state: props.state,
	                        step: props.step,
	                        inputID: _inputsConstant.IS_SG,
	                        onClick: function onClick() {
	                            var toggleStatus = props.state.getIn((0, _path.dataPath)([_inputsConstant.IS_SG]), false);
	                            if (!disabledBasicStep) {
	                                return toggleStatus ? props.dispatch((0, _actionCreators.onToggle)(props.step, _inputsConstant.IS_SG, false)) : props.dispatch((0, _actionCreators.removeBillingProof)(props.step, _inputsConstant.IS_SG, true));
	                            } else {
	                                return null;
	                            }
	                        }
	                    })
	                ),
	                isSG || isMyInfoFlow ? _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_TextInput2.default, Object.assign({
	                        inputLabel: inputLabels.nric,
	                        inputID: _inputsConstant.NRIC,
	                        upperCase: true,
	                        disabled: disabledBasicStep,
	                        validators: [_inputValidation.validateFilledInput, _inputValidation.validateNRICAndPassport]
	                    }, props)),
	                    residentialStatus && residentialStatus !== "" && _react2.default.createElement(
	                        "div",
	                        { className: "basicInfoOtherNames" },
	                        _react2.default.createElement(
	                            "div",
	                            { className: "basicInfoOtherNames-items", style: { paddingBottom: 10 } },
	                            getResidentialStatusLabel()
	                        )
	                    )
	                ) : _react2.default.createElement(
	                    "div",
	                    null,
	                    _react2.default.createElement(
	                        "div",
	                        { className: "basicInfoSeparator" },
	                        _react2.default.createElement(_TextInput2.default, Object.assign({
	                            inputLabel: inputLabels.passport,
	                            inputID: _inputsConstant.PASSPORT,
	                            upperCase: true,
	                            disabled: disabledBasicStep,
	                            validators: [_inputValidation.validateFilledInput, _inputValidation.onlyAlphanumeric, (0, _inputValidation.checkMaxSize)(15)]
	                        }, props))
	                    ),
	                    _react2.default.createElement(
	                        "div",
	                        { className: "basicInfoSeparator" },
	                        _react2.default.createElement(_TextInput2.default, Object.assign({
	                            inputLabel: inputLabels.passportExpiry,
	                            inputID: _inputsConstant.PASSPORT_EXPIRY,
	                            disabled: disabledBasicStep,
	                            validators: [_inputValidation.validateFilledInput, _inputValidation.checkDateOfBirthFormat, _inputValidation.checkDateFormat, _inputValidation.checkDateIsOverTodayDate, (0, _inputValidation.expiredMonth)(6)]
	                        }, props, {
	                            dateFormat: true
	                        }))
	                    ),
	                    _react2.default.createElement(
	                        "div",
	                        { className: "personalInfoSeparator" },
	                        _react2.default.createElement(_DropdownWithFlag2.default, Object.assign({
	                            inputLabel: inputLabels[_inputsConstant.PASSPORT_IDENTITY_COUNTRY],
	                            inputID: _inputsConstant.PASSPORT_IDENTITY_COUNTRY,
	                            disabled: disabledBasicStep,
	                            dropdownWithFlagItems: countriesWithNoSG
	                        }, props))
	                    )
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_TextInput2.default, Object.assign({
	                        inputLabel: inputLabels.email,
	                        inputID: _inputsConstant.EMAIL,
	                        disabled: disabledBasicStep,
	                        validators: [_inputValidation.validateFilledInput, (0, _inputValidation.checkMaxSize)(30), _inputValidation.checkEmail]
	                    }, props))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_PhoneInput2.default, Object.assign({
	                        type: "Phone",
	                        inputLabel: inputLabels.mobileNumber,
	                        inputID: _inputsConstant.MOBILE_NUMBER,
	                        disabled: disabledBasicStep,
	                        validators: [_inputValidation.validatePhoneNumber]
	                    }, props))
	                ),
	                postMessage && _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_Accordian2.default, Object.assign({}, props, { title: postMessage, content: postMessageContent, inputID: "default" }))
	                )
	            );
	        }
	    }]);
	
	    return BasicInfo;
	}(_react.Component);
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchAddValidFlag: (0, _redux.bindActionCreators)(_actionCreators.addValidFlag, dispatch),
	        dispatchInit: (0, _redux.bindActionCreators)(_actionCreators.getMyInfo, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(BasicInfo);

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	__webpack_require__(489);
	
	var _path = __webpack_require__(4);
	
	var _immutable = __webpack_require__(13);
	
	var _passProps = __webpack_require__(82);
	
	var _utils = __webpack_require__(9);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global FORMS_CNFG_GLBL */
	
	
	// import TextInput from "../../TextInput/TextInput";
	
	
	var icons = [FORMS_CNFG_GLBL.imgPath + "/signup_icon.svg", FORMS_CNFG_GLBL.imgPath + "/access_icon.svg", FORMS_CNFG_GLBL.imgPath + "/account_icon.svg"];
	
	var Congratulation = function (_Component) {
	    _inherits(Congratulation, _Component);
	
	    function Congratulation() {
	        _classCallCheck(this, Congratulation);
	
	        return _possibleConstructorReturn(this, (Congratulation.__proto__ || Object.getPrototypeOf(Congratulation)).apply(this, arguments));
	    }
	
	    _createClass(Congratulation, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            if (window._satellite) {
	                var arr = [];
	                var dataElement = window.dataElement || {};
	                dataElement.event_name = "form_submit";
	                arr.push(this.props.state.getIn((0, _path.productIdPath)()).first());
	                dataElement.product_name = arr;
	                window.dtmCustomEventName = dataElement.event_name;
	                window._satellite.track(window.dtmCustomEventName);
	            }
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var props = this.props;
	
	            var appliedProducts = props.state.getIn((0, _path.productsAppliedPath)(), (0, _immutable.List)());
	            var sortProducts = (0, _utils.sortByDefaultList)(props.state.getIn((0, _path.productIdPath)()).toArray(), appliedProducts);
	            var config = new props.FormConfig("congratulation");
	            var isMyInfo = props.state.getIn((0, _path.myInfoFlagPath)());
	            return _react2.default.createElement(
	                "div",
	                { className: "congratulation--main-container" },
	                _react2.default.createElement(
	                    "div",
	                    { className: "congratulation--left-container" },
	                    _react2.default.createElement(
	                        "div",
	                        { className: "congratulation--left-panel-infos-container" },
	                        _react2.default.createElement(
	                            "div",
	                            { className: "congratulation--left-panel-logo" },
	                            _react2.default.createElement("img", { src: FORMS_CNFG_GLBL.imgPath + "/uobLogo.svg", alt: "uob-logo" })
	                        ),
	                        _react2.default.createElement(
	                            "div",
	                            { className: "congratulation--left-panel-title" },
	                            config.congratulation.leftPanel.title
	                        ),
	                        _react2.default.createElement("div", { className: "congratulation--left-panel-title-separator" }),
	                        _react2.default.createElement(
	                            "div",
	                            { className: "congratulation--left-panel-text" },
	                            _react2.default.createElement(
	                                "div",
	                                null,
	                                config.congratulation.leftPanel.subtitle
	                            ),
	                            _react2.default.createElement(
	                                "ul",
	                                null,
	                                sortProducts.map(function (product) {
	                                    return _react2.default.createElement(
	                                        "li",
	                                        { key: product, className: "congratulation--left-panel-subtext" },
	                                        _react2.default.createElement(
	                                            "div",
	                                            { className: "congratulation--left-panel-text--bold" },
	                                            (0, _utils.addPrefixUOB)(props.productsConfig["products"][product.get("pid")]["productName"], product.get("pid"))
	                                        ),
	                                        _react2.default.createElement(
	                                            "div",
	                                            null,
	                                            "(Ref No. " + product.get("referenceNo") + ")"
	                                        )
	                                    );
	                                })
	                            ),
	                            !isMyInfo ? _react2.default.createElement("div", {
	                                className: "congratulation--left-panel-cpf",
	                                dangerouslySetInnerHTML: {
	                                    __html: config.congratulation.leftPanel.submitCPFOnlineSub
	                                }
	                            }) : null
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "congratulation--right-container" },
	                    _react2.default.createElement(
	                        "div",
	                        { className: "congratulation--right-infos-container" },
	                        _react2.default.createElement(
	                            "div",
	                            { className: "congratulation--right-panel-infos-title" },
	                            config.congratulation.rightPanel.title
	                        ),
	                        _react2.default.createElement(
	                            "div",
	                            { className: "congratulation--right-panel-infos-cols-container" },
	                            config.congratulation.rightPanel.body.map(function (item, i) {
	                                return _react2.default.createElement(
	                                    "div",
	                                    { key: i, className: "congratulation--right-panel-infos-col1" },
	                                    _react2.default.createElement("img", {
	                                        className: "congratulation--right-infos-col-image",
	                                        src: item.image || icons[i],
	                                        alt: "cards"
	                                    }),
	                                    _react2.default.createElement(
	                                        "div",
	                                        { className: "congratulation--right-panel-infos-col-title" },
	                                        item.header
	                                    ),
	                                    _react2.default.createElement("p", {
	                                        className: "congratulation--right-panel-infos-col-text",
	                                        dangerouslySetInnerHTML: {
	                                            __html: item.content
	                                        }
	                                    })
	                                );
	                            })
	                        )
	                    )
	                )
	            );
	        }
	    }]);
	
	    return Congratulation;
	}(_react.Component);
	
	Congratulation.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired
	};
	
	// export default Congratulation;
	exports.default = (0, _passProps.passProps)(Congratulation);

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _ToggleInputWithTitle = __webpack_require__(130);
	
	var _ToggleInputWithTitle2 = _interopRequireDefault(_ToggleInputWithTitle);
	
	__webpack_require__(490);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _TextInput = __webpack_require__(21);
	
	var _TextInput2 = _interopRequireDefault(_TextInput);
	
	var _Signature = __webpack_require__(362);
	
	var _Signature2 = _interopRequireDefault(_Signature);
	
	var _DrawSignature = __webpack_require__(344);
	
	var _DrawSignature2 = _interopRequireDefault(_DrawSignature);
	
	var _DropdownWithFlag = __webpack_require__(52);
	
	var _DropdownWithFlag2 = _interopRequireDefault(_DropdownWithFlag);
	
	var _Dropdown = __webpack_require__(34);
	
	var _Dropdown2 = _interopRequireDefault(_Dropdown);
	
	var _actionCreators = __webpack_require__(3);
	
	var _inputValidation = __webpack_require__(18);
	
	var _countriesMaps = __webpack_require__(23);
	
	var _immutable = __webpack_require__(13);
	
	var _utils = __webpack_require__(9);
	
	var _path = __webpack_require__(4);
	
	var _common = __webpack_require__(65);
	
	var _Accordian = __webpack_require__(19);
	
	var _Accordian2 = _interopRequireDefault(_Accordian);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var highestIndex = function highestIndex(countries) {
	    return countries.keySeq().reduce(function (acc, val) {
	        var nb = parseInt(val, 10);
	        return nb > acc ? nb : acc;
	    }, 0);
	};
	
	var calculateNextIndex = function calculateNextIndex(countries) {
	    var nextIndex = highestIndex(countries) + 1;
	
	    return nextIndex.toString(10);
	};
	
	var TaxResidencyCountry = function (_Component) {
	    _inherits(TaxResidencyCountry, _Component);
	
	    function TaxResidencyCountry() {
	        _classCallCheck(this, TaxResidencyCountry);
	
	        return _possibleConstructorReturn(this, (TaxResidencyCountry.__proto__ || Object.getPrototypeOf(TaxResidencyCountry)).apply(this, arguments));
	    }
	
	    _createClass(TaxResidencyCountry, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {}
	    }, {
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            var formData = props.formData;
	            var inputValues = props.inputValues;
	
	            var stringIndex = props.countryIndex + "";
	            var countryName = props.state.getIn(["data", "countries", stringIndex, "country"]);
	            var countryId = props.state.getIn(["data", "countries", stringIndex, "id"]);
	            var countryReason = props.state.getIn(["data", "countries", stringIndex, "reasonCode"]);
	            var countriesSelected = props.countries.map(function (country) {
	                return country.get("country");
	            });
	            var isTINhasValidFormat = props.state.getIn((0, _path.uiIsValidPath)("declaration", "tax-residency-id-" + stringIndex), false);
	
	            var validator = function validator(value, validators) {
	                return validators.map(function (x) {
	                    return x(formData);
	                }).map(function (x) {
	                    return x(value);
	                }).filter(function (x) {
	                    return !x.status;
	                });
	            };
	            var taxIdValidators = [_inputValidation.validateFilledInput, _inputValidation.onlyAlphanumeric, (0, _inputValidation.checkMaxSize)(19)];
	            var filteredCountries = _countriesMaps.countriesLabelValue.filter(function (country) {
	                return !countriesSelected.includes(country.value);
	            });
	            return _react2.default.createElement(
	                "div",
	                { className: "tax-residency-countries-container" },
	                _react2.default.createElement(
	                    "div",
	                    { style: { flex: "1", display: "flex", flexDirection: "column" } },
	                    _react2.default.createElement(_DropdownWithFlag2.default, Object.assign({
	                        inputLabel: props.inputLabels["taxResidency"],
	                        inputID: "tax-residency-country-" + stringIndex,
	                        dropdownWithFlagItems: filteredCountries,
	                        onClick: function onClick(item) {
	                            return props.dispatch((0, _actionCreators.updateTaxResidencyCountry)(stringIndex, item.value, formData));
	                        },
	                        value: countryName
	                    }, props)),
	                    _react2.default.createElement("div", { style: { height: "10px" } }),
	                    _react2.default.createElement(_Dropdown2.default, Object.assign({
	                        inputLabel: props.inputLabels["tinReasons"],
	                        inputID: "tinReason-" + stringIndex,
	                        dropdownItems: inputValues["tinReasons"],
	                        onClick: function onClick(item) {
	                            return props.dispatch((0, _actionCreators.updateTaxResidencyReason)(stringIndex, item.value, formData));
	                        },
	                        value: countryReason
	                    }, props)),
	                    _react2.default.createElement("div", { style: { height: "10px" } }),
	                    countryReason === "0" && _react2.default.createElement(_TextInput2.default, Object.assign({
	                        inputLabel: props.inputLabels["taxIdentificationNumber"],
	                        inputID: "tax-residency-id-" + stringIndex,
	                        validators: [_inputValidation.validateFilledInput, _inputValidation.onlyAlphanumeric, (0, _inputValidation.checkMaxSize)(19)],
	                        onChange: function onChange(e) {
	                            props.dispatch((0, _actionCreators.updateTaxResidencyId)(stringIndex, e.target.value, validator(e.target.value, taxIdValidators), formData));
	                        },
	                        additionalOnBlur: function additionalOnBlur() {
	                            return isTINhasValidFormat && countryId && props.dispatch((0, _actionCreators.validateTIN)(countryName, countryId, stringIndex, formData));
	                        },
	                        value: countryId
	                    }, props)),
	                    _react2.default.createElement(
	                        "div",
	                        { className: "tax-residency-controllers" },
	                        props.countries.size > 1 ? _react2.default.createElement(
	                            "div",
	                            {
	                                className: "tax-residency-controllers-delete",
	                                onClick: function onClick() {
	                                    return props.dispatch((0, _actionCreators.removeTaxResidency)(stringIndex));
	                                }
	                            },
	                            "Delete"
	                        ) : _react2.default.createElement("div", null),
	                        props.countries.size < 4 && props.countryIndex === highestIndex(props.countries).toString(10) ? _react2.default.createElement(
	                            "div",
	                            {
	                                className: "tax-residency-controllers-add",
	                                onClick: function onClick() {
	                                    var n = calculateNextIndex(props.countries);
	
	                                    return props.countries.size < 4 && props.dispatch((0, _actionCreators.addTaxResidency)(n, "", "", formData));
	                                }
	                            },
	                            "Add new"
	                        ) : _react2.default.createElement("div", null)
	                    )
	                )
	            );
	        }
	    }]);
	
	    return TaxResidencyCountry;
	}(_react.Component);
	
	var TaxResidencyCountries = function TaxResidencyCountries(props) {
	    var countries = props.state.getIn(["data", "countries"], (0, _immutable.List)());
	    return _react2.default.createElement(
	        "div",
	        { className: "tax-residency-countries-outer-container" },
	        countries.map(function (v, i) {
	            return _react2.default.createElement(TaxResidencyCountry, Object.assign({ key: i, countryIndex: i, countries: countries }, props));
	        }).toList()
	    );
	};
	
	var Declaration = function (_Component2) {
	    _inherits(Declaration, _Component2);
	
	    function Declaration() {
	        _classCallCheck(this, Declaration);
	
	        return _possibleConstructorReturn(this, (Declaration.__proto__ || Object.getPrototypeOf(Declaration)).apply(this, arguments));
	    }
	
	    _createClass(Declaration, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            var countries = this.props.state.getIn(["data", "countries"], (0, _immutable.List)());
	            var nric = this.props.state.getIn(["data", "nric"]);
	            var productIds = this.props.state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	            var productsConfig = this.props.productsConfig;
	
	            if (((0, _utils.sellingCasa)(productIds, productsConfig) || (0, _utils.sellingCashPlus)(productIds, productsConfig)) && countries.count() === 0) {
	                if (!(0, _utils.checkItemInList)(productIds, _common.CARDS_NOT_REQUIRE_CRS, true)) {
	                    this.props.dispatch((0, _actionCreators.addTaxResidency)("0", "SG", nric, this.props.formData, "0"));
	                }
	                if (nric) {
	                    this.props.dispatch((0, _actionCreators.validateTIN)("SG", nric, "0", this.props.formData));
	                }
	            }
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            var FormConfig = props.FormConfig;
	            var productsConfig = props.productsConfig;
	
	            var declaration = new FormConfig(props.step);
	            var inputLabels = declaration.inputLabels;
	            var title = declaration.title;
	            var subtitle = declaration.subtitle;
	            var inputDescriptions = declaration.inputDescriptions;
	            var inputValues = declaration.inputValues;
	
	            var _declaration$getPostM = declaration.getPostMessage();
	
	            var _declaration$getPostM2 = _slicedToArray(_declaration$getPostM, 2);
	
	            var postMessage = _declaration$getPostM2[0];
	            var postMessageContent = _declaration$getPostM2[1];
	
	            var productIds = props.state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	            //const residentailStatus = props.state.getIn(dataPath([RESIDENTIAL_STATUS])); // check value is new customer
	            var signaTureComponentChoice = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent) ? _react2.default.createElement(_DrawSignature2.default, Object.assign({
	                title: inputLabels[_inputsConstant.DRAW_SIGNATURE],
	                description: inputDescriptions[_inputsConstant.DRAW_SIGNATURE],
	                inputID: _inputsConstant.DRAW_SIGNATURE
	            }, props)) : _react2.default.createElement(_Signature2.default, Object.assign({
	                title: inputLabels[_inputsConstant.SIGNATURE],
	                description: inputDescriptions[_inputsConstant.SIGNATURE],
	                inputID: _inputsConstant.SIGNATURE
	            }, props));
	            return _react2.default.createElement(
	                "div",
	                null,
	                _react2.default.createElement(
	                    "h1",
	                    null,
	                    title
	                ),
	                _react2.default.createElement("div", { className: "uob-form-separator" }),
	                _react2.default.createElement(
	                    "p",
	                    null,
	                    subtitle
	                ),
	                ((0, _utils.sellingCasa)(productIds, productsConfig) || (0, _utils.sellingCashPlus)(productIds, productsConfig)) && _react2.default.createElement(
	                    "div",
	                    null,
	                    _react2.default.createElement(
	                        "div",
	                        null,
	                        _react2.default.createElement(_ToggleInputWithTitle2.default, Object.assign({
	                            title: inputLabels[_inputsConstant.US_RESIDENT],
	                            description: inputDescriptions[_inputsConstant.US_RESIDENT],
	                            inputID: _inputsConstant.US_RESIDENT
	                        }, props))
	                    ),
	                    _react2.default.createElement(
	                        "div",
	                        { className: "declaration--info-separator" },
	                        _react2.default.createElement(_ToggleInputWithTitle2.default, Object.assign({
	                            title: inputLabels[_inputsConstant.US_CITIZEN],
	                            description: inputDescriptions[_inputsConstant.US_CITIZEN],
	                            inputID: _inputsConstant.US_CITIZEN
	                        }, props))
	                    ),
	                    _react2.default.createElement(
	                        "div",
	                        { className: "declaration--info-separator" },
	                        _react2.default.createElement(_ToggleInputWithTitle2.default, Object.assign({
	                            title: inputLabels[_inputsConstant.RESIDENT_CARD_HOLDER],
	                            description: inputDescriptions[_inputsConstant.RESIDENT_CARD_HOLDER],
	                            inputID: _inputsConstant.RESIDENT_CARD_HOLDER
	                        }, props))
	                    ),
	                    _react2.default.createElement(
	                        "div",
	                        { className: "declaration--info-separator--big" },
	                        !(0, _utils.checkItemInList)(productIds, _common.CARDS_NOT_REQUIRE_CRS, true) && _react2.default.createElement(TaxResidencyCountries, Object.assign({
	                            inputValues: inputValues,
	                            inputLabels: inputLabels
	                        }, props))
	                    )
	                ),
	                ((0, _utils.sellingCasa)(productIds, productsConfig) || (0, _utils.sellingCashPlus)(productIds, productsConfig)) && _react2.default.createElement(
	                    "div",
	                    { className: "declaration--info-separator" },
	                    signaTureComponentChoice
	                ),
	                postMessage && _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_Accordian2.default, Object.assign({}, props, { title: postMessage, content: postMessageContent, inputID: "default" }))
	                )
	            );
	        }
	    }]);
	
	    return Declaration;
	}(_react.Component);
	
	TaxResidencyCountries.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    dispatch: _react.PropTypes.func.isRequired
	};
	
	Declaration.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    dispatch: _react.PropTypes.func.isRequired,
	    formData: _react.PropTypes.object.isRequired,
	    productsConfig: _react.PropTypes.object
	};
	
	exports.default = Declaration;

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _TextInput = __webpack_require__(21);
	
	var _TextInput2 = _interopRequireDefault(_TextInput);
	
	var _PasswordInput = __webpack_require__(357);
	
	var _PasswordInput2 = _interopRequireDefault(_PasswordInput);
	
	var _actionCreators = __webpack_require__(3);
	
	var _inputValidation = __webpack_require__(18);
	
	var _path = __webpack_require__(4);
	
	__webpack_require__(491);
	
	var _inputsConstant = __webpack_require__(10);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DigitalServices = function (_Component) {
	    _inherits(DigitalServices, _Component);
	
	    function DigitalServices() {
	        _classCallCheck(this, DigitalServices);
	
	        return _possibleConstructorReturn(this, (DigitalServices.__proto__ || Object.getPrototypeOf(DigitalServices)).apply(this, arguments));
	    }
	
	    _createClass(DigitalServices, [{
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            var FormConfig = props.FormConfig;
	            var formData = props.formData;
	
	            var digitalServices = new FormConfig(props.step);
	            var inputLabels = digitalServices.inputLabels;
	            var title = digitalServices.title;
	            var subtitle = digitalServices.subtitle;
	
	            var pwd = props.state.getIn((0, _path.appDataPath)([_inputsConstant.PASSWORD]), "");
	            var confirmPwd = props.state.getIn((0, _path.appDataPath)([_inputsConstant.CONFIRM_PASSWORD]), "");
	            var isPwdSame = confirmPwd === pwd;
	            var username = props.state.getIn((0, _path.dataPath)([_inputsConstant.USERNAME]), "");
	            var isUsernameValid = props.state.getIn((0, _path.uiIsValidPath)("digitalServices", "username"), false);
	            return _react2.default.createElement(
	                "div",
	                null,
	                _react2.default.createElement(
	                    "h1",
	                    null,
	                    title
	                ),
	                _react2.default.createElement("div", { className: "uob-form-separator" }),
	                _react2.default.createElement(
	                    "p",
	                    null,
	                    subtitle
	                ),
	                _react2.default.createElement(
	                    "div",
	                    null,
	                    _react2.default.createElement(_TextInput2.default, Object.assign({
	                        inputLabel: inputLabels.username,
	                        inputID: _inputsConstant.USERNAME,
	                        upperCase: true,
	                        validators: [_inputValidation.validateFilledInput, (0, _inputValidation.checkMinSize)(8), (0, _inputValidation.checkMaxSize)(16), _inputValidation.checkUsername],
	                        additionalOnBlur: function additionalOnBlur() {
	                            return isUsernameValid && username && props.dispatch((0, _actionCreators.validateUsername)(username, formData));
	                        }
	                    }, props))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_PasswordInput2.default, Object.assign({
	                        inputLabel: inputLabels.password,
	                        inputID: _inputsConstant.PASSWORD,
	                        validators: [_inputValidation.validateFilledInput, (0, _inputValidation.checkMinSize)(8), (0, _inputValidation.checkMaxSize)(16), (0, _inputValidation.validatePassword)(username), _inputValidation.checkpassword],
	                        additionalOnBlur: function additionalOnBlur() {
	                            if (isPwdSame) {
	                                props.dispatch((0, _actionCreators.addValidFlag)("digitalServices", _inputsConstant.CONFIRM_PASSWORD));
	                            } else {
	                                props.dispatch((0, _actionCreators.removeValidFlag)("digitalServices", _inputsConstant.CONFIRM_PASSWORD));
	                            }
	                        }
	                    }, props))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_PasswordInput2.default, Object.assign({
	                        inputLabel: inputLabels.confirmPassword,
	                        inputID: _inputsConstant.CONFIRM_PASSWORD,
	                        validators: [_inputValidation.validateFilledInput, (0, _inputValidation.validateConfirmPassword)(pwd)]
	                    }, props))
	                )
	            );
	        }
	    }]);
	
	    return DigitalServices;
	}(_react.Component);
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchAddValidFlag: (0, _redux.bindActionCreators)(_actionCreators.addValidFlag, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(DigitalServices);

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _redux = __webpack_require__(6);
	
	var _reactRedux = __webpack_require__(7);
	
	var _actionCreators = __webpack_require__(3);
	
	var _ToggleInput = __webpack_require__(37);
	
	var _ToggleInput2 = _interopRequireDefault(_ToggleInput);
	
	var _LocalAddressInput = __webpack_require__(354);
	
	var _LocalAddressInput2 = _interopRequireDefault(_LocalAddressInput);
	
	var _OverseasAddressInput = __webpack_require__(356);
	
	var _OverseasAddressInput2 = _interopRequireDefault(_OverseasAddressInput);
	
	var _DropdownWithFlag = __webpack_require__(52);
	
	var _DropdownWithFlag2 = _interopRequireDefault(_DropdownWithFlag);
	
	var _Dropdown = __webpack_require__(34);
	
	var _Dropdown2 = _interopRequireDefault(_Dropdown);
	
	var _TextInput = __webpack_require__(21);
	
	var _TextInput2 = _interopRequireDefault(_TextInput);
	
	var _Accordian = __webpack_require__(19);
	
	var _Accordian2 = _interopRequireDefault(_Accordian);
	
	var _path = __webpack_require__(4);
	
	var _countriesMaps = __webpack_require__(23);
	
	var _inputValidation = __webpack_require__(18);
	
	__webpack_require__(492);
	
	var _utils = __webpack_require__(9);
	
	var _immutable = __webpack_require__(13);
	
	var _inputsConstant = __webpack_require__(10);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var CardsVariation = function CardsVariation(props) {
	    var FormConfig = props.FormConfig;
	
	    var localAddress = new FormConfig(props.step);
	    var inputLabels = localAddress.inputLabels;
	    var inputValues = localAddress.inputValues;
	
	    var addressFormat = props.state.getIn((0, _path.dataPath)(["homeAddressFormat"]), "");
	    if (addressFormat !== "") {
	        if (!props.state.getIn((0, _path.dataPath)([_inputsConstant.PROPERTY_TYPE]), "") && props.state.getIn((0, _path.dataPath)([_inputsConstant.HOME_POSTAL_CODE]), false)) {
	            props.dispatch((0, _actionCreators.setPropertyType)(_inputsConstant.PROPERTY_TYPE, addressFormat));
	            var propertyUIData = props.state.getIn((0, _path.uiInputPath)(props.step, _inputsConstant.PROPERTY_TYPE));
	            if (propertyUIData && propertyUIData.get("isValid") === false) {
	                props.dispatch((0, _actionCreators.removeInputToUIState)(props.step, _inputsConstant.PROPERTY_TYPE));
	            }
	        }
	    }
	    return _react2.default.createElement(
	        "div",
	        null,
	        addressFormat === "" && _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_Dropdown2.default, Object.assign({
	                inputLabel: inputLabels[_inputsConstant.PROPERTY_TYPE],
	                inputID: _inputsConstant.PROPERTY_TYPE,
	                dropdownItems: inputValues[_inputsConstant.PROPERTY_TYPE]
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(_Dropdown2.default, Object.assign({
	                inputLabel: inputLabels[_inputsConstant.RESIDENCE_STATUS],
	                inputID: _inputsConstant.RESIDENCE_STATUS,
	                dropdownItems: inputValues[_inputsConstant.RESIDENCE_STATUS]
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "homeMailingAddress--separator" },
	            _react2.default.createElement(
	                "div",
	                { className: "homeMailingAddress-unitNumber-container" },
	                _react2.default.createElement(
	                    "div",
	                    { style: { flex: "1" } },
	                    _react2.default.createElement(_TextInput2.default, Object.assign({}, props, {
	                        inputLabel: inputLabels[_inputsConstant.LENGTH_OF_RESIDENCY_YEARS],
	                        inputID: _inputsConstant.LENGTH_OF_RESIDENCY_YEARS,
	                        validators: [_inputValidation.validateFilledInput, _inputValidation.checkNumbers, (0, _inputValidation.checkMaxSize)(2)]
	                    }))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "homeMailingAddress-unitNumber-dash" },
	                    " - "
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { style: { flex: "1" } },
	                    _react2.default.createElement(_TextInput2.default, Object.assign({}, props, {
	                        inputLabel: inputLabels[_inputsConstant.LENGTH_OF_RESIDENCY_MONTHS],
	                        inputID: _inputsConstant.LENGTH_OF_RESIDENCY_MONTHS,
	                        validators: [_inputValidation.validateFilledInput, _inputValidation.checkNumbers, _inputValidation.checkMaxMonths, (0, _inputValidation.checkMaxSize)(2)]
	                    }))
	                )
	            )
	        )
	    );
	};
	
	CardsVariation.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    dispatch: _react.PropTypes.func.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired
	};
	
	var HomeMailingAddress = function (_Component) {
	    _inherits(HomeMailingAddress, _Component);
	
	    function HomeMailingAddress() {
	        _classCallCheck(this, HomeMailingAddress);
	
	        return _possibleConstructorReturn(this, (HomeMailingAddress.__proto__ || Object.getPrototypeOf(HomeMailingAddress)).apply(this, arguments));
	    }
	
	    _createClass(HomeMailingAddress, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            this.props.dispatch((0, _actionCreators.onToggle)(this.props.step, _inputsConstant.SAME_HOME_AND_MAILING_ADD, false));
	            this.props.dispatch((0, _actionCreators.editInput)(_inputsConstant.MAILING_COUNTRY, "SG", true, this.props.step));
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            var FormConfig = props.FormConfig;
	            var productsConfig = props.productsConfig;
	
	            var sameAddress = props.state.getIn(["data", _inputsConstant.SAME_HOME_AND_MAILING_ADD], false);
	            var mailingCountry = props.state.getIn((0, _path.dataPath)([_inputsConstant.MAILING_COUNTRY]));
	            var homeMailingAddress = new FormConfig(props.step);
	            var inputLabels = homeMailingAddress.inputLabels;
	            var title = homeMailingAddress.title;
	            var subtitle = homeMailingAddress.subtitle;
	
	            var _homeMailingAddress$g = homeMailingAddress.getPostMessage();
	
	            var _homeMailingAddress$g2 = _slicedToArray(_homeMailingAddress$g, 2);
	
	            var postMessage = _homeMailingAddress$g2[0];
	            var postMessageContent = _homeMailingAddress$g2[1];
	
	            var productIds = props.state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	            var isSG = props.state.getIn((0, _path.dataPath)([_inputsConstant.IS_SG]), true);
	            return _react2.default.createElement(
	                "div",
	                null,
	                _react2.default.createElement(
	                    "h1",
	                    null,
	                    title
	                ),
	                _react2.default.createElement("div", { className: "uob-form-separator" }),
	                _react2.default.createElement(
	                    "p",
	                    null,
	                    subtitle
	                ),
	                _react2.default.createElement(_LocalAddressInput2.default, Object.assign({ inputLabels: inputLabels }, props, { inputID: _inputsConstant.HOME })),
	                (0, _utils.sellingCards)(productIds, productsConfig) || (0, _utils.sellingCashPlus)(productIds, productsConfig) ? _react2.default.createElement(CardsVariation, props) : null,
	                _react2.default.createElement(
	                    "div",
	                    { className: "homeMailingAddress--separator" },
	                    _react2.default.createElement(_ToggleInput2.default, Object.assign({
	                        description: inputLabels[_inputsConstant.SAME_HOME_AND_MAILING_ADD],
	                        inputID: _inputsConstant.SAME_HOME_AND_MAILING_ADD
	                    }, props))
	                ),
	                sameAddress ? _react2.default.createElement(
	                    "div",
	                    null,
	                    _react2.default.createElement(
	                        "p",
	                        null,
	                        inputLabels.subtitle2
	                    ),
	                    _react2.default.createElement(_DropdownWithFlag2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.MAILING_COUNTRY],
	                        inputID: _inputsConstant.MAILING_COUNTRY,
	                        dropdownWithFlagItems: _countriesMaps.countriesLabelValue
	                    }, props)),
	                    mailingCountry === "SG" ? _react2.default.createElement(
	                        "div",
	                        { className: "homeMailingAddress--separator" },
	                        _react2.default.createElement(_LocalAddressInput2.default, Object.assign({}, props, { inputID: _inputsConstant.MAILING, inputLabels: inputLabels }))
	                    ) : _react2.default.createElement(
	                        "div",
	                        { className: "homeMailingAddress--separator" },
	                        _react2.default.createElement(_OverseasAddressInput2.default, Object.assign({}, props, { inputID: _inputsConstant.MAILING, inputLabels: inputLabels }))
	                    )
	                ) : null,
	                postMessage && isSG && _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_Accordian2.default, Object.assign({}, props, { title: postMessage, content: postMessageContent, inputID: "default" }))
	                )
	            );
	        }
	    }]);
	
	    return HomeMailingAddress;
	}(_react.Component);
	
	HomeMailingAddress.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    dispatch: _react.PropTypes.func.isRequired,
	    step: _react.PropTypes.string.isRequired,
	    inputID: _react.PropTypes.string,
	    dispatchOnToggle: _react.PropTypes.func
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchAddValidFlag: (0, _redux.bindActionCreators)(_actionCreators.addValidFlag, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(HomeMailingAddress);

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _FileUpload = __webpack_require__(127);
	
	var _FileUpload2 = _interopRequireDefault(_FileUpload);
	
	__webpack_require__(493);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var IncomeDocuments = function IncomeDocuments(props) {
	    return _react2.default.createElement(
	        "div",
	        null,
	        _react2.default.createElement(
	            "div",
	            null,
	            _react2.default.createElement(_FileUpload2.default, Object.assign({ title: "Notice of Assessment",
	                description: "No files delected.",
	                inputID: "noticeOfAssessment"
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "declaration--info-separator" },
	            _react2.default.createElement(_FileUpload2.default, Object.assign({ title: "IR8A",
	                description: "No files selected.",
	                inputID: "ir8a"
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "declaration--info-separator" },
	            _react2.default.createElement(_FileUpload2.default, Object.assign({ title: "Payslip",
	                description: "No files selected.",
	                inputID: "payslip"
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "declaration--info-separator" },
	            _react2.default.createElement(_FileUpload2.default, Object.assign({ title: "CBS Reports",
	                description: "No files selected.",
	                inputID: "cbsReports"
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "declaration--info-separator" },
	            _react2.default.createElement(_FileUpload2.default, Object.assign({ title: "Proof of balance from other banks",
	                description: "No files selected.",
	                inputID: "proofOfBalance"
	            }, props))
	        )
	    );
	};
	
	exports.default = IncomeDocuments;

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _redux = __webpack_require__(6);
	
	var _reactRedux = __webpack_require__(7);
	
	__webpack_require__(494);
	
	var _path = __webpack_require__(4);
	
	var _actionCreators = __webpack_require__(3);
	
	var _passProps = __webpack_require__(82);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// import TextInput from "../../TextInput/TextInput";
	/* global FORMS_CNFG_GLBL */
	
	var NotFound = function NotFound(props) {
	    var config = new props.FormConfig("errorPage");
	    var isExpanded = props.state.getIn((0, _path.rightPanelExpandedPath)(), false);
	    var rightPannelState = isExpanded ? "--expanded" : "";
	    return _react2.default.createElement(
	        "div",
	        { className: "notfound" },
	        _react2.default.createElement(
	            "div",
	            { className: "notfound--left-panel" },
	            _react2.default.createElement("div", {
	                className: "notfound--form-cover" + rightPannelState,
	                onClick: function onClick() {
	                    props.dispatchSetRightPanelExpanded(!isExpanded);
	                }
	            }),
	            _react2.default.createElement(
	                "div",
	                { className: "notfound--left-panel-infos-container" },
	                _react2.default.createElement(
	                    "div",
	                    { className: "notfound--left-panel-logo" },
	                    _react2.default.createElement("img", { src: FORMS_CNFG_GLBL.imgPath + "/uobLogo.svg", alt: "uobLogo" })
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "notfound--error-message" },
	                    config.errorPage.title
	                ),
	                _react2.default.createElement("div", { className: "notfound--left-panel-title-separator" }),
	                _react2.default.createElement(
	                    "div",
	                    { className: "notfound--left-panel-text" },
	                    _react2.default.createElement("div", {
	                        dangerouslySetInnerHTML: {
	                            __html: config.errorPage.body
	                        }
	                    })
	                )
	            )
	        ),
	        _react2.default.createElement(
	            "div",
	            {
	                className: "notfound--right-panel" + rightPannelState,
	                onClick: function onClick() {
	                    props.dispatchSetRightPanelExpanded(!isExpanded);
	                }
	            },
	            _react2.default.createElement(
	                "div",
	                { className: "uob-form--expand-right-panel-button-flex-container" },
	                _react2.default.createElement("img", {
	                    src: FORMS_CNFG_GLBL.imgPath + "/info_icon.svg",
	                    className: "uob-form-info--icon" + rightPannelState,
	                    alt: "infoIcon"
	                }),
	                _react2.default.createElement(
	                    "div",
	                    { className: "uob-form--expand-right-panel-button" + rightPannelState },
	                    "Need help?"
	                )
	            ),
	            _react2.default.createElement(
	                "div",
	                { className: "notfound-right-column-container" + rightPannelState },
	                _react2.default.createElement(
	                    "h2",
	                    { className: "notfound-right-column-text" },
	                    "Need help?"
	                ),
	                _react2.default.createElement(
	                    "p",
	                    { className: "notfound--right-column-description" },
	                    "Feel free to contact our team for support"
	                ),
	                _react2.default.createElement(
	                    "p",
	                    { className: "notfound--right-column-sub-title" },
	                    "Singapore"
	                ),
	                _react2.default.createElement(
	                    "p",
	                    { className: "notfound--right-column-text" },
	                    " 1800 222 2121"
	                ),
	                _react2.default.createElement(
	                    "p",
	                    { className: "notfound--right-column-sub-title" },
	                    "Overseas Customers"
	                ),
	                _react2.default.createElement(
	                    "p",
	                    { className: "notfound--right-column-text" },
	                    " +65 6222 2121 "
	                )
	            )
	        )
	    );
	};
	
	NotFound.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    dispatchSetRightPanelExpanded: _react.PropTypes.func.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchSetRightPanelExpanded: (0, _redux.bindActionCreators)(_actionCreators.setRightPanelExpanded, dispatch)
	    };
	};
	
	exports.default = (0, _passProps.passProps)((0, _reactRedux.connect)(null, mapDispatchToProps)(NotFound));

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _PrependTextInput = __webpack_require__(84);
	
	var _PrependTextInput2 = _interopRequireDefault(_PrependTextInput);
	
	var _inputValidation = __webpack_require__(18);
	
	var _inputsConstant = __webpack_require__(10);
	
	__webpack_require__(495);
	
	var _Accordian = __webpack_require__(19);
	
	var _Accordian2 = _interopRequireDefault(_Accordian);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Otp = function (_Component) {
	    _inherits(Otp, _Component);
	
	    function Otp() {
	        _classCallCheck(this, Otp);
	
	        return _possibleConstructorReturn(this, (Otp.__proto__ || Object.getPrototypeOf(Otp)).apply(this, arguments));
	    }
	
	    _createClass(Otp, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            this.props.dispatchOnFocusInput(this.props.step, _inputsConstant.OTP, true);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            var FormConfig = props.FormConfig;
	
	            var prefix = props.state.getIn((0, _path.otpPrefixPath)(), "");
	            var otp = new FormConfig(props.step);
	            var inputLabels = otp.inputLabels;
	            var title = otp.title;
	            var subtitle = otp.subtitle;
	
	            var _otp$getPostMessage = otp.getPostMessage();
	
	            var _otp$getPostMessage2 = _slicedToArray(_otp$getPostMessage, 2);
	
	            var postMessage = _otp$getPostMessage2[0];
	            var postMessageContent = _otp$getPostMessage2[1];
	
	
	            return _react2.default.createElement(
	                "div",
	                { className: "otp-container" },
	                _react2.default.createElement(
	                    "h1",
	                    null,
	                    title
	                ),
	                _react2.default.createElement("div", { className: "uob-form-separator" }),
	                _react2.default.createElement(
	                    "p",
	                    null,
	                    subtitle
	                ),
	                _react2.default.createElement(
	                    "div",
	                    null,
	                    _react2.default.createElement(_PrependTextInput2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.OTP],
	                        inputID: _inputsConstant.OTP,
	                        prefix: prefix,
	                        validators: [_inputValidation.validateFilledInput, (0, _inputValidation.checkSize)(6), _inputValidation.checkNumbers],
	                        readOnly: !prefix,
	                        isLoading: !prefix
	                    }, props))
	                ),
	                _react2.default.createElement(
	                    "p",
	                    { className: "otpExpireMsg" },
	                    "This otp will expire after 180 seconds."
	                ),
	                _react2.default.createElement(
	                    "p",
	                    { className: "otpDisclaimer" },
	                    "Did not receive ?",
	                    " ",
	                    _react2.default.createElement(
	                        "span",
	                        {
	                            className: "otpUnderline",
	                            onClick: function onClick() {
	                                props.dispatchGetOTPPrefix();
	                            }
	                        },
	                        "Resend OTP"
	                    ),
	                    "."
	                ),
	                postMessage && _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_Accordian2.default, Object.assign({}, props, { title: postMessage, content: postMessageContent, inputID: "default" }))
	                )
	            );
	        }
	    }]);
	
	    return Otp;
	}(_react.Component);
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchGetOTPPrefix: (0, _redux.bindActionCreators)(_actionCreators.getOTPPrefix, dispatch),
	        dispatchAddValidFlag: (0, _redux.bindActionCreators)(_actionCreators.addValidFlag, dispatch),
	        dispatchOnFocusInput: (0, _redux.bindActionCreators)(_actionCreators.onFocusInput, dispatch)
	    };
	};
	
	Otp.propTypes = {
	    dispatchOnFocusInput: _react.PropTypes.func.isRequired,
	    step: _react.PropTypes.string.isRequired
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(Otp);

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _Accordian = __webpack_require__(19);
	
	var _Accordian2 = _interopRequireDefault(_Accordian);
	
	var _actionCreators = __webpack_require__(3);
	
	__webpack_require__(496);
	
	var _immutable = __webpack_require__(13);
	
	var _path = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ApplicationItem = function ApplicationItem(props) {
	    var isSelected = props.state.getIn((0, _path.dataPath)(["pendingApplications"]), (0, _immutable.List)()).find(function (application) {
	        return application.get("applicationNumber") === props.card.applicationNo;
	    });
	    var selectApplication = function selectApplication(pid, applicationNo) {
	        return props.dispatch((0, _actionCreators.selectPendingApplication)("pendingApplications", pid, applicationNo));
	    };
	    var removeApplication = function removeApplication(applicationNo) {
	        return props.dispatch((0, _actionCreators.removePendingApplication)("pendingApplications", applicationNo));
	    };
	    var itemClass = isSelected ? "pendingApplication-item--selected" : "pendingApplication-item";
	    return _react2.default.createElement(
	        "div",
	        {
	            className: itemClass,
	            onClick: function onClick() {
	                return isSelected ? removeApplication(props.card.applicationNo) : selectApplication(props.card.pid, props.card.applicationNo);
	            }
	        },
	        _react2.default.createElement("img", { className: "pendingApplication-item-image", src: props.card.imgPath, alt: "card-img" }),
	        _react2.default.createElement(
	            "div",
	            { className: "pendingApplication-item-name" },
	            props.card.productName
	        )
	    );
	};
	
	var PendingApplication = function (_Component) {
	    _inherits(PendingApplication, _Component);
	
	    function PendingApplication() {
	        _classCallCheck(this, PendingApplication);
	
	        return _possibleConstructorReturn(this, (PendingApplication.__proto__ || Object.getPrototypeOf(PendingApplication)).apply(this, arguments));
	    }
	
	    _createClass(PendingApplication, [{
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            var FormConfig = props.FormConfig;
	            var productsConfig = props.productsConfig;
	            var products = productsConfig.products;
	
	            var pendingApplication = new FormConfig(props.step);
	            var title = pendingApplication.title;
	            var subtitle = pendingApplication.subtitle;
	
	            var _pendingApplication$g = pendingApplication.getPostMessage();
	
	            var _pendingApplication$g2 = _slicedToArray(_pendingApplication$g, 2);
	
	            var postMessage = _pendingApplication$g2[0];
	            var postMessageContent = _pendingApplication$g2[1];
	
	            var pendingApplications = props.state.getIn((0, _path.pendingApplicationPath)(), (0, _immutable.List)());
	            var mapApplicationData = pendingApplications.map(function (application) {
	                var product = products[application.get("id")];
	                product.applicationNo = application.get("applicationNumber");
	                return product;
	            });
	
	            var handleOnClick = function handleOnClick() {
	                return props.dispatch((0, _actionCreators.postPartialApplication)("pendingApplication", "accountDetails"));
	            };
	            return _react2.default.createElement(
	                "div",
	                null,
	                _react2.default.createElement(
	                    "h1",
	                    null,
	                    title
	                ),
	                _react2.default.createElement("div", { className: "uob-form-separator" }),
	                _react2.default.createElement(
	                    "p",
	                    null,
	                    subtitle
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "pendingApplication-container" },
	                    mapApplicationData.map(function (card, i) {
	                        return _react2.default.createElement(ApplicationItem, Object.assign({ key: i, card: card }, props));
	                    })
	                ),
	                postMessage && _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_Accordian2.default, Object.assign({}, props, { title: postMessage, content: postMessageContent, inputID: "default" }))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "pendingApplication-skip-step" },
	                    "Do not want to continue any pending application?",
	                    _react2.default.createElement(
	                        "span",
	                        { className: "pendingApplication-skip-step-click-here", onClick: handleOnClick },
	                        "Start a new application."
	                    ),
	                    " "
	                )
	            );
	        }
	    }]);
	
	    return PendingApplication;
	}(_react.Component);
	
	ApplicationItem.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    card: _react.PropTypes.object
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchAddValidFlag: (0, _redux.bindActionCreators)(_actionCreators.addValidFlag, dispatch),
	        dispatchInit: (0, _redux.bindActionCreators)(_actionCreators.getMyInfo, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(PendingApplication);

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _redux = __webpack_require__(6);
	
	var _reactRedux = __webpack_require__(7);
	
	var _actionCreators = __webpack_require__(3);
	
	var _TextInput = __webpack_require__(21);
	
	var _TextInput2 = _interopRequireDefault(_TextInput);
	
	var _GenderSelection = __webpack_require__(350);
	
	var _GenderSelection2 = _interopRequireDefault(_GenderSelection);
	
	var _Dropdown = __webpack_require__(34);
	
	var _Dropdown2 = _interopRequireDefault(_Dropdown);
	
	var _DropdownWithFlag = __webpack_require__(52);
	
	var _DropdownWithFlag2 = _interopRequireDefault(_DropdownWithFlag);
	
	var _countriesMaps = __webpack_require__(23);
	
	var _path = __webpack_require__(4);
	
	var _inputValidation = __webpack_require__(18);
	
	var _inputsConstant = __webpack_require__(10);
	
	__webpack_require__(497);
	
	var _Accordian = __webpack_require__(19);
	
	var _Accordian2 = _interopRequireDefault(_Accordian);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var keyCode = void 0;
	
	var JuniorSaver = function JuniorSaver(props) {
	    var formData = props.formData;
	
	    return _react2.default.createElement(
	        "div",
	        {
	            className: "account-details--separator-top-border",
	            onKeyDown: function onKeyDown(e) {
	                keyCode = e.keyCode;
	            }
	        },
	        _react2.default.createElement(
	            "p",
	            null,
	            props.inputLabels.juniorSaverSubtitle
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_TextInput2.default, Object.assign({
	                inputLabel: props.inputLabels[_inputsConstant.JUNIOR_SAVER_NAME],
	                inputID: _inputsConstant.JUNIOR_SAVER_NAME
	                // validators={[validateFilledInput, checkFullName, checkMaxSize(70)]}
	                , onChange: function onChange(e) {
	                    var value = e.target.value;
	                    var validators = [_inputValidation.validateFilledInput, _inputValidation.checkFullName, (0, _inputValidation.checkMaxSize)(70)];
	                    var status = validators.map(function (x) {
	                        return x(formData);
	                    }).map(function (x) {
	                        return x(value);
	                    }).filter(function (x) {
	                        return !x.status;
	                    });
	
	                    return props.dispatch((0, _actionCreators.editInputByPath)(props.step, _inputsConstant.JUNIOR_SAVER_NAME, ["data", "products", "SAVJS", _inputsConstant.JUNIOR_SAVER_NAME], value, status));
	                },
	                value: props.state.getIn(["data", "products", "SAVJS", _inputsConstant.JUNIOR_SAVER_NAME], "")
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_GenderSelection2.default, Object.assign({
	                inputID: _inputsConstant.JUNIOR_SAVER_GENDER,
	                path: ["data", "products", "SAVJS", _inputsConstant.JUNIOR_SAVER_GENDER]
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_TextInput2.default, Object.assign({
	                inputLabel: props.inputLabels[_inputsConstant.JUNIOR_SAVER_DOB],
	                inputID: _inputsConstant.JUNIOR_SAVER_DOB
	                // validators={[validateFilledInput, checkDateOfBirthFormat, checkMaximumAge(16)]}
	                , onChange: function onChange(e) {
	                    var value = e.target.value.length === 2 && keyCode !== 8 || e.target.value.length === 5 && keyCode !== 8 ? e.target.value + "/" : e.target.value;
	                    var validators = [_inputValidation.validateFilledInput, _inputValidation.checkDateOfBirthFormat, _inputValidation.checkDateFormat, (0, _inputValidation.checkMaximumAge)(16), _inputValidation.checkDateNotOverTodayDate];
	                    var status = validators.map(function (x) {
	                        return x(formData);
	                    }).map(function (x) {
	                        return x(value);
	                    }).filter(function (x) {
	                        return !x.status;
	                    });
	
	                    return props.dispatch((0, _actionCreators.editInputByPath)(props.step, _inputsConstant.JUNIOR_SAVER_DOB, ["data", "products", "SAVJS", _inputsConstant.JUNIOR_SAVER_DOB], value, status));
	                },
	                value: props.state.getIn(["data", "products", "SAVJS", _inputsConstant.JUNIOR_SAVER_DOB], "")
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_TextInput2.default, Object.assign({
	                inputLabel: props.inputLabels[_inputsConstant.JUNIOR_SAVER_BIRTH_CERT],
	                inputID: _inputsConstant.JUNIOR_SAVER_BIRTH_CERT
	                // validators={[validateFilledInput, validateOnlYTNRIC]}
	                , onChange: function onChange(e) {
	                    var value = e.target.value.toUpperCase();
	                    var validators = [_inputValidation.validateFilledInput, _inputValidation.validateOnlYTNRIC];
	                    var status = validators.map(function (x) {
	                        return x(formData);
	                    }).map(function (x) {
	                        return x(value);
	                    }).filter(function (x) {
	                        return !x.status;
	                    });
	
	                    return props.dispatch((0, _actionCreators.editInputByPath)(props.step, _inputsConstant.JUNIOR_SAVER_BIRTH_CERT, ["data", "products", "SAVJS", _inputsConstant.JUNIOR_SAVER_BIRTH_CERT], value, status));
	                },
	                value: props.state.getIn(["data", "products", "SAVJS", _inputsConstant.JUNIOR_SAVER_BIRTH_CERT], "")
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_DropdownWithFlag2.default, Object.assign({
	                inputLabel: props.inputLabels[_inputsConstant.JUNIOR_SAVER_NATIONALITY],
	                inputID: _inputsConstant.JUNIOR_SAVER_NATIONALITY,
	                dropdownWithFlagItems: _countriesMaps.countriesLabelValue,
	                onClick: function onClick(item) {
	                    return props.dispatch((0, _actionCreators.editDropdownByPath)(props.step, _inputsConstant.JUNIOR_SAVER_NATIONALITY, ["data", "products", "SAVJS", _inputsConstant.JUNIOR_SAVER_NATIONALITY], item.value, []));
	                },
	                value: props.state.getIn(["data", "products", "SAVJS", _inputsConstant.JUNIOR_SAVER_NATIONALITY])
	            }, props))
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "account-details--separator" },
	            _react2.default.createElement(_DropdownWithFlag2.default, Object.assign({
	                inputLabel: props.inputLabels[_inputsConstant.JUNIOR_SAVER_COUNTRY_OF_BIRTH],
	                inputID: _inputsConstant.JUNIOR_SAVER_COUNTRY_OF_BIRTH,
	                dropdownWithFlagItems: _countriesMaps.countriesLabelValue,
	                onClick: function onClick(item) {
	                    return props.dispatch((0, _actionCreators.editDropdownByPath)(props.step, _inputsConstant.JUNIOR_SAVER_COUNTRY_OF_BIRTH, ["data", "products", "SAVJS", _inputsConstant.JUNIOR_SAVER_COUNTRY_OF_BIRTH], item.value, []));
	                },
	                value: props.state.getIn(["data", "products", "SAVJS", _inputsConstant.JUNIOR_SAVER_COUNTRY_OF_BIRTH])
	            }, props))
	        )
	    );
	};
	
	var PersonalInfo = function (_Component) {
	    _inherits(PersonalInfo, _Component);
	
	    function PersonalInfo() {
	        _classCallCheck(this, PersonalInfo);
	
	        return _possibleConstructorReturn(this, (PersonalInfo.__proto__ || Object.getPrototypeOf(PersonalInfo)).apply(this, arguments));
	    }
	
	    _createClass(PersonalInfo, [{
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            var productIds = props.state.getIn((0, _path.productIdPath)());
	            var FormConfig = props.FormConfig;
	
	            var personalInfo = new FormConfig(props.step);
	            var inputLabels = personalInfo.inputLabels;
	            var title = personalInfo.title;
	            var subtitle = personalInfo.subtitle;
	            var inputValues = personalInfo.inputValues;
	
	            var _personalInfo$getPost = personalInfo.getPostMessage();
	
	            var _personalInfo$getPost2 = _slicedToArray(_personalInfo$getPost, 2);
	
	            var postMessage = _personalInfo$getPost2[0];
	            var postMessageContent = _personalInfo$getPost2[1];
	
	            var isSG = props.state.getIn((0, _path.dataPath)([_inputsConstant.IS_SG]), true);
	            var countriesWithNoSG = _countriesMaps.countriesLabelValue.filter(function (country) {
	                return country.value !== "SG";
	            });
	            return _react2.default.createElement(
	                "div",
	                null,
	                _react2.default.createElement(
	                    "h1",
	                    null,
	                    title
	                ),
	                _react2.default.createElement("div", { className: "uob-form-separator" }),
	                _react2.default.createElement(
	                    "p",
	                    null,
	                    subtitle
	                ),
	                _react2.default.createElement(
	                    "div",
	                    null,
	                    _react2.default.createElement(_TextInput2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.DATE_OF_BIRTH],
	                        inputID: _inputsConstant.DATE_OF_BIRTH,
	                        validators: [_inputValidation.validateFilledInput, _inputValidation.checkDateOfBirthFormat, _inputValidation.checkDateFormat, (0, _inputValidation.checkMinimumAge)(15)]
	                    }, props))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "personalInfoSeparator" },
	                    _react2.default.createElement(_GenderSelection2.default, Object.assign({ inputID: _inputsConstant.GENDER, path: ["data", _inputsConstant.GENDER] }, props))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "personalInfoSeparator" },
	                    _react2.default.createElement(_Dropdown2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.MARITAL_STATUS],
	                        inputID: _inputsConstant.MARITAL_STATUS,
	                        dropdownItems: inputValues[_inputsConstant.MARITAL_STATUS]
	                    }, props))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "personalInfoSeparator" },
	                    _react2.default.createElement(_Dropdown2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.EDUCATION_LEVEL],
	                        inputID: _inputsConstant.EDUCATION_LEVEL,
	                        dropdownItems: inputValues[_inputsConstant.EDUCATION_LEVEL]
	                    }, props))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "personalInfoSeparator" },
	                    _react2.default.createElement(_DropdownWithFlag2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.NATIONALITY],
	                        inputID: _inputsConstant.NATIONALITY,
	                        dropdownWithFlagItems: isSG ? _countriesMaps.countriesLabelValue : countriesWithNoSG
	                    }, props))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "personalInfoSeparator" },
	                    _react2.default.createElement(_DropdownWithFlag2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.COUNTRY_OF_BIRTH],
	                        inputID: _inputsConstant.COUNTRY_OF_BIRTH,
	                        dropdownWithFlagItems: _countriesMaps.countriesLabelValue
	                    }, props))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "personalInfoSeparator" },
	                    _react2.default.createElement(_DropdownWithFlag2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.COUNTRY_OF_RESIDENCE],
	                        inputID: _inputsConstant.COUNTRY_OF_RESIDENCE,
	                        dropdownWithFlagItems: _countriesMaps.countriesLabelValue
	                    }, props))
	                ),
	                productIds.includes("SAVJS") ? _react2.default.createElement(JuniorSaver, Object.assign({}, props, { inputLabels: inputLabels })) : null,
	                postMessage && _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_Accordian2.default, Object.assign({}, props, { title: postMessage, content: postMessageContent, inputID: "default" }))
	                )
	            );
	        }
	    }]);
	
	    return PersonalInfo;
	}(_react.Component);
	
	JuniorSaver.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    step: _react.PropTypes.string.isRequired,
	    dispatch: _react.PropTypes.func.isRequired,
	    inputLabels: _react.PropTypes.object.isRequired,
	    formData: _react.PropTypes.object.isRequired
	};
	
	PersonalInfo.propTypes = {
	    state: _reactImmutableProptypes2.default.map,
	    step: _react.PropTypes.string.isRequired,
	    dispatch: _react.PropTypes.func.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchAddValidFlag: (0, _redux.bindActionCreators)(_actionCreators.addValidFlag, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(PersonalInfo);

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _scrollIntoView = __webpack_require__(125);
	
	var _scrollIntoView2 = _interopRequireDefault(_scrollIntoView);
	
	var _SummaryBlockBasicInfo = __webpack_require__(380);
	
	var _SummaryBlockBasicInfo2 = _interopRequireDefault(_SummaryBlockBasicInfo);
	
	var _SummaryBlockPersonalInfo = __webpack_require__(384);
	
	var _SummaryBlockPersonalInfo2 = _interopRequireDefault(_SummaryBlockPersonalInfo);
	
	var _SummaryBlockAccountDetails = __webpack_require__(379);
	
	var _SummaryBlockAccountDetails2 = _interopRequireDefault(_SummaryBlockAccountDetails);
	
	var _SummaryBlockHomeAddress = __webpack_require__(383);
	
	var _SummaryBlockHomeAddress2 = _interopRequireDefault(_SummaryBlockHomeAddress);
	
	var _SummaryBlockWorkInfo = __webpack_require__(386);
	
	var _SummaryBlockWorkInfo2 = _interopRequireDefault(_SummaryBlockWorkInfo);
	
	var _SummaryBlockDigitalServices = __webpack_require__(382);
	
	var _SummaryBlockDigitalServices2 = _interopRequireDefault(_SummaryBlockDigitalServices);
	
	var _SummaryBlockUploadDocuments = __webpack_require__(385);
	
	var _SummaryBlockUploadDocuments2 = _interopRequireDefault(_SummaryBlockUploadDocuments);
	
	var _SummaryBlockDeclaration = __webpack_require__(381);
	
	var _SummaryBlockDeclaration2 = _interopRequireDefault(_SummaryBlockDeclaration);
	
	var _Accordian = __webpack_require__(19);
	
	var _Accordian2 = _interopRequireDefault(_Accordian);
	
	var _AccordianToggleButton = __webpack_require__(331);
	
	var _AccordianToggleButton2 = _interopRequireDefault(_AccordianToggleButton);
	
	__webpack_require__(498);
	
	var _stepsEnum = __webpack_require__(85);
	
	var _stepsEnum2 = _interopRequireDefault(_stepsEnum);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Summary = function Summary(props) {
	    var basicInfo = props.state.getIn(["ui", "basicInfo"]) && !props.state.getIn(["ui", "basicInfo"]).isEmpty();
	    var accountDetails = props.state.getIn(["ui", "accountDetails"]) && !props.state.getIn(["ui", "accountDetails"]).isEmpty();
	    var personalInfo = props.state.getIn(["ui", "personalInfo"]) && !props.state.getIn(["ui", "personalInfo"]).isEmpty();
	    var homeMailingAddress = props.state.getIn(["ui", "homeMailingAddress"]) && !props.state.getIn(["ui", "homeMailingAddress"]).isEmpty();
	    var workInfo = props.state.getIn(["ui", "workInfo"]) && !props.state.getIn(["ui", "workInfo"]).isEmpty();
	    var digitalServices = props.state.getIn(["ui", "digitalServices"]) && !props.state.getIn(["ui", "digitalServices"]).isEmpty();
	    var uploadDocuments = props.state.getIn(["ui", "uploadDocuments"]) && !props.state.getIn(["ui", "uploadDocuments"]).isEmpty();
	    var declaration = props.state.getIn(["ui", "declaration"]) && !props.state.getIn(["ui", "declaration"]).isEmpty();
	    var FormConfig = props.FormConfig;
	
	    var summary = new FormConfig(props.step);
	    var title = summary.title;
	    var subtitle = summary.subtitle;
	    var termsAndConditions = summary.termsAndConditions;
	
	    var _summary$getPostMessa = summary.getPostMessage();
	
	    var _summary$getPostMessa2 = _slicedToArray(_summary$getPostMessa, 2);
	
	    var postMessage = _summary$getPostMessa2[0];
	    var postMessageContent = _summary$getPostMessa2[1];
	    var mainPoint = termsAndConditions.mainPoint;
	    var bulletedPoint = termsAndConditions.bulletedPoint;
	    var PDPATitle = termsAndConditions.PDPATitle;
	    var PDPAContent = termsAndConditions.PDPAContent;
	
	
	    var onclickScrollToContinueButton = function onclickScrollToContinueButton(inputID, step, value) {
	        if (!value) {
	            return;
	        }
	        Promise.resolve().then(function () {
	            var currentStep = "summary";
	            var element = document.getElementById(_stepsEnum2.default[currentStep] + "_" + currentStep);
	            (0, _scrollIntoView2.default)(element, { time: 500, align: { top: 0 } }, function () {});
	        });
	    };
	    var products = props.state.getIn(["data", "products"]);
	    return _react2.default.createElement(
	        "div",
	        null,
	        _react2.default.createElement(
	            "h1",
	            null,
	            title
	        ),
	        _react2.default.createElement("div", { className: "uob-form-separator" }),
	        _react2.default.createElement(
	            "p",
	            null,
	            subtitle
	        ),
	        basicInfo ? _react2.default.createElement(_SummaryBlockBasicInfo2.default, props) : null,
	        accountDetails ? products.sort(function (a, b) {
	            return a.get("rank") < b.get("rank");
	        }).map(function (product, productKey) {
	            return _react2.default.createElement(
	                "div",
	                { key: "accountDetails-" + productKey, className: "summary--separator" },
	                _react2.default.createElement(_SummaryBlockAccountDetails2.default, Object.assign({ product: product, productKey: productKey }, props))
	            );
	        }).toList() : null,
	        personalInfo ? _react2.default.createElement(
	            "div",
	            { className: "summary--separator" },
	            _react2.default.createElement(_SummaryBlockPersonalInfo2.default, props)
	        ) : null,
	        homeMailingAddress ? _react2.default.createElement(
	            "div",
	            { className: "summary--separator" },
	            _react2.default.createElement(_SummaryBlockHomeAddress2.default, props)
	        ) : null,
	        workInfo ? _react2.default.createElement(
	            "div",
	            { className: "summary--separator" },
	            _react2.default.createElement(_SummaryBlockWorkInfo2.default, props)
	        ) : null,
	        digitalServices ? _react2.default.createElement(
	            "div",
	            { className: "summary--separator" },
	            _react2.default.createElement(_SummaryBlockDigitalServices2.default, props)
	        ) : null,
	        uploadDocuments ? _react2.default.createElement(
	            "div",
	            { className: "summary--separator" },
	            _react2.default.createElement(_SummaryBlockUploadDocuments2.default, props)
	        ) : null,
	        declaration ? _react2.default.createElement(
	            "div",
	            { className: "summary--separator" },
	            _react2.default.createElement(_SummaryBlockDeclaration2.default, props)
	        ) : null,
	        postMessage && _react2.default.createElement(
	            "div",
	            { className: "basicInfoSeparator" },
	            _react2.default.createElement(_Accordian2.default, Object.assign({}, props, { title: postMessage, content: postMessageContent, inputID: "default" }))
	        ),
	        bulletedPoint && _react2.default.createElement(
	            "div",
	            { className: "basicInfoSeparator" },
	            _react2.default.createElement(_AccordianToggleButton2.default, Object.assign({}, props, {
	                title: mainPoint,
	                content: bulletedPoint,
	                inputID: "summarytnc",
	                forcedOpen: true,
	                toggleTrue: false,
	                additionalOnClick: onclickScrollToContinueButton
	            }))
	        ),
	        PDPATitle && _react2.default.createElement(
	            "div",
	            { className: "basicInfoSeparator" },
	            _react2.default.createElement(_AccordianToggleButton2.default, Object.assign({}, props, {
	                title: PDPATitle,
	                content: PDPAContent,
	                inputID: "pdpa",
	                forcedOpen: true,
	                toggleTrue: true
	            }))
	        )
	    );
	};
	
	Summary.propTypes = {
	    FormConfig: _react.PropTypes.func.isRequired,
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired
	};
	
	exports.default = Summary;

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _immutable = __webpack_require__(13);
	
	var _SummaryBlockSimpleElement = __webpack_require__(29);
	
	var _SummaryBlockSimpleElement2 = _interopRequireDefault(_SummaryBlockSimpleElement);
	
	var _SummaryBlockToggleElement = __webpack_require__(64);
	
	var _SummaryBlockToggleElement2 = _interopRequireDefault(_SummaryBlockToggleElement);
	
	var _actionCreators = __webpack_require__(3);
	
	var _utils = __webpack_require__(9);
	
	var _path = __webpack_require__(4);
	
	var _inputsConstant = __webpack_require__(10);
	
	__webpack_require__(30);
	
	var _countriesMaps = __webpack_require__(23);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var currencyFullName = {
	    SGD: "Singapore Dollar",
	    EUR: "Euro",
	    USD: "U.S. Dollar",
	    AUD: "Australian Dollar",
	    GBP: "British Pound",
	    CHN: "Chinese Yuan",
	    JPY: "Japanese Yuan",
	    HKD: "Hong Kong Dollar",
	    CAD: "Canadian Dollar",
	    NZD: "New Zealand Dollar",
	    CHF: "Swiss Franc"
	}; /* global FORMS_CNFG_GLBL */
	
	
	var mapValueToLabel = function mapValueToLabel(arrayOfItems, value) {
	    var item = arrayOfItems.find(function (x) {
	        return x.value === value;
	    });
	    return item ? item.label : value;
	};
	
	var CurrencyDetails = function CurrencyDetails(props) {
	    var FormConfig = props.FormConfig;
	    var productsConfig = props.productsConfig;
	
	    var typeOfProduct = (0, _immutable.fromJS)(productsConfig.products);
	
	    var _ref = new FormConfig("accountDetails");
	
	    var dropDownValues = _ref.dropDownValues;
	    var inputLabels = _ref.inputLabels;
	
	    var purposeOfFunds = dropDownValues["purposeOfFunds"][props.currency.get("purposeOfFunds")];
	    var sourceOfFunds = dropDownValues["sourceOfFunds"][props.currency.get("sourceOfFunds")];
	    var countryOfFunds = _countriesMaps.countriesNamesMap[props.currency.get("countryOfFunds")];
	    var additionalTitle = void 0;
	    if (props.productKey !== "SAVJS") {
	        additionalTitle = props.productKey !== ("CURDAA" || "CURJP") ? "Additional information for " + typeOfProduct.getIn([props.productKey, "productName"]) : "Additional information for " + currencyFullName[props.currencyKey];
	    } else {
	        additionalTitle = null;
	    }
	    return _react2.default.createElement(
	        "div",
	        { className: "summary--block-separator" },
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-currency-title" },
	            additionalTitle
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-content-container-flex" },
	            _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.PURPOSE_OF_FUNDS], value: purposeOfFunds }),
	            _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.SOURCE_OF_FUNDS], value: sourceOfFunds }),
	            _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.COUNTRY_OF_FUNDS], value: countryOfFunds })
	        )
	    );
	};
	
	var PLBTContent = function PLBTContent(props) {
	    var FormConfig = props.FormConfig;
	
	    var _ref2 = new FormConfig("accountDetails");
	
	    var inputLabels = _ref2.inputLabels;
	
	
	    var beneficiaryBank = props.product.get(_inputsConstant.UNSECURED_LOAN_BENEFICIARY_BANK);
	
	    var getTenorNumbeOfMonth = function getTenorNumbeOfMonth(pid) {
	        return props.state.getIn(["data", "products", pid, "tenor"], "") + " months";
	    };
	
	    var getBeneficiaryBankLabel = function getBeneficiaryBankLabel(bank) {
	        var bankList = props.state.getIn((0, _path.bankListDataPath)(), (0, _immutable.Map)({}));
	        var bankDetails = bankList.filter(function (value) {
	            return value.get("value") === bank;
	        });
	
	        if (bankDetails.first()) {
	            return bankDetails.first().get("label");
	        } else {
	            return "";
	        }
	    };
	
	    return _react2.default.createElement(
	        "div",
	        { key: props.productKey, className: "summary--block-content-container" },
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-content-container-flex" },
	            _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                label: inputLabels.uLLoanAmount,
	                value: props.product.get(_inputsConstant.UNSECURED_LOAN_AMOUNT)
	            }),
	            _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                label: inputLabels.uLTenor,
	                value: getTenorNumbeOfMonth(props.productKey)
	            }),
	            _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                label: inputLabels.uLBeneficiaryBank,
	                value: getBeneficiaryBankLabel(beneficiaryBank)
	            }),
	            _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                label: inputLabels.uLBeneficiaryAccount,
	                value: props.product.get(_inputsConstant.UNSECURED_LOAN_BENEFICIARY_ACCOUNT)
	            }),
	            _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                label: inputLabels.uLBeneficiaryName,
	                value: props.state.getIn(["data", "fullName"])
	            })
	        )
	    );
	};
	
	var CasaAndCreditCardContent = function CasaAndCreditCardContent(props) {
	    var FormConfig = props.FormConfig;
	    var productsConfig = props.productsConfig;
	
	    var _ref3 = new FormConfig("accountDetails");
	
	    var inputLabels = _ref3.inputLabels;
	    var inputValues = _ref3.inputValues;
	
	    var typeOfProduct = (0, _immutable.fromJS)(productsConfig.products);
	    var productType = typeOfProduct.getIn([props.productKey, "type"]);
	    var currencies = props.product.get("currencies");
	
	    var currentProduct = typeOfProduct.getIn([props.productKey]);
	    var productsId = props.state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	    var productsInfo = productsId.map(function (id) {
	        return typeOfProduct.getIn([id]);
	    });
	    var highestRank = (0, _utils.getHighestRankProduct)(productsInfo).get("rank");
	    var productsToShowCardDetails = productsInfo.filter(function (product) {
	        return product.get("rank") === highestRank;
	    }).map(function (product) {
	        return product.get("pid");
	    });
	    var isCreditSure = props.state.getIn((0, _path.dataPath)([_inputsConstant.CREDIT_SURE]), false);
	    var isCreditSureProduct = productType === "Card" || productType === "CASH+";
	
	    var isSameDayDeliveryOn = productsConfig.sameDayDelivery ? productsConfig.sameDayDelivery : false;
	    var isSameDayDelivery = props.state.getIn((0, _path.dataPath)([_inputsConstant.SAME_DAY_DELIVERY]), false);
	    return _react2.default.createElement(
	        "div",
	        { key: props.productKey, className: "summary--block-content-container" },
	        props.productKey !== "SAVJS" && (productsToShowCardDetails.includes(currentProduct.get("pid")) || ["001843"].indexOf(currentProduct.get("pid")) > -1) && _react2.default.createElement(
	            "div",
	            { className: "summary--block-content-container-flex" },
	            _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                label: inputLabels[_inputsConstant.NAME_ON_CARD],
	                value: props.product.get("nameOnCard")
	            }),
	            productType === "CASA" && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                label: inputLabels[_inputsConstant.CARD_LIMIT],
	                value: mapValueToLabel(inputValues[_inputsConstant.CARD_LIMIT], props.product.get("dailyCardLimit"))
	            }),
	            (productType === "Card" || productType === "CASH+") && props.productKey !== "700778" && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                label: inputLabels[_inputsConstant.CREDIT_LIMIT],
	                value: mapValueToLabel(inputValues[_inputsConstant.CREDIT_LIMIT], props.product.get("creditLimit"))
	            }),
	            productType === "CASA" && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                label: inputLabels[_inputsConstant.ACTIVATE_ATM],
	                value: props.product.get("atmAccess") ? "Yes" : "No"
	            }),
	            productType === "Card" && isSameDayDeliveryOn && _react2.default.createElement(_SummaryBlockToggleElement2.default, {
	                label: inputLabels[_inputsConstant.SAME_DAY_DELIVERY],
	                value: isSameDayDelivery ? "Yes" : "No"
	            }),
	            isCreditSureProduct && _react2.default.createElement(_SummaryBlockToggleElement2.default, {
	                label: inputLabels["isApplyingCreditSure"],
	                value: isCreditSure ? "Yes" : "No"
	            })
	        ),
	        currencies && _react2.default.createElement(CurrencyDetails, Object.assign({
	            currencyKey: currencies.keySeq().first(),
	            currency: currencies.get(currencies.keySeq().first())
	        }, props)),
	        props.product.get("asiaMilesMembershipNumber") && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	            label: inputLabels[_inputsConstant.ASIA_MILES_MEMBERSHIP_NUMBER],
	            value: props.product.get("asiaMilesMembershipNumber")
	        }),
	        props.product.get("krisflyerMembershipNumber") && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	            label: inputLabels[_inputsConstant.KRYSFLYER_MEMBERSHIP_NUMBER],
	            value: props.product.get("krisflyerMembershipNumber")
	        }),
	        props.product.get("krisflyerMembershipFName") && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	            label: inputLabels[_inputsConstant.KRISFLYER_FIRST_NAME],
	            value: props.product.get("krisflyerMembershipFName")
	        }),
	        props.product.get("krisflyerMembershipLName") && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	            label: inputLabels[_inputsConstant.KRISFLYER_LAST_NAME],
	            value: props.product.get("krisflyerMembershipLName")
	        }),
	        props.product.get(_inputsConstant.SINGTEL_MEMBERSHIP_NUMBER) && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	            label: inputLabels[_inputsConstant.SINGTEL_MEMBERSHIP_NUMBER],
	            value: props.product.get(_inputsConstant.SINGTEL_MEMBERSHIP_NUMBER)
	        })
	    );
	};
	
	var SummaryBlockAccountDetails = function SummaryBlockAccountDetails(props) {
	    var FormConfig = props.FormConfig;
	    var productsConfig = props.productsConfig;
	
	    var typeOfProduct = (0, _immutable.fromJS)(productsConfig.products);
	
	    var _ref4 = new FormConfig("accountDetails");
	
	    var title = _ref4.title;
	
	    var isFinalSubmit = props.state.getIn((0, _path.isFinalSubmitPath)(), false);
	    var productName = typeOfProduct.getIn([props.productKey, "productName"]);
	    var productType = typeOfProduct.getIn([props.productKey, "type"]);
	    var family = typeOfProduct.getIn([props.productKey, "pid"]);
	    return _react2.default.createElement(
	        "div",
	        { className: "summary--block" },
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-header-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-header-title" },
	                title + " - " + productName
	            ),
	            !isFinalSubmit && _react2.default.createElement("img", {
	                className: "summary--block-header-img",
	                src: FORMS_CNFG_GLBL.imgPath + "/edit_blue_icon.svg",
	                onClick: function onClick() {
	                    props.dispatchScrollSummaryToStep(props.state.getIn(_path.ui).keySeq().butLast().last(), "" + family);
	                },
	                alt: "header-img"
	            })
	        ),
	        productType !== "personalLoan" && productType !== "balanceTransfer" ? _react2.default.createElement(CasaAndCreditCardContent, props) : _react2.default.createElement(PLBTContent, props)
	    );
	};
	
	CurrencyDetails.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    currency: _react.PropTypes.object.isRequired,
	    currencyKey: _react.PropTypes.string.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired,
	    productKey: _react.PropTypes.string.isRequired,
	    productsConfig: _react.PropTypes.object.isRequired
	};
	
	PLBTContent.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    product: _reactImmutableProptypes2.default.map.isRequired,
	    productKey: _react.PropTypes.string.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired,
	    productsConfig: _react.PropTypes.object.isRequired,
	    dispatchScrollSummaryToStep: _react.PropTypes.func.isRequired
	};
	
	CasaAndCreditCardContent.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    product: _reactImmutableProptypes2.default.map.isRequired,
	    productKey: _react.PropTypes.string.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired,
	    productsConfig: _react.PropTypes.object.isRequired,
	    dispatchScrollSummaryToStep: _react.PropTypes.func.isRequired
	};
	
	SummaryBlockAccountDetails.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    product: _reactImmutableProptypes2.default.map.isRequired,
	    productKey: _react.PropTypes.string.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired,
	    productsConfig: _react.PropTypes.object.isRequired,
	    dispatchScrollSummaryToStep: _react.PropTypes.func.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchScrollSummaryToStep: (0, _redux.bindActionCreators)(_actionCreators.scrollSummaryToStep, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(SummaryBlockAccountDetails);

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _SummaryBlockSimpleElement = __webpack_require__(29);
	
	var _SummaryBlockSimpleElement2 = _interopRequireDefault(_SummaryBlockSimpleElement);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _countriesMaps = __webpack_require__(23);
	
	var _inputsConstant = __webpack_require__(10);
	
	__webpack_require__(30);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* global FORMS_CNFG_GLBL */
	var SummaryBlockBasicInfo = function SummaryBlockBasicInfo(props) {
	    var fullName = props.state.getIn((0, _path.dataPath)([_inputsConstant.FULL_NAME]));
	    var hanyuPinYinName = props.state.getIn((0, _path.dataPath)([_inputsConstant.HAN_YU_PIN_YI_NAME]));
	    var aliasName = props.state.getIn((0, _path.dataPath)([_inputsConstant.ALIAS_NAME]));
	    var hanyuPinYinAliasName = props.state.getIn((0, _path.dataPath)([_inputsConstant.HAN_YU_PIN_YI_ALIAS_NAME]));
	    var marriedName = props.state.getIn((0, _path.dataPath)([_inputsConstant.MARRIED_NAME]));
	    var nric = props.state.getIn((0, _path.dataPath)([_inputsConstant.NRIC]));
	    var email = props.state.getIn((0, _path.dataPath)([_inputsConstant.EMAIL]));
	    var mobileNumber = props.state.getIn((0, _path.dataPath)([_inputsConstant.MOBILE_NUMBER]));
	    var passport = props.state.getIn((0, _path.dataPath)([_inputsConstant.PASSPORT]));
	    var passportExpiry = props.state.getIn((0, _path.dataPath)([_inputsConstant.PASSPORT_EXPIRY]));
	    var passportIdentityCountry = props.state.getIn((0, _path.dataPath)([_inputsConstant.PASSPORT_IDENTITY_COUNTRY]));
	    var FormConfig = props.FormConfig;
	
	    var _ref = new FormConfig("basicInfo");
	
	    var title = _ref.title;
	    var inputLabels = _ref.inputLabels;
	
	    var isFinalSubmit = props.state.getIn((0, _path.isFinalSubmitPath)(), false);
	    var showEditIcon = false;
	
	    var isSG = props.state.getIn((0, _path.dataPath)([_inputsConstant.IS_SG]), true);
	    var isPR = isSG && props.state.getIn((0, _path.dataPath)([_inputsConstant.NATIONALITY])) !== "SG";
	
	    return _react2.default.createElement(
	        "div",
	        { className: "summary--block" },
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-header-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-header-title" },
	                title
	            ),
	            !isFinalSubmit && showEditIcon && _react2.default.createElement("img", {
	                className: "summary--block-header-img",
	                src: FORMS_CNFG_GLBL.imgPath + "/edit_blue_icon.svg",
	                onClick: function onClick() {
	                    props.dispatchScrollSummaryToStep(props.state.getIn(_path.ui).keySeq().butLast().last(), "basicInfo");
	                },
	                alt: "header-img"
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-content-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-content-container-flex" },
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.FULL_NAME], value: fullName }),
	                hanyuPinYinName && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.HAN_YU_PIN_YI_NAME], value: hanyuPinYinName }),
	                aliasName && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.ALIAS_NAME], value: aliasName }),
	                hanyuPinYinAliasName && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels[_inputsConstant.HAN_YU_PIN_YI_ALIAS_NAME],
	                    value: hanyuPinYinAliasName
	                }),
	                marriedName && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.MARRIED_NAME], value: marriedName }),
	                nric && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: isPR ? inputLabels[_inputsConstant.NRIC_PR] : inputLabels[_inputsConstant.NRIC_SC], value: nric }),
	                passport && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.PASSPORT], value: passport }),
	                passportExpiry && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.PASSPORT_EXPIRY], value: passportExpiry }),
	                passportIdentityCountry && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.PASSPORT_IDENTITY_COUNTRY], value: _countriesMaps.countriesNamesMap[passportIdentityCountry] }),
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.EMAIL], value: email }),
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.MOBILE_NUMBER], value: mobileNumber })
	            )
	        )
	    );
	};
	
	SummaryBlockBasicInfo.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    dispatchScrollSummaryToStep: _react.PropTypes.func.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchScrollSummaryToStep: (0, _redux.bindActionCreators)(_actionCreators.scrollSummaryToStep, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(SummaryBlockBasicInfo);

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _SummaryBlockToggleElement = __webpack_require__(64);
	
	var _SummaryBlockToggleElement2 = _interopRequireDefault(_SummaryBlockToggleElement);
	
	var _SummaryBlockSimpleElement = __webpack_require__(29);
	
	var _SummaryBlockSimpleElement2 = _interopRequireDefault(_SummaryBlockSimpleElement);
	
	var _immutable = __webpack_require__(13);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _inputsConstant = __webpack_require__(10);
	
	__webpack_require__(30);
	
	var _countriesMaps = __webpack_require__(23);
	
	var _utils = __webpack_require__(9);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TaxResidencyDetails = function TaxResidencyDetails(props) {
	    var inputValues = props.inputValues;
	
	    var country = _countriesMaps.countriesNamesMap[props.residency.get("country")];
	    var tinReason = inputValues.tinReasons.find(function (reason) {
	        return reason.value === props.residency.get("reasonCode");
	    });
	
	    return _react2.default.createElement(
	        "div",
	        { className: "summary--block-content-container-flex" },
	        _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: "Tax Residency", value: country }),
	        _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: "Tax Reason", value: tinReason.label }),
	        props.residency.get("id") && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: "Tax Identification No.", value: props.residency.get("id") })
	    );
	};
	
	// import SummaryBlockSimpleElement from "../components/SummaryBlockSimpleElement/SummaryBlockSimpleElement";
	/* global FORMS_CNFG_GLBL */
	
	
	var SummaryBlockDeclaration = function SummaryBlockDeclaration(props) {
	    var pids = props.state.getIn((0, _path.productIdPath)());
	    var usResident = props.state.getIn((0, _path.dataPath)([_inputsConstant.US_RESIDENT]));
	    var usCitizen = props.state.getIn((0, _path.dataPath)([_inputsConstant.US_CITIZEN]));
	    var cardHolder = props.state.getIn((0, _path.dataPath)([_inputsConstant.RESIDENT_CARD_HOLDER]));
	    var taxResidencyIds = props.state.getIn(["data", "countries"], (0, _immutable.Map)());
	    var signatureImg = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent) ? props.state.getIn((0, _path.uiSignatureImageContentPath)("declaration", _inputsConstant.DRAW_SIGNATURE), "none") : props.state.getIn((0, _path.uiSignatureImageContentPath)("declaration", _inputsConstant.SIGNATURE), "none");
	    var FormConfig = props.FormConfig;
	    var productsConfig = props.productsConfig;
	
	    var _ref = new FormConfig("declaration");
	
	    var title = _ref.title;
	    var inputLabels = _ref.inputLabels;
	    var inputValues = _ref.inputValues;
	
	    var isFinalSubmit = props.state.getIn((0, _path.isFinalSubmitPath)(), false);
	
	    return _react2.default.createElement(
	        "div",
	        { className: "summary--block" },
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-header-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-header-title" },
	                title
	            ),
	            !isFinalSubmit && _react2.default.createElement("img", {
	                className: "summary--block-header-img",
	                src: FORMS_CNFG_GLBL.imgPath + "/edit_blue_icon.svg",
	                onClick: function onClick() {
	                    props.dispatchScrollSummaryToStep(props.state.getIn(_path.ui).keySeq().butLast().last(), "declaration");
	                },
	                alt: "header-img"
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-content-container" },
	            ((0, _utils.sellingCasa)(pids, productsConfig) || (0, _utils.sellingCashPlus)(pids, productsConfig)) && _react2.default.createElement(
	                "div",
	                null,
	                _react2.default.createElement(_SummaryBlockToggleElement2.default, { label: inputLabels[_inputsConstant.US_RESIDENT], value: usResident ? "Yes" : "No" }),
	                _react2.default.createElement(
	                    "div",
	                    { className: "summary--block-separator" },
	                    _react2.default.createElement(_SummaryBlockToggleElement2.default, {
	                        label: inputLabels[_inputsConstant.US_CITIZEN],
	                        value: usCitizen ? "Yes" : "No"
	                    })
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "summary--block-separator" },
	                    _react2.default.createElement(_SummaryBlockToggleElement2.default, {
	                        label: inputLabels[_inputsConstant.RESIDENT_CARD_HOLDER],
	                        value: cardHolder ? "Yes" : "No"
	                    })
	                ),
	                (0, _utils.sellingCasa)(pids, productsConfig) && _react2.default.createElement(
	                    "div",
	                    { className: "summary--block-separator" },
	                    taxResidencyIds.keySeq().map(function (residencyKey) {
	                        return _react2.default.createElement(TaxResidencyDetails, Object.assign({
	                            key: residencyKey,
	                            inputValues: inputValues,
	                            residency: taxResidencyIds.get(residencyKey)
	                        }, props));
	                    })
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "summary--block-separator" },
	                    _react2.default.createElement(
	                        "div",
	                        { className: "summary--block-signature-container" },
	                        _react2.default.createElement(
	                            "p",
	                            { className: "simple-element-title" },
	                            inputLabels[_inputsConstant.SIGNATURE]
	                        ),
	                        _react2.default.createElement("img", { className: "summary--block-signarue-image", src: signatureImg, alt: "sigImg" })
	                    )
	                )
	            ),
	            (0, _utils.sellingCards)(pids, productsConfig) && !(0, _utils.sellingCasa)(pids, productsConfig) && _react2.default.createElement(
	                "div",
	                { className: "summary--block-signature-container" },
	                _react2.default.createElement(
	                    "p",
	                    { className: "simple-element-title" },
	                    inputLabels[_inputsConstant.SIGNATURE]
	                ),
	                _react2.default.createElement("img", { className: "summary--block-signarue-image", src: signatureImg, alt: "sigImg" })
	            )
	        )
	    );
	};
	
	TaxResidencyDetails.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    residency: _react.PropTypes.object.isRequired,
	    inputValues: _react.PropTypes.object
	};
	
	SummaryBlockDeclaration.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired,
	    productsConfig: _react.PropTypes.object.isRequired,
	    dispatchScrollSummaryToStep: _react.PropTypes.func.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchScrollSummaryToStep: (0, _redux.bindActionCreators)(_actionCreators.scrollSummaryToStep, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(SummaryBlockDeclaration);

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _SummaryBlockSimpleElement = __webpack_require__(29);
	
	var _SummaryBlockSimpleElement2 = _interopRequireDefault(_SummaryBlockSimpleElement);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _inputsConstant = __webpack_require__(10);
	
	__webpack_require__(30);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var SummaryBlockDigitalServices = function SummaryBlockDigitalServices(props) {
	    var username = props.state.getIn((0, _path.dataPath)([_inputsConstant.USERNAME]));
	    var FormConfig = props.FormConfig;
	
	    var _ref = new FormConfig("digitalServices");
	
	    var title = _ref.title;
	    var inputLabels = _ref.inputLabels;
	
	    var isFinalSubmit = props.state.getIn((0, _path.isFinalSubmitPath)(), false);
	
	    return _react2.default.createElement(
	        "div",
	        { className: "summary--block" },
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-header-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-header-title" },
	                title
	            ),
	            !isFinalSubmit && _react2.default.createElement("img", {
	                className: "summary--block-header-img",
	                src: FORMS_CNFG_GLBL.imgPath + "/edit_blue_icon.svg",
	                onClick: function onClick() {
	                    props.dispatchScrollSummaryToStep(props.state.getIn(_path.ui).keySeq().butLast().last(), "digitalServices");
	                },
	                alt: "header-img"
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-content-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-content-container-flex" },
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.USERNAME], value: username })
	            )
	        )
	    );
	}; /* global FORMS_CNFG_GLBL */
	
	
	SummaryBlockDigitalServices.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    dispatchScrollSummaryToStep: _react.PropTypes.func.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchScrollSummaryToStep: (0, _redux.bindActionCreators)(_actionCreators.scrollSummaryToStep, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(SummaryBlockDigitalServices);

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _SummaryBlockSimpleElement = __webpack_require__(29);
	
	var _SummaryBlockSimpleElement2 = _interopRequireDefault(_SummaryBlockSimpleElement);
	
	var _SummaryBlockToggleElement = __webpack_require__(64);
	
	var _SummaryBlockToggleElement2 = _interopRequireDefault(_SummaryBlockToggleElement);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _inputsConstant = __webpack_require__(10);
	
	__webpack_require__(30);
	
	var _countriesMaps = __webpack_require__(23);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var SummaryBlockHomeAddress = function SummaryBlockHomeAddress(props) {
	    var homePostalCode = props.state.getIn((0, _path.dataPath)([_inputsConstant.HOME_POSTAL_CODE]));
	    var homeBlock = props.state.getIn((0, _path.dataPath)([_inputsConstant.HOME_HOME_BLOCK]));
	    var homeStreet = props.state.getIn((0, _path.dataPath)([_inputsConstant.HOME_STREET]));
	    var homeLevel = props.state.getIn((0, _path.dataPath)([_inputsConstant.HOME_LEVEL]));
	    var homeUnitNumber = props.state.getIn((0, _path.dataPath)([_inputsConstant.HOME_UNIT_NUMBER]));
	    var homeBuilding = props.state.getIn((0, _path.dataPath)([_inputsConstant.HOME_BUILDING]));
	
	    var homePropertyType = props.state.getIn((0, _path.dataPath)([_inputsConstant.PROPERTY_TYPE]));
	    var homeHomeOwnership = props.state.getIn((0, _path.dataPath)([_inputsConstant.RESIDENCE_STATUS]));
	    var homeLengthOfResidencyMonths = props.state.getIn((0, _path.dataPath)(["lengthOfResidencyMonths"]));
	    var homeLengthOfResidencyYears = props.state.getIn((0, _path.dataPath)(["lengthOfResidencyYears"]));
	
	    var differentAddress = props.state.getIn((0, _path.dataPath)([_inputsConstant.SAME_HOME_AND_MAILING_ADD]));
	    var mailingCountry = props.state.getIn((0, _path.dataPath)([_inputsConstant.MAILING_COUNTRY]));
	
	    var mailingPostalCode = props.state.getIn((0, _path.dataPath)([_inputsConstant.MAILING_POSTAL_CODE]));
	    var mailingBlock = props.state.getIn((0, _path.dataPath)([_inputsConstant.MAILING_HOME_BLOCK]));
	    var mailingStreet = props.state.getIn((0, _path.dataPath)([_inputsConstant.MAILING_STREET]));
	    var mailingLevel = props.state.getIn((0, _path.dataPath)([_inputsConstant.MAILING_LEVEL]));
	    var mailingUnitNumber = props.state.getIn((0, _path.dataPath)([_inputsConstant.MAILING_UNIT_NUMBER]));
	    var mailingBuilding = props.state.getIn((0, _path.dataPath)([_inputsConstant.MAILING_BUILDING]));
	
	    var addressOne = props.state.getIn((0, _path.dataPath)([_inputsConstant.ADDRESS_ONE]));
	    var addressTwo = props.state.getIn((0, _path.dataPath)([_inputsConstant.ADDRESS_TWO]));
	    var addressThree = props.state.getIn((0, _path.dataPath)([_inputsConstant.ADDRESS_THREE]));
	    var addressFour = props.state.getIn((0, _path.dataPath)([_inputsConstant.ADDRESS_FOUR]));
	    var addressCity = props.state.getIn((0, _path.dataPath)([_inputsConstant.ADDRESS_CITY]));
	    var isFinalSubmit = props.state.getIn((0, _path.isFinalSubmitPath)(), false);
	
	    var FormConfig = props.FormConfig;
	
	    var _ref = new FormConfig("homeMailingAddress");
	
	    var title = _ref.title;
	    var inputLabels = _ref.inputLabels;
	    var dropDownValues = _ref.dropDownValues;
	
	    return _react2.default.createElement(
	        "div",
	        { className: "summary--block" },
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-header-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-header-title" },
	                title
	            ),
	            !isFinalSubmit && _react2.default.createElement("img", {
	                className: "summary--block-header-img",
	                src: FORMS_CNFG_GLBL.imgPath + "/edit_blue_icon.svg",
	                onClick: function onClick() {
	                    props.dispatchScrollSummaryToStep(props.state.getIn(_path.ui).keySeq().butLast().last(), "homeMailingAddress");
	                },
	                alt: "header-img"
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-content-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-content-container-flex" },
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.HOME_POSTAL_CODE], value: homePostalCode }),
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.HOME_HOME_BLOCK], value: homeBlock }),
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.HOME_STREET], value: homeStreet }),
	                homeBuilding && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.HOME_BUILDING], value: homeBuilding }),
	                homeLevel && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.HOME_LEVEL], value: homeLevel }),
	                homeUnitNumber && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.HOME_UNIT_NUMBER], value: homeUnitNumber }),
	                homePropertyType && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels[_inputsConstant.PROPERTY_TYPE],
	                    value: dropDownValues[_inputsConstant.PROPERTY_TYPE][homePropertyType]
	                }),
	                homeHomeOwnership && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels[_inputsConstant.RESIDENCE_STATUS],
	                    value: dropDownValues[_inputsConstant.RESIDENCE_STATUS][homeHomeOwnership]
	                }),
	                homeLengthOfResidencyYears && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels["lengthOfResidencyYears"],
	                    value: homeLengthOfResidencyYears
	                }),
	                homeLengthOfResidencyMonths && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels["lengthOfResidencyMonths"],
	                    value: homeLengthOfResidencyMonths
	                })
	            ),
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-separator" },
	                _react2.default.createElement(_SummaryBlockToggleElement2.default, {
	                    label: inputLabels["sameHomeMailingAddress"],
	                    value: differentAddress ? "Yes" : "No"
	                })
	            ),
	            differentAddress && mailingCountry === "SG" ? _react2.default.createElement(
	                "div",
	                { className: "summary--block-content-container-flex" },
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels[_inputsConstant.MAILING_COUNTRY],
	                    value: _countriesMaps.countriesNamesMap[mailingCountry]
	                }),
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.MAILING_POSTAL_CODE], value: mailingPostalCode }),
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.MAILING_HOME_BLOCK], value: mailingBlock }),
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.MAILING_STREET], value: mailingStreet }),
	                mailingBuilding && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.MAILING_BUILDING], value: mailingBuilding }),
	                mailingLevel && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.MAILING_LEVEL], value: mailingLevel }),
	                mailingUnitNumber && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels[_inputsConstant.MAILING_UNIT_NUMBER],
	                    value: mailingUnitNumber
	                })
	            ) : null,
	            differentAddress && mailingCountry !== "SG" ? _react2.default.createElement(
	                "div",
	                { className: "summary--block-content-container-flex" },
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels[_inputsConstant.MAILING_COUNTRY],
	                    value: _countriesMaps.countriesNamesMap[mailingCountry]
	                }),
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.ADDRESS_ONE], value: addressOne }),
	                addressTwo && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.ADDRESS_TWO], value: addressTwo }),
	                addressThree && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.ADDRESS_THREE], value: addressThree }),
	                addressFour && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.ADDRESS_FOUR], value: addressFour }),
	                addressCity && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.ADDRESS_CITY], value: addressCity })
	            ) : null
	        )
	    );
	}; /* global FORMS_CNFG_GLBL */
	
	
	SummaryBlockHomeAddress.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired,
	    dispatchScrollSummaryToStep: _react.PropTypes.func.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchScrollSummaryToStep: (0, _redux.bindActionCreators)(_actionCreators.scrollSummaryToStep, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(SummaryBlockHomeAddress);

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _SummaryBlockSimpleElement = __webpack_require__(29);
	
	var _SummaryBlockSimpleElement2 = _interopRequireDefault(_SummaryBlockSimpleElement);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _countriesMaps = __webpack_require__(23);
	
	__webpack_require__(30);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* global FORMS_CNFG_GLBL */
	var SummaryBlockPersonalInfo = function SummaryBlockPersonalInfo(props) {
	    var dateOfBirth = props.state.getIn((0, _path.dataPath)([_inputsConstant.DATE_OF_BIRTH]));
	    var maritalStatus = props.state.getIn((0, _path.dataPath)([_inputsConstant.MARITAL_STATUS]));
	    var nationality = props.state.getIn((0, _path.dataPath)([_inputsConstant.NATIONALITY]));
	    var gender = props.state.getIn((0, _path.dataPath)([_inputsConstant.GENDER]));
	    var educationLevel = props.state.getIn((0, _path.dataPath)([_inputsConstant.EDUCATION_LEVEL]));
	    var countryOfBirth = props.state.getIn((0, _path.dataPath)([_inputsConstant.COUNTRY_OF_BIRTH]));
	    var countryOfResidence = props.state.getIn((0, _path.dataPath)([_inputsConstant.COUNTRY_OF_RESIDENCE]));
	    var jsName = props.state.getIn((0, _path.dataPath)(["products", "SAVJS", _inputsConstant.JUNIOR_SAVER_NAME]));
	    var jsGender = props.state.getIn((0, _path.dataPath)(["products", "SAVJS", _inputsConstant.JUNIOR_SAVER_GENDER]));
	    var jsDOB = props.state.getIn((0, _path.dataPath)(["products", "SAVJS", _inputsConstant.JUNIOR_SAVER_DOB]));
	    var jsBirthCert = props.state.getIn((0, _path.dataPath)(["products", "SAVJS", _inputsConstant.JUNIOR_SAVER_BIRTH_CERT]));
	    var jsNationality = props.state.getIn((0, _path.dataPath)(["products", "SAVJS", _inputsConstant.JUNIOR_SAVER_NATIONALITY]));
	    var jsCountryOfBirth = props.state.getIn((0, _path.dataPath)(["products", "SAVJS", _inputsConstant.JUNIOR_SAVER_COUNTRY_OF_BIRTH]));
	    var FormConfig = props.FormConfig;
	
	    var _ref = new FormConfig("personalInfo");
	
	    var dropDownValues = _ref.dropDownValues;
	    var title = _ref.title;
	    var inputLabels = _ref.inputLabels;
	
	    var isFinalSubmit = props.state.getIn((0, _path.isFinalSubmitPath)(), false);
	
	    return _react2.default.createElement(
	        "div",
	        { className: "summary--block" },
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-header-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-header-title" },
	                title
	            ),
	            !isFinalSubmit && _react2.default.createElement("img", {
	                className: "summary--block-header-img",
	                src: FORMS_CNFG_GLBL.imgPath + "/edit_blue_icon.svg",
	                onClick: function onClick() {
	                    props.dispatchScrollSummaryToStep(props.state.getIn(_path.ui).keySeq().butLast().last(), "personalInfo");
	                },
	                alt: "header-img"
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-content-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-content-container-flex" },
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.DATE_OF_BIRTH], value: dateOfBirth }),
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.GENDER], value: dropDownValues[_inputsConstant.GENDER][gender] }),
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels[_inputsConstant.MARITAL_STATUS],
	                    value: dropDownValues[_inputsConstant.MARITAL_STATUS][maritalStatus]
	                }),
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels[_inputsConstant.EDUCATION_LEVEL],
	                    value: dropDownValues[_inputsConstant.EDUCATION_LEVEL][educationLevel]
	                }),
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.NATIONALITY], value: _countriesMaps.countriesNamesMap[nationality] }),
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels[_inputsConstant.COUNTRY_OF_BIRTH],
	                    value: _countriesMaps.countriesNamesMap[countryOfBirth]
	                }),
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels[_inputsConstant.COUNTRY_OF_RESIDENCE],
	                    value: _countriesMaps.countriesNamesMap[countryOfResidence]
	                })
	            ),
	            jsName && _react2.default.createElement(
	                "div",
	                null,
	                _react2.default.createElement(
	                    "div",
	                    { style: { color: "#012667", marginBottom: "5px", fontWeight: "bold" } },
	                    "Child Details"
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "summary--block-content-container-flex" },
	                    _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.JUNIOR_SAVER_NAME], value: jsName }),
	                    _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                        label: inputLabels[_inputsConstant.JUNIOR_SAVER_GENDER],
	                        value: dropDownValues[_inputsConstant.GENDER][jsGender]
	                    }),
	                    _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.JUNIOR_SAVER_DOB], value: jsDOB }),
	                    _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                        label: inputLabels[_inputsConstant.JUNIOR_SAVER_NATIONALITY],
	                        value: jsBirthCert
	                    }),
	                    _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                        label: inputLabels[_inputsConstant.JUNIOR_SAVER_COUNTRY_OF_BIRTH],
	                        value: _countriesMaps.countriesNamesMap[jsNationality]
	                    }),
	                    _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                        label: "Country of Birth",
	                        value: _countriesMaps.countriesNamesMap[jsCountryOfBirth]
	                    })
	                )
	            )
	        )
	    );
	};
	
	SummaryBlockPersonalInfo.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    dispatchScrollSummaryToStep: _react.PropTypes.func.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchScrollSummaryToStep: (0, _redux.bindActionCreators)(_actionCreators.scrollSummaryToStep, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(SummaryBlockPersonalInfo);

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _SummaryBlockSimpleElement = __webpack_require__(29);
	
	var _SummaryBlockSimpleElement2 = _interopRequireDefault(_SummaryBlockSimpleElement);
	
	var _SummaryBlockToggleElement = __webpack_require__(64);
	
	var _SummaryBlockToggleElement2 = _interopRequireDefault(_SummaryBlockToggleElement);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _inputsConstant = __webpack_require__(10);
	
	__webpack_require__(30);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* global FORMS_CNFG_GLBL */
	var getDataFromState = function getDataFromState(state) {
	    return {
	        billingProof: state.getIn((0, _path.dataPath)([_inputsConstant.UPLOAD_BILLING_PROOF])),
	        nricFront: state.getIn((0, _path.dataPath)([_inputsConstant.UPLOAD_NRIC_FRONT])),
	        nricBack: state.getIn((0, _path.dataPath)([_inputsConstant.UPLOAD_NRIC_BACK])),
	        passport: state.getIn((0, _path.dataPath)([_inputsConstant.UPLOAD_PASSPORT])),
	        passportBack: state.getIn((0, _path.dataPath)([_inputsConstant.UPLOAD_PASSPORT_BACK])),
	        incomeDocuments: state.getIn((0, _path.dataPath)([_inputsConstant.UPLOAD_INCOME_PROOF])),
	        submitCpf: state.getIn((0, _path.dataPath)([_inputsConstant.SUBMIT_CPF_ONLINE])),
	        workPermit: state.getIn((0, _path.dataPath)([_inputsConstant.UPLOAD_WORK_PERMIT])),
	        nricIssueDate: state.getIn((0, _path.dataPath)([_inputsConstant.NRIC_ISSUE_DATE])),
	        employmentProof: state.getIn((0, _path.dataPath)([_inputsConstant.UPLOAD_EMPLOYMENT_PROOF]))
	    };
	};
	
	var SummaryBlockUploadDocuments = function SummaryBlockUploadDocuments(props) {
	    var _getDataFromState = getDataFromState(props.state);
	
	    var billingProof = _getDataFromState.billingProof;
	    var nricFront = _getDataFromState.nricFront;
	    var nricBack = _getDataFromState.nricBack;
	    var passport = _getDataFromState.passport;
	    var passportBack = _getDataFromState.passportBack;
	    var incomeDocuments = _getDataFromState.incomeDocuments;
	    var submitCpf = _getDataFromState.submitCpf;
	    var workPermit = _getDataFromState.workPermit;
	    var nricIssueDate = _getDataFromState.nricIssueDate;
	    var employmentProof = _getDataFromState.employmentProof;
	    var FormConfig = props.FormConfig;
	
	    var _ref = new FormConfig("uploadDocuments");
	
	    var title = _ref.title;
	    var inputLabels = _ref.inputLabels;
	
	    var isFinalSubmit = props.state.getIn((0, _path.isFinalSubmitPath)(), false);
	
	    return _react2.default.createElement(
	        "div",
	        { className: "summary--block" },
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-header-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-header-title" },
	                title
	            ),
	            !isFinalSubmit && _react2.default.createElement("img", {
	                className: "summary--block-header-img",
	                src: FORMS_CNFG_GLBL.imgPath + "/edit_blue_icon.svg",
	                onClick: function onClick() {
	                    props.dispatchScrollSummaryToStep(props.state.getIn(_path.ui).keySeq().butLast().last(), "uploadDocuments");
	                },
	                alt: "header-img"
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-content-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-content-container-flex" },
	                billingProof && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.UPLOAD_BILLING_PROOF], value: billingProof }),
	                nricFront && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.UPLOAD_NRIC_FRONT], value: nricFront }),
	                nricBack && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.UPLOAD_NRIC_BACK], value: nricBack }),
	                nricIssueDate && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.NRIC_ISSUE_DATE], value: nricIssueDate }),
	                passport && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.UPLOAD_PASSPORT], value: passport }),
	                passportBack && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.UPLOAD_PASSPORT_BACK], value: passportBack }),
	                workPermit && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.UPLOAD_WORK_PERMIT], value: workPermit }),
	                submitCpf && _react2.default.createElement(_SummaryBlockToggleElement2.default, {
	                    label: inputLabels[_inputsConstant.SUBMIT_CPF_ONLINE],
	                    value: submitCpf ? "Yes" : "No"
	                }),
	                incomeDocuments ? _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.UPLOAD_INCOME_PROOF], value: incomeDocuments }) : null,
	                employmentProof && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.UPLOAD_EMPLOYMENT_PROOF], value: employmentProof })
	            )
	        )
	    );
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchScrollSummaryToStep: (0, _redux.bindActionCreators)(_actionCreators.scrollSummaryToStep, dispatch)
	    };
	};
	
	SummaryBlockUploadDocuments.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired,
	    dispatchScrollSummaryToStep: _react.PropTypes.func.isRequired
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(SummaryBlockUploadDocuments);

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(6);
	
	var _SummaryBlockSimpleElement = __webpack_require__(29);
	
	var _SummaryBlockSimpleElement2 = _interopRequireDefault(_SummaryBlockSimpleElement);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _inputsConstant = __webpack_require__(10);
	
	__webpack_require__(30);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var SummaryBlockWorkInfo = function SummaryBlockWorkInfo(props) {
	    var natureOfEmployment = props.state.getIn((0, _path.dataPath)([_inputsConstant.NATURE_OF_EMPLOYMENT]));
	    var nameOfEmployer = props.state.getIn((0, _path.dataPath)([_inputsConstant.NAME_OF_EMPLOYER]));
	    var jobTitle = props.state.getIn((0, _path.dataPath)([_inputsConstant.OCCUPATION]));
	    var industry = props.state.getIn((0, _path.dataPath)([_inputsConstant.INDUSTRY]));
	    var annualIncome = props.state.getIn((0, _path.dataPath)([_inputsConstant.ANNUAL_INCOME]));
	    var company = props.state.getIn((0, _path.dataPath)([_inputsConstant.COMPANY]));
	    var ePassExpiry = props.state.getIn((0, _path.dataPath)([_inputsConstant.EPASS_EXPIRY]));
	    var lengthOfEmploymentYears = props.state.getIn((0, _path.dataPath)(["lengthOfEmploymentYears"]));
	    var lengthOfEmploymentMonths = props.state.getIn((0, _path.dataPath)(["lengthOfEmploymentMonths"]));
	    var FormConfig = props.FormConfig;
	
	    var _ref = new FormConfig("workInfo");
	
	    var dropDownValues = _ref.dropDownValues;
	    var title = _ref.title;
	    var inputLabels = _ref.inputLabels;
	
	    var isFinalSubmit = props.state.getIn((0, _path.isFinalSubmitPath)(), false);
	    var assessYear = props.state.getIn((0, _path.dataPath)([_inputsConstant.ASSESS_YEAR]));
	
	    return _react2.default.createElement(
	        "div",
	        { className: "summary--block" },
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-header-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-header-title" },
	                title
	            ),
	            !isFinalSubmit && _react2.default.createElement("img", {
	                className: "summary--block-header-img",
	                src: FORMS_CNFG_GLBL.imgPath + "/edit_blue_icon.svg",
	                onClick: function onClick() {
	                    props.dispatchScrollSummaryToStep(props.state.getIn(_path.ui).keySeq().butLast().last(), "workInfo");
	                },
	                alt: "header-img"
	            })
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "summary--block-content-container" },
	            _react2.default.createElement(
	                "div",
	                { className: "summary--block-content-container-flex" },
	                _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels[_inputsConstant.NATURE_OF_EMPLOYMENT],
	                    value: dropDownValues[_inputsConstant.NATURE_OF_EMPLOYMENT][natureOfEmployment]
	                }),
	                ePassExpiry && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.EPASS_EXPIRY], value: ePassExpiry }),
	                jobTitle && _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels[_inputsConstant.OCCUPATION],
	                    value: dropDownValues[_inputsConstant.OCCUPATION][jobTitle]
	                }),
	                nameOfEmployer ? _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.NAME_OF_EMPLOYER], value: nameOfEmployer }) : null,
	                company ? _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: inputLabels[_inputsConstant.COMPANY], value: company }) : null,
	                industry ? _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels[_inputsConstant.INDUSTRY],
	                    value: dropDownValues[_inputsConstant.INDUSTRY][industry]
	                }) : null,
	                lengthOfEmploymentYears ? _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels["lengthOfEmploymentYears"],
	                    value: lengthOfEmploymentYears
	                }) : null,
	                lengthOfEmploymentMonths ? _react2.default.createElement(_SummaryBlockSimpleElement2.default, {
	                    label: inputLabels["lengthOfEmploymentMonths"],
	                    value: lengthOfEmploymentMonths
	                }) : null,
	                annualIncome && _react2.default.createElement(_SummaryBlockSimpleElement2.default, { label: assessYear && assessYear !== "" ? inputLabels[_inputsConstant.ANNUAL_INCOME] + " for " + assessYear : inputLabels[_inputsConstant.ANNUAL_INCOME], value: annualIncome })
	            )
	        )
	    );
	}; /* global FORMS_CNFG_GLBL */
	
	
	SummaryBlockWorkInfo.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    FormConfig: _react.PropTypes.func.isRequired,
	    dispatchScrollSummaryToStep: _react.PropTypes.func.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchScrollSummaryToStep: (0, _redux.bindActionCreators)(_actionCreators.scrollSummaryToStep, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(SummaryBlockWorkInfo);

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _redux = __webpack_require__(6);
	
	var _reactRedux = __webpack_require__(7);
	
	var _immutable = __webpack_require__(13);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _FileUpload = __webpack_require__(127);
	
	var _FileUpload2 = _interopRequireDefault(_FileUpload);
	
	var _FileUploadDefault = __webpack_require__(348);
	
	var _FileUploadDefault2 = _interopRequireDefault(_FileUploadDefault);
	
	var _Accordian = __webpack_require__(19);
	
	var _Accordian2 = _interopRequireDefault(_Accordian);
	
	var _ToggleInput = __webpack_require__(37);
	
	var _ToggleInput2 = _interopRequireDefault(_ToggleInput);
	
	var _TextInput = __webpack_require__(21);
	
	var _TextInput2 = _interopRequireDefault(_TextInput);
	
	__webpack_require__(501);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _utils = __webpack_require__(9);
	
	var _inputValidation = __webpack_require__(18);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var UploadIdDocs = function UploadIdDocs(props) {
	    var isSG = props.state.getIn((0, _path.dataPath)([_inputsConstant.IS_SG]), true);
	    return isSG ? _react2.default.createElement(
	        "div",
	        { className: "upload-document--info-separator" },
	        _react2.default.createElement(
	            "div",
	            { className: "upload-document--info-separator" },
	            _react2.default.createElement(_FileUpload2.default, Object.assign({
	                title: props.inputLabels[_inputsConstant.UPLOAD_NRIC_FRONT],
	                description: props.inputDescriptions[_inputsConstant.UPLOAD_NRIC_FRONT],
	                inputLabel: "Upload a file",
	                inputID: _inputsConstant.UPLOAD_NRIC_FRONT
	            }, props)),
	            _react2.default.createElement("div", null),
	            _react2.default.createElement(_FileUpload2.default, Object.assign({
	                title: props.inputLabels[_inputsConstant.UPLOAD_NRIC_BACK],
	                description: props.inputDescriptions[_inputsConstant.UPLOAD_NRIC_BACK],
	                inputLabel: "Upload a file",
	                inputID: _inputsConstant.UPLOAD_NRIC_BACK
	            }, props))
	        )
	    ) : _react2.default.createElement(
	        "div",
	        { className: "upload-document--info-separator" },
	        _react2.default.createElement(_FileUpload2.default, Object.assign({
	            title: props.inputLabels[_inputsConstant.UPLOAD_PASSPORT],
	            description: props.inputDescriptions[_inputsConstant.UPLOAD_PASSPORT],
	            inputLabel: "Upload a file",
	            inputID: _inputsConstant.UPLOAD_PASSPORT
	        }, props)),
	        _react2.default.createElement(_FileUpload2.default, Object.assign({
	            title: props.inputLabels[_inputsConstant.UPLOAD_WORK_PERMIT],
	            description: props.inputDescriptions[_inputsConstant.UPLOAD_WORK_PERMIT],
	            inputLabel: "Upload a file",
	            inputID: _inputsConstant.UPLOAD_WORK_PERMIT
	        }, props))
	    );
	};
	
	var UploadDocuments = function (_Component) {
	    _inherits(UploadDocuments, _Component);
	
	    function UploadDocuments() {
	        _classCallCheck(this, UploadDocuments);
	
	        return _possibleConstructorReturn(this, (UploadDocuments.__proto__ || Object.getPrototypeOf(UploadDocuments)).apply(this, arguments));
	    }
	
	    _createClass(UploadDocuments, [{
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            var FormConfig = props.FormConfig;
	            var productsConfig = props.productsConfig;
	
	            var productIds = props.state.getIn((0, _path.productIdPath)());
	            var structure = props.state.getIn((0, _path.uiStepPath)(props.step));
	            var uploadDocuments = new FormConfig(props.step);
	            var inputLabels = uploadDocuments.inputLabels;
	            var title = uploadDocuments.title;
	            var subtitle = uploadDocuments.subtitle;
	            var inputDescriptions = uploadDocuments.inputDescriptions;
	
	            var _uploadDocuments$getP = uploadDocuments.getPostMessage();
	
	            var _uploadDocuments$getP2 = _slicedToArray(_uploadDocuments$getP, 2);
	
	            var postMessage = _uploadDocuments$getP2[0];
	            var postMessageContent = _uploadDocuments$getP2[1];
	
	            var allowCPFOnline = props.state.getIn((0, _path.dataPath)([_inputsConstant.SUBMIT_CPF_ONLINE]), false);
	            var IC = props.state.getIn((0, _path.dataPath)([_inputsConstant.NRIC]));
	            var isMyInfo = props.state.getIn((0, _path.myInfoFlagPath)(), false);
	            var haveCPF = props.state.getIn((0, _path.cpfDataPath)(), false);
	            var employmentStatus = props.state.getIn((0, _path.dataPath)([_inputsConstant.NATURE_OF_EMPLOYMENT]));
	            var isOtherMail = props.state.getIn(["data", _inputsConstant.SAME_HOME_AND_MAILING_ADD], false);
	            var showUploadCpf = haveCPF && employmentStatus === "SELFE" || !haveCPF && ((0, _utils.sellingCards)(productIds, productsConfig) || (0, _utils.sellingCashPlus)(productIds, productsConfig) || (0, _utils.sellinBalanceTransfer)(productIds, productsConfig) || (0, _utils.sellinPersonalLoan)(productIds, productsConfig));
	            var isSG = props.state.getIn((0, _path.dataPath)([_inputsConstant.IS_SG]), true);
	            var isPR = isSG && props.state.getIn((0, _path.dataPath)([_inputsConstant.NATIONALITY])) !== "SG";
	            var residentialStatus = props.state.getIn((0, _path.dataPath)(["residentialStatus"]));
	            var isShowUploadNRICBack = props.state.getIn(["data", _inputsConstant.SUBMIT_PR_1_TO_2_YEAR], false);
	            var cpfData = props.state.getIn((0, _path.cpfDataPath)(), (0, _immutable.List)());
	            var anualIncome = Number(props.state.getIn((0, _path.dataPath)([_inputsConstant.ANNUAL_INCOME]), ""));
	            var isShowUploadIncome = anualIncome === 0 && (cpfData.count() === 0 || Number(cpfData.first().get("amount")) === 0) ? true : false;
	            var dateOfBirth = props.state.getIn((0, _path.dataPath)([_inputsConstant.DATE_OF_BIRTH]));
	            return _react2.default.createElement(
	                "div",
	                null,
	                _react2.default.createElement(
	                    "h1",
	                    null,
	                    title
	                ),
	                _react2.default.createElement("div", { className: "uob-form-separator" }),
	                _react2.default.createElement(
	                    "p",
	                    null,
	                    subtitle
	                ),
	                !isMyInfo && isSG && _react2.default.createElement(
	                    "div",
	                    { className: "upload-document--info-separator" },
	                    _react2.default.createElement(_FileUpload2.default, Object.assign({
	                        title: inputLabels[_inputsConstant.UPLOAD_NRIC_FRONT],
	                        description: inputDescriptions[_inputsConstant.UPLOAD_NRIC_FRONT],
	                        inputLabel: "Upload a file",
	                        inputID: _inputsConstant.UPLOAD_NRIC_FRONT,
	                        IC: IC
	                    }, props))
	                ),
	                !isMyInfo && isSG && _react2.default.createElement(
	                    "div",
	                    { className: "upload-document--info-separator" },
	                    _react2.default.createElement(_FileUpload2.default, Object.assign({
	                        title: inputLabels[_inputsConstant.UPLOAD_NRIC_BACK],
	                        description: inputDescriptions[_inputsConstant.UPLOAD_NRIC_BACK],
	                        inputLabel: "Upload a file",
	                        inputID: _inputsConstant.UPLOAD_NRIC_BACK,
	                        IC: IC
	                    }, props))
	                ),
	                !isMyInfo && isPR && _react2.default.createElement(
	                    "div",
	                    { className: "upload-document--info-separator" },
	                    _react2.default.createElement(_TextInput2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.NRIC_ISSUE_DATE],
	                        inputID: _inputsConstant.NRIC_ISSUE_DATE,
	                        validators: [_inputValidation.validateFilledInput, _inputValidation.checkDateOfBirthFormat, _inputValidation.checkDateFormat, (0, _inputValidation.compareWithDate)(dateOfBirth, "birthday")]
	                    }, props, {
	                        dateFormat: true
	                    }))
	                ),
	                !isMyInfo && !isSG && _react2.default.createElement(
	                    "div",
	                    null,
	                    _react2.default.createElement(
	                        "div",
	                        { className: "upload-document--info-separator" },
	                        _react2.default.createElement(_FileUpload2.default, Object.assign({
	                            title: inputLabels[_inputsConstant.UPLOAD_PASSPORT],
	                            description: inputDescriptions[_inputsConstant.UPLOAD_PASSPORT],
	                            inputLabel: "Upload a file",
	                            inputID: _inputsConstant.UPLOAD_PASSPORT,
	                            IC: IC
	                        }, props))
	                    ),
	                    _react2.default.createElement(
	                        "div",
	                        { className: "upload-document--info-separator" },
	                        _react2.default.createElement(_FileUpload2.default, Object.assign({
	                            title: inputLabels[_inputsConstant.UPLOAD_PASSPORT_BACK],
	                            description: inputDescriptions[_inputsConstant.UPLOAD_PASSPORT_BACK],
	                            inputLabel: "Upload a file",
	                            inputID: _inputsConstant.UPLOAD_PASSPORT_BACK,
	                            IC: IC
	                        }, props))
	                    )
	                ),
	                (showUploadCpf || isOtherMail) && _react2.default.createElement(
	                    "div",
	                    { className: "upload-document--info-separator upload-document--components-merger" },
	                    _react2.default.createElement(
	                        "div",
	                        null,
	                        isOtherMail || structure.has(_inputsConstant.UPLOAD_BILLING_PROOF) || !isSG ? _react2.default.createElement(_FileUpload2.default, Object.assign({
	                            title: inputLabels[_inputsConstant.UPLOAD_BILLING_PROOF],
	                            description: inputDescriptions[_inputsConstant.UPLOAD_BILLING_PROOF],
	                            inputLabel: "Upload a file",
	                            inputID: _inputsConstant.UPLOAD_BILLING_PROOF
	                        }, props)) : null
	                    )
	                ),
	                (showUploadCpf || isShowUploadIncome) && _react2.default.createElement(
	                    "div",
	                    { className: "upload-document--info-separator upload-document--components-merger" },
	                    _react2.default.createElement(
	                        "div",
	                        null,
	                        !isMyInfo && isSG && _react2.default.createElement(_ToggleInput2.default, Object.assign({
	                            description: inputLabels[_inputsConstant.SUBMIT_CPF_ONLINE],
	                            inputID: _inputsConstant.SUBMIT_CPF_ONLINE
	                        }, props)),
	                        !allowCPFOnline && _react2.default.createElement(_FileUpload2.default, Object.assign({
	                            title: inputLabels[_inputsConstant.UPLOAD_INCOME_PROOF],
	                            description: isSG ? inputDescriptions[_inputsConstant.UPLOAD_INCOME_PROOF] : inputDescriptions["uploadIncomeProofForeigner"],
	                            inputLabel: "Upload a file",
	                            inputID: _inputsConstant.UPLOAD_INCOME_PROOF
	                        }, props))
	                    )
	                ),
	                isMyInfo && isSG && isShowUploadIncome && _react2.default.createElement(
	                    "div",
	                    { className: "upload-document--info-separator" },
	                    _react2.default.createElement(_FileUpload2.default, Object.assign({
	                        title: inputLabels[_inputsConstant.UPLOAD_EMPLOYMENT_PROOF],
	                        description: inputDescriptions[_inputsConstant.UPLOAD_EMPLOYMENT_PROOF],
	                        inputLabel: "Upload a file",
	                        inputID: _inputsConstant.UPLOAD_EMPLOYMENT_PROOF
	                    }, props))
	                ),
	                !isMyInfo && !isSG && _react2.default.createElement(
	                    "div",
	                    { className: "upload-document--info-separator" },
	                    _react2.default.createElement(_FileUpload2.default, Object.assign({
	                        title: inputLabels[_inputsConstant.UPLOAD_WORK_PERMIT],
	                        description: inputDescriptions[_inputsConstant.UPLOAD_WORK_PERMIT],
	                        inputLabel: "Upload a file",
	                        inputID: _inputsConstant.UPLOAD_WORK_PERMIT,
	                        IC: IC
	                    }, props))
	                ),
	                residentialStatus === "P" && // P is Singapore Permanant
	                _react2.default.createElement(
	                    "div",
	                    null,
	                    _react2.default.createElement(
	                        "div",
	                        { className: "upload-document--info-separator" },
	                        _react2.default.createElement(_ToggleInput2.default, Object.assign({
	                            description: inputLabels[_inputsConstant.SUBMIT_PR_1_TO_2_YEAR],
	                            inputID: _inputsConstant.SUBMIT_PR_1_TO_2_YEAR
	                        }, props))
	                    ),
	                    isShowUploadNRICBack && _react2.default.createElement(
	                        "div",
	                        null,
	                        _react2.default.createElement(
	                            "div",
	                            { className: "upload-document--info-separator" },
	                            _react2.default.createElement(_FileUploadDefault2.default, Object.assign({
	                                title: inputLabels[_inputsConstant.UPLOAD_NRIC_BACK],
	                                description: inputDescriptions[_inputsConstant.UPLOAD_NRIC_BACK],
	                                inputLabel: "Upload a file",
	                                inputID: _inputsConstant.UPLOAD_NRIC_BACK,
	                                IC: IC
	                            }, props))
	                        ),
	                        _react2.default.createElement(
	                            "div",
	                            { className: "upload-document--info-separator" },
	                            _react2.default.createElement(_TextInput2.default, Object.assign({
	                                inputLabel: inputLabels[_inputsConstant.NRIC_ISSUE_DATE],
	                                inputID: _inputsConstant.NRIC_ISSUE_DATE,
	                                validators: [_inputValidation.validateFilledInput, _inputValidation.checkDateOfBirthFormat, _inputValidation.checkDateFormat, _inputValidation.checkDateNotOverTodayDate, (0, _inputValidation.compareWithDate)(dateOfBirth, "birthday")]
	                            }, props, {
	                                dateFormat: true
	                            }))
	                        )
	                    )
	                ),
	                postMessage && _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_Accordian2.default, Object.assign({}, props, { title: postMessage, content: postMessageContent, inputID: "default" }))
	                )
	            );
	        }
	    }]);
	
	    return UploadDocuments;
	}(_react.Component);
	
	UploadIdDocs.propTypes = {
	    IC: _react.PropTypes.string.isRequired,
	    inputLabels: _react.PropTypes.object.isRequired,
	    inputDescriptions: _react.PropTypes.object.isRequired,
	    state: _reactImmutableProptypes2.default.map.isRequired
	};
	
	UploadDocuments.propTypes = {};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchAddValidFlag: (0, _redux.bindActionCreators)(_actionCreators.addValidFlag, dispatch),
	        dispatchOnCheck: (0, _redux.bindActionCreators)(_actionCreators.onCheck, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(UploadDocuments);

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactImmutableProptypes = __webpack_require__(5);
	
	var _reactImmutableProptypes2 = _interopRequireDefault(_reactImmutableProptypes);
	
	var _redux = __webpack_require__(6);
	
	var _reactRedux = __webpack_require__(7);
	
	var _actionCreators = __webpack_require__(3);
	
	var _TextInput = __webpack_require__(21);
	
	var _TextInput2 = _interopRequireDefault(_TextInput);
	
	var _ReadOnlyTextInput = __webpack_require__(53);
	
	var _ReadOnlyTextInput2 = _interopRequireDefault(_ReadOnlyTextInput);
	
	var _CpfTable = __webpack_require__(335);
	
	var _CpfTable2 = _interopRequireDefault(_CpfTable);
	
	var _Dropdown = __webpack_require__(34);
	
	var _Dropdown2 = _interopRequireDefault(_Dropdown);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _common = __webpack_require__(65);
	
	var _inputValidation = __webpack_require__(18);
	
	__webpack_require__(502);
	
	var _path = __webpack_require__(4);
	
	var _utils = __webpack_require__(9);
	
	var _immutable = __webpack_require__(13);
	
	var _Accordian = __webpack_require__(19);
	
	var _Accordian2 = _interopRequireDefault(_Accordian);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var CardsVariation = function CardsVariation(props) {
	    var FormConfig = props.FormConfig;
	
	    var localAddress = new FormConfig(props.step);
	    var inputLabels = localAddress.inputLabels;
	
	    var statusOfEmployment = props.state.getIn(["data", _inputsConstant.NATURE_OF_EMPLOYMENT], "NOINC");
	    var isUnemployed = statusOfEmployment === "NOINC" || statusOfEmployment === "" || statusOfEmployment === "STUDT";
	    return _react2.default.createElement(
	        "div",
	        null,
	        !isUnemployed && _react2.default.createElement(
	            "div",
	            { className: "work-info--separator" },
	            _react2.default.createElement(
	                "div",
	                { className: "work-info--length-of-employment-container" },
	                _react2.default.createElement(
	                    "div",
	                    { style: { flex: "1" } },
	                    _react2.default.createElement(_TextInput2.default, Object.assign({}, props, {
	                        inputLabel: inputLabels[_inputsConstant.LENGTH_OF_EMPLOYMENT_YEARS],
	                        inputID: _inputsConstant.LENGTH_OF_EMPLOYMENT_YEARS,
	                        validators: [_inputValidation.validateFilledInput, _inputValidation.checkNumbers, (0, _inputValidation.checkMaxSize)(2)]
	                    }))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "work-info--length-of-employment-dash" },
	                    " -"
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { style: { flex: "1" } },
	                    _react2.default.createElement(_TextInput2.default, Object.assign({}, props, {
	                        inputLabel: inputLabels[_inputsConstant.LENGTH_OF_EMPLOYMENT_MONTHS],
	                        inputID: _inputsConstant.LENGTH_OF_EMPLOYMENT_MONTHS,
	                        validators: [_inputValidation.validateFilledInput, _inputValidation.checkNumbers, _inputValidation.checkMaxMonths, (0, _inputValidation.checkMaxSize)(2)]
	                    }))
	                )
	            )
	        )
	    );
	};
	
	var WorkInfo = function (_Component) {
	    _inherits(WorkInfo, _Component);
	
	    function WorkInfo() {
	        _classCallCheck(this, WorkInfo);
	
	        return _possibleConstructorReturn(this, (WorkInfo.__proto__ || Object.getPrototypeOf(WorkInfo)).apply(this, arguments));
	    }
	
	    _createClass(WorkInfo, [{
	        key: "render",
	        value: function render() {
	            var props = this.props;
	            var FormConfig = props.FormConfig;
	            var productsConfig = props.productsConfig;
	
	            var structure = props.state.getIn((0, _path.uiStepPath)(props.step));
	            var workInfo = new FormConfig(props.step);
	            var inputLabels = workInfo.inputLabels;
	            var title = workInfo.title;
	            var subtitle = workInfo.subtitle;
	            var inputValues = workInfo.inputValues;
	
	            var _workInfo$getPostMess = workInfo.getPostMessage();
	
	            var _workInfo$getPostMess2 = _slicedToArray(_workInfo$getPostMess, 2);
	
	            var postMessage = _workInfo$getPostMess2[0];
	            var postMessageContent = _workInfo$getPostMess2[1];
	
	            var isNameOfEmployerReadOnly = props.state.getIn([].concat(_toConsumableArray((0, _path.readOnlyPath)()), [_inputsConstant.NAME_OF_EMPLOYER]));
	            var productIds = props.state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	            var cpfData = props.state.getIn((0, _path.cpfDataPath)(), (0, _immutable.List)());
	            var natureOfEmployment = props.state.getIn((0, _path.dataPath)([_inputsConstant.NATURE_OF_EMPLOYMENT]), "");
	            var isSelfEmployed = natureOfEmployment === "SELFE";
	            var isSalaried = natureOfEmployment === "salaried";
	            var isAnnualIncomeNotAvail = props.state.getIn((0, _path.annualIncomeNotAvailFlagPath)(), false);
	            var isSG = props.state.getIn((0, _path.dataPath)([_inputsConstant.IS_SG]), true);
	            var assessYear = props.state.getIn((0, _path.dataPath)([_inputsConstant.ASSESS_YEAR]));
	            var isMyInfoFlow = props.state.getIn((0, _path.myInfoFlagPath)());
	            return _react2.default.createElement(
	                "div",
	                null,
	                _react2.default.createElement(
	                    "h1",
	                    null,
	                    title
	                ),
	                _react2.default.createElement("div", { className: "uob-form-separator" }),
	                _react2.default.createElement(
	                    "p",
	                    null,
	                    subtitle
	                ),
	                _react2.default.createElement(
	                    "div",
	                    null,
	                    _react2.default.createElement(_Dropdown2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.NATURE_OF_EMPLOYMENT],
	                        inputID: _inputsConstant.NATURE_OF_EMPLOYMENT,
	                        dropdownItems: inputValues[_inputsConstant.NATURE_OF_EMPLOYMENT]
	                    }, props))
	                ),
	                !isSG && (isSelfEmployed || isSalaried) && _react2.default.createElement(
	                    "div",
	                    { className: "work-info--separator" },
	                    _react2.default.createElement(_TextInput2.default, Object.assign({
	                        inputLabel: inputLabels.ePassExpiry,
	                        inputID: _inputsConstant.EPASS_EXPIRY,
	                        validators: [_inputValidation.validateFilledInput, _inputValidation.checkDateOfBirthFormat, _inputValidation.checkDateFormat, _inputValidation.checkDateIsOverTodayDate, (0, _inputValidation.expiredMonth)(6)]
	                    }, props, {
	                        dateFormat: true
	                    }))
	                ),
	                structure.has(_inputsConstant.OCCUPATION) ? _react2.default.createElement(
	                    "div",
	                    { className: "work-info--separator" },
	                    _react2.default.createElement(_Dropdown2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.OCCUPATION],
	                        inputID: _inputsConstant.OCCUPATION,
	                        dropdownItems: inputValues[_inputsConstant.OCCUPATION]
	                    }, props))
	                ) : null,
	                structure.has(_inputsConstant.NAME_OF_EMPLOYER) || isNameOfEmployerReadOnly ? _react2.default.createElement(
	                    "div",
	                    { className: "work-info--separator" },
	                    _react2.default.createElement(_TextInput2.default, Object.assign({
	                        inputLabel: isSelfEmployed ? inputLabels[_inputsConstant.COMPANY] : inputLabels[_inputsConstant.NAME_OF_EMPLOYER],
	                        inputID: _inputsConstant.NAME_OF_EMPLOYER,
	                        readOnly: isNameOfEmployerReadOnly,
	                        validators: [_inputValidation.validateFilledInput, (0, _inputValidation.checkMaxSize)(35)]
	                    }, props))
	                ) : null,
	                structure.has(_inputsConstant.INDUSTRY) ? _react2.default.createElement(
	                    "div",
	                    { className: "work-info--separator" },
	                    _react2.default.createElement(_Dropdown2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.INDUSTRY],
	                        inputID: _inputsConstant.INDUSTRY,
	                        dropdownItems: inputValues[_inputsConstant.INDUSTRY]
	                    }, props))
	                ) : null,
	                !isSG && !isMyInfoFlow && _react2.default.createElement(
	                    "div",
	                    { className: "work-info--separator" },
	                    _react2.default.createElement(_Dropdown2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.TYPE_OF_WORK_PASS],
	                        inputID: _inputsConstant.TYPE_OF_WORK_PASS,
	                        dropdownItems: inputValues[_inputsConstant.TYPE_OF_WORK_PASS]
	                    }, props))
	                ),
	                _react2.default.createElement(
	                    "div",
	                    { className: "work-info--separator" },
	                    !isAnnualIncomeNotAvail ? _react2.default.createElement(_TextInput2.default, Object.assign({
	                        validators: [_inputValidation.validateFilledInput, _inputValidation.checkNumbers, (0, _inputValidation.checkAnualIncome)(_common.ANUAL_INCOME_CARDS_TYPE, productIds.first(), _common.MIN_ANUAL_INCOME), (0, _inputValidation.checkMaxSize)(7)],
	                        inputLabel: assessYear && assessYear !== "" ? inputLabels[_inputsConstant.ANNUAL_INCOME] + " for " + assessYear : inputLabels[_inputsConstant.ANNUAL_INCOME],
	                        inputID: _inputsConstant.ANNUAL_INCOME
	                    }, props)) : _react2.default.createElement(_ReadOnlyTextInput2.default, Object.assign({
	                        inputLabel: inputLabels[_inputsConstant.ANNUAL_INCOME],
	                        value: inputLabels["notAvailable"]
	                    }, props))
	                ),
	                (0, _utils.sellingCards)(productIds, productsConfig) || (0, _utils.sellingCashPlus)(productIds, productsConfig) || (0, _utils.sellinBalanceTransfer)(productIds, productsConfig) || (0, _utils.sellinPersonalLoan)(productIds, productsConfig) ? _react2.default.createElement(CardsVariation, props) : null,
	                cpfData.count() ? _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_CpfTable2.default, Object.assign({
	                        colTitles: ["Date", "Amount", "Month", "Employer"],
	                        tableContent: cpfData.toJS()
	                    }, props))
	                ) : null,
	                postMessage && _react2.default.createElement(
	                    "div",
	                    { className: "basicInfoSeparator" },
	                    _react2.default.createElement(_Accordian2.default, Object.assign({}, props, { title: postMessage, content: postMessageContent, inputID: "default" }))
	                )
	            );
	        }
	    }]);
	
	    return WorkInfo;
	}(_react.Component);
	
	CardsVariation.propTypes = {
	    FormConfig: _react.PropTypes.func.isRequired,
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired
	};
	
	WorkInfo.propTypes = {
	    state: _reactImmutableProptypes2.default.map.isRequired,
	    step: _react.PropTypes.string.isRequired
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	    return {
	        dispatchAddValidFlag: (0, _redux.bindActionCreators)(_actionCreators.addValidFlag, dispatch)
	    };
	};
	
	exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(WorkInfo);

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BasicInfo = __webpack_require__(368);
	
	var _BasicInfo2 = _interopRequireDefault(_BasicInfo);
	
	var _Otp = __webpack_require__(375);
	
	var _Otp2 = _interopRequireDefault(_Otp);
	
	var _PendingApplication = __webpack_require__(376);
	
	var _PendingApplication2 = _interopRequireDefault(_PendingApplication);
	
	var _AccountDetails = __webpack_require__(367);
	
	var _AccountDetails2 = _interopRequireDefault(_AccountDetails);
	
	var _PersonalInfo = __webpack_require__(377);
	
	var _PersonalInfo2 = _interopRequireDefault(_PersonalInfo);
	
	var _HomeMailingAddress = __webpack_require__(372);
	
	var _HomeMailingAddress2 = _interopRequireDefault(_HomeMailingAddress);
	
	var _WorkInfo = __webpack_require__(388);
	
	var _WorkInfo2 = _interopRequireDefault(_WorkInfo);
	
	var _UploadDocuments = __webpack_require__(387);
	
	var _UploadDocuments2 = _interopRequireDefault(_UploadDocuments);
	
	var _IncomeDocuments = __webpack_require__(373);
	
	var _IncomeDocuments2 = _interopRequireDefault(_IncomeDocuments);
	
	var _Declaration = __webpack_require__(370);
	
	var _Declaration2 = _interopRequireDefault(_Declaration);
	
	var _Summary = __webpack_require__(378);
	
	var _Summary2 = _interopRequireDefault(_Summary);
	
	var _DigitalServices = __webpack_require__(371);
	
	var _DigitalServices2 = _interopRequireDefault(_DigitalServices);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var BasicInfoWrapper = function BasicInfoWrapper(props) {
	    return _react2.default.createElement(_BasicInfo2.default, props);
	};
	var OtpWrapper = function OtpWrapper(props) {
	    return _react2.default.createElement(_Otp2.default, props);
	};
	var PendingApplicationWrapper = function PendingApplicationWrapper(props) {
	    return _react2.default.createElement(_PendingApplication2.default, props);
	};
	var AccountDetailsWrapper = function AccountDetailsWrapper(props) {
	    return _react2.default.createElement(_AccountDetails2.default, props);
	};
	var PersonalInfoWrapper = function PersonalInfoWrapper(props) {
	    return _react2.default.createElement(_PersonalInfo2.default, props);
	};
	var HomeMailingAddressWrapper = function HomeMailingAddressWrapper(props) {
	    return _react2.default.createElement(_HomeMailingAddress2.default, props);
	};
	var WorkInfoWrapper = function WorkInfoWrapper(props) {
	    return _react2.default.createElement(_WorkInfo2.default, props);
	};
	var UploadDocumentsWrapper = function UploadDocumentsWrapper(props) {
	    return _react2.default.createElement(_UploadDocuments2.default, props);
	};
	var IncomeDocumentsWrapper = function IncomeDocumentsWrapper(props) {
	    return _react2.default.createElement(_IncomeDocuments2.default, props);
	};
	var DeclarationWrapper = function DeclarationWrapper(props) {
	    return _react2.default.createElement(_Declaration2.default, props);
	};
	var SummaryWrapper = function SummaryWrapper(props) {
	    return _react2.default.createElement(_Summary2.default, props);
	};
	var DigitalServicesWrapper = function DigitalServicesWrapper(props) {
	    return _react2.default.createElement(_DigitalServices2.default, props);
	};
	
	exports.default = {
	    basicInfo: BasicInfoWrapper,
	    otp: OtpWrapper,
	    pendingApplication: PendingApplicationWrapper,
	    accountDetails: AccountDetailsWrapper,
	    personalInfo: PersonalInfoWrapper,
	    homeMailingAddress: HomeMailingAddressWrapper,
	    workInfo: WorkInfoWrapper,
	    uploadDocuments: UploadDocumentsWrapper,
	    incomeDocuments: IncomeDocumentsWrapper,
	    digitalServices: DigitalServicesWrapper,
	    declaration: DeclarationWrapper,
	    summary: SummaryWrapper
	};

/***/ },
/* 390 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/* global FORMS_CNFG_GLBL */
	
	exports.default = [FORMS_CNFG_GLBL.formConfig, FORMS_CNFG_GLBL.productConfig].map(function (url) {
	    return fetch(url).then(function (x) {
	        return x.json();
	    }).then(function (x) {
	        return x;
	    });
	});

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.inputConfig = undefined;
	
	var _utils = __webpack_require__(9);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _actionsConstant = __webpack_require__(22);
	
	var _immutable = __webpack_require__(13);
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var inputConfig = exports.inputConfig = function inputConfig(_ref) {
	    var inputId = _ref.inputId;
	    var step = _ref.step;
	    var value = _ref.value;
	    var type = _ref.type;
	    var currency = _ref.currency;
	    return function (state) {
	        var _reducer;
	
	        var generateNewKey = function generateNewKey() {
	            if (type === _actionsConstant.ACTION_EDIT_INPUT && inputId === _inputsConstant.MAILING_COUNTRY && value !== "SG") {
	                return inputId + ":Others";
	            }
	            if (type === _actionsConstant.ACTION_UPDATE_CURRENCIES) {
	                return inputId;
	            }
	            return inputId && "" + value ? inputId + ":" + value : "";
	        };
	        var reducer = (_reducer = {}, _defineProperty(_reducer, _inputsConstant.NATURE_OF_EMPLOYMENT + ":salaried", function undefined() {
	            return [(0, _utils.addNewInputToState)([_inputsConstant.OCCUPATION, _inputsConstant.NAME_OF_EMPLOYER, _inputsConstant.INDUSTRY])];
	        }), _defineProperty(_reducer, _inputsConstant.NATURE_OF_EMPLOYMENT + ":SELFE", function undefined() {
	            return [(0, _utils.removeInputFromState)([_inputsConstant.OCCUPATION]), (0, _utils.addNewInputToState)([_inputsConstant.INDUSTRY, _inputsConstant.NAME_OF_EMPLOYER])];
	        }), _defineProperty(_reducer, _inputsConstant.NATURE_OF_EMPLOYMENT + ":STUDT", function undefined() {
	            return [(0, _utils.removeInputFromState)([_inputsConstant.OCCUPATION, _inputsConstant.NAME_OF_EMPLOYER, _inputsConstant.INDUSTRY])];
	        }), _defineProperty(_reducer, _inputsConstant.NATURE_OF_EMPLOYMENT + ":NOINC", function undefined() {
	            return [(0, _utils.removeInputFromState)([_inputsConstant.OCCUPATION, _inputsConstant.NAME_OF_EMPLOYER, _inputsConstant.INDUSTRY])];
	        }), _defineProperty(_reducer, _inputsConstant.SAME_HOME_AND_MAILING_ADD + ":true", function undefined() {
	            return [(0, _utils.addNewInputToState)([_inputsConstant.MAILING_POSTAL_CODE])];
	        }), _defineProperty(_reducer, _inputsConstant.SAME_HOME_AND_MAILING_ADD + ":false", function undefined() {
	            return [(0, _utils.removeInputFromState)([_inputsConstant.MAILING_POSTAL_CODE, _inputsConstant.ADDRESS_ONE, _inputsConstant.MAILING_COUNTRY])];
	        }), _defineProperty(_reducer, _inputsConstant.MAILING_COUNTRY + ":Singapore", function undefined() {
	            return [(0, _utils.addNewInputToState)([_inputsConstant.MAILING_POSTAL_CODE]), (0, _utils.removeInputFromState)([_inputsConstant.ADDRESS_ONE])];
	        }), _defineProperty(_reducer, _inputsConstant.MAILING_COUNTRY + ":Others", function undefined() {
	            return [(0, _utils.removeInputFromState)([_inputsConstant.MAILING_POSTAL_CODE]), (0, _utils.addNewInputToState)([_inputsConstant.ADDRESS_ONE])];
	        }), _defineProperty(_reducer, _inputsConstant.CURRENCIES, function () {
	            var currencies = state.getIn(["data", "currencies"], (0, _immutable.Map)());
	
	            return currencies.has(currency) ? [(0, _utils.addNewInputToState)([_inputsConstant.PURPOSE_OF_FUNDS + "-" + currency, _inputsConstant.SOURCE_OF_FUNDS + "-" + currency, _inputsConstant.COUNTRY_OF_FUNDS + "-" + currency])] : [(0, _utils.removeInputFromState)([_inputsConstant.PURPOSE_OF_FUNDS + "-" + currency, _inputsConstant.SOURCE_OF_FUNDS + "-" + currency, _inputsConstant.COUNTRY_OF_FUNDS + "-" + currency])];
	        }), _defineProperty(_reducer, "DEFAULT", function DEFAULT() {
	            return state;
	        }), _reducer);
	        var newKey = generateNewKey();
	        return reducer[newKey] ? (0, _utils.variancePipe)(reducer[newKey](), state, step) : reducer.DEFAULT();
	    };
	};

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _immutable = __webpack_require__(13);
	
	var _inputsConstant = __webpack_require__(10);
	
	exports.default = {
	    CASA: (0, _immutable.OrderedMap)({
	        declaration: (0, _immutable.List)([_inputsConstant.NULL]),
	        basicInfo: (0, _immutable.List)([_inputsConstant.FULL_NAME, _inputsConstant.NRIC, _inputsConstant.EMAIL, _inputsConstant.MOBILE_NUMBER]),
	        pendingApplication: (0, _immutable.List)([_inputsConstant.NULL]),
	        accountDetails: (0, _immutable.List)([_inputsConstant.NULL]),
	        personalInfo: (0, _immutable.List)([_inputsConstant.DATE_OF_BIRTH, _inputsConstant.MARITAL_STATUS, _inputsConstant.NATIONALITY, _inputsConstant.GENDER, _inputsConstant.EDUCATION_LEVEL, _inputsConstant.COUNTRY_OF_BIRTH, _inputsConstant.COUNTRY_OF_RESIDENCE]),
	        homeMailingAddress: (0, _immutable.List)([_inputsConstant.HOME_POSTAL_CODE]),
	        workInfo: (0, _immutable.List)([_inputsConstant.NATURE_OF_EMPLOYMENT, _inputsConstant.ANNUAL_INCOME]),
	        digitalServices: (0, _immutable.List)([_inputsConstant.NULL]),
	        uploadDocuments: (0, _immutable.List)([_inputsConstant.UPLOAD_BILLING_PROOF]),
	        summary: (0, _immutable.List)([_inputsConstant.NULL])
	    }),
	    Card: (0, _immutable.OrderedMap)({
	        basicInfo: (0, _immutable.List)([_inputsConstant.FULL_NAME, _inputsConstant.NRIC, _inputsConstant.EMAIL, _inputsConstant.MOBILE_NUMBER]),
	        otp: (0, _immutable.List)([_inputsConstant.OTP]),
	        pendingApplication: (0, _immutable.List)([_inputsConstant.NULL]),
	        accountDetails: (0, _immutable.List)([_inputsConstant.NULL]),
	        personalInfo: (0, _immutable.List)([_inputsConstant.DATE_OF_BIRTH, _inputsConstant.MARITAL_STATUS, _inputsConstant.NATIONALITY, _inputsConstant.GENDER, _inputsConstant.EDUCATION_LEVEL, _inputsConstant.COUNTRY_OF_BIRTH, _inputsConstant.COUNTRY_OF_RESIDENCE]),
	        homeMailingAddress: (0, _immutable.List)([_inputsConstant.HOME_POSTAL_CODE, _inputsConstant.LENGTH_OF_RESIDENCY_YEARS, _inputsConstant.LENGTH_OF_RESIDENCY_MONTHS, _inputsConstant.RESIDENCE_STATUS, _inputsConstant.PROPERTY_TYPE]),
	        workInfo: (0, _immutable.List)([_inputsConstant.NATURE_OF_EMPLOYMENT, _inputsConstant.ANNUAL_INCOME]),
	        digitalServices: (0, _immutable.List)([_inputsConstant.NULL]),
	        uploadDocuments: (0, _immutable.List)([_inputsConstant.NULL, _inputsConstant.UPLOAD_BILLING_PROOF]),
	        declaration: (0, _immutable.List)([_inputsConstant.NULL]),
	        summary: (0, _immutable.List)([_inputsConstant.NULL])
	    }),
	    balanceTransfer: (0, _immutable.OrderedMap)({
	        basicInfo: (0, _immutable.List)([_inputsConstant.FULL_NAME, _inputsConstant.NRIC, _inputsConstant.EMAIL, _inputsConstant.MOBILE_NUMBER]),
	        otp: (0, _immutable.List)([_inputsConstant.OTP]),
	        pendingApplication: (0, _immutable.List)([_inputsConstant.NULL]),
	        accountDetails: (0, _immutable.List)([_inputsConstant.NULL]),
	        personalInfo: (0, _immutable.List)([_inputsConstant.DATE_OF_BIRTH, _inputsConstant.MARITAL_STATUS, _inputsConstant.NATIONALITY, _inputsConstant.GENDER, _inputsConstant.EDUCATION_LEVEL, _inputsConstant.COUNTRY_OF_BIRTH, _inputsConstant.COUNTRY_OF_RESIDENCE]),
	        homeMailingAddress: (0, _immutable.List)([_inputsConstant.HOME_POSTAL_CODE]),
	        workInfo: (0, _immutable.List)([_inputsConstant.NATURE_OF_EMPLOYMENT, _inputsConstant.ANNUAL_INCOME]),
	        digitalServices: (0, _immutable.List)([_inputsConstant.NULL]),
	        uploadDocuments: (0, _immutable.List)([_inputsConstant.NULL, _inputsConstant.UPLOAD_BILLING_PROOF]),
	        declaration: (0, _immutable.List)([_inputsConstant.NULL]),
	        summary: (0, _immutable.List)([_inputsConstant.NULL])
	    }),
	    personalLoan: (0, _immutable.OrderedMap)({
	        basicInfo: (0, _immutable.List)([_inputsConstant.FULL_NAME, _inputsConstant.NRIC, _inputsConstant.EMAIL, _inputsConstant.MOBILE_NUMBER]),
	        otp: (0, _immutable.List)([_inputsConstant.OTP]),
	        pendingApplication: (0, _immutable.List)([_inputsConstant.NULL]),
	        accountDetails: (0, _immutable.List)([_inputsConstant.NULL]),
	        personalInfo: (0, _immutable.List)([_inputsConstant.DATE_OF_BIRTH, _inputsConstant.MARITAL_STATUS, _inputsConstant.NATIONALITY, _inputsConstant.GENDER, _inputsConstant.EDUCATION_LEVEL, _inputsConstant.COUNTRY_OF_BIRTH, _inputsConstant.COUNTRY_OF_RESIDENCE]),
	        homeMailingAddress: (0, _immutable.List)([_inputsConstant.HOME_POSTAL_CODE]),
	        workInfo: (0, _immutable.List)([_inputsConstant.NATURE_OF_EMPLOYMENT, _inputsConstant.ANNUAL_INCOME]),
	        digitalServices: (0, _immutable.List)([_inputsConstant.NULL]),
	        uploadDocuments: (0, _immutable.List)([_inputsConstant.NULL, _inputsConstant.UPLOAD_BILLING_PROOF]),
	        declaration: (0, _immutable.List)([_inputsConstant.NULL]),
	        summary: (0, _immutable.List)([_inputsConstant.NULL])
	    }),
	    "CASH+": (0, _immutable.OrderedMap)({
	        basicInfo: (0, _immutable.List)([_inputsConstant.FULL_NAME, _inputsConstant.NRIC, _inputsConstant.EMAIL, _inputsConstant.MOBILE_NUMBER]),
	        otp: (0, _immutable.List)([_inputsConstant.OTP]),
	        pendingApplication: (0, _immutable.List)([_inputsConstant.NULL]),
	        accountDetails: (0, _immutable.List)([_inputsConstant.NULL]),
	        personalInfo: (0, _immutable.List)([_inputsConstant.DATE_OF_BIRTH, _inputsConstant.MARITAL_STATUS, _inputsConstant.NATIONALITY, _inputsConstant.GENDER, _inputsConstant.EDUCATION_LEVEL, _inputsConstant.COUNTRY_OF_BIRTH, _inputsConstant.COUNTRY_OF_RESIDENCE]),
	        homeMailingAddress: (0, _immutable.List)([_inputsConstant.HOME_POSTAL_CODE]),
	        workInfo: (0, _immutable.List)([_inputsConstant.NATURE_OF_EMPLOYMENT, _inputsConstant.ANNUAL_INCOME]),
	        digitalServices: (0, _immutable.List)([_inputsConstant.NULL]),
	        uploadDocuments: (0, _immutable.List)([_inputsConstant.NULL, _inputsConstant.UPLOAD_BILLING_PROOF]),
	        declaration: (0, _immutable.List)([_inputsConstant.NULL]),
	        summary: (0, _immutable.List)([_inputsConstant.NULL])
	    })
	};

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(74);
	
	var _App = __webpack_require__(332);
	
	var _App2 = _interopRequireDefault(_App);
	
	__webpack_require__(504);
	
	var _utils = __webpack_require__(9);
	
	var _getConfig = __webpack_require__(390);
	
	var _getConfig2 = _interopRequireDefault(_getConfig);
	
	var _actionCreators = __webpack_require__(3);
	
	var _store = __webpack_require__(132);
	
	var _store2 = _interopRequireDefault(_store);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	Promise.all(_getConfig2.default).then(function (_ref) {
	    var _ref2 = _slicedToArray(_ref, 2);
	
	    var formData = _ref2[0];
	    var productData = _ref2[1];
	
	    _store2.default.dispatch((0, _actionCreators.getMyInfo)(productData, formData));
	    (0, _reactDom.render)(_react2.default.createElement(_App2.default, { FormConfig: (0, _utils.createFormClass)(formData), productConfig: productData, formData: formData }), document.getElementById("root"));
	});
	
	if (false) {
	    module.hot.accept("./components/App", function () {
	        var NextApp = require("./components/App").default;
	        (0, _reactDom.render)(_react2.default.createElement(NextApp, null), document.getElementById("root"));
	    });
	}
	
	(function (d, s, id) {
	    var js = void 0;
	    var fjs = d.getElementsByTagName("body")[0];
	    if (d.getElementById(id)) {
	        return;
	    }
	    js = d.createElement(s);
	    js.id = id;
	    js.onload = function () {
	        // remote script has loaded
	    };
	    js.src = "/applyWith/pixel.js";
	    fjs.insertBefore(js, fjs.childNodes[0]);
	})(document, "script", "pixel-js");

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _utils = __webpack_require__(9);
	
	var apiMiddleware = function apiMiddleware(apiFlow) {
	    return function (_ref) {
	        var dispatch = _ref.dispatch;
	        var getState = _ref.getState;
	        return function (next) {
	            return function (action) {
	                if (action.async) {
	                    var _createTypes = (0, _utils.createTypes)(action.type);
	
	                    var _createTypes2 = _slicedToArray(_createTypes, 4);
	
	                    var pendingType = _createTypes2[0];
	                    var successType = _createTypes2[1];
	                    var errorType = _createTypes2[2];
	                    var loadingType = _createTypes2[3];
	                    var _ref2 = [(0, _utils.createActions)(action, pendingType), function (data) {
	                        return dispatch(Object.assign({}, (0, _utils.createActions)(action, successType), { data: data }));
	                    }, function (error) {
	                        return dispatch(Object.assign({}, (0, _utils.createActions)(action, errorType), { error: error }));
	                    }, function (loadingData) {
	                        return dispatch(Object.assign({}, (0, _utils.createActions)(action, loadingType), { loadingData: loadingData }));
	                    }];
	                    var pendingAction = _ref2[0];
	                    var successDispatch = _ref2[1];
	                    var errorDispatch = _ref2[2];
	                    var loadingDispatch = _ref2[3];
	
	                    next(pendingAction);
	                    return apiFlow(action, successDispatch, errorDispatch, getState, dispatch, loadingDispatch);
	                }
	                return next(action);
	            };
	        };
	    };
	};
	exports.default = apiMiddleware;

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _reactRouterRedux = __webpack_require__(80);
	
	var _utils = __webpack_require__(9);
	
	var _actionsConstant = __webpack_require__(22);
	
	var customRouterMiddleware = function customRouterMiddleware(_ref) {
	    var dispatch = _ref.dispatch;
	    return function (next) {
	        return function (action) {
	            if (action.type === _actionsConstant.ACTION_SUBMIT_FULL_APPLICATION_SUCCESS) {
	                try {
	                    document.body.style.position = "relative";
	                } catch (err) {
	                    //
	                }
	                dispatch((0, _reactRouterRedux.push)((0, _utils.detectPathName)() + "congratulation"));
	            }
	            return next(action);
	        };
	    };
	};
	exports.default = customRouterMiddleware;

/***/ },
/* 396 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// import {ERROR} from "../constants/actionsConstant";
	
	var errorMiddleware = function errorMiddleware() {
	    return function (next) {
	        return function (action) {
	            // if (action.type.includes(ERROR) && action.type.length > 5) {
	            //     const genericError = {...action, type: ERROR};
	            //     dispatch(genericError);
	            // }
	            return next(action);
	        };
	    };
	};
	exports.default = errorMiddleware;

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _actionsConstant = __webpack_require__(22);
	
	var _actionCreators = __webpack_require__(3);
	
	var getEncryptionParamsMiddleware = function getEncryptionParamsMiddleware(_ref) {
	    var dispatch = _ref.dispatch;
	    return function (next) {
	        return function (action) {
	            if (action.type === _actionsConstant.ACTION_POST_PARTIAL_APPLICATION_SUCCESS && action.currentStep === "digitalServices") {
	                next(action);
	                return dispatch((0, _actionCreators.getEncryptionParams)(action.nextStep));
	            }
	            return next(action);
	        };
	    };
	};
	
	exports.default = getEncryptionParamsMiddleware;

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _actionsConstant = __webpack_require__(22);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var getOTPMiddleware = function getOTPMiddleware(_ref) {
	    var dispatch = _ref.dispatch;
	    var getState = _ref.getState;
	    return function (next) {
	        return function (action) {
	            var isMyInfoFlow = getState().state.getIn((0, _path.myInfoFlagPath)(), false);
	            if (action.type === _actionsConstant.ACTION_POST_PARTIAL_APPLICATION_SUCCESS && !isMyInfoFlow && action.nextStep === "otp") {
	                var mobileNumber = getState().state.getIn(["data", "mobileNumber"]);
	                dispatch((0, _actionCreators.getOTPPrefix)(mobileNumber));
	            }
	            return next(action);
	        };
	    };
	};
	exports.default = getOTPMiddleware;

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _actionsConstant = __webpack_require__(22);
	
	var _actionCreators = __webpack_require__(3);
	
	var _path = __webpack_require__(4);
	
	var _inputsConstant = __webpack_require__(10);
	
	var isMyInfoFlow = function isMyInfoFlow(state, action) {
	    var isMyInfo = state.getIn((0, _path.myInfoFlagPath)(), false);
	    return action.type === _actionsConstant.ACTION_POST_PARTIAL_APPLICATION_SUCCESS && action.currentStep === "basicInfo" && isMyInfo;
	};
	
	var isFromOTP = function isFromOTP(action) {
	    return action.type === _actionsConstant.ACTION_POST_PARTIAL_APPLICATION_SUCCESS && action.currentStep === "otp";
	};
	
	var shouldGetPendingApplication = function shouldGetPendingApplication(state, action) {
	    return isMyInfoFlow(state, action) || isFromOTP(action);
	};
	
	var getPendingApplicationMiddleware = function getPendingApplicationMiddleware(_ref) {
	    var dispatch = _ref.dispatch;
	    var getState = _ref.getState;
	    return function (next) {
	        return function (action) {
	            var state = getState().state;
	            if (shouldGetPendingApplication(state, action)) {
	                var email = getState().state.getIn((0, _path.dataPath)([_inputsConstant.EMAIL]));
	                var nric = getState().state.getIn((0, _path.dataPath)([_inputsConstant.NRIC]));
	                var mobileNumber = getState().state.getIn((0, _path.dataPath)([_inputsConstant.MOBILE_NUMBER]));
	                var payload = {
	                    email: email,
	                    nric: nric,
	                    mobileNumber: mobileNumber
	                };
	                next(action);
	                return dispatch((0, _actionCreators.checkPendingApplication)(action.currentStep, payload, action.productsData));
	            }
	            return next(action);
	        };
	    };
	};
	exports.default = getPendingApplicationMiddleware;

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _actionsConstant = __webpack_require__(22);
	
	var _actionCreators = __webpack_require__(3);
	
	var getUserStatusMiddleware = function getUserStatusMiddleware(_ref) {
	    var dispatch = _ref.dispatch;
	    return function (next) {
	        return function (action) {
	            if (action.type === _actionsConstant.ACTION_POST_PARTIAL_APPLICATION_SUCCESS && action.currentStep === "workInfo") {
	                next(action);
	                return dispatch((0, _actionCreators.getUserStatus)(action.nextStep));
	            }
	            return next(action);
	        };
	    };
	};
	
	exports.default = getUserStatusMiddleware;

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _actionsConstant = __webpack_require__(22);
	
	var _actionCreators = __webpack_require__(3);
	
	var postOTPMiddleware = function postOTPMiddleware(_ref) {
	    var dispatch = _ref.dispatch;
	    return function (next) {
	        return function (action) {
	            if (action.type === _actionsConstant.ACTION_POST_OTP_SUCCESS) {
	                next(action);
	                dispatch((0, _actionCreators.postPartialApplication)(action.currentStep, action.nextStep));
	            }
	            return next(action);
	        };
	    };
	};
	
	exports.default = postOTPMiddleware;

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.scrollToSectionSummary = exports.scrollToSection = undefined;
	
	var _immutable = __webpack_require__(13);
	
	var _actionCreators = __webpack_require__(3);
	
	var _scrollIntoView = __webpack_require__(125);
	
	var _scrollIntoView2 = _interopRequireDefault(_scrollIntoView);
	
	var _path = __webpack_require__(4);
	
	var _actionsConstant = __webpack_require__(22);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var scrollToSection = exports.scrollToSection = function scrollToSection(currentStep, nextStep, dispatch) {
	    if (nextStep) {
	        dispatch((0, _actionCreators.startChangeStep)(currentStep, nextStep));
	        // similar to nextTick in node. will push function to the next queue stack.
	        Promise.resolve().then(function () {
	            var element = document.querySelector("#" + nextStep);
	            dispatch((0, _actionCreators.endChangeStep)(nextStep));
	            (0, _scrollIntoView2.default)(element, { time: 500, align: { top: 0 } });
	        });
	    }
	};
	
	var scrollToSectionSummary = exports.scrollToSectionSummary = function scrollToSectionSummary(nextStep) {
	    // similar to nextTick in node. will push function to the next queue stack.
	    Promise.resolve().then(function () {
	        var element = document.querySelector("[id='" + nextStep + "']");
	        (0, _scrollIntoView2.default)(element, { time: 500, align: { top: 0 } });
	        // () => dispatch(removeSummaryStepFromShownSteps(nextStep))
	    });
	};
	
	var scrollViewMiddleware = function scrollViewMiddleware(_ref) {
	    var dispatch = _ref.dispatch;
	    var getState = _ref.getState;
	    return function (next) {
	        return function (action) {
	            var isMyInfoFlow = getState().state.getIn((0, _path.myInfoFlagPath)(), false);
	            if (action.type === _actionsConstant.ACTION_GET_PENDING_APPLICATION_SUCCESS) {
	                next(action);
	                return scrollToSection("pendingApplication", "accountDetails", dispatch);
	            }
	            if (action.type === _actionsConstant.ACTION_GET_USER_STATUS_SUCCESS) {
	                next(action);
	                return scrollToSection(action.currentStep, "digitalServices", dispatch);
	            }
	            if (action.type === _actionsConstant.ACTION_GET_USER_STATUS_ERROR) {
	                next(action);
	                var nextStep = "uploadDocuments";
	                var uiState = getState().state.getIn((0, _path.uiStepPath)("uploadDocuments"), (0, _immutable.Map)());
	                if (!uiState.size) {
	                    nextStep = "declaration";
	                    uiState = getState().state.getIn((0, _path.uiStepPath)("declaration"), (0, _immutable.Map)());
	                    if (!uiState.size) {
	                        nextStep = "summary";
	                    }
	                }
	                return scrollToSection("workInfo", nextStep, dispatch);
	            }
	            if (action.type === _actionsConstant.ACTION_GET_ENCRYPTION_PARAMS_SUCCESS) {
	                next(action);
	                return scrollToSection("digitalServices", action.nextStep, dispatch);
	            }
	            if (action.type === _actionsConstant.ACTION_CHECK_PENDING_APPLICATION_SUCCESS) {
	                next(action);
	                return action.data.productId.length > 0 ? scrollToSection(action.currentStep, "pendingApplication", dispatch) : setTimeout(function () {
	                    return scrollToSection(action.currentStep, "accountDetails", dispatch);
	                }, 100);
	            }
	            if (action.type === _actionsConstant.ACTION_POST_PARTIAL_APPLICATION_SUCCESS && !(["basicInfo", "digitalServices", "workInfo", "personalInfo"].indexOf(action.currentStep) > -1) || action.type === _actionsConstant.ACTION_POST_PARTIAL_APPLICATION_SUCCESS && action.currentStep === "basicInfo" && !isMyInfoFlow) {
	                next(action);
	                return scrollToSection(action.currentStep, action.nextStep, dispatch);
	            }
	            if (_actionsConstant.ACTION_POST_PARTIAL_APPLICATION_LOADING && ["personalInfo"].indexOf(action.currentStep) > -1) {
	                next(action);
	                return scrollToSection(action.currentStep, action.nextStep, dispatch);
	            }
	            if (action.type === _actionsConstant.ACTION_SCROLL_SUMMARY_TO_STEP) {
	                next(action);
	                return scrollToSectionSummary(action.step, dispatch);
	            }
	            return next(action);
	        };
	    };
	};
	exports.default = scrollViewMiddleware;

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _actionsConstant = __webpack_require__(22);
	
	var validateUsernameMiddleware = function validateUsernameMiddleware() {
	    return function (next) {
	        return function (action) {
	            if (action.type === _actionsConstant.ACTION_VALIDATE_USERNAME_SUCCESS && action.successCallback) {
	                action.successCallback();
	            }
	            if (action.type === _actionsConstant.ACTION_VALIDATE_USERNAME_ERROR && action.errorCallback) {
	                action.errorCallback();
	            }
	            return next(action);
	        };
	    };
	};
	exports.default = validateUsernameMiddleware;

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.setPropertyType = exports.updateFileUploadStop = exports.updateFileUploadStart = exports.removeNRIC = exports.setEncryptionParamsToStore = exports.setNewToBank = exports.removeDigitalServicesStep = exports.prefillEmployer = exports.sendDataToSparkline = exports.setFormLabelsToStore = exports.setProductsToStore = exports.setRightPanelExpanded = exports.updateDialogModalState = exports.showOrHideDeclartionStep = exports.uploadDocumentsStepConfig = exports.showGenericErrorMessage = exports.setTaxResidencyToValid = exports.addCPFDataToStore = exports.addMandatoryProductIdToStore = exports.generateProductCurrencyValidations = exports.generateSAVJSValidations = exports.generateProductCachedDataAndValidations = exports.mapPendingAppData = exports.addProductIdToStore = exports.removePendingStepForPartial = exports.removePendingStep = exports.removePendingApplicationFromUi = exports.updatePendingApplication = exports.updateCurrentStep = exports.removeStepFromState = exports.addStepToState = exports.removeCrossProduct = exports.addCrossProduct = exports.removeInputToUIState = exports.addInputToUIState = exports.removeCrossProductUi = exports.removeProductData = exports.setPriority = exports.initAccountDetailsWithCasa = exports.fullApplicationSuccess = exports.setAnnualIncomeNotAvailable = exports.setReadOnlyToStore = exports.setInputToReadOnly = exports.filterOnlySummaryStepFromShownStep = exports.addPreSummaryStepsToShownSteps = exports.removeSummaryStepFromShownStep = exports.removeOtpStepFromShownStep = exports.addShownSteps = exports.changeTransitFromStep = exports.changeTransitToStep = exports.setGenericError = exports.addFirstStepToCurrentStep = exports.addFirstStepToShownStep = exports.changeStep = exports.addSection = exports.removeBillingProof = exports.removeKrisOrAsia = exports.setDirtyTrueForCountryOfFunds = exports.setValidTrueForCountryOfFunds = exports.editAtmAccess = exports.updateCreditLimit = exports.updateDailyCardLimit = exports.editNameOnCard = exports.showErrorMsg = exports.addValidFlag = exports.updatePhoneValidState = exports.setFieldsToDirty = exports.setFieldsToValid = exports.setDefaultFieldsToValid = exports.matchErrorsMsgToInputs = exports.closeDialogModal = exports.removeKFData = exports.addBankListToState = exports.addTenorDataToState = exports.collapseTableRow = exports.expandTableRow = exports.selectTableRow = exports.removePendingApplication = exports.selectPendingApplication = exports.removeDataFromState = exports.setFinalSubmitStatus = exports.closeAccordian = exports.openAccordian = exports.hidePageLoading = undefined;
	exports.showPageLoading = exports.myInfoIncompleteAndNotRequired = exports.myInfoIncompleteAndRequired = exports.myInfoDownAndRequired = exports.myInfoDownAndNotRequired = exports.addMyInfoFlag = exports.updateAppFlow = exports.setSignatureStatusToTrue = exports.setDrawSignatureDirtyToFalse = exports.setDrawSignatureStatus = exports.setDrawSignatureToNonEditable = exports.setDrawSignatureToEditable = exports.setDrawSignatureCanvasTouched = exports.setSignatureImageHeight = exports.setSignatureImageWidth = exports.setSignatureImageY = exports.setSignatureImageX = exports.setSignatureImageRotation = exports.setSignatureImageScale = exports.setSignatureImageTmpContent = exports.setSignatureImageContent = exports.updateAllCurrencies = exports.toggleSameStatus = exports.clearErrorMessage = exports.updateSamePurposeAndSourceOfFundsUi = exports.clearData = exports.updateCountryOfFundsForAll = exports.updateCountryOfFunds = exports.updateSourceOfFundsForAll = exports.updateSourceOfFunds = exports.updateCountryOfFundsForFx = exports.updateSourceOfFundsForFx = exports.updatePurposeOfFundsForFx = exports.updatePurposeOfFundsForAll = exports.updatePurposeOfFunds = exports.mapDataToStore = exports.setDefaultValuesToDataToStore = exports.updateDropDownSearchValue = exports.updateLoadingStart = exports.updateLoadingStop = exports.removeTaxResidency = exports.addTaxResidency = exports.updateTaxResidencyId = exports.updateTaxResidencyReason = exports.addTaxValidation = exports.updateTaxResidencyCountry = exports.setTinToValidated = exports.updateUploadProgress = exports.updateAPIError = exports.updatePartialApplicationSubmitStatus = exports.updateOTPStatus = exports.addressError = exports.setPostalSearchCountExceeded = exports.setAddressSearchCount = exports.hideSpinner = exports.showSpinner = exports.resetAddressFormat = exports.resetBlockAndStreetReadOnlyState = exports.resetBuildingName = exports.resetAddressStreet = exports.resetAddressBlock = exports.updateUIStateForLevelAndUnit = exports.setBeneficiaryNameToReadOnly = exports.setBlockAndStreetToReadOnly = exports.updateAddressFormat = exports.updateBuildingName = exports.updateAddressStreet = exports.updateAddressBlock = exports.updateAddress = exports.updateOTPPrefix = exports.setCheckBoxStatus = exports.toggleCheckbox = exports.setFileUploadStatus = exports.setFileSize = exports.setFileUploadData = exports.updateUIStateTree = exports.pushProductID = exports.updateProductID = exports.updateCurrencies = exports.toggleClick = exports.toggleButtonClick = exports.editDropdownByPath = exports.editDropdownInput = exports.onCloseDropdown = exports.onOpenDropdown = exports.onBlurInput = exports.onFocusInput = exports.chooseGender = exports.setErrorMsg = exports.removeVaild = exports.setValid = exports.removeInProgress = exports.setInProgress = exports.removeDirty = exports.setDirty = exports.setToggleStatus = exports.setTrueStatusForNonInput = exports.setStatus = exports.editInputByPath = exports.editInput = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _immutable = __webpack_require__(13);
	
	var _path = __webpack_require__(4);
	
	var _productConfig = __webpack_require__(392);
	
	var _productConfig2 = _interopRequireDefault(_productConfig);
	
	var _inputsConstant = __webpack_require__(10);
	
	var _formDataConfig = __webpack_require__(131);
	
	var _stepsEnum = __webpack_require__(85);
	
	var _stepsEnum2 = _interopRequireDefault(_stepsEnum);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	/***************
	 ** COMPONENTS **
	 ****************/
	
	var editInput = exports.editInput = function editInput(_ref) {
	    var inputId = _ref.inputId;
	    var value = _ref.value;
	    return function (state) {
	        if (inputId === "propertyType" && state.getIn((0, _path.currentStepPath)()) === "homeMailingAddress") {
	            if (["H3", "H5", "EC"].includes(value)) {
	                var uiDefaultState = (0, _immutable.Map)({
	                    isFocus: false,
	                    isDirty: false,
	                    isValid: false,
	                    errorMsg: ""
	                });
	                var currentState = state.getIn(["ui", "homeMailingAddress", _inputsConstant.HOME_LEVEL], (0, _immutable.Map)());
	                state.setIn(["ui", "homeMailingAddress", _inputsConstant.HOME_LEVEL], uiDefaultState.merge(currentState));
	                var currentState2 = state.getIn(["ui", "homeMailingAddress", _inputsConstant.HOME_UNIT_NUMBER], (0, _immutable.Map)());
	                state.setIn(["ui", "homeMailingAddress", _inputsConstant.HOME_UNIT_NUMBER], uiDefaultState.merge(currentState2));
	            } else {
	                state.setIn(["ui", "homeMailingAddress"], state.getIn(["ui", "homeMailingAddress"]).remove(_inputsConstant.HOME_LEVEL));
	                state.setIn(["ui", "homeMailingAddress"], state.getIn(["ui", "homeMailingAddress"]).remove(_inputsConstant.HOME_UNIT_NUMBER));
	            }
	        }
	        return state.setIn((0, _path.dataPath)([inputId]), value);
	    };
	};
	
	var editInputByPath = exports.editInputByPath = function editInputByPath(path, value) {
	    return function (state) {
	        return state.setIn(path, value);
	    };
	};
	
	var setStatus = exports.setStatus = function setStatus(_ref2) {
	    var inputId = _ref2.inputId;
	    var status = _ref2.status;
	    var step = _ref2.step;
	    return function (state) {
	        return state.setIn((0, _path.uiIsValidPath)(step, inputId), !status.length > 0);
	    };
	};
	
	var setTrueStatusForNonInput = exports.setTrueStatusForNonInput = function setTrueStatusForNonInput(_ref3) {
	    var inputId = _ref3.inputId;
	    var step = _ref3.step;
	    return function (state) {
	        return state.setIn((0, _path.uiIsValidPath)(step, inputId), true);
	    };
	};
	
	var setToggleStatus = exports.setToggleStatus = function setToggleStatus(_ref4) {
	    var inputId = _ref4.inputId;
	    var step = _ref4.step;
	    return function (state) {
	        var data = state.getIn((0, _path.dataPath)([inputId]), (0, _immutable.List)());
	        return state.setIn((0, _path.uiIsValidPath)(step, inputId), data.count() > 0);
	    };
	};
	
	var setDirty = exports.setDirty = function setDirty(_ref5) {
	    var inputId = _ref5.inputId;
	    var step = _ref5.step;
	    return function (state) {
	        return state.setIn((0, _path.uiIsDirtyPath)(step, inputId), true);
	    };
	};
	
	var removeDirty = exports.removeDirty = function removeDirty(_ref6) {
	    var inputId = _ref6.inputId;
	    var step = _ref6.step;
	    return function (state) {
	        return state.setIn((0, _path.uiIsDirtyPath)(step, inputId), false);
	    };
	};
	
	var setInProgress = exports.setInProgress = function setInProgress(_ref7) {
	    var inputId = _ref7.inputId;
	    var step = _ref7.step;
	    return function (state) {
	        return state.setIn((0, _path.uiInProgressPath)(step, inputId), true);
	    };
	};
	
	var removeInProgress = exports.removeInProgress = function removeInProgress(_ref8) {
	    var inputId = _ref8.inputId;
	    var step = _ref8.step;
	    return function (state) {
	        return state.setIn((0, _path.uiInProgressPath)(step, inputId), false);
	    };
	};
	
	var setValid = exports.setValid = function setValid(_ref9) {
	    var inputId = _ref9.inputId;
	    var step = _ref9.step;
	    return function (state) {
	        return state.setIn((0, _path.uiIsValidPath)(step, inputId), true);
	    };
	};
	
	var removeVaild = exports.removeVaild = function removeVaild(_ref10) {
	    var inputId = _ref10.inputId;
	    var step = _ref10.step;
	    return function (state) {
	        return state.setIn((0, _path.uiIsValidPath)(step, inputId), false);
	    };
	};
	
	var setErrorMsg = exports.setErrorMsg = function setErrorMsg(_ref11) {
	    var inputId = _ref11.inputId;
	    var status = _ref11.status;
	    var step = _ref11.step;
	    return function (state) {
	        var errorMsg = status[0] ? status[0].errorMsg : "";
	        return state.setIn((0, _path.uiErrorMsgPath)(step, inputId), errorMsg);
	    };
	};
	
	//export const chooseGender = (gender, inputID, path) => state => state.setIn(path, gender);
	var chooseGender = exports.chooseGender = function chooseGender(gender, inputID, path) {
	    return function (state) {
	        return state.setIn(path, gender);
	    };
	};
	
	var onFocusInput = exports.onFocusInput = function onFocusInput(_ref12) {
	    var step = _ref12.step;
	    var inputId = _ref12.inputId;
	    var value = _ref12.value;
	    return function (state) {
	        return state.setIn((0, _path.uiFocusPath)(step, inputId), value);
	    };
	};
	
	var onBlurInput = exports.onBlurInput = function onBlurInput(_ref13) {
	    var step = _ref13.step;
	    var inputId = _ref13.inputId;
	    var value = _ref13.value;
	    return function (state) {
	        return state.setIn((0, _path.uiFocusPath)(step, inputId), value);
	    };
	};
	
	var onOpenDropdown = exports.onOpenDropdown = function onOpenDropdown(action) {
	    return function (state) {
	        return state.setIn(["ui", action.inputId, "dropdownOpen"], true);
	    };
	};
	
	var onCloseDropdown = exports.onCloseDropdown = function onCloseDropdown(action) {
	    return function (state) {
	        return state.setIn(["ui", action.inputId, "dropdownOpen"], false);
	    };
	};
	
	var editDropdownInput = exports.editDropdownInput = function editDropdownInput(action) {
	    return function (state) {
	        return state.setIn(["data", action.inputId], action.value);
	    };
	};
	
	var editDropdownByPath = exports.editDropdownByPath = function editDropdownByPath(path, value) {
	    return function (state) {
	        return state.setIn(path, value);
	    };
	};
	
	var toggleButtonClick = exports.toggleButtonClick = function toggleButtonClick(_ref14) {
	    var inputId = _ref14.inputId;
	    var value = _ref14.value;
	    return function (state) {
	        return state.setIn((0, _path.dataPath)([inputId]), value);
	    };
	};
	var toggleClick = exports.toggleClick = function toggleClick() {
	    return function (state) {
	        var isclick = state.getIn(["ui", "is-clicked"], false);
	        return isclick ? state.setIn(["ui", "is-clicked"], false) : state.setIn(["ui", "is-clicked"], true);
	    };
	};
	
	var updateCurrencies = exports.updateCurrencies = function updateCurrencies(currency, pid) {
	    return function (state) {
	        var currencies = state.getIn(["data", "products", pid, "currencies"], (0, _immutable.Map)());
	        var isSameToggle = state.getIn(["data", "samePurposeToggle"], true);
	        var initValue = isSameToggle ? currencies.first() : (0, _immutable.Map)({
	            purposeOfFunds: "",
	            sourceOfFunds: "",
	            countryOfFunds: "SG"
	        });
	
	        if (currencies.has(currency)) {
	            if (currencies.size >= 2) {
	                var uiState = state.getIn(["ui", "accountDetails"]);
	                var newUIState = uiState.filter(function (acc, value) {
	                    if (!value) {
	                        return true;
	                    }
	                    return !(value.includes(currency) && value.includes("CURFX"));
	                });
	                state.setIn(["data", "products", pid, "currencies"], currencies.remove(currency));
	                return state.setIn(["ui", "accountDetails"], newUIState);
	            } else {
	                return state;
	            }
	        } else {
	            return state.setIn(["data", "products", pid, "currencies", currency], initValue) && state.setIn(["ui", "accountDetails", pid + "-" + _inputsConstant.PURPOSE_OF_FUNDS + "-" + currency, "isDirty"], isSameToggle) && state.setIn(["ui", "accountDetails", pid + "-" + _inputsConstant.PURPOSE_OF_FUNDS + "-" + currency, "isValid"], isSameToggle) && state.setIn(["ui", "accountDetails", pid + "-" + _inputsConstant.SOURCE_OF_FUNDS + "-" + currency, "isDirty"], isSameToggle) && state.setIn(["ui", "accountDetails", pid + "-" + _inputsConstant.SOURCE_OF_FUNDS + "-" + currency, "isValid"], isSameToggle) && state.setIn(["ui", "accountDetails", pid + "-" + _inputsConstant.COUNTRY_OF_FUNDS + "-" + currency, "isDirty"], true) && state.setIn(["ui", "accountDetails", pid + "-" + _inputsConstant.COUNTRY_OF_FUNDS + "-" + currency, "isValid"], true);
	        }
	    };
	};
	
	var updateProductID = exports.updateProductID = function updateProductID(_ref15) {
	    var productID = _ref15.productID;
	    return function (state) {
	        // const currentPIDSelected = state.getIn(productIdPath(), List());
	        // const newPIDSelected = currentPIDSelected.concat(productID);
	        return state.setIn((0, _path.productIdPath)(), (0, _immutable.List)(productID));
	    };
	};
	
	var pushProductID = exports.pushProductID = function pushProductID(action) {
	    return function (state) {
	        var currentPIDSelected = state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	        var newPIDSelected = action.data.productId.reduce(function (pids, pid) {
	            return !pids.includes(pid) ? currentPIDSelected.push(pid) : pids;
	        }, currentPIDSelected);
	        return state.setIn((0, _path.productIdPath)(), newPIDSelected);
	    };
	};
	
	var updateUIStateTree = exports.updateUIStateTree = function updateUIStateTree() {
	    return function (state) {
	        //TO-DO write logic to handle >1 product
	        var productsData = state.getIn((0, _path.productsDataPath)(), (0, _immutable.Map)());
	        var currentPIDSelected = state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	        var appFlow = state.getIn((0, _path.flowPath)());
	        var stepToShowForETP = ["basicInfo", "pendingApplication", "accountDetails", "summary"];
	        var mapProductConfig = function mapProductConfig(flow) {
	            return function (pid) {
	                var productType = productsData.getIn(["products", pid, "type"]);
	                return flow === "ETP" ? _productConfig2.default[productType].filter(function (_, step) {
	                    return stepToShowForETP.includes(step);
	                }) : _productConfig2.default[productType];
	            };
	        };
	
	        var appStructure = currentPIDSelected.map(mapProductConfig(appFlow));
	        var uiDefaultState = (0, _immutable.Map)({
	            isFocus: false,
	            isDirty: false,
	            isValid: false,
	            errorMsg: ""
	        });
	        var newUIStateTree = appStructure.first().mapEntries(function (_ref16) {
	            var _ref17 = _slicedToArray(_ref16, 2);
	
	            var key = _ref17[0];
	            var value = _ref17[1];
	
	            var currentStepState = state.getIn((0, _path.uiStepPath)(key));
	            var newValue = value.reduce(function (r, f) {
	                if (currentStepState) {
	                    return r.set(f, currentStepState.get(f));
	                }
	                return f ? r.set(f, uiDefaultState) : r.set(f, (0, _immutable.Map)({ isValid: true }));
	            }, (0, _immutable.OrderedMap)());
	            return [key, newValue];
	        });
	        return state.setIn(_path.ui, newUIStateTree);
	    };
	};
	
	var setFileUploadData = exports.setFileUploadData = function setFileUploadData(_ref18) {
	    var inputId = _ref18.inputId;
	    var value = _ref18.value;
	    return function (state) {
	        return state.setIn((0, _path.dataPath)([inputId]), value);
	    };
	};
	
	var setFileSize = exports.setFileSize = function setFileSize(_ref19) {
	    var inputId = _ref19.inputId;
	    var size = _ref19.size;
	    return function (state) {
	        return state.setIn((0, _path.uploadFileSizePath)(inputId), size);
	    };
	};
	
	var setFileUploadStatus = exports.setFileUploadStatus = function setFileUploadStatus(_ref20) {
	    var inputId = _ref20.inputId;
	    var uploadStatus = _ref20.uploadStatus;
	    var step = _ref20.step;
	    return function (state) {
	        return state.setIn((0, _path.uiUploadStatusPath)(step, inputId), uploadStatus);
	    };
	};
	
	var toggleCheckbox = exports.toggleCheckbox = function toggleCheckbox(_ref21) {
	    var inputId = _ref21.inputId;
	    var value = _ref21.value;
	    return function (state) {
	        return state.setIn((0, _path.dataPath)([inputId]), value);
	    };
	};
	
	var setCheckBoxStatus = exports.setCheckBoxStatus = function setCheckBoxStatus(_ref22) {
	    var inputId = _ref22.inputId;
	    var step = _ref22.step;
	    var value = _ref22.value;
	    return function (state) {
	        return inputId === "pdpa" ? state.setIn((0, _path.uiIsValidPath)(step, inputId), true) : state.setIn((0, _path.uiIsValidPath)(step, inputId), value);
	    };
	};
	
	var updateOTPPrefix = exports.updateOTPPrefix = function updateOTPPrefix(_ref23) {
	    var data = _ref23.data;
	    return function (state) {
	        return state.setIn((0, _path.otpPrefixPath)(), data.smsPrefix);
	    };
	};
	
	var updateAddress = exports.updateAddress = function updateAddress(_ref24) {
	    var data = _ref24.data;
	    return function (state) {
	        return state.setIn((0, _path.dataPath)(["address"]), data);
	    };
	};
	
	var updateAddressBlock = exports.updateAddressBlock = function updateAddressBlock(_ref25) {
	    var data = _ref25.data;
	    var inputId = _ref25.inputId;
	    return function (state) {
	        var prependText = inputId.includes(_inputsConstant.HOME) ? _inputsConstant.HOME : _inputsConstant.MAILING;
	        var blockId = prependText + "Block";
	        return state.setIn((0, _path.dataPath)([blockId]), data.blockNumber);
	    };
	};
	
	var updateAddressStreet = exports.updateAddressStreet = function updateAddressStreet(_ref26) {
	    var data = _ref26.data;
	    var inputId = _ref26.inputId;
	    return function (state) {
	        var prependText = inputId.includes(_inputsConstant.HOME) ? _inputsConstant.HOME : _inputsConstant.MAILING;
	        var streetId = prependText + "Street";
	        return state.setIn((0, _path.dataPath)([streetId]), data.streetAddress);
	    };
	};
	
	var updateBuildingName = exports.updateBuildingName = function updateBuildingName(_ref27) {
	    var data = _ref27.data;
	    var inputId = _ref27.inputId;
	    return function (state) {
	        var prependText = inputId.includes(_inputsConstant.HOME) ? _inputsConstant.HOME : _inputsConstant.MAILING;
	        var streetId = prependText + "Building";
	        return state.setIn((0, _path.dataPath)([streetId]), data.buildingName);
	    };
	};
	
	var updateAddressFormat = exports.updateAddressFormat = function updateAddressFormat(_ref28) {
	    var data = _ref28.data;
	    var inputId = _ref28.inputId;
	    return function (state) {
	        var prependText = inputId.includes(_inputsConstant.HOME) ? _inputsConstant.HOME : _inputsConstant.MAILING;
	        var addressFormat = prependText + "AddressFormat";
	        return state.setIn((0, _path.dataPath)([addressFormat]), data.addressFormat);
	    };
	};
	
	var setBlockAndStreetToReadOnly = exports.setBlockAndStreetToReadOnly = function setBlockAndStreetToReadOnly(_ref29) {
	    var inputId = _ref29.inputId;
	    return function (state) {
	        var _blockAndStreetState;
	
	        var prependText = inputId.includes(_inputsConstant.HOME) ? _inputsConstant.HOME : _inputsConstant.MAILING;
	        var streetFormat = prependText + "Street";
	        var blockFormat = prependText + "Block";
	        var buildingFormat = prependText + "Building";
	        var readOnlyState = state.getIn((0, _path.readOnlyPath)(), (0, _immutable.Map)());
	        var blockAndStreetState = (_blockAndStreetState = {}, _defineProperty(_blockAndStreetState, streetFormat, true), _defineProperty(_blockAndStreetState, blockFormat, true), _defineProperty(_blockAndStreetState, buildingFormat, true), _blockAndStreetState);
	        return state.setIn((0, _path.readOnlyPath)(), readOnlyState.merge((0, _immutable.fromJS)(blockAndStreetState)));
	    };
	};
	
	var setBeneficiaryNameToReadOnly = exports.setBeneficiaryNameToReadOnly = function setBeneficiaryNameToReadOnly(action) {
	    return function (state) {
	        var readOnlyState = state.getIn((0, _path.readOnlyPath)(), (0, _immutable.Map)());
	        var beneficiaryNameToReadOnly = _defineProperty({}, "unsecuredLoanBeneficiaryName-" + action.pid, true);
	        return state.setIn((0, _path.readOnlyPath)(), readOnlyState.merge((0, _immutable.fromJS)(beneficiaryNameToReadOnly)));
	    };
	};
	
	var updateUIStateForLevelAndUnit = exports.updateUIStateForLevelAndUnit = function updateUIStateForLevelAndUnit(_ref30) {
	    var data = _ref30.data;
	    var inputId = _ref30.inputId;
	    return function (state) {
	        if (data.addressFormat && data.addressFormat[0] === "H") {
	            var _levelAndUnitState;
	
	            var currentAddressStepState = state.getIn((0, _path.uiStepPath)("homeMailingAddress"), (0, _immutable.Map)());
	            var prependText = inputId.includes(_inputsConstant.HOME) ? _inputsConstant.HOME : _inputsConstant.MAILING;
	            var levelFormat = prependText + "Level";
	            var unitFormat = prependText + "UnitNumber";
	            var defaultState = {
	                isValid: false,
	                isDirty: false
	            };
	            var levelAndUnitState = (_levelAndUnitState = {}, _defineProperty(_levelAndUnitState, levelFormat, defaultState), _defineProperty(_levelAndUnitState, unitFormat, defaultState), _levelAndUnitState);
	            return state.setIn((0, _path.uiStepPath)("homeMailingAddress"), currentAddressStepState.merge((0, _immutable.fromJS)(levelAndUnitState)));
	        }
	        return state;
	    };
	};
	
	var resetAddressBlock = exports.resetAddressBlock = function resetAddressBlock(_ref31) {
	    var inputId = _ref31.inputId;
	    return function (state) {
	        var prependText = inputId.includes(_inputsConstant.HOME) ? _inputsConstant.HOME : _inputsConstant.MAILING;
	        var blockId = prependText + "Block";
	        return state.setIn((0, _path.dataPath)([blockId]), "");
	    };
	};
	
	var resetAddressStreet = exports.resetAddressStreet = function resetAddressStreet(_ref32) {
	    var inputId = _ref32.inputId;
	    return function (state) {
	        var prependText = inputId.includes(_inputsConstant.HOME) ? _inputsConstant.HOME : _inputsConstant.MAILING;
	        var streetId = prependText + "Street";
	        return state.setIn((0, _path.dataPath)([streetId]), "");
	    };
	};
	
	var resetBuildingName = exports.resetBuildingName = function resetBuildingName(_ref33) {
	    var inputId = _ref33.inputId;
	    return function (state) {
	        var prependText = inputId.includes(_inputsConstant.HOME) ? _inputsConstant.HOME : _inputsConstant.MAILING;
	        var streetId = prependText + "Building";
	        return state.setIn((0, _path.dataPath)([streetId]), "");
	    };
	};
	
	var resetBlockAndStreetReadOnlyState = exports.resetBlockAndStreetReadOnlyState = function resetBlockAndStreetReadOnlyState(_ref34) {
	    var inputId = _ref34.inputId;
	    return function (state) {
	        var _blockAndStreetState2;
	
	        var prependText = inputId.includes(_inputsConstant.HOME) ? _inputsConstant.HOME : _inputsConstant.MAILING;
	        var streetFormat = prependText + "Street";
	        var blockFormat = prependText + "Block";
	        var readOnlyState = state.getIn((0, _path.readOnlyPath)(), (0, _immutable.Map)());
	        var blockAndStreetState = (_blockAndStreetState2 = {}, _defineProperty(_blockAndStreetState2, streetFormat, false), _defineProperty(_blockAndStreetState2, blockFormat, false), _blockAndStreetState2);
	        return state.setIn((0, _path.readOnlyPath)(), readOnlyState.merge((0, _immutable.fromJS)(blockAndStreetState)));
	    };
	};
	
	var resetAddressFormat = exports.resetAddressFormat = function resetAddressFormat(_ref35) {
	    var inputId = _ref35.inputId;
	    return function (state) {
	        var prependText = inputId.includes(_inputsConstant.HOME) ? _inputsConstant.HOME : _inputsConstant.MAILING;
	        var streetId = prependText + "AddressFormat";
	        return state.setIn((0, _path.dataPath)([streetId]), "");
	    };
	};
	
	var showSpinner = exports.showSpinner = function showSpinner() {
	    return function (state) {
	        return state.setIn((0, _path.postalCodeSpinnerPath)(), true);
	    };
	};
	
	var hideSpinner = exports.hideSpinner = function hideSpinner() {
	    return function (state) {
	        return state.setIn((0, _path.postalCodeSpinnerPath)(), false);
	    };
	};
	
	var setAddressSearchCount = exports.setAddressSearchCount = function setAddressSearchCount(action) {
	    return function (state) {
	        return state.setIn((0, _path.postalCodeSearchCount)(action.inputId), state.getIn((0, _path.postalCodeSearchCount)(action.inputId), 0) + 1);
	    };
	};
	
	var setPostalSearchCountExceeded = exports.setPostalSearchCountExceeded = function setPostalSearchCountExceeded(action) {
	    return function (state) {
	        if (state.getIn((0, _path.postalCodeSearchCount)(action.inputId), 0) > 4) {
	            return state.setIn((0, _path.postalCodeCountExceededPath)(action.inputId), true);
	        }
	        return state;
	    };
	};
	
	var addressError = exports.addressError = function addressError(action) {
	    return function (state) {
	        var postalErrors = {
	            "400": function _() {
	                var newState1 = state.setIn((0, _path.uiErrorMsgPath)("homeMailingAddress", action.inputId), state.getIn(["formLabels", "formInputErrorMessages", "invalidAddress"]));
	                var newState2 = newState1.setIn((0, _path.uiIsValidPath)("homeMailingAddress", action.inputId), false);
	                return newState2;
	            },
	            "500": function _() {
	                return state.setIn((0, _path.postalCodeServiceStatusPath)(), true).setIn((0, _path.genericErrorPath)(), state.getIn(["formLabels", "formInputErrorMessages", "adressServiceNotAvailable"]));
	            },
	            DEFAULT: function DEFAULT() {
	                return state.setIn((0, _path.postalCodeServiceStatusPath)(), true);
	            }
	        };
	        return postalErrors[action.error] ? postalErrors[action.error]() : postalErrors.DEFAULT();
	    };
	};
	
	var updateOTPStatus = exports.updateOTPStatus = function updateOTPStatus(_ref36) {
	    var data = _ref36.data;
	    return function (state) {
	        return state.setIn((0, _path.isOTPVerifiedPath)(), data);
	    };
	};
	
	var updatePartialApplicationSubmitStatus = exports.updatePartialApplicationSubmitStatus = function updatePartialApplicationSubmitStatus(_ref37) {
	    var data = _ref37.data;
	    return function (state) {
	        var objectKeys = Object.keys(data.data);
	        var removedNullKeys = objectKeys.reduce(function (newObject, k) {
	            if (data.data[k] !== null) {
	                newObject[k] = data.data[k];
	            }
	            return newObject;
	        }, {});
	        var mergeData = Object.assign({}, _formDataConfig.formData, removedNullKeys);
	        return state.setIn((0, _path.dataPath)([]), (0, _immutable.fromJS)(mergeData));
	    };
	};
	
	var updateAPIError = exports.updateAPIError = function updateAPIError(_ref38) {
	    var error = _ref38.error;
	    return function (state) {
	        return state.setIn((0, _path.genericErrorPath)(), error);
	    };
	};
	
	var updateUploadProgress = exports.updateUploadProgress = function updateUploadProgress(_ref39) {
	    var step = _ref39.step;
	    var inputId = _ref39.inputId;
	    var progress = _ref39.progress;
	    return function (state) {
	        return state.setIn((0, _path.uiUploadProgressPath)(step, inputId), progress);
	    };
	};
	
	var setTinToValidated = exports.setTinToValidated = function setTinToValidated(_ref40) {
	    var index = _ref40.index;
	    var data = _ref40.data;
	    return function (state) {
	        return state.setIn(["data", "countries", index, "isValidated"], data.isValidate);
	    };
	};
	
	var updateTaxResidencyCountry = exports.updateTaxResidencyCountry = function updateTaxResidencyCountry(countryIndex, country, formConfig) {
	    return function (state) {
	        var hasCoutry = country !== "";
	        var errorMsg = formConfig.formInputErrorMessages.fieldEmpty;
	
	        // const tinReason = {
	        //     JP: "No TIN is required",
	        //     AU: "No TIN is required",
	        //     KY: "Country does not issues TIN",
	        //     BM: "Country does not issues TIN",
	        //     SC: "Country does not issues TIN",
	        //     MS: "Country does not issues TIN"
	        // };
	
	        // const id = tinReason[country] ? tinReason[country] : "";
	
	        state.setIn(["data", "countries", countryIndex, "country"], country);
	        state.setIn(["ui", "declaration", "tax-residency-country-" + countryIndex, "isValid"], hasCoutry);
	        state.setIn(["ui", "declaration", "tax-residency-country-" + countryIndex, "errorMsg"], errorMsg);
	        // SET REASON OR RESET CONTENT
	        state.setIn(["data", "countries", countryIndex, "id"], "");
	        state.setIn(["ui", "declaration", "tax-residency-id-" + countryIndex, "isValid"], false);
	        state.setIn(["ui", "declaration", "tax-residency-id-" + countryIndex, "errorMsg"], errorMsg);
	        state.setIn(["data", "countries", countryIndex, "reasonCode"], "");
	        state.setIn(["ui", "declaration", "tinReason-" + countryIndex, "isValid"], false);
	        state.setIn(["ui", "declaration", "tinReason-" + countryIndex, "errorMsg"], errorMsg);
	        // state.setIn(["data", "countries", countryIndex, "id"], id);
	        // if (id === "") {
	        //     state.setIn(["ui", "declaration", `tax-residency-id-${countryIndex}`, "isValid"], false);
	        //     state.setIn(["ui", "declaration", `tax-residency-id-${countryIndex}`, "errorMsg"], errorMsg);
	        // } else {
	        //     state.setIn(["ui", "declaration", `tax-residency-id-${countryIndex}`, "isValid"], true);
	        //     state.setIn(["ui", "declaration", `tax-residency-id-${countryIndex}`, "errorMsg"], "");
	        // }
	        return state;
	    };
	};
	
	var addTaxValidation = exports.addTaxValidation = function addTaxValidation(countryIndex, isValidated) {
	    return function (state) {
	        return state.setIn(["data", "countries", countryIndex, "isValidated"], isValidated);
	    };
	};
	
	var updateTaxResidencyReason = exports.updateTaxResidencyReason = function updateTaxResidencyReason(countryIndex, reasonCode) {
	    return function (state) {
	        return state.setIn(["data", "countries", countryIndex, "reasonCode"], reasonCode);
	    };
	};
	
	var updateTaxResidencyId = exports.updateTaxResidencyId = function updateTaxResidencyId(countryIndex, id, formConfig) {
	    return function (state) {
	        var hasId = id && id !== "";
	        var idUpper = hasId ? id.toUpperCase() : "";
	
	        var errorMsg = formConfig.formInputErrorMessages.fieldEmpty;
	
	        state.setIn(["data", "countries", countryIndex, "id"], idUpper);
	        state.setIn(["ui", "declaration", "tax-residency-id-" + countryIndex, "isValid"], hasId);
	        state.setIn(["ui", "declaration", "tax-residency-id-" + countryIndex, "errorMsg"], errorMsg);
	
	        return state;
	    };
	};
	
	var addTaxResidency = exports.addTaxResidency = function addTaxResidency(countryIndex) {
	    return function (state) {
	        var countries = state.getIn(["data", "countries"], (0, _immutable.Map)());
	
	        return state.setIn(["data", "countries"], countries.set(countryIndex, (0, _immutable.Map)()));
	    };
	};
	
	var removeTaxResidency = exports.removeTaxResidency = function removeTaxResidency(_ref41) {
	    var countryIndex = _ref41.countryIndex;
	    return function (state) {
	        var countries = state.getIn(["data", "countries"]);
	
	        state.setIn(["data", "countries"], countries.remove(countryIndex));
	        return state;
	    };
	};
	
	var updateLoadingStop = exports.updateLoadingStop = function updateLoadingStop(_ref42) {
	    var currentStep = _ref42.currentStep;
	    return function (state) {
	        return state.setIn((0, _path.uiIsSpinnerActivePath)(currentStep), false);
	    };
	};
	
	var updateLoadingStart = exports.updateLoadingStart = function updateLoadingStart(_ref43) {
	    var currentStep = _ref43.currentStep;
	    return function (state) {
	        return state.setIn((0, _path.uiIsSpinnerActivePath)(currentStep), true);
	    };
	};
	
	var updateDropDownSearchValue = exports.updateDropDownSearchValue = function updateDropDownSearchValue(_ref44) {
	    var step = _ref44.step;
	    var inputId = _ref44.inputId;
	    var value = _ref44.value;
	    return function (state) {
	        return state.setIn((0, _path.uiDropDownSearchValuePath)(step, inputId), value);
	    };
	};
	
	var setDefaultValuesToDataToStore = exports.setDefaultValuesToDataToStore = function setDefaultValuesToDataToStore() {
	    return function (state) {
	        return state.setIn((0, _path.dataPath)([_inputsConstant.IS_SG]), true).setIn((0, _path.dataPath)([_inputsConstant.COUNTRY_OF_RESIDENCE]), "SG");
	    };
	};
	var mapDataToStore = exports.mapDataToStore = function mapDataToStore(_ref45) {
	    var data = _ref45.data;
	    return function (state) {
	        if (data.form) {
	            var objectKeys = Object.keys(data.form);
	            var removedNullKeys = objectKeys.reduce(function (newObject, k) {
	                if (data.form[k]) {
	                    newObject[k] = data.form[k];
	                }
	                return newObject;
	            }, {});
	
	            if (removedNullKeys.mobileNumber && removedNullKeys.mobileNumber[0] === "+") {
	                removedNullKeys.mobileNumber = removedNullKeys.mobileNumber;
	            } else if (removedNullKeys.mobileNumber && removedNullKeys.mobileNumber.length > 1) {
	                removedNullKeys.mobileNumber = "+" + removedNullKeys.mobileNumber;
	            } else {
	                removedNullKeys.mobileNumber = "+65";
	            }
	
	            var mergeData = Object.assign({}, _formDataConfig.formData, removedNullKeys);
	            return state.setIn((0, _path.dataPath)([]), (0, _immutable.fromJS)(mergeData));
	        }
	        return state.setIn((0, _path.dataPath)([]), (0, _immutable.fromJS)(_formDataConfig.formData));
	    };
	};
	
	var updatePurposeOfFunds = exports.updatePurposeOfFunds = function updatePurposeOfFunds(_ref46) {
	    var currency = _ref46.currency;
	    var value = _ref46.value;
	    var pid = _ref46.pid;
	    return function (state) {
	        return state.setIn(["data", "products", pid, "currencies", currency, "purposeOfFunds"], value);
	    };
	};
	
	var updatePurposeOfFundsForAll = exports.updatePurposeOfFundsForAll = function updatePurposeOfFundsForAll(value) {
	    return function (state) {
	        var products = state.getIn(["data", "products"]);
	
	        products.map(function (product, productKey) {
	            var currencies = product.get("currencies");
	
	            if (currencies) {
	                currencies.map(function (currency, currencyKey) {
	                    state.setIn(["data", "products", productKey, "currencies", currencyKey, "purposeOfFunds"], value);
	                    state.setIn(["ui", "accountDetails", productKey + "-" + _inputsConstant.PURPOSE_OF_FUNDS + "-" + currencyKey, "isDirty"], true);
	                    state.setIn(["ui", "accountDetails", productKey + "-" + _inputsConstant.PURPOSE_OF_FUNDS + "-" + currencyKey, "isValid"], true);
	                    return state;
	                });
	            }
	            return products;
	        });
	        return state;
	    };
	};
	
	var updatePurposeOfFundsForFx = exports.updatePurposeOfFundsForFx = function updatePurposeOfFundsForFx(action) {
	    return function (state) {
	        var product = state.getIn(["data", "products", action.pid]);
	        var currencies = product.get("currencies");
	        if (currencies) {
	            currencies.map(function (currency, currencyKey) {
	                state.setIn(["data", "products", action.pid, "currencies", currencyKey, "purposeOfFunds"], action.value);
	                state.setIn(["ui", "accountDetails", action.pid + "-" + _inputsConstant.PURPOSE_OF_FUNDS + "-" + currencyKey, "isDirty"], true);
	                state.setIn(["ui", "accountDetails", action.pid + "-" + _inputsConstant.PURPOSE_OF_FUNDS + "-" + currencyKey, "isValid"], true);
	            });
	        }
	        return state;
	    };
	};
	
	var updateSourceOfFundsForFx = exports.updateSourceOfFundsForFx = function updateSourceOfFundsForFx(action) {
	    return function (state) {
	        var product = state.getIn(["data", "products", action.pid]);
	        var currencies = product.get("currencies");
	        if (currencies) {
	            currencies.map(function (currency, currencyKey) {
	                state.setIn(["data", "products", action.pid, "currencies", currencyKey, "sourceOfFunds"], action.value);
	                state.setIn(["ui", "accountDetails", action.pid + "-" + _inputsConstant.SOURCE_OF_FUNDS + "-" + currencyKey, "isDirty"], true);
	                state.setIn(["ui", "accountDetails", action.pid + "-" + _inputsConstant.SOURCE_OF_FUNDS + "-" + currencyKey, "isValid"], true);
	            });
	        }
	        return state;
	    };
	};
	
	var updateCountryOfFundsForFx = exports.updateCountryOfFundsForFx = function updateCountryOfFundsForFx(action) {
	    return function (state) {
	        var product = state.getIn(["data", "products", action.pid]);
	        var currencies = product.get("currencies");
	        if (currencies) {
	            currencies.map(function (currency, currencyKey) {
	                state.setIn(["data", "products", action.pid, "currencies", currencyKey, "countryOfFunds"], action.value);
	                state.setIn(["ui", "accountDetails", action.pid + "-" + _inputsConstant.COUNTRY_OF_FUNDS + "-" + currencyKey, "isDirty"], true);
	                state.setIn(["ui", "accountDetails", action.pid + "-" + _inputsConstant.COUNTRY_OF_FUNDS + "-" + currencyKey, "isValid"], true);
	            });
	        }
	        return state;
	    };
	};
	
	var updateSourceOfFunds = exports.updateSourceOfFunds = function updateSourceOfFunds(_ref47) {
	    var currency = _ref47.currency;
	    var value = _ref47.value;
	    var pid = _ref47.pid;
	    return function (state) {
	        return state.setIn(["data", "products", pid, "currencies", currency, "sourceOfFunds"], value);
	    };
	};
	
	var updateSourceOfFundsForAll = exports.updateSourceOfFundsForAll = function updateSourceOfFundsForAll(value) {
	    return function (state) {
	        var products = state.getIn(["data", "products"]);
	
	        products.map(function (product, productKey) {
	            var currencies = product.get("currencies");
	
	            if (currencies) {
	                currencies.map(function (currency, currencyKey) {
	                    state.setIn(["data", "products", productKey, "currencies", currencyKey, "sourceOfFunds"], value);
	                    state.setIn(["ui", "accountDetails", productKey + "-" + _inputsConstant.SOURCE_OF_FUNDS + "-" + currencyKey, "isDirty"], true);
	                    state.setIn(["ui", "accountDetails", productKey + "-" + _inputsConstant.SOURCE_OF_FUNDS + "-" + currencyKey, "isValid"], true);
	                    return state;
	                });
	            }
	            return products;
	        });
	        return state;
	    };
	};
	
	var updateCountryOfFunds = exports.updateCountryOfFunds = function updateCountryOfFunds(_ref48) {
	    var currency = _ref48.currency;
	    var value = _ref48.value;
	    var pid = _ref48.pid;
	    return function (state) {
	        return state.setIn(["data", "products", pid, "currencies", currency, "countryOfFunds"], value);
	    };
	};
	
	var updateCountryOfFundsForAll = exports.updateCountryOfFundsForAll = function updateCountryOfFundsForAll(value) {
	    return function (state) {
	        var products = state.getIn(["data", "products"]);
	
	        products.map(function (product, productKey) {
	            var currencies = product.get("currencies");
	
	            if (currencies) {
	                currencies.map(function (currency, currencyKey) {
	                    state.setIn(["data", "products", productKey, "currencies", currencyKey, "countryOfFunds"], value);
	                    state.setIn(["ui", "accountDetails", productKey + "-" + _inputsConstant.COUNTRY_OF_FUNDS + "-" + currencyKey, "isDirty"], true);
	                    state.setIn(["ui", "accountDetails", productKey + "-" + _inputsConstant.COUNTRY_OF_FUNDS + "-" + currencyKey, "isValid"], true);
	                    return state;
	                });
	            }
	            return products;
	        });
	        return state;
	    };
	};
	
	var clearData = exports.clearData = function clearData() {
	    return function (state) {
	        return state.setIn((0, _path.dataPath)([]), (0, _immutable.Map)());
	    };
	};
	
	var updateSamePurposeAndSourceOfFundsUi = exports.updateSamePurposeAndSourceOfFundsUi = function updateSamePurposeAndSourceOfFundsUi(value) {
	    return function (state) {
	        return state.setIn(["utils", "samePurposeAndSourceOfFunds"], value);
	    };
	};
	
	// export const updateSamePurposeAndSourceOfFundsData = value => state => {
	//     const currencies = state.getIn(["data", "currencies", "SGD"]);
	//     return state;
	//     // value ? return state
	//     //       : return state.setIn()
	// };
	
	var clearErrorMessage = exports.clearErrorMessage = function clearErrorMessage() {
	    return function (state) {
	        return state.setIn((0, _path.genericErrorPath)(), "");
	    };
	};
	
	var toggleSameStatus = exports.toggleSameStatus = function toggleSameStatus(toggleValue) {
	    return function (state) {
	        return state.setIn(["data", "samePurposeToggle"], toggleValue);
	    };
	};
	
	var updateAllCurrencies = exports.updateAllCurrencies = function updateAllCurrencies(values, pid, currency) {
	    return function (state) {
	        // const products = state.getIn(["data", "products"]);
	        var productCon = state.getIn(["productsData", "products"]);
	        var products = state.getIn(["data", "products"], (0, _immutable.Map)()).filter(function (value, index) {
	            return productCon.getIn([index, "type"], false) === "CASA";
	        });
	        products.map(function (product, productKey) {
	            var currencies = product.get("currencies");
	
	            if (currencies) {
	                currencies.map(function (_, currencyKey) {
	                    state.setIn(["data", "products", productKey, "currencies", currencyKey], values);
	                    state.setIn(["ui", "accountDetails", productKey + "-" + _inputsConstant.PURPOSE_OF_FUNDS + "-" + currencyKey], state.getIn(["ui", "accountDetails", pid + "-" + _inputsConstant.PURPOSE_OF_FUNDS + "-" + currency]));
	                    state.setIn(["ui", "accountDetails", productKey + "-" + _inputsConstant.SOURCE_OF_FUNDS + "-" + currencyKey], state.getIn(["ui", "accountDetails", pid + "-" + _inputsConstant.SOURCE_OF_FUNDS + "-" + currency]));
	                    state.setIn(["ui", "accountDetails", productKey + "-" + _inputsConstant.COUNTRY_OF_FUNDS + "-" + currencyKey], state.getIn(["ui", "accountDetails", pid + "-" + _inputsConstant.COUNTRY_OF_FUNDS + "-" + currency]));
	                    return state;
	                });
	            }
	            return products;
	        });
	        return state;
	    };
	};
	
	// export const setAllPurposeSourceCountryOfFundsTo = (productCurrencies, values) => state => {
	//     console.log(productCurrencies);
	//     console.log(values);
	//
	//     // products.map((product, productKey) => {
	//     //     const currencies = product.get("currencies");
	//     //
	//     //     if (currencies) {
	//     //         currencies.map((_, currencyKey) => {
	//     //             state.setIn(["data", "products", productKey, "currencies", currencyKey], values);
	//     //             state.setIn(
	//     //                 ["ui", "accountDetails", `${productKey}-${PURPOSE_OF_FUNDS}-${currencyKey}`],
	//     //                 state.getIn(["ui", "accountDetails", `${pid}-${PURPOSE_OF_FUNDS}-${currency}`])
	//     //             );
	//     //             state.setIn(
	//     //                 ["ui", "accountDetails", `${productKey}-${SOURCE_OF_FUNDS}-${currencyKey}`],
	//     //                 state.getIn(["ui", "accountDetails", `${pid}-${SOURCE_OF_FUNDS}-${currency}`])
	//     //             );
	//     //             state.setIn(
	//     //                 ["ui", "accountDetails", `${productKey}-${COUNTRY_OF_FUNDS}-${currencyKey}`],
	//     //                 state.getIn(["ui", "accountDetails", `${pid}-${COUNTRY_OF_FUNDS}-${currency}`])
	//     //             );
	//     //         });
	//     //     }
	//     // });
	//     return state;
	// };
	
	var setSignatureImageContent = exports.setSignatureImageContent = function setSignatureImageContent(_ref49) {
	    var step = _ref49.step;
	    var inputId = _ref49.inputId;
	    var value = _ref49.value;
	    return function (state) {
	        return state.setIn((0, _path.uiSignatureImageContentPath)(step, inputId), value);
	    };
	};
	
	var setSignatureImageTmpContent = exports.setSignatureImageTmpContent = function setSignatureImageTmpContent(_ref50) {
	    var step = _ref50.step;
	    var inputId = _ref50.inputId;
	    var value = _ref50.value;
	    return function (state) {
	        return state.setIn((0, _path.uiSignatureImageTmpContentPath)(step, inputId), value);
	    };
	};
	
	var setSignatureImageScale = exports.setSignatureImageScale = function setSignatureImageScale(_ref51) {
	    var step = _ref51.step;
	    var inputId = _ref51.inputId;
	    var value = _ref51.value;
	    return function (state) {
	        return state.setIn((0, _path.uiSignatureImageScalePath)(step, inputId), value);
	    };
	};
	
	var setSignatureImageRotation = exports.setSignatureImageRotation = function setSignatureImageRotation(_ref52) {
	    var step = _ref52.step;
	    var inputId = _ref52.inputId;
	    var value = _ref52.value;
	    return function (state) {
	        return state.setIn((0, _path.uiSignatureImageRotationPath)(step, inputId), value);
	    };
	};
	
	var setSignatureImageX = exports.setSignatureImageX = function setSignatureImageX(_ref53) {
	    var step = _ref53.step;
	    var inputId = _ref53.inputId;
	    var value = _ref53.value;
	    return function (state) {
	        return state.setIn((0, _path.uiSignatureImageXPath)(step, inputId), value);
	    };
	};
	var setSignatureImageY = exports.setSignatureImageY = function setSignatureImageY(_ref54) {
	    var step = _ref54.step;
	    var inputId = _ref54.inputId;
	    var value = _ref54.value;
	    return function (state) {
	        return state.setIn((0, _path.uiSignatureImageYPath)(step, inputId), value);
	    };
	};
	
	var setSignatureImageWidth = exports.setSignatureImageWidth = function setSignatureImageWidth(_ref55) {
	    var step = _ref55.step;
	    var inputId = _ref55.inputId;
	    var value = _ref55.value;
	    return function (state) {
	        return state.setIn((0, _path.uiSignatureImageWidthPath)(step, inputId), value);
	    };
	};
	
	var setSignatureImageHeight = exports.setSignatureImageHeight = function setSignatureImageHeight(_ref56) {
	    var step = _ref56.step;
	    var inputId = _ref56.inputId;
	    var value = _ref56.value;
	    return function (state) {
	        return state.setIn((0, _path.uiSignatureImageHeightPath)(step, inputId), value);
	    };
	};
	
	var setDrawSignatureCanvasTouched = exports.setDrawSignatureCanvasTouched = function setDrawSignatureCanvasTouched(_ref57) {
	    var step = _ref57.step;
	    var inputId = _ref57.inputId;
	    var value = _ref57.value;
	    return function (state) {
	        return state.setIn((0, _path.uiDrawSignatureIsTouchedPath)(step, inputId), value);
	    };
	};
	
	var setDrawSignatureToEditable = exports.setDrawSignatureToEditable = function setDrawSignatureToEditable(_ref58) {
	    var step = _ref58.step;
	    var inputId = _ref58.inputId;
	    return function (state) {
	        return state.setIn((0, _path.uiDrawSignatureIsEditablePath)(step, inputId), true);
	    };
	};
	
	var setDrawSignatureToNonEditable = exports.setDrawSignatureToNonEditable = function setDrawSignatureToNonEditable(_ref59) {
	    var step = _ref59.step;
	    var inputId = _ref59.inputId;
	    return function (state) {
	        return state.setIn((0, _path.uiDrawSignatureIsEditablePath)(step, inputId), false);
	    };
	};
	
	var setDrawSignatureStatus = exports.setDrawSignatureStatus = function setDrawSignatureStatus(_ref60) {
	    var step = _ref60.step;
	    var inputId = _ref60.inputId;
	    var value = _ref60.value;
	    return function (state) {
	        // const isCanvasTouched = state.getIn(uiDrawSignatureIsTouchedPath(step, inputId)) && inputId === "drawSignature";
	        return value && inputId === "drawSignature" ? state.setIn((0, _path.uiIsValidPath)(step, inputId), true) : state.setIn((0, _path.uiIsValidPath)(step, inputId), false);
	    };
	};
	
	var setDrawSignatureDirtyToFalse = exports.setDrawSignatureDirtyToFalse = function setDrawSignatureDirtyToFalse(_ref61) {
	    var step = _ref61.step;
	    var inputId = _ref61.inputId;
	    return function (state) {
	        return state.setIn((0, _path.uiIsDirtyPath)(step, inputId), false);
	    };
	};
	
	var setSignatureStatusToTrue = exports.setSignatureStatusToTrue = function setSignatureStatusToTrue(_ref62) {
	    var step = _ref62.step;
	    var inputId = _ref62.inputId;
	    return function (state) {
	        return state.setIn((0, _path.uiIsValidPath)(step, inputId), true);
	    };
	};
	
	var updateAppFlow = exports.updateAppFlow = function updateAppFlow(action) {
	    return function (state) {
	        var _action$data = action.data;
	        var uobCustomerFlag = _action$data.uobCustomerFlag;
	        var existingToProductFlag = _action$data.existingToProductFlag;
	
	        var flow = "NTB";
	        flow = uobCustomerFlag === "Y" ? "ETB" : flow;
	        flow = existingToProductFlag === "Y" ? "ETP" : flow;
	        return state.setIn((0, _path.flowPath)(), flow);
	    };
	};
	
	var addMyInfoFlag = exports.addMyInfoFlag = function addMyInfoFlag(action) {
	    return function (state) {
	        var myInfo = action.data.myInfo;
	        var isMyInfo = myInfo && (Object.keys(myInfo) !== 0 || myInfo !== null);
	        return state.setIn((0, _path.myInfoFlagPath)(), isMyInfo);
	    };
	};
	
	var myInfoDownAndNotRequired = exports.myInfoDownAndNotRequired = function myInfoDownAndNotRequired(action) {
	    return function (state) {
	        if (action.data.status === "MYINFO_SERVICE_DOWN_NOT_REQ") {
	            return state.setIn((0, _path.genericErrorPath)(), action.formData.formInputErrorMessages.myInfoDownAndNotRequired);
	        }
	        return state;
	    };
	};
	
	var myInfoDownAndRequired = exports.myInfoDownAndRequired = function myInfoDownAndRequired(action) {
	    return function (state) {
	        if (action.data.status === "MYINFO_SERVICE_DOWN_REQ") {
	            return state.setIn((0, _path.dialogModalPath)("myInfoDownModal"), true);
	        }
	        return state;
	    };
	};
	
	var myInfoIncompleteAndRequired = exports.myInfoIncompleteAndRequired = function myInfoIncompleteAndRequired(action) {
	    return function (state) {
	        if (action.data.status === "MYINFO_INCOMPLETE_REQ") {
	            return state.setIn((0, _path.dialogModalPath)("myInfoModal"), true);
	        }
	        return state;
	    };
	};
	
	var myInfoIncompleteAndNotRequired = exports.myInfoIncompleteAndNotRequired = function myInfoIncompleteAndNotRequired(action) {
	    return function (state) {
	        if (action.data.status === "MYINFO_INCOMPLETE_NOT_REQ") {
	            return state.setIn((0, _path.genericErrorPath)(), action.formData.formInputErrorMessages.myInfoIncompleteAndNotRequired);
	        }
	        return state;
	    };
	};
	
	var showPageLoading = exports.showPageLoading = function showPageLoading() {
	    return function (state) {
	        return state.setIn((0, _path.pageLoadingPath)(), true);
	    };
	};
	
	var hidePageLoading = exports.hidePageLoading = function hidePageLoading() {
	    return function (state) {
	        return state.setIn((0, _path.pageLoadingPath)(), false);
	    };
	};
	
	var openAccordian = exports.openAccordian = function openAccordian(_ref63) {
	    var step = _ref63.step;
	    var inputId = _ref63.inputId;
	    return function (state) {
	        return state.setIn((0, _path.accordianPath)(step, inputId), true);
	    };
	};
	
	var closeAccordian = exports.closeAccordian = function closeAccordian(_ref64) {
	    var step = _ref64.step;
	    var inputId = _ref64.inputId;
	    return function (state) {
	        return state.setIn((0, _path.accordianPath)(step, inputId), false);
	    };
	};
	
	var setFinalSubmitStatus = exports.setFinalSubmitStatus = function setFinalSubmitStatus(action) {
	    return function (state) {
	        return action.currentStep === "summary" ? state.setIn((0, _path.isFinalSubmitPath)(), true) : state;
	    };
	};
	
	var removeDataFromState = exports.removeDataFromState = function removeDataFromState(action) {
	    return function (state) {
	        var stepToExclude = ["accountDetails"];
	        var inputsToExclude = ["mailingCountry"];
	        var isFinalSubmit = state.getIn((0, _path.isFinalSubmitPath)());
	        if (isFinalSubmit || inputsToExclude.includes(action.inputId) || stepToExclude.includes(action.step)) {
	            return state;
	        }
	        return state.setIn((0, _path.dataPath)([action.inputId]), "");
	    };
	};
	
	var selectPendingApplication = exports.selectPendingApplication = function selectPendingApplication(action) {
	    return function (state) {
	        var currentPendingApplicationSelected = state.getIn((0, _path.dataPath)([action.inputId]), (0, _immutable.List)());
	        var pendingApplication = (0, _immutable.Map)({
	            id: action.pid,
	            applicationNumber: action.applicationNo
	        });
	        var newPendingApplicationSelected = currentPendingApplicationSelected.push(pendingApplication);
	        return state.setIn((0, _path.dataPath)([action.inputId]), newPendingApplicationSelected);
	    };
	};
	
	var removePendingApplication = exports.removePendingApplication = function removePendingApplication(action) {
	    return function (state) {
	        var currentPendingApplicationSelected = state.getIn((0, _path.dataPath)([action.inputId]), (0, _immutable.List)());
	        var newPendingApplicationSelected = currentPendingApplicationSelected.filter(function (application) {
	            return application.get("applicationNumber") !== action.applicationNumber;
	        });
	        return state.setIn((0, _path.dataPath)([action.inputId]), newPendingApplicationSelected);
	    };
	};
	
	var selectTableRow = exports.selectTableRow = function selectTableRow(action) {
	    return function (state) {
	        var newState1 = state.setIn((0, _path.dataPath)(["products", action.pid, "tenor"]), action.tenor);
	        var newState2 = newState1.setIn((0, _path.dataPath)(["products", action.pid, "promotionCode"]), action.promotionCode);
	        return newState2.setIn((0, _path.dataPath)(["products", action.pid, "promotionCodeTenor"]), action.promotionCode + action.tenor);
	    };
	};
	
	var expandTableRow = exports.expandTableRow = function expandTableRow(action) {
	    return function (state) {
	        return state.setIn((0, _path.tableStatePath)(action.inputId, action.index), true);
	    };
	};
	
	var collapseTableRow = exports.collapseTableRow = function collapseTableRow(action) {
	    return function (state) {
	        return state.setIn((0, _path.tableStatePath)(action.inputId, action.index), false);
	    };
	};
	
	var addTenorDataToState = exports.addTenorDataToState = function addTenorDataToState(action) {
	    return function (state) {
	        return state.setIn((0, _path.tenorTableDataPath)(action.pid), (0, _immutable.fromJS)((action.data.promotionCodeList || []).sort(function (a, b) {
	            return a.tenor < b.tenor;
	        })));
	    };
	};
	
	var addBankListToState = exports.addBankListToState = function addBankListToState(action) {
	    return function (state) {
	        var productId = state.getIn((0, _path.productIdPath)());
	        var isUseBankCode = _inputsConstant.LOAN_TRANFER_TYPES.indexOf(productId) > -1 ? true : false;
	        var mapBankData = action.data.map(function (bank) {
	            return { value: isUseBankCode ? bank.bankCode : bank.bicCode, label: bank.bankName };
	        });
	        return state.setIn((0, _path.bankListDataPath)(), (0, _immutable.fromJS)(mapBankData));
	    };
	};
	
	var removeKFData = exports.removeKFData = function removeKFData(action) {
	    return function (state) {
	        if (action.inputId === "CURKF-krisflyerMembershipStatus") {
	            return state.setIn(["data", "products", "CURKF", "krisflyerMembershipNumber"], "");
	        }
	        return state;
	    };
	};
	
	var closeDialogModal = exports.closeDialogModal = function closeDialogModal(action) {
	    return function (state) {
	        return state.setIn((0, _path.dialogModalPath)(action.dialogType), false);
	    };
	};
	/************************
	 ** ERRORS & VALIDATION **
	 *************************/
	
	var matchErrorsMsgToInputs = exports.matchErrorsMsgToInputs = function matchErrorsMsgToInputs(action) {
	    return function (state) {
	        var error = (0, _immutable.fromJS)(action.error);
	        var stepUi = state.getIn((0, _path.uiStepPath)(action.currentStep));
	        var filterError = error.map(function (input) {
	            return input.filter(function (v, k) {
	                return k === "errorMsg";
	            }).set("isValid", false).set("isDirty", true);
	        });
	        var newUi = stepUi.mergeDeep(filterError);
	        return state.setIn((0, _path.uiStepPath)(action.currentStep), newUi);
	    };
	};
	
	var setDefaultFieldsToValid = exports.setDefaultFieldsToValid = function setDefaultFieldsToValid() {
	    return function (state) {
	        var newState = state.setIn((0, _path.uiIsDirtyPath)("personalInfo", _inputsConstant.COUNTRY_OF_RESIDENCE), true);
	        return !newState.getIn((0, _path.dataPath)([_inputsConstant.EDUCATION_LEVEL]), "") ? newState : state.setIn((0, _path.uiIsValidPath)("personalInfo", _inputsConstant.EDUCATION_LEVEL), true);
	    };
	};
	
	var setFieldsToValid = exports.setFieldsToValid = function setFieldsToValid() {
	    return function (state) {
	        var inputsToSetValid = state.getIn((0, _path.dataPath)([])).filter(function (v) {
	            return v;
	        }).keySeq();
	        var validState = (0, _immutable.Map)({ isValid: true });
	        var uiCurrentState = state.getIn(_path.ui, (0, _immutable.Map)());
	        var filteredKeys = uiCurrentState.filter(function (step) {
	            return step.filter(function (inputKeys, input) {
	                return inputsToSetValid.includes(input);
	            }).count() > 0;
	        });
	        var updateFilteredKey = filteredKeys.map(function (filteredStep) {
	            return filteredStep.map(function (inputKeys, input) {
	                if (!inputKeys) {
	                    return inputKeys;
	                }
	                return inputsToSetValid.includes(input) ? inputKeys.merge(validState) : inputKeys;
	            });
	        });
	        var updatedState = uiCurrentState.merge(updateFilteredKey);
	        return state.setIn(_path.ui, updatedState);
	    };
	};
	
	var setFieldsToDirty = exports.setFieldsToDirty = function setFieldsToDirty() {
	    return function (state) {
	        var inputsToSetValid = state.getIn((0, _path.dataPath)([])).filter(function (v) {
	            return v;
	        }).keySeq();
	        var validState = (0, _immutable.Map)({ isDirty: true });
	        var uiCurrentState = state.getIn(_path.ui, (0, _immutable.Map)());
	        var filteredKeys = uiCurrentState.filter(function (step) {
	            return step.filter(function (inputKeys, input) {
	                return inputsToSetValid.includes(input);
	            }).count() > 0;
	        });
	        var updateFilteredKey = filteredKeys.map(function (filteredStep) {
	            return filteredStep.map(function (inputKeys, input) {
	                return inputsToSetValid.includes(input) ? inputKeys.merge(validState) : inputKeys;
	            });
	        });
	        var updatedState = uiCurrentState.merge(updateFilteredKey);
	        return state.setIn(_path.ui, updatedState);
	    };
	};
	
	var updatePhoneValidState = exports.updatePhoneValidState = function updatePhoneValidState() {
	    return function (state) {
	        var phoneNumber = state.getIn(["data", "mobileNumber"], "");
	        return phoneNumber.length === 3 ? state.setIn((0, _path.uiIsValidPath)("basicInfo", "mobileNumber"), false) : state;
	    };
	};
	
	var addValidFlag = exports.addValidFlag = function addValidFlag(_ref65) {
	    var step = _ref65.step;
	    var inputId = _ref65.inputId;
	    return function (state) {
	        return state.setIn((0, _path.uiIsValidPath)(step, inputId), true);
	    };
	};
	
	var showErrorMsg = exports.showErrorMsg = function showErrorMsg(_ref66) {
	    var step = _ref66.step;
	    var inputId = _ref66.inputId;
	    var msg = _ref66.msg;
	    return function (state) {
	        var doesErrorMsgExist = state.getIn((0, _path.uiErrorMsgPath)(step, inputId));
	        return doesErrorMsgExist ? state : state.setIn((0, _path.uiErrorMsgPath)(step, inputId), msg);
	    };
	};
	
	var editNameOnCard = exports.editNameOnCard = function editNameOnCard(productIds, cardType, value, status) {
	    return function (state) {
	        var mutation = productIds.reduce(function (acc, productCode) {
	            return acc.setIn(["data", "products", productCode, "nameOnCard"], value);
	        }, state);
	
	        mutation.setIn(["ui", "accountDetails", _inputsConstant.NAME_ON_CARD + "_" + cardType, "value"], value);
	        mutation.setIn(["ui", "accountDetails", _inputsConstant.NAME_ON_CARD + "_" + cardType, "isValid"], status.length === 0);
	        mutation.setIn(["ui", "accountDetails", _inputsConstant.NAME_ON_CARD + "_" + cardType, "isDirty"], true);
	        if (status.length !== 0) {
	            mutation.setIn(["ui", "accountDetails", _inputsConstant.NAME_ON_CARD + "_" + cardType, "errorMsg"], status[0].errorMsg);
	        }
	
	        return mutation;
	    };
	};
	
	var updateDailyCardLimit = exports.updateDailyCardLimit = function updateDailyCardLimit(productIds, cardType, value) {
	    return function (state) {
	        var mutation = productIds.reduce(function (acc, productCode) {
	            return acc.setIn(["data", "products", productCode, "dailyCardLimit"], value);
	        }, state);
	
	        mutation.setIn(["ui", "accountDetails", _inputsConstant.CARD_LIMIT + "_" + cardType, "value"], value);
	        mutation.setIn(["ui", "accountDetails", _inputsConstant.CARD_LIMIT + "_" + cardType, "isValid"], true);
	        mutation.setIn(["ui", "accountDetails", _inputsConstant.CARD_LIMIT + "_" + cardType, "isFocus"], false);
	        mutation.setIn(["ui", "accountDetails", _inputsConstant.CARD_LIMIT + "_" + cardType, "isDirty"], true);
	
	        return mutation;
	    };
	};
	
	var updateCreditLimit = exports.updateCreditLimit = function updateCreditLimit(productIds, cardType, value) {
	    return function (state) {
	        if (cardType === "700778") {
	            return state;
	        }
	
	        var mutation = productIds.reduce(function (acc, productCode) {
	            return acc.setIn(["data", "products", productCode, _inputsConstant.CREDIT_LIMIT], value);
	        }, state);
	
	        mutation.setIn(["ui", "accountDetails", _inputsConstant.CREDIT_LIMIT + "_" + cardType, "value"], value);
	        mutation.setIn(["ui", "accountDetails", _inputsConstant.CREDIT_LIMIT + "_" + cardType, "isValid"], true);
	        mutation.setIn(["ui", "accountDetails", _inputsConstant.CREDIT_LIMIT + "_" + cardType, "isFocus"], false);
	        mutation.setIn(["ui", "accountDetails", _inputsConstant.CREDIT_LIMIT + "_" + cardType, "isDirty"], true);
	
	        return mutation;
	    };
	};
	
	var editAtmAccess = exports.editAtmAccess = function editAtmAccess(productIds, cardType, value) {
	    return function (state) {
	        var mutation = productIds.reduce(function (acc, productCode) {
	            if (productCode === "CURFX") {
	                return acc.setIn(["data", "products", productCode, "atmAccess"], true);
	            }
	            return acc.setIn(["data", "products", productCode, "atmAccess"], value);
	        }, state);
	
	        mutation.setIn(["ui", "accountDetails", _inputsConstant.ACTIVATE_ATM + "_" + cardType, "value"], value);
	
	        return mutation;
	    };
	};
	
	var setValidTrueForCountryOfFunds = exports.setValidTrueForCountryOfFunds = function setValidTrueForCountryOfFunds(action) {
	    return function (state) {
	        var productId = action.productCurrencies.keySeq().first();
	        var currencies = action.productCurrencies.first();
	        currencies.map(function (currency) {
	            return state.setIn((0, _path.uiIsValidPath)("accountDetails", productId + "-countryOfFunds-" + currency), true);
	        });
	        return state;
	    };
	};
	
	var setDirtyTrueForCountryOfFunds = exports.setDirtyTrueForCountryOfFunds = function setDirtyTrueForCountryOfFunds(action) {
	    return function (state) {
	        var productId = action.productCurrencies.keySeq().first();
	        var currencies = action.productCurrencies.first();
	        currencies.map(function (currency) {
	            return state.setIn((0, _path.uiIsDirtyPath)("accountDetails", productId + "-countryOfFunds-" + currency), true);
	        });
	        return state;
	    };
	};
	
	/*****************
	 ** ARCHITECTURE **
	 ******************/
	
	var removeKrisOrAsia = exports.removeKrisOrAsia = function removeKrisOrAsia(action) {
	    return function (state) {
	        return state.deleteIn(action.path);
	    };
	};
	
	var removeBillingProof = exports.removeBillingProof = function removeBillingProof() {
	    return function (state) {
	        return state.deleteIn(["ui", "uploadDocuments", "uploadDocumentsBillingProof"]);
	    };
	};
	
	var addSection = exports.addSection = function addSection(action) {
	    return function (state) {
	        return state.setIn(["data", "sections"], action.value);
	    };
	};
	
	var changeStep = exports.changeStep = function changeStep() {
	    return function (state) {
	        return state.setIn((0, _path.currentStepPath)(), state.getIn((0, _path.shownStepsPath)()).last());
	    };
	};
	
	var addFirstStepToShownStep = exports.addFirstStepToShownStep = function addFirstStepToShownStep() {
	    return function (state) {
	        var appStructure = state.getIn(_path.ui, (0, _immutable.Map)());
	        var firstStep = appStructure.keySeq().first();
	        var newShownSteps = (0, _immutable.List)().push(firstStep);
	        return state.setIn((0, _path.shownStepsPath)(), newShownSteps);
	    };
	};
	
	var addFirstStepToCurrentStep = exports.addFirstStepToCurrentStep = function addFirstStepToCurrentStep() {
	    return function (state) {
	        var firstStep = state.getIn((0, _path.shownStepsPath)()).get(0);
	        return state.setIn((0, _path.currentStepPath)(), firstStep);
	    };
	};
	
	var setGenericError = exports.setGenericError = function setGenericError(_ref67) {
	    var error = _ref67.error;
	    return function (state) {
	        return state.setIn((0, _path.genericErrorPath)(), error);
	    };
	};
	
	var changeTransitToStep = exports.changeTransitToStep = function changeTransitToStep(_ref68) {
	    var transitTo = _ref68.transitTo;
	    return function (state) {
	        return state.setIn((0, _path.transitToPath)(), transitTo);
	    };
	};
	
	var changeTransitFromStep = exports.changeTransitFromStep = function changeTransitFromStep(_ref69) {
	    var transitFrom = _ref69.transitFrom;
	    return function (state) {
	        return state.setIn((0, _path.transitFromPath)(), transitFrom);
	    };
	};
	
	var addShownSteps = exports.addShownSteps = function addShownSteps(_ref70) {
	    var transitTo = _ref70.transitTo;
	    return function (state) {
	        var currentShownSteps = state.getIn((0, _path.shownStepsPath)(), (0, _immutable.List)());
	        var newShownSteps = currentShownSteps.push(transitTo);
	        return state.setIn((0, _path.shownStepsPath)(), newShownSteps);
	    };
	};
	
	var removeOtpStepFromShownStep = exports.removeOtpStepFromShownStep = function removeOtpStepFromShownStep() {
	    return function (state) {
	        return state.setIn((0, _path.uiStepPath)("otp"), (0, _immutable.Map)());
	    };
	};
	
	var removeSummaryStepFromShownStep = exports.removeSummaryStepFromShownStep = function removeSummaryStepFromShownStep() {
	    return function (state) {
	        var currentShownSteps = state.getIn((0, _path.shownStepsPath)());
	        var filteredSummaryStep = currentShownSteps.filter(function (step) {
	            return step !== "summary";
	        });
	
	        return state.setIn((0, _path.shownStepsPath)(), filteredSummaryStep);
	    };
	};
	
	var addPreSummaryStepsToShownSteps = exports.addPreSummaryStepsToShownSteps = function addPreSummaryStepsToShownSteps() {
	    return function (state) {
	        var stepsToShow = state.getIn(_path.ui).keySeq().butLast().toList();
	
	        return state.setIn((0, _path.shownStepsPath)(), stepsToShow);
	    };
	};
	
	var filterOnlySummaryStepFromShownStep = exports.filterOnlySummaryStepFromShownStep = function filterOnlySummaryStepFromShownStep(_ref71) {
	    var value = _ref71.value;
	    return function (state) {
	        if (value === "summary") {
	            var currentShownSteps = state.getIn((0, _path.shownStepsPath)());
	            var filteredSummaryStep = currentShownSteps.filter(function (step) {
	                return step === "summary";
	            });
	            return state.setIn((0, _path.shownStepsPath)(), filteredSummaryStep);
	        }
	        return state;
	    };
	};
	
	var setInputToReadOnly = exports.setInputToReadOnly = function setInputToReadOnly() {
	    return function (state) {
	        // const readOnlyFields = fromJS(data.readonly).filter(f => f);
	        var readOnlyFields = state.getIn((0, _path.readOnlyPath)(), (0, _immutable.Map)()).filter(function (f) {
	            return f;
	        });
	        var uiCurrentState = state.getIn(_path.ui, (0, _immutable.Map)());
	        var mapKeysWithReadOnly = uiCurrentState.map(function (step) {
	            return step.map(function (inputKeys, input) {
	                if (inputKeys) {
	                    return readOnlyFields.has(input) ? inputKeys.set("readOnly", true) : inputKeys.set("readOnly", false);
	                }
	                return (0, _immutable.Map)();
	            });
	        });
	        return state.setIn(_path.ui, mapKeysWithReadOnly);
	    };
	};
	
	var setReadOnlyToStore = exports.setReadOnlyToStore = function setReadOnlyToStore(_ref72) {
	    var data = _ref72.data;
	    return function (state) {
	        if (data.readonly) {
	            var currentReadOnly = state.getIn((0, _path.readOnlyPath)(), (0, _immutable.Map)());
	            return state.setIn((0, _path.readOnlyPath)(), (0, _immutable.Map)(data.readonly).merge(currentReadOnly));
	        }
	        return state;
	    };
	};
	
	var setAnnualIncomeNotAvailable = exports.setAnnualIncomeNotAvailable = function setAnnualIncomeNotAvailable(_ref73) {
	    var data = _ref73.data;
	    return function (state) {
	        if (state.getIn([].concat(_toConsumableArray((0, _path.readOnlyPath)()), [_inputsConstant.ANNUAL_INCOME])) && data.form && !data.form.annualIncome) {
	            var modifiedState = state.setIn((0, _path.dataPath)([_inputsConstant.ANNUAL_INCOME]), "0");
	            return modifiedState.setIn((0, _path.annualIncomeNotAvailFlagPath)(), true);
	        }
	        return state;
	    };
	};
	
	var fullApplicationSuccess = exports.fullApplicationSuccess = function fullApplicationSuccess(data) {
	    return function (state) {
	        var productsApplied = Object.keys(data.referenceNum).map(function (productId) {
	            return {
	                pid: productId,
	                referenceNo: data.referenceNum[productId].no
	            };
	        });
	        return state.setIn((0, _path.productsAppliedPath)(), (0, _immutable.fromJS)(productsApplied));
	    };
	};
	
	var initAccountDetailsWithCasa = exports.initAccountDetailsWithCasa = function initAccountDetailsWithCasa(_ref74) {
	    var productCurrencies = _ref74.productCurrencies;
	    var defaultValues = _ref74.defaultValues;
	    return function (state) {
	        productCurrencies.map(function (currenciesList, productId) {
	            var currencies = currenciesList.reduce(function (acc, currency) {
	                return acc.set(currency, defaultValues);
	            }, (0, _immutable.Map)());
	            var sameToggle = state.getIn(["data", "samePurposeToggle"], true);
	
	            state.setIn(["data", "products", productId, "currencies"], currencies);
	
	            currencies.map(function (currency, currencyKey) {
	                var purpose = defaultValues.get("purposeOfFunds", "") === "" ? false : true;
	                var source = defaultValues.get("sourceOfFunds", "") === "" ? false : true;
	                var country = defaultValues.get("countryOfFunds", "") === "" ? false : true;
	
	                if (!sameToggle) {
	                    state.setIn(["ui", "accountDetails", productId + "-" + _inputsConstant.PURPOSE_OF_FUNDS + "-" + currencyKey, "isValid"], purpose);
	                    state.setIn(["ui", "accountDetails", productId + "-" + _inputsConstant.PURPOSE_OF_FUNDS + "-" + currencyKey, "isDirty"], false);
	                    state.setIn(["ui", "accountDetails", productId + "-" + _inputsConstant.SOURCE_OF_FUNDS + "-" + currencyKey, "isValid"], source);
	                    state.setIn(["ui", "accountDetails", productId + "-" + _inputsConstant.SOURCE_OF_FUNDS + "-" + currencyKey, "isDirty"], false);
	                }
	                state.setIn(["ui", "accountDetails", productId + "-" + _inputsConstant.COUNTRY_OF_FUNDS + "-" + currencyKey, "isValid"], country);
	                state.setIn(["ui", "accountDetails", productId + "-" + _inputsConstant.COUNTRY_OF_FUNDS + "-" + currencyKey, "isDirty"], true);
	
	                return state;
	            });
	            return currencies;
	        });
	        return state;
	    };
	};
	
	var setPriority = exports.setPriority = function setPriority(action) {
	    return function (state) {
	        var productCon = state.getIn(["productsData", "products", action.pid], (0, _immutable.Map)());
	        return state.setIn(["data", "products", action.pid, "rank"], productCon.getIn(["rank"], 0));
	    };
	};
	
	var removeProductData = exports.removeProductData = function removeProductData(pid) {
	    return function (state) {
	        return state.removeIn(["data", "products", pid]);
	    };
	};
	
	var removeCrossProductUi = exports.removeCrossProductUi = function removeCrossProductUi(action) {
	    return function (state) {
	        var uiState = state.getIn(["ui", "accountDetails"]);
	        var newUIState = uiState.filter(function (acc, value) {
	            if (!value) {
	                return true;
	            }
	            return !value.includes(action.pid);
	        });
	        return state.setIn(["ui", "accountDetails"], newUIState);
	    };
	};
	
	var addInputToUIState = exports.addInputToUIState = function addInputToUIState(_ref75) {
	    var step = _ref75.step;
	    var inputId = _ref75.inputId;
	    return function (state) {
	        var uiDefaultState = (0, _immutable.Map)({
	            isFocus: false,
	            isDirty: false,
	            isValid: false,
	            errorMsg: ""
	        });
	        var currentState = state.getIn(["ui", step, inputId], (0, _immutable.Map)());
	        return state.setIn(["ui", step, inputId], uiDefaultState.merge(currentState));
	    };
	};
	
	var removeInputToUIState = exports.removeInputToUIState = function removeInputToUIState(_ref76) {
	    var step = _ref76.step;
	    var inputId = _ref76.inputId;
	    return function (state) {
	        var isFinalSubmit = state.getIn((0, _path.isFinalSubmitPath)());
	        if (isFinalSubmit) {
	            return state;
	        }
	        return state.setIn(["ui", step], state.getIn(["ui", step]).remove(inputId));
	    };
	};
	
	var addCrossProduct = exports.addCrossProduct = function addCrossProduct(_ref77) {
	    var pid = _ref77.pid;
	    return function (state) {
	        var currentProductIds = state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	        var newProductIds = currentProductIds.push(pid);
	        return state.setIn((0, _path.productIdPath)(), newProductIds);
	    };
	};
	
	var removeCrossProduct = exports.removeCrossProduct = function removeCrossProduct(_ref78) {
	    var pid = _ref78.pid;
	    return function (state) {
	        var currentProductIds = state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	        var newProductIds = currentProductIds.filter(function (x) {
	            return x !== pid;
	        });
	        return state.setIn((0, _path.productIdPath)(), newProductIds);
	    };
	};
	
	var addStepToState = exports.addStepToState = function addStepToState() {
	    return function (state) {
	        // if (action.currentStep === "summary" && state.getIn(isFinalSubmitPath())) {
	        //     console.log(state);
	        //     return state;
	        // }
	        // console.log("running");
	        var currentShownSteps = state.getIn((0, _path.shownStepsPath)(), (0, _immutable.List)());
	        var uiState = state.getIn(_path.ui, (0, _immutable.Map)());
	        var currentStep = state.getIn((0, _path.currentStepPath)());
	        var stepSupposedToShow = uiState.filter(function (x) {
	            return x.count();
	        }).map(function (value, step) {
	            return step;
	        }).toList();
	        var currentStepIndex = stepSupposedToShow.indexOf(currentStep);
	        var newShownSteps = stepSupposedToShow.filter(function (step, i) {
	            return i <= currentStepIndex;
	        });
	        var mergeShownSteps = currentShownSteps.count() < newShownSteps.count() ? currentShownSteps.merge(newShownSteps) : currentShownSteps;
	        return state.setIn((0, _path.shownStepsPath)(), mergeShownSteps);
	    };
	};
	
	var removeStepFromState = exports.removeStepFromState = function removeStepFromState() {
	    return function (state) {
	        var currentShownSteps = state.getIn((0, _path.shownStepsPath)(), (0, _immutable.List)());
	        var uiState = state.getIn(_path.ui, (0, _immutable.Map)());
	        var stepToRemove = uiState.filter(function (x) {
	            return !x.count();
	        }).map(function (value, step) {
	            return step;
	        }).toList();
	        var newShownSteps = currentShownSteps.filter(function (step) {
	            return !stepToRemove.includes(step);
	        });
	        return state.setIn((0, _path.shownStepsPath)(), newShownSteps);
	    };
	};
	
	var updateCurrentStep = exports.updateCurrentStep = function updateCurrentStep() {
	    return function (state) {
	        var currentShownSteps = state.getIn((0, _path.shownStepsPath)(), (0, _immutable.List)());
	        var lastStep = currentShownSteps.last();
	        return state.setIn((0, _path.currentStepPath)(), lastStep);
	    };
	};
	
	var updatePendingApplication = exports.updatePendingApplication = function updatePendingApplication(action) {
	    return function (state) {
	        return state.setIn((0, _path.pendingApplicationPath)(), (0, _immutable.fromJS)(action.data.productId));
	    };
	};
	
	var removePendingApplicationFromUi = exports.removePendingApplicationFromUi = function removePendingApplicationFromUi(action) {
	    return function (state) {
	        return action.data.productId.length > 0 ? state : state.setIn((0, _path.uiStepPath)("pendingApplication"), (0, _immutable.Map)());
	    };
	};
	
	var removePendingStep = exports.removePendingStep = function removePendingStep() {
	    return function (state) {
	        return state.setIn((0, _path.uiStepPath)("pendingApplication"), (0, _immutable.Map)());
	    };
	};
	
	var removePendingStepForPartial = exports.removePendingStepForPartial = function removePendingStepForPartial(action) {
	    return function (state) {
	        if (action.currentStep === "pendingApplication" && action.nextStep === "accountDetails") {
	            return state.setIn((0, _path.uiStepPath)("pendingApplication"), (0, _immutable.Map)());
	        }
	        return state;
	    };
	};
	
	var addProductIdToStore = exports.addProductIdToStore = function addProductIdToStore() {
	    return function (state) {
	        // const products = fromJS({[action.data.productId[0]]: {}});
	        // return state.setIn(dataPath(["products"]), products);
	        return state;
	    };
	};
	
	var mapPendingAppData = exports.mapPendingAppData = function mapPendingAppData() {
	    return function (state) {
	        return state;
	    };
	};
	
	var generateProductCachedDataAndValidations = exports.generateProductCachedDataAndValidations = function generateProductCachedDataAndValidations(productsData) {
	    return function (state) {
	        var products = state.getIn((0, _path.dataPath)(["products"]), (0, _immutable.Map)());
	        var productCachedDataAndValidations = products.reduce(function (uiMap, productProp, pid) {
	            var _productData;
	
	            var familyType = productsData.products[pid].family;
	            var defaultValues = (0, _immutable.Map)({
	                isValid: true,
	                isDirty: true
	            });
	            var productData = (_productData = {}, _defineProperty(_productData, "nameOntheCard_" + familyType, defaultValues.merge((0, _immutable.Map)({ value: productProp.get("nameOnCard") }))), _defineProperty(_productData, "cardLimit_" + familyType, defaultValues.merge((0, _immutable.Map)({ value: productProp.get("dailyCardLimit") }))), _defineProperty(_productData, "creditLimit_" + familyType, defaultValues.merge((0, _immutable.Map)({ value: productProp.get("creditLimit") }))), _defineProperty(_productData, "activateAtms_" + familyType, defaultValues.merge((0, _immutable.Map)({ value: productProp.get("atmAccess") }))), _productData);
	            if (productProp.get("krisflyerMembershipNumber")) {
	                productData[pid + "-krisflyerMembershipNumber"] = defaultValues;
	            }
	            if (productProp.get("krisflyerMembershipFName")) {
	                productData[pid + "-krisflyerMembershipFName"] = defaultValues;
	            }
	            if (productProp.get("krisflyerMembershipLName")) {
	                productData[pid + "-krisflyerMembershipLName"] = defaultValues;
	            }
	            if (productProp.get("singtelMembershipNumber")) {
	                productData["singtelMembershipNumber"] = defaultValues;
	            }
	
	            return uiMap.merge((0, _immutable.Map)(productData));
	        }, (0, _immutable.Map)());
	        return state.mergeIn((0, _path.uiStepPath)("accountDetails"), productCachedDataAndValidations);
	    };
	};
	
	var generateSAVJSValidations = exports.generateSAVJSValidations = function generateSAVJSValidations() {
	    return function (state) {
	        var products = state.getIn((0, _path.dataPath)(["products"]));
	        var productCachedDataAndValidations = products.reduce(function (uiMap, productProp) {
	            var defaultValues = (0, _immutable.Map)({
	                isValid: true,
	                isDirty: true
	            });
	            var productData = {};
	            if (productProp.get("juniorSaverName")) {
	                productData["juniorSaverName"] = defaultValues;
	            }
	            if (productProp.get("juniorSaverGender")) {
	                productData["juniorSaverGender"] = defaultValues;
	            }
	            if (productProp.get("juniorSaverDOB")) {
	                productData["juniorSaverDOB"] = defaultValues;
	            }
	            if (productProp.get("juniorSaverBirthCert")) {
	                productData["juniorSaverBirthCert"] = defaultValues;
	            }
	            if (productProp.get("juniorSaverNationality")) {
	                productData["juniorSaverNationality"] = defaultValues;
	            }
	            if (productProp.get("juniorSaverCountryOfBirth")) {
	                productData["juniorSaverCountryOfBirth"] = defaultValues;
	            }
	            return uiMap.merge((0, _immutable.Map)(productData));
	        }, (0, _immutable.Map)());
	        return state.mergeIn((0, _path.uiStepPath)("personalInfo"), productCachedDataAndValidations);
	    };
	};
	
	var generateProductCurrencyValidations = exports.generateProductCurrencyValidations = function generateProductCurrencyValidations() {
	    return function (state) {
	        var products = state.getIn((0, _path.dataPath)(["products"]));
	        var defaultValues = (0, _immutable.Map)({
	            isValid: true,
	            isDirty: true
	        });
	        var productCurrenciesValidations = products.reduce(function (uiMap, productProp, pid) {
	            if (!productProp.has("currencies")) {
	                return uiMap;
	            }
	
	            var currentUiMap = productProp.get("currencies").reduce(function (currencyValidation, currencyProp, currency) {
	                var _Map;
	
	                return (0, _immutable.Map)((_Map = {}, _defineProperty(_Map, pid + "-purposeOfFunds-" + currency, defaultValues), _defineProperty(_Map, pid + "-sourceOfFunds-" + currency, defaultValues), _defineProperty(_Map, pid + "-countryOfFunds-" + currency, defaultValues), _Map));
	            }, (0, _immutable.Map)());
	            return uiMap.merge(currentUiMap);
	        }, (0, _immutable.Map)());
	        return state.mergeIn((0, _path.uiStepPath)("accountDetails"), productCurrenciesValidations);
	    };
	};
	
	var addMandatoryProductIdToStore = exports.addMandatoryProductIdToStore = function addMandatoryProductIdToStore(productsData) {
	    return function (state) {
	        var currentProductIds = state.getIn((0, _path.productIdPath)(), (0, _immutable.List)());
	        var firstProductId = currentProductIds.first();
	        var productCrossSellItems = productsData.crossSellReference[firstProductId];
	        if (productsData.crossSellReference[firstProductId]) {
	            var mandatoryProducts = productCrossSellItems.filter(function (product) {
	                return product.mandatory;
	            });
	            var mandatoryProductIds = mandatoryProducts.map(function (product) {
	                return product.pid;
	            });
	            var newProductIds = currentProductIds.concat(mandatoryProductIds);
	            return state.setIn((0, _path.productIdPath)(), newProductIds);
	        }
	        return state;
	    };
	};
	
	var addCPFDataToStore = exports.addCPFDataToStore = function addCPFDataToStore(action) {
	    return function (state) {
	        if (action.data.myInfo && action.data.myInfo.cpfcontributions) {
	            var cpf = (0, _immutable.fromJS)(action.data.myInfo.cpfcontributions.cpfcontribution);
	            return state.setIn((0, _path.cpfDataPath)(), cpf);
	        }
	        return state;
	    };
	};
	
	var setTaxResidencyToValid = exports.setTaxResidencyToValid = function setTaxResidencyToValid(action) {
	    return function (state) {
	        var validState = {
	            isValid: true,
	            isDirty: true
	        };
	        var invalidState = {
	            isValid: false,
	            isDirty: false
	        };
	
	        // console.log(action.data.form);
	
	        if (action.data.form.countries) {
	            var countries = action.data.form.countries;
	            var countriesKeys = Object.keys(countries);
	            var countriesUIState = (0, _immutable.fromJS)(countriesKeys.map(function (key) {
	                var _ref79;
	
	                return _ref79 = {}, _defineProperty(_ref79, "tax-residency-country-" + key, countries[key].country ? validState : invalidState), _defineProperty(_ref79, "tax-residency-id-" + key, countries[key].id ? validState : invalidState), _ref79;
	            }));
	            var currentUIState = state.getIn((0, _path.uiStepPath)("declaration"), (0, _immutable.Map)());
	            var newUIState = countriesUIState.reduce(function (acc, country) {
	                return acc.merge(country);
	            }, currentUIState);
	            return state.setIn((0, _path.uiStepPath)("declaration"), newUIState);
	        }
	        return state;
	    };
	};
	
	var showGenericErrorMessage = exports.showGenericErrorMessage = function showGenericErrorMessage(action) {
	    return function (state) {
	        return state.setIn((0, _path.genericErrorPath)(), action.errorMsg);
	    };
	};
	
	var uploadDocumentsStepConfig = exports.uploadDocumentsStepConfig = function uploadDocumentsStepConfig(action) {
	    return function (state) {
	        var flow = state.getIn((0, _path.flowPath)(), "");
	        if (action.step && flow !== "ETP") {
	            var employmentStatus = state.getIn((0, _path.dataPath)([_inputsConstant.NATURE_OF_EMPLOYMENT]));
	            var isMyInfo = state.getIn((0, _path.myInfoFlagPath)(), false);
	            var residentialStatus = state.getIn((0, _path.dataPath)(["residentialStatus"]));
	            var showUploadCpf = employmentStatus === "SELFE";
	            var anualIncome = Number(state.getIn((0, _path.dataPath)([_inputsConstant.ANNUAL_INCOME]), ""));
	            var isOtherMail = state.getIn(["data", _inputsConstant.SAME_HOME_AND_MAILING_ADD], false);
	            var cpfData = state.getIn((0, _path.cpfDataPath)(), (0, _immutable.List)());
	            var isShowUploadIncome = anualIncome === 0 && (cpfData.count() === 0 || Number(cpfData.first().get("amount")) === 0) ? true : false;
	            var showUploadDocumentsStep = showUploadCpf || !isMyInfo || residentialStatus === "P" || isShowUploadIncome || isOtherMail;
	            var productData = state.getIn((0, _path.productsDataPath)());
	            var productSelected = state.getIn((0, _path.productIdPath)(), (0, _immutable.Map)()).first();
	            var productSelectedTypes = productData.getIn(["products", productSelected, "type"]) || [];
	            var hasCasa = productSelectedTypes.includes("CASA");
	            //remove upload documents for casa
	            if (!showUploadDocumentsStep || hasCasa) {
	                return state.setIn((0, _path.uiStepPath)("uploadDocuments"), (0, _immutable.Map)());
	            }
	            var allowCPFOnline = state.getIn((0, _path.dataPath)([_inputsConstant.SUBMIT_CPF_ONLINE]), false);
	            var currentUiStepState = state.getIn((0, _path.uiStepPath)("uploadDocuments"), (0, _immutable.Map)());
	            if (!(showUploadCpf && !allowCPFOnline && isShowUploadIncome) && !isOtherMail) {
	                currentUiStepState = currentUiStepState.deleteIn(["uploadDocumentsBillingProof"]);
	            }
	            if (residentialStatus === "C" && employmentStatus !== "" && !isOtherMail) {
	                if (employmentStatus !== "SELFE" && !isShowUploadIncome) {
	                    return state.setIn((0, _path.uiStepPath)("uploadDocuments"), (0, _immutable.Map)());
	                }
	                if (employmentStatus === "SELFE" && ["declaration", "summary"].indexOf(state.getIn((0, _path.currentStepPath)())) > -1) {
	                    var currentShownSteps = state.getIn((0, _path.shownStepsPath)(), (0, _immutable.List)());
	                    if (!(currentShownSteps.indexOf("uploadDocuments") > -1)) {
	                        var newShownSteps = currentShownSteps.splice(6, 0, "uploadDocuments");
	                        state.setIn((0, _path.shownStepsPath)(), newShownSteps);
	                    }
	                }
	            }
	            var newUiStepState = currentUiStepState.mergeDeep((0, _immutable.Map)({ null: (0, _immutable.Map)({ isValid: true }) }));
	            return state.setIn((0, _path.uiStepPath)("uploadDocuments"), newUiStepState);
	        }
	        return state;
	    };
	};
	
	var showOrHideDeclartionStep = exports.showOrHideDeclartionStep = function showOrHideDeclartionStep(action) {
	    return function (state) {
	        if (action.type !== "GET_MY_INFO_PENDING") {
	            var flow = state.getIn((0, _path.flowPath)(), "");
	            var currentStep = state.getIn((0, _path.currentStepPath)());
	            var stepToExclude = ["basicInfo", "otp"];
	            if (!stepToExclude.includes(currentStep) && flow !== "ETP") {
	                var productData = state.getIn((0, _path.productsDataPath)());
	                var productSelected = state.getIn((0, _path.productIdPath)(), (0, _immutable.Map)());
	                var currentDeclarationState = state.getIn((0, _path.uiStepPath)("declaration"), (0, _immutable.Map)());
	                var hasCasa = productSelected.map(function (pid) {
	                    return productData.getIn(["products", pid, "type"]);
	                }).includes("CASA");
	                var hasCashPlus = productSelected.map(function (pid) {
	                    return productData.getIn(["products", pid, "type"]);
	                }).includes("CASH+");
	                return hasCasa || hasCashPlus ? state.setIn((0, _path.uiStepPath)("declaration"), currentDeclarationState.merge((0, _immutable.fromJS)({ null: { isValid: true } }))) : state.setIn((0, _path.uiStepPath)("declaration"), (0, _immutable.Map)());
	            }
	            return state;
	        }
	        return state;
	    };
	};
	
	var updateDialogModalState = exports.updateDialogModalState = function updateDialogModalState() {
	    return function (state) {
	        var isETP = state.getIn((0, _path.flowPath)(), "") === "ETP";
	        var isCURFX = state.getIn((0, _path.productIdPath)(), (0, _immutable.List)()).includes("CURFX");
	        return isETP && isCURFX ? state.setIn((0, _path.dialogModalPath)("MCAModal"), true) : state;
	    };
	};
	/***********
	 ** OTHERS **
	 ************/
	
	var setRightPanelExpanded = exports.setRightPanelExpanded = function setRightPanelExpanded(action) {
	    return function (state) {
	        return state.setIn((0, _path.rightPanelExpandedPath)(), action.value);
	    };
	};
	
	var setProductsToStore = exports.setProductsToStore = function setProductsToStore(action) {
	    return function (state) {
	        return state.setIn((0, _path.productsDataPath)(), (0, _immutable.fromJS)(action.productsData));
	    };
	};
	
	var setFormLabelsToStore = exports.setFormLabelsToStore = function setFormLabelsToStore(action) {
	    return function (state) {
	        return state.setIn((0, _path.formLabelsPath)(), (0, _immutable.fromJS)(action.formData));
	    };
	};
	
	var sendDataToSparkline = exports.sendDataToSparkline = function sendDataToSparkline(action) {
	    return function (state) {
	        if (window._satellite) {
	            var productIDs = state.getIn((0, _path.productIdPath)());
	            var flow = state.getIn((0, _path.flowPath)(), "");
	            var stepNo = _stepsEnum2.default[action.currentStep];
	            if (!window.dataElement) {
	                window.dataElement = {};
	            }
	            var dataElement = window.dataElement || {};
	            dataElement.event_name = "form_complete_step" + stepNo;
	            dataElement.product_name = productIDs.first();
	            dataElement.user_type = flow;
	            window.dtmCustomEventName = dataElement.event_name.replace(/[0-9]+$/, "");
	            window._satellite.track(window.dtmCustomEventName);
	        }
	        try {
	            var _stepNo = _stepsEnum2.default[action.currentStep];
	            var stepNumber = "step" + _stepNo;
	            console.log("  pixel.parse ::: " + stepNumber);
	            window.pixel.parse(stepNumber);
	        } catch (e) {
	            console.log("  pixel.parse ::: error");
	        }
	        return state;
	    };
	};
	// export const updateAppStructure = () => state => {
	//     //TO-DO write logic to handle >1 product
	//     const currentPIDSelected = state.getIn(productIdPath(), List());
	//     const appStructure = currentPIDSelected.map(pid => fromJS(productConfig[pid]));
	//     return state.setIn(uiStructurePath(), appStructure.first());
	// };
	var prefillEmployer = exports.prefillEmployer = function prefillEmployer(action) {
	    return function (state) {
	
	        if (action.type === "EDIT_INPUT" && action.inputId === "natureOfEmployment" && (action.value === "salaried" || action.value === "SELFE")) {
	            var isReadOnly = state.getIn((0, _path.isReadOnlyPath)("workInfo", "nameOfEmployer"), false);
	            var employer = state.getIn(["app", "cpf"], (0, _immutable.List)()).first();
	            return !isReadOnly && employer ? state.setIn(["data", "nameOfEmployer"], employer.get("employer", "")).setIn(["ui", "workInfo", "nameOfEmployer", "isValid"], true) : state;
	        }
	        return state;
	    };
	};
	
	var removeDigitalServicesStep = exports.removeDigitalServicesStep = function removeDigitalServicesStep() {
	    return function (state) {
	        return state.setIn((0, _path.uiStepPath)("digitalServices"), (0, _immutable.Map)());
	    };
	};
	var setNewToBank = exports.setNewToBank = function setNewToBank() {
	    return function (state) {
	        return state.setIn(["app", "isNTB"], true);
	    };
	};
	var setEncryptionParamsToStore = exports.setEncryptionParamsToStore = function setEncryptionParamsToStore(action) {
	    return function (state) {
	        return state.setIn(["app", "encryptionParams"], (0, _immutable.fromJS)(action.data));
	    };
	};
	var removeNRIC = exports.removeNRIC = function removeNRIC() {
	    return function (state) {
	        return state.deleteIn(["ui", "basicInfo", "nric"]);
	    };
	};
	
	var updateFileUploadStart = exports.updateFileUploadStart = function updateFileUploadStart(action) {
	    return function (state) {
	        return state.setIn(["app", action.step, action.inputId], true);
	    };
	};
	
	var updateFileUploadStop = exports.updateFileUploadStop = function updateFileUploadStop(action) {
	    return function (state) {
	        return state.setIn(["app", action.step, action.inputId], false);
	    };
	};
	
	var setPropertyType = exports.setPropertyType = function setPropertyType(_ref80) {
	    var inputId = _ref80.inputId;
	    var value = _ref80.value;
	    return function (state) {
	        return state.setIn((0, _path.dataPath)([inputId]), value);
	    };
	};

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _redux = __webpack_require__(6);
	
	var _reactRouterRedux = __webpack_require__(80);
	
	var _stateReducer = __webpack_require__(406);
	
	var _stateReducer2 = _interopRequireDefault(_stateReducer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var rootReducer = (0, _redux.combineReducers)({
	    state: _stateReducer2.default,
	    routing: _reactRouterRedux.routerReducer
	});
	
	exports.default = rootReducer;

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _immutable = __webpack_require__(13);
	
	var _actionsConstant = __webpack_require__(22);
	
	var constants = _interopRequireWildcard(_actionsConstant);
	
	var _inputs = __webpack_require__(404);
	
	var mutations = _interopRequireWildcard(_inputs);
	
	var _inputConfig = __webpack_require__(391);
	
	var _utils = __webpack_require__(9);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var stateReducer = function stateReducer() {
	    var _reducer;
	
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _immutable.Map)();
	    var action = arguments[1];
	
	    var reducer = (_reducer = {}, _defineProperty(_reducer, constants.ACTION_ADD_CREDITCARD, function () {
	        return [mutations.addCreditCard(action)];
	    }), _defineProperty(_reducer, constants.ACTION_ADD_CREDITCARD, function () {
	        return [mutations.addCreditCard(action)];
	    }), _defineProperty(_reducer, constants.ACTION_EDIT_POSTAL_CODE, function () {
	        return [mutations.editInput(action), mutations.setDirty(action), mutations.setStatus(action), mutations.setErrorMsg(action), mutations.resetAddressBlock(action), mutations.resetAddressStreet(action), mutations.resetBuildingName(action), mutations.resetAddressFormat(action), mutations.resetBlockAndStreetReadOnlyState(action)];
	    }), _defineProperty(_reducer, constants.ACTION_EDIT_INPUT, function () {
	        return [mutations.editInput(action), mutations.setDirty(action), mutations.setStatus(action), mutations.setErrorMsg(action)];
	    }), _defineProperty(_reducer, constants.ACTION_EDIT_INPUT_BY_PATH, function () {
	        return [mutations.editInputByPath(action.path, action.value, action.status), mutations.setDirty(action), mutations.setStatus(action), mutations.setErrorMsg(action)];
	    }), _defineProperty(_reducer, constants.ACTION_EDIT_DROPDOWN_BY_PATH, function () {
	        return [mutations.editDropdownByPath(action.path, action.value), mutations.setDirty(action), mutations.setStatus(action), mutations.setErrorMsg(action)];
	    }), _defineProperty(_reducer, constants.ACTION_EDIT_MULTIPLE_NAME_ON_CARD, function () {
	        return [mutations.editNameOnCard(action.inputIds, action.cardType, action.value, action.status)];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_DAILY_CARD_LIMIT, function () {
	        return [mutations.updateDailyCardLimit(action.inputIds, action.cardType, action.value)];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_CREDIT_LIMIT, function () {
	        return [mutations.updateCreditLimit(action.inputIds, action.cardType, action.value)];
	    }), _defineProperty(_reducer, constants.ACTION_EDIT_MULTIPLE_ATM_ACCESS, function () {
	        return [mutations.editAtmAccess(action.inputIds, action.cardType, action.value), mutations.setStatus({ step: "accountDetails", inputId: "activateAtms_" + action.cardType, status: [] })];
	    }), _defineProperty(_reducer, constants.ACTION_CLEAR_GENERIC_ERROR_MESSAGE, function () {
	        return [mutations.clearErrorMessage(action)];
	    }), _defineProperty(_reducer, constants.ACTION_DROPDOWN_SEARCH, function () {
	        return [mutations.updateDropDownSearchValue(action)];
	    }), _defineProperty(_reducer, constants.ACTION_ADD_SECTION, function () {
	        return [mutations.addSection(action)];
	    }), _defineProperty(_reducer, constants.ACTION_CHOOSE_GENDER, function () {
	        return [mutations.chooseGender(action.gender, action.inputId, action.path), mutations.setTrueStatusForNonInput(action)];
	    }), _defineProperty(_reducer, constants.ACTION_ON_FOCUS_INPUT, function () {
	        return [mutations.onFocusInput(action)];
	    }), _defineProperty(_reducer, constants.ACTION_ON_BLUR_INPUT, function () {
	        return [mutations.onBlurInput(action)];
	    }), _defineProperty(_reducer, constants.ACTION_TOGGLE_CLICK, function () {
	        return [mutations.toggleClick(action)];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_CURRENCIES, function () {
	        return [mutations.updateCurrencies(action.currency, action.pid)
	        // setToggleStatus(action),
	        // updateCountryOfFunds({currency: action.currency, value: "Singapore"}),
	        // mutations.setStatus({step: "accountDetails", inputId: `countryOfFunds-${action.currency}`, status: []}),
	        // mutations.setDirty({step: "accountDetails", inputId: `countryOfFunds-${action.currency}`})
	        ];
	    }), _defineProperty(_reducer, constants.ACTION_OPEN_DROPDOWN, function () {
	        return [mutations.mutations.onOpenDropdown(action)];
	    }), _defineProperty(_reducer, constants.ACTION_CLOSE_DROPDOWN, function () {
	        return [mutations.onCloseDropdown(action)];
	    }), _defineProperty(_reducer, constants.ACTION_SELECT_DROPDOWN_ITEM, function () {
	        return [mutations.editInput(action), mutations.onCloseDropdown(action)];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_PRODUCT_ID, function () {
	        return [mutations.updateProductID(action), mutations.clearData(), mutations.updateUIStateTree(action), mutations.addFirstStepToShownStep(), mutations.addFirstStepToCurrentStep()];
	    }), _defineProperty(_reducer, constants.ACTION_END_CHANGE_STEP, function () {
	        var baseMutations = [mutations.changeStep(action), mutations.changeTransitToStep({ transitTo: "" }), mutations.changeTransitFromStep({ transitFrom: "" })
	        // filterOnlySummaryStepFromShownStep(action)
	        ];
	        return action.value === "accountDetails" || action.value === "pendingApplication" ? [].concat(baseMutations, [mutations.removeOtpStepFromShownStep()]) : baseMutations;
	    }), _defineProperty(_reducer, constants.ACTION_START_CHANGE_STEP, function () {
	        return [mutations.addShownSteps(action), mutations.changeTransitToStep(action), mutations.changeTransitFromStep(action)];
	    }), _defineProperty(_reducer, constants.ACTION_TOGGLE_BUTTON, function () {
	        return [mutations.toggleButtonClick(action), mutations.removeKFData(action)];
	    }), _defineProperty(_reducer, constants.ACTION_TOGGLE_BUTTON_SAME_PURPOSE, function () {
	        return [mutations.updateSamePurposeAndSourceOfFundsUi(action.value), mutations.updateSamePurposeAndSourceOfFundsUi()];
	    }), _defineProperty(_reducer, constants.ACTION_ON_CHECK, function () {
	        return [mutations.toggleCheckbox(action), mutations.setCheckBoxStatus(action)];
	    }), _defineProperty(_reducer, constants.ACTION_UPLOAD_FILE, function () {
	        return [mutations.setFileUploadData(action), mutations.setStatus(action), mutations.setDirty(action), mutations.setErrorMsg(action), mutations.setFileSize(action), mutations.clearErrorMessage(action)];
	    }), _defineProperty(_reducer, constants.ACTION_GET_OTP_PREFIX_SUCCESS, function () {
	        return [mutations.updateOTPPrefix(action)];
	    }), _defineProperty(_reducer, constants.ACTION_GET_OTP_PREFIX_ERROR, function () {
	        return [mutations.updateOTPPrefix({ data: { smsPrefix: " " } }), mutations.showGenericErrorMessage({ errorMsg: state.getIn(["formLabels", "formInputErrorMessages", "serviceNotAvailable"], "") })];
	    }), _defineProperty(_reducer, constants.ACTION_GET_ADDRESS_PENDING, function () {
	        return [mutations.showSpinner(), mutations.setAddressSearchCount(action)];
	    }), _defineProperty(_reducer, constants.ACTION_GET_ADDRESS_SUCCESS, function () {
	        return [mutations.hideSpinner(), mutations.setPostalSearchCountExceeded(action), mutations.updateAddressBlock(action), mutations.updateAddressStreet(action), mutations.updateBuildingName(action), mutations.updateAddressFormat(action), mutations.setBlockAndStreetToReadOnly(action), mutations.updateUIStateForLevelAndUnit(action)];
	    }), _defineProperty(_reducer, constants.ACTION_GET_ADDRESS_ERROR, function () {
	        return [mutations.addressError(action), mutations.setPostalSearchCountExceeded(action), mutations.hideSpinner()];
	    }), _defineProperty(_reducer, constants.ACTION_POST_OTP_SUCCESS, function () {
	        return [mutations.updateOTPStatus(action)];
	    }), _defineProperty(_reducer, constants.ACTION_POST_OTP_PENDING, function () {
	        return [mutations.updateLoadingStart(action)];
	    }), _defineProperty(_reducer, constants.ACTION_POST_OTP_ERROR, function () {
	        return [mutations.removeVaild({ step: "otp", inputId: "otp" }), action.error !== "500" ? mutations.showErrorMsg({ step: "otp", inputId: "otp", msg: state.getIn(["formLabels", "formInputErrorMessages", "invalidOTP"], "") }) : mutations.showGenericErrorMessage({ errorMsg: state.getIn(["formLabels", "formInputErrorMessages", "serviceNotAvailable"], "") }), mutations.updateLoadingStop(action)];
	    }), _defineProperty(_reducer, constants.ACTION_POST_PARTIAL_APPLICATION_SUCCESS, function () {
	        return [
	        //mutations.updatePartialApplicationSubmitStatus(action),
	        // mutations.setReadOnlyToStore(action),
	        // mutations.setInputToReadOnly(action),
	        mutations.updateLoadingStop(action), mutations.setFinalSubmitStatus(action), mutations.removePendingStepForPartial(action), mutations.sendDataToSparkline(action)];
	    }), _defineProperty(_reducer, constants.ACTION_POST_PARTIAL_APPLICATION_ERROR, function () {
	        return [mutations.updateLoadingStop(action), mutations.showGenericErrorMessage({ errorMsg: state.getIn(["formLabels", "formInputErrorMessages", action.error === 400 ? "activeSession" : "serviceNotAvailable"], "") })];
	    }), _defineProperty(_reducer, constants.ACTION_POST_PARTIAL_APPLICATION_PENDING, function () {
	        return [mutations.updateLoadingStart(action), mutations.clearErrorMessage()];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_UPLOAD_PROGRESS, function () {
	        return [mutations.updateFileUploadStart(action), mutations.updateUploadProgress(action), mutations.clearErrorMessage(action)];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_TAX_RESIDENCY_COUNTRY, function () {
	        return [mutations.updateTaxResidencyCountry(action.countryIndex, action.country, action.formData), mutations.setDirty({ step: "declaration", inputId: "tax-residency-country-" + action.countryIndex }), mutations.setDirty({ step: "declaration", inputId: "tax-residency-id-" + action.countryIndex }), mutations.setStatus({
	            step: "declaration",
	            inputId: "tax-residency-country-" + action.countryIndex,
	            status: []
	        })];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_TAX_RESIDENCY_REASON, function () {
	        return [mutations.updateTaxResidencyReason(action.countryIndex, action.reasonCode), mutations.setStatus({
	            step: "declaration",
	            inputId: "tinReason-" + action.countryIndex,
	            status: []
	        }), mutations.updateTaxResidencyId(action.countryIndex, "", action.formData), action.reasonCode === "0" ? function () {
	            return state;
	        } : mutations.setStatus({
	            step: "declaration",
	            inputId: "tax-residency-id-" + action.countryIndex,
	            status: []
	        })];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_TAX_RESIDENCY_ID, function () {
	        return [mutations.updateTaxResidencyId(action.countryIndex, action.id, action.formData), mutations.setStatus({
	            step: "declaration",
	            inputId: "tax-residency-id-" + action.countryIndex,
	            status: action.status
	        }), mutations.setDirty({ step: "declaration", inputId: "tax-residency-id-" + action.countryIndex }), mutations.setErrorMsg({
	            step: "declaration",
	            inputId: "tax-residency-id-" + action.countryIndex,
	            status: action.status
	        })];
	    }), _defineProperty(_reducer, constants.ACTION_REMOVE_TAX_RESIDENCY, function () {
	        return [mutations.removeTaxResidency(action)];
	    }), _defineProperty(_reducer, constants.ACTION_ADD_TAX_RESIDENCY, function () {
	        return [mutations.addTaxResidency(action.newCountryIndex), mutations.addTaxValidation(action.newCountryIndex, false), mutations.updateTaxResidencyCountry(action.newCountryIndex, action.country, action.formData), mutations.updateTaxResidencyReason(action.newCountryIndex, action.reasonCode), action.reasonCode ? mutations.setStatus({
	            step: "declaration",
	            inputId: "tinReason-" + action.newCountryIndex,
	            status: []
	        }) : mutations.setDirty({ step: "declaration", inputId: "tinReason-" + action.newCountryIndex }), mutations.setDirty({ step: "declaration", inputId: "tax-residency-country-" + action.newCountryIndex }), mutations.updateTaxResidencyId(action.newCountryIndex, action.id, action.formData), mutations.setDirty({ step: "declaration", inputId: "tax-residency-id-" + action.newCountryIndex })];
	    }), _defineProperty(_reducer, constants.ACTION_VALIDATE_TIN_PENDING, function () {
	        return [mutations.removeVaild({ step: "declaration", inputId: "tax-residency-id-" + action.index }), mutations.setInProgress({ step: "declaration", inputId: "tax-residency-id-" + action.index })];
	    }), _defineProperty(_reducer, constants.ACTION_VALIDATE_TIN_SUCCESS, function () {
	        return [mutations.removeInProgress({ step: "declaration", inputId: "tax-residency-id-" + action.index }), mutations.setTinToValidated(action), action.data.showValid ? mutations.setValid({ step: "declaration", inputId: "tax-residency-id-" + action.index }) : mutations.setErrorMsg({
	            step: "declaration",
	            inputId: "tax-residency-id-" + action.index,
	            status: [{ errorMsg: action.formData.formInputErrorMessages.invalidTIN }]
	        })];
	    }), _defineProperty(_reducer, constants.ACTION_VALIDATE_USERNAME_PENDING, function () {
	        return [mutations.removeVaild({ step: "digitalServices", inputId: "username" }), mutations.setInProgress({ step: "digitalServices", inputId: "username" })];
	    }), _defineProperty(_reducer, constants.ACTION_VALIDATE_USERNAME_SUCCESS, function () {
	        return [mutations.removeInProgress({ step: "digitalServices", inputId: "username" }), mutations.setValid({ step: "digitalServices", inputId: "username" })];
	    }), _defineProperty(_reducer, constants.ACTION_VALIDATE_USERNAME_ERROR, function () {
	        return [mutations.removeInProgress({ step: "digitalServices", inputId: "username" }), action.error && action.error.global ? mutations.showGenericErrorMessage({
	            errorMsg: action.formData.formInputErrorMessages[action.error.errorMsg]
	        }) : mutations.setErrorMsg({
	            step: "digitalServices",
	            inputId: "username",
	            status: [{ errorMsg: action.formData.formInputErrorMessages[action.error.errorMsg] }]
	        })];
	    }), _defineProperty(_reducer, constants.ACTION_GET_ENCRYPTION_PARAMS_PENDING, function () {
	        return [mutations.updateLoadingStart({ currentStep: "digitalServices" })];
	    }), _defineProperty(_reducer, constants.ACTION_GET_ENCRYPTION_PARAMS_SUCCESS, function () {
	        return [mutations.updateLoadingStop({ currentStep: "digitalServices" }), mutations.setEncryptionParamsToStore(action)];
	    }), _defineProperty(_reducer, constants.ACTION_GET_ENCRYPTION_PARAMS_ERROR, function () {
	        return [mutations.updateLoadingStop({ currentStep: "digitalServices" }), mutations.showGenericErrorMessage({ errorMsg: state.getIn(["formLabels", "formInputErrorMessages", "serviceNotAvailable"], "") })];
	    }), _defineProperty(_reducer, constants.ACTION_GET_USER_STATUS_PENDING, function () {
	        return [mutations.updateLoadingStart({ currentStep: "workInfo" })];
	    }), _defineProperty(_reducer, constants.ACTION_GET_USER_STATUS_SUCCESS, function () {
	        return [mutations.updateLoadingStop({ currentStep: "workInfo" }), mutations.setNewToBank()];
	    }), _defineProperty(_reducer, constants.ACTION_GET_USER_STATUS_ERROR, function () {
	        return [mutations.updateLoadingStop({ currentStep: "workInfo" }), mutations.removeDigitalServicesStep()];
	    }), _defineProperty(_reducer, constants.ACTION_ADD_VALID_FLAG, function () {
	        return [mutations.addValidFlag(action)];
	    }), _defineProperty(_reducer, constants.ACTION_REMOVE_VALID_FLAG, function () {
	        return [mutations.removeVaild(action)];
	    }), _defineProperty(_reducer, constants.ACTION_GET_MY_INFO_PENDING, function () {
	        return [mutations.showPageLoading(action)];
	    }), _defineProperty(_reducer, constants.ACTION_GET_MY_INFO_SUCCESS, function () {
	        return [mutations.setProductsToStore(action), mutations.setFormLabelsToStore(action), mutations.mapDataToStore(action), mutations.setDefaultValuesToDataToStore(action), mutations.addProductIdToStore(action), mutations.addMyInfoFlag(action), mutations.setReadOnlyToStore(action), mutations.updateProductID({ productID: action.data.productId }), mutations.addMandatoryProductIdToStore(action.productsData), mutations.updateUIStateTree(action.productsData), mutations.addFirstStepToShownStep(), mutations.addFirstStepToCurrentStep(), mutations.setFieldsToValid(action), mutations.setInputToReadOnly(action), mutations.setAnnualIncomeNotAvailable(action), mutations.setDefaultFieldsToValid(action), mutations.addCPFDataToStore(action), mutations.hidePageLoading(action), mutations.myInfoDownAndRequired(action), mutations.myInfoDownAndNotRequired(action), mutations.myInfoIncompleteAndNotRequired(action), mutations.myInfoIncompleteAndRequired(action), mutations.updatePhoneValidState(action)];
	    }), _defineProperty(_reducer, constants.ACTION_SHOW_ERROR_MSG, function () {
	        return [mutations.showErrorMsg(action), mutations.setDirty(action)];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_PURPOSE_OF_FUNDS, function () {
	        return [mutations.updatePurposeOfFunds(action), mutations.setDirty({ step: "accountDetails", inputId: action.pid + "-purposeOfFunds-" + action.currency }), mutations.setStatus({
	            step: "accountDetails",
	            inputId: action.pid + "-purposeOfFunds-" + action.currency,
	            status: []
	        })];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_PURPOSE_OF_FUNDS_FOR_ALL, function () {
	        return [mutations.updatePurposeOfFundsForAll(action.value)];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_PURPOSE_OF_FUNDS_FOR_FX, function () {
	        return [mutations.updatePurposeOfFundsForFx(action)];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_SOURCE_OF_FUNDS_FOR_FX, function () {
	        return [mutations.updateSourceOfFundsForFx(action)];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_COUNTRY_OF_FUNDS_FOR_FX, function () {
	        return [mutations.updateCountryOfFundsForFx(action)];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_SOURCE_OF_FUNDS, function () {
	        return [mutations.updateSourceOfFunds(action), mutations.setDirty({ step: "accountDetails", inputId: action.pid + "-sourceOfFunds-" + action.currency }), mutations.setStatus({
	            step: "accountDetails",
	            inputId: action.pid + "-sourceOfFunds-" + action.currency,
	            status: []
	        })];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_SOURCE_OF_FUNDS_FOR_ALL, function () {
	        return [mutations.updateSourceOfFundsForAll(action.value)
	        // setDirty({step: "accountDetails", inputId: `${action.pid}-purposeOfFunds-${action.currency}`}),
	        // setStatus({
	        //     step: "accountDetails",
	        //     inputId: `${action.pid}-purposeOfFunds-${action.currency}`,
	        //     status: []
	        // })
	        ];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_COUNTRY_OF_FUNDS, function () {
	        return [mutations.updateCountryOfFunds(action), mutations.setDirty({ step: "accountDetails", inputId: action.pid + "-countryOfFunds-" + action.currency }), mutations.setStatus({
	            step: "accountDetails",
	            inputId: action.pid + "-countryOfFunds-" + action.currency,
	            status: []
	        })];
	    }), _defineProperty(_reducer, constants.ACTION_UPDATE_COUNTRY_OF_FUNDS_FOR_ALL, function () {
	        return [mutations.updateCountryOfFundsForAll(action.value)
	        // setDirty({step: "accountDetails", inputId: `${action.pid}-purposeOfFunds-${action.currency}`}),
	        // setStatus({
	        //     step: "accountDetails",
	        //     inputId: `${action.pid}-purposeOfFunds-${action.currency}`,
	        //     status: []
	        // })
	        ];
	    }), _defineProperty(_reducer, constants.ACTION_SCROLL_SUMMARY_TO_STEP, function () {
	        return [
	            // addPreSummaryStepsToShownSteps(),
	            // changeStep(action)
	        ];
	    }), _defineProperty(_reducer, constants.ACTION_REMOVE_SUMMARY_STEP_FROM_SHOWN_STEP, function () {
	        return [mutations.removeSummaryStepFromShownStep()];
	    }), _defineProperty(_reducer, constants.ACTION_SUBMIT_FULL_APPLICATION_PENDING, function () {
	        return [mutations.updateLoadingStart({ currentStep: "summary" })];
	    }), _defineProperty(_reducer, constants.ACTION_SUBMIT_FULL_APPLICATION_SUCCESS, function () {
	        return [mutations.fullApplicationSuccess(action.data)];
	    }), _defineProperty(_reducer, constants.ACTION_SET_SIGNATURE_IMAGE_CONTENT, function () {
	        return [mutations.setSignatureImageContent(action),
	        // mutations.setDrawSignatureStatus(action),
	        mutations.setDrawSignatureToNonEditable(action), mutations.clearErrorMessage(action)];
	    }), _defineProperty(_reducer, constants.ACTION_CLEAR_SIGNATURE_IMAGE_CONTENT, function () {
	        return [mutations.setSignatureImageContent(action), mutations.setDrawSignatureStatus(action), mutations.clearErrorMessage(action)];
	    }), _defineProperty(_reducer, constants.ACTION_SET_SIGNATURE_STATUS_TO_TRUE, function () {
	        return [mutations.updateFileUploadStop(action), mutations.setSignatureStatusToTrue(action)];
	    }), _defineProperty(_reducer, constants.ACTION_SET_TMP_SIGNATURE_IMAGE_CONTENT, function () {
	        return [mutations.setSignatureImageTmpContent(action)];
	    }), _defineProperty(_reducer, constants.ACTION_SET_SIGNATURE_IMAGE_SCALE, function () {
	        return [mutations.setSignatureImageScale(action)];
	    }), _defineProperty(_reducer, constants.ACTION_SET_SIGNATURE_IMAGE_ROTATION, function () {
	        return [mutations.setSignatureImageRotation(action)];
	    }), _defineProperty(_reducer, constants.ACTION_SET_SIGNATURE_IMAGE_X, function () {
	        return [mutations.setSignatureImageX(action)];
	    }), _defineProperty(_reducer, constants.ACTION_SET_SIGNATURE_IMAGE_Y, function () {
	        return [mutations.setSignatureImageY(action)];
	    }), _defineProperty(_reducer, constants.ACTION_SET_SIGNATURE_IMAGE_WIDTH, function () {
	        return [mutations.setSignatureImageWidth(action)];
	    }), _defineProperty(_reducer, constants.ACTION_SET_SIGNATURE_IMAGE_HEIGHT, function () {
	        return [mutations.setSignatureImageHeight(action)];
	    }), _defineProperty(_reducer, constants.ERROR, function () {
	        return [mutations.setGenericError(action)];
	    }), _defineProperty(_reducer, constants.ACTION_INIT_ACCOUNT_DETAILS_WITH_CASA, function () {
	        return [mutations.initAccountDetailsWithCasa(action), mutations.setPriority(action), mutations.editNameOnCard(action.productCurrencies.keySeq(), action.familyType, action.cardDetails.name, []), mutations.updateDailyCardLimit(action.productCurrencies.keySeq(), action.familyType, action.cardDetails.preferedDailyLimit), mutations.editAtmAccess(action.productCurrencies.keySeq(), action.familyType, action.cardDetails.activateAtms), mutations.setStatus({ step: "accountDetails", inputId: "activateAtms_" + action.familyType, status: [] })];
	    }), _defineProperty(_reducer, constants.ACTION_INIT_ACCOUNT_DETAILS_WITH_CARDS, function () {
	        return [mutations.editNameOnCard((0, _immutable.Map)(_defineProperty({}, action.pid, {})).keySeq(), action.familyType, action.name, []), mutations.updateCreditLimit((0, _immutable.Map)(_defineProperty({}, action.pid, {})).keySeq(), action.familyType, action.limit), mutations.editAtmAccess((0, _immutable.Map)(_defineProperty({}, action.pid, {})).keySeq(), action.familyType, action.activateAtms), mutations.setStatus({ step: "accountDetails", inputId: "activateAtms_" + action.familyType, status: [] })];
	    }), _defineProperty(_reducer, constants.ACTION_ADD_INPUT_TO_UI_STATE, function () {
	        return [mutations.addInputToUIState(action)];
	    }), _defineProperty(_reducer, constants.ACTION_REMOVE_INPUT_TO_UI_STATE, function () {
	        return [mutations.removeInputToUIState(action), mutations.removeDataFromState(action)];
	    }), _defineProperty(_reducer, constants.ACTION_ADD_CROSS_PRODUCT_CASA, function () {
	        return [mutations.addCrossProduct(action), mutations.setPriority(action), mutations.initAccountDetailsWithCasa(action), mutations.editNameOnCard(action.productCurrencies.keySeq(), action.familyType, action.cardDetails.name.substr(0, 19).replace(/[^a-zA-Z ]/g, ""), []), mutations.updateDailyCardLimit(action.productCurrencies.keySeq(), action.familyType, action.cardDetails.preferedDailyLimit), mutations.editAtmAccess(action.productCurrencies.keySeq(), action.familyType, action.cardDetails.activateAtms), mutations.setStatus({ step: "accountDetails", inputId: "activateAtms_" + action.familyType, status: [] })];
	    }), _defineProperty(_reducer, constants.ACTION_ADD_SAVJS, function () {
	        return [mutations.addCrossProduct(action), mutations.initAccountDetailsWithCasa(action)];
	    }), _defineProperty(_reducer, constants.ACTION_ADD_CROSS_PRODUCT_CARDS, function () {
	        return [mutations.addCrossProduct(action), mutations.editNameOnCard((0, _immutable.Map)(_defineProperty({}, action.pid, {})).keySeq(), action.familyType, action.name.substr(0, 19).replace(/[^a-zA-Z ]/g, ""), []), mutations.updateDailyCardLimit((0, _immutable.Map)(_defineProperty({}, action.pid, {})).keySeq(), action.familyType, action.preferedDailyLimit), mutations.editAtmAccess((0, _immutable.Map)(_defineProperty({}, action.pid, {})).keySeq(), action.familyType, action.activateAtms), mutations.setStatus({ step: "accountDetails", inputId: "activateAtms_" + action.familyType, status: [] })];
	    }), _defineProperty(_reducer, constants.ACTION_ADD_CROSS_PRODUCT_UNSECURED_LOAN, function () {
	        return [mutations.addCrossProduct(action), mutations.setBeneficiaryNameToReadOnly(action)];
	    }), _defineProperty(_reducer, constants.ACTION_REMOVE_CROSS_PRODUCT, function () {
	        return [mutations.removeCrossProduct(action), mutations.removeProductData(action.pid), mutations.removeCrossProductUi(action)];
	    }), _defineProperty(_reducer, constants.ACTION_TOGGLE_SAME_STATUS, function () {
	        return [mutations.toggleSameStatus(action.toggleValue), mutations.updateAllCurrencies(action.values, action.pid, action.currency)];
	    }), _defineProperty(_reducer, constants.ACTION_SET_CANVAS_TOUCHED, function () {
	        return [mutations.setDrawSignatureCanvasTouched(action), mutations.setDrawSignatureToEditable(action)];
	    }), _defineProperty(_reducer, constants.ACTION_SET_DRAW_SIGNATURE_DIRTY_TO_FALSE, function () {
	        return [mutations.setDrawSignatureDirtyToFalse(action)];
	    }), _defineProperty(_reducer, constants.ACTION_SET_RIGHT_PANEL_EXPANDED, function () {
	        return [mutations.setRightPanelExpanded(action)];
	    }), _defineProperty(_reducer, constants.ACTION_OPEN_ACCORDIAN, function () {
	        return [mutations.openAccordian(action)];
	    }), _defineProperty(_reducer, constants.ACTION_CLOSE_ACCORDIAN, function () {
	        return [mutations.closeAccordian(action)];
	    }), _defineProperty(_reducer, constants.ACTION_SELECT_PENDING_APPLICATION, function () {
	        return [mutations.selectPendingApplication(action)];
	    }), _defineProperty(_reducer, constants.ACTION_REMOVE_PENDING_APPLICATION, function () {
	        return [mutations.removePendingApplication(action)];
	    }), _defineProperty(_reducer, constants.ACTION_CHECK_PENDING_APPLICATION_SUCCESS, function () {
	        return [mutations.updatePendingApplication(action), mutations.updateAppFlow(action), mutations.updateDialogModalState(action), mutations.updateUIStateTree(action.productsData), mutations.removePendingApplicationFromUi(action), mutations.updateLoadingStop(action)];
	    }), _defineProperty(_reducer, constants.ACTION_GET_PENDING_APPLICATION_PENDING, function () {
	        return [mutations.updateLoadingStart({ currentStep: "pendingApplication" }), mutations.clearErrorMessage()];
	    }), _defineProperty(_reducer, constants.ACTION_GET_PENDING_APPLICATION_SUCCESS, function () {
	        return [mutations.mapPendingAppData(action), mutations.mapDataToStore(action), mutations.removePendingStep(), mutations.setFieldsToValid(action), mutations.setFieldsToDirty(action), mutations.generateProductCachedDataAndValidations(action.productsData), mutations.generateProductCurrencyValidations(), mutations.generateSAVJSValidations(), mutations.pushProductID(action), mutations.setTaxResidencyToValid(action), mutations.updateLoadingStop({ currentStep: "pendingApplication" })];
	    }), _defineProperty(_reducer, constants.ACTION_SELECT_TABLE_ROW, function () {
	        return [mutations.selectTableRow(action)];
	    }), _defineProperty(_reducer, constants.ACTION_EXPAND_TABLE_ROW, function () {
	        return [mutations.expandTableRow(action)];
	    }), _defineProperty(_reducer, constants.ACTION_COLLAPSE_TABLE_ROW, function () {
	        return [mutations.collapseTableRow(action)];
	    }), _defineProperty(_reducer, constants.ACTION_GET_TENOR_TABLE_DATA_PENDING, function () {
	        return [mutations.showPageLoading(action)];
	    }), _defineProperty(_reducer, constants.ACTION_GET_TENOR_TABLE_DATA_SUCCESS, function () {
	        return [mutations.addTenorDataToState(action), mutations.hidePageLoading(action)];
	    }), _defineProperty(_reducer, constants.ACTION_GET_BANK_LIST_SUCCESS, function () {
	        return [mutations.addBankListToState(action)];
	    }), _defineProperty(_reducer, constants.ACTION_SHOW_GENERIC_ERROR_MESSAGE, function () {
	        return [mutations.showGenericErrorMessage(action)];
	    }), _defineProperty(_reducer, constants.ACTION_CLOSE_DIALOG_MODEL, function () {
	        return [mutations.closeDialogModal(action)];
	    }), _defineProperty(_reducer, constants.ACTION_ERROR_UPLOAD_FILE, function () {
	        return [mutations.updateFileUploadStop(action), mutations.setGenericError(action)];
	    }), _defineProperty(_reducer, constants.ACTION_REMOVE_KRIS_OR_ASIA, function () {
	        return [mutations.removeKrisOrAsia(action), mutations.toggleButtonClick(action)];
	    }), _defineProperty(_reducer, constants.ACTION_REMOVE_BILLING_PROOF, function () {
	        return [mutations.removeBillingProof(), mutations.toggleButtonClick(action)];
	    }), _defineProperty(_reducer, constants.ACTION_REMOVE_NRIC, function () {
	        return [mutations.removeNRIC()];
	    }), _defineProperty(_reducer, constants.ACTION_SET_PROPERTY_TYPE, function () {
	        return [mutations.setPropertyType(action)];
	    }), _defineProperty(_reducer, "DEFAULT", function DEFAULT() {
	        return state;
	    }), _reducer);
	    return reducer[action.type] ? (0, _utils.pipe)([].concat(_toConsumableArray(reducer[action.type]()), [(0, _inputConfig.inputConfig)(action), mutations.setInputToReadOnly(action), mutations.uploadDocumentsStepConfig(action), mutations.showOrHideDeclartionStep(action), mutations.addStepToState(action), mutations.removeStepFromState(), mutations.updateCurrentStep(), mutations.prefillEmployer(action)]), state) : reducer.DEFAULT();
	};
	
	exports.default = stateReducer;

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(408);


/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {// This method of obtaining a reference to the global object needs to be
	// kept identical to the way it is obtained in runtime.js
	var g =
	  typeof global === "object" ? global :
	  typeof window === "object" ? window :
	  typeof self === "object" ? self : this;
	
	// Use `getOwnPropertyNames` because not all browsers support calling
	// `hasOwnProperty` on the global `self` object in a worker. See #183.
	var hadRuntime = g.regeneratorRuntime &&
	  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;
	
	// Save the old regeneratorRuntime in case it needs to be restored later.
	var oldRuntime = hadRuntime && g.regeneratorRuntime;
	
	// Force reevalutation of runtime.js.
	g.regeneratorRuntime = undefined;
	
	module.exports = __webpack_require__(409);
	
	if (hadRuntime) {
	  // Restore the original runtime.
	  g.regeneratorRuntime = oldRuntime;
	} else {
	  // Remove the global property added by runtime.js.
	  try {
	    delete g.regeneratorRuntime;
	  } catch(e) {
	    g.regeneratorRuntime = undefined;
	  }
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 409 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	 * Copyright (c) 2014, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
	 * additional grant of patent rights can be found in the PATENTS file in
	 * the same directory.
	 */
	
	!(function(global) {
	  "use strict";
	
	  var Op = Object.prototype;
	  var hasOwn = Op.hasOwnProperty;
	  var undefined; // More compressible than void 0.
	  var $Symbol = typeof Symbol === "function" ? Symbol : {};
	  var iteratorSymbol = $Symbol.iterator || "@@iterator";
	  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
	  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
	
	  var inModule = typeof module === "object";
	  var runtime = global.regeneratorRuntime;
	  if (runtime) {
	    if (inModule) {
	      // If regeneratorRuntime is defined globally and we're in a module,
	      // make the exports object identical to regeneratorRuntime.
	      module.exports = runtime;
	    }
	    // Don't bother evaluating the rest of this file if the runtime was
	    // already defined globally.
	    return;
	  }
	
	  // Define the runtime globally (as expected by generated code) as either
	  // module.exports (if we're in a module) or a new, empty object.
	  runtime = global.regeneratorRuntime = inModule ? module.exports : {};
	
	  function wrap(innerFn, outerFn, self, tryLocsList) {
	    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
	    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
	    var generator = Object.create(protoGenerator.prototype);
	    var context = new Context(tryLocsList || []);
	
	    // The ._invoke method unifies the implementations of the .next,
	    // .throw, and .return methods.
	    generator._invoke = makeInvokeMethod(innerFn, self, context);
	
	    return generator;
	  }
	  runtime.wrap = wrap;
	
	  // Try/catch helper to minimize deoptimizations. Returns a completion
	  // record like context.tryEntries[i].completion. This interface could
	  // have been (and was previously) designed to take a closure to be
	  // invoked without arguments, but in all the cases we care about we
	  // already have an existing method we want to call, so there's no need
	  // to create a new function object. We can even get away with assuming
	  // the method takes exactly one argument, since that happens to be true
	  // in every case, so we don't have to touch the arguments object. The
	  // only additional allocation required is the completion record, which
	  // has a stable shape and so hopefully should be cheap to allocate.
	  function tryCatch(fn, obj, arg) {
	    try {
	      return { type: "normal", arg: fn.call(obj, arg) };
	    } catch (err) {
	      return { type: "throw", arg: err };
	    }
	  }
	
	  var GenStateSuspendedStart = "suspendedStart";
	  var GenStateSuspendedYield = "suspendedYield";
	  var GenStateExecuting = "executing";
	  var GenStateCompleted = "completed";
	
	  // Returning this object from the innerFn has the same effect as
	  // breaking out of the dispatch switch statement.
	  var ContinueSentinel = {};
	
	  // Dummy constructor functions that we use as the .constructor and
	  // .constructor.prototype properties for functions that return Generator
	  // objects. For full spec compliance, you may wish to configure your
	  // minifier not to mangle the names of these two functions.
	  function Generator() {}
	  function GeneratorFunction() {}
	  function GeneratorFunctionPrototype() {}
	
	  // This is a polyfill for %IteratorPrototype% for environments that
	  // don't natively support it.
	  var IteratorPrototype = {};
	  IteratorPrototype[iteratorSymbol] = function () {
	    return this;
	  };
	
	  var getProto = Object.getPrototypeOf;
	  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
	  if (NativeIteratorPrototype &&
	      NativeIteratorPrototype !== Op &&
	      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
	    // This environment has a native %IteratorPrototype%; use it instead
	    // of the polyfill.
	    IteratorPrototype = NativeIteratorPrototype;
	  }
	
	  var Gp = GeneratorFunctionPrototype.prototype =
	    Generator.prototype = Object.create(IteratorPrototype);
	  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
	  GeneratorFunctionPrototype.constructor = GeneratorFunction;
	  GeneratorFunctionPrototype[toStringTagSymbol] =
	    GeneratorFunction.displayName = "GeneratorFunction";
	
	  // Helper for defining the .next, .throw, and .return methods of the
	  // Iterator interface in terms of a single ._invoke method.
	  function defineIteratorMethods(prototype) {
	    ["next", "throw", "return"].forEach(function(method) {
	      prototype[method] = function(arg) {
	        return this._invoke(method, arg);
	      };
	    });
	  }
	
	  runtime.isGeneratorFunction = function(genFun) {
	    var ctor = typeof genFun === "function" && genFun.constructor;
	    return ctor
	      ? ctor === GeneratorFunction ||
	        // For the native GeneratorFunction constructor, the best we can
	        // do is to check its .name property.
	        (ctor.displayName || ctor.name) === "GeneratorFunction"
	      : false;
	  };
	
	  runtime.mark = function(genFun) {
	    if (Object.setPrototypeOf) {
	      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
	    } else {
	      genFun.__proto__ = GeneratorFunctionPrototype;
	      if (!(toStringTagSymbol in genFun)) {
	        genFun[toStringTagSymbol] = "GeneratorFunction";
	      }
	    }
	    genFun.prototype = Object.create(Gp);
	    return genFun;
	  };
	
	  // Within the body of any async function, `await x` is transformed to
	  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
	  // `hasOwn.call(value, "__await")` to determine if the yielded value is
	  // meant to be awaited.
	  runtime.awrap = function(arg) {
	    return { __await: arg };
	  };
	
	  function AsyncIterator(generator) {
	    function invoke(method, arg, resolve, reject) {
	      var record = tryCatch(generator[method], generator, arg);
	      if (record.type === "throw") {
	        reject(record.arg);
	      } else {
	        var result = record.arg;
	        var value = result.value;
	        if (value &&
	            typeof value === "object" &&
	            hasOwn.call(value, "__await")) {
	          return Promise.resolve(value.__await).then(function(value) {
	            invoke("next", value, resolve, reject);
	          }, function(err) {
	            invoke("throw", err, resolve, reject);
	          });
	        }
	
	        return Promise.resolve(value).then(function(unwrapped) {
	          // When a yielded Promise is resolved, its final value becomes
	          // the .value of the Promise<{value,done}> result for the
	          // current iteration. If the Promise is rejected, however, the
	          // result for this iteration will be rejected with the same
	          // reason. Note that rejections of yielded Promises are not
	          // thrown back into the generator function, as is the case
	          // when an awaited Promise is rejected. This difference in
	          // behavior between yield and await is important, because it
	          // allows the consumer to decide what to do with the yielded
	          // rejection (swallow it and continue, manually .throw it back
	          // into the generator, abandon iteration, whatever). With
	          // await, by contrast, there is no opportunity to examine the
	          // rejection reason outside the generator function, so the
	          // only option is to throw it from the await expression, and
	          // let the generator function handle the exception.
	          result.value = unwrapped;
	          resolve(result);
	        }, reject);
	      }
	    }
	
	    if (typeof global.process === "object" && global.process.domain) {
	      invoke = global.process.domain.bind(invoke);
	    }
	
	    var previousPromise;
	
	    function enqueue(method, arg) {
	      function callInvokeWithMethodAndArg() {
	        return new Promise(function(resolve, reject) {
	          invoke(method, arg, resolve, reject);
	        });
	      }
	
	      return previousPromise =
	        // If enqueue has been called before, then we want to wait until
	        // all previous Promises have been resolved before calling invoke,
	        // so that results are always delivered in the correct order. If
	        // enqueue has not been called before, then it is important to
	        // call invoke immediately, without waiting on a callback to fire,
	        // so that the async generator function has the opportunity to do
	        // any necessary setup in a predictable way. This predictability
	        // is why the Promise constructor synchronously invokes its
	        // executor callback, and why async functions synchronously
	        // execute code before the first await. Since we implement simple
	        // async functions in terms of async generators, it is especially
	        // important to get this right, even though it requires care.
	        previousPromise ? previousPromise.then(
	          callInvokeWithMethodAndArg,
	          // Avoid propagating failures to Promises returned by later
	          // invocations of the iterator.
	          callInvokeWithMethodAndArg
	        ) : callInvokeWithMethodAndArg();
	    }
	
	    // Define the unified helper method that is used to implement .next,
	    // .throw, and .return (see defineIteratorMethods).
	    this._invoke = enqueue;
	  }
	
	  defineIteratorMethods(AsyncIterator.prototype);
	  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
	    return this;
	  };
	  runtime.AsyncIterator = AsyncIterator;
	
	  // Note that simple async functions are implemented on top of
	  // AsyncIterator objects; they just return a Promise for the value of
	  // the final result produced by the iterator.
	  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
	    var iter = new AsyncIterator(
	      wrap(innerFn, outerFn, self, tryLocsList)
	    );
	
	    return runtime.isGeneratorFunction(outerFn)
	      ? iter // If outerFn is a generator, return the full iterator.
	      : iter.next().then(function(result) {
	          return result.done ? result.value : iter.next();
	        });
	  };
	
	  function makeInvokeMethod(innerFn, self, context) {
	    var state = GenStateSuspendedStart;
	
	    return function invoke(method, arg) {
	      if (state === GenStateExecuting) {
	        throw new Error("Generator is already running");
	      }
	
	      if (state === GenStateCompleted) {
	        if (method === "throw") {
	          throw arg;
	        }
	
	        // Be forgiving, per 25.3.3.3.3 of the spec:
	        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
	        return doneResult();
	      }
	
	      context.method = method;
	      context.arg = arg;
	
	      while (true) {
	        var delegate = context.delegate;
	        if (delegate) {
	          var delegateResult = maybeInvokeDelegate(delegate, context);
	          if (delegateResult) {
	            if (delegateResult === ContinueSentinel) continue;
	            return delegateResult;
	          }
	        }
	
	        if (context.method === "next") {
	          // Setting context._sent for legacy support of Babel's
	          // function.sent implementation.
	          context.sent = context._sent = context.arg;
	
	        } else if (context.method === "throw") {
	          if (state === GenStateSuspendedStart) {
	            state = GenStateCompleted;
	            throw context.arg;
	          }
	
	          context.dispatchException(context.arg);
	
	        } else if (context.method === "return") {
	          context.abrupt("return", context.arg);
	        }
	
	        state = GenStateExecuting;
	
	        var record = tryCatch(innerFn, self, context);
	        if (record.type === "normal") {
	          // If an exception is thrown from innerFn, we leave state ===
	          // GenStateExecuting and loop back for another invocation.
	          state = context.done
	            ? GenStateCompleted
	            : GenStateSuspendedYield;
	
	          if (record.arg === ContinueSentinel) {
	            continue;
	          }
	
	          return {
	            value: record.arg,
	            done: context.done
	          };
	
	        } else if (record.type === "throw") {
	          state = GenStateCompleted;
	          // Dispatch the exception by looping back around to the
	          // context.dispatchException(context.arg) call above.
	          context.method = "throw";
	          context.arg = record.arg;
	        }
	      }
	    };
	  }
	
	  // Call delegate.iterator[context.method](context.arg) and handle the
	  // result, either by returning a { value, done } result from the
	  // delegate iterator, or by modifying context.method and context.arg,
	  // setting context.delegate to null, and returning the ContinueSentinel.
	  function maybeInvokeDelegate(delegate, context) {
	    var method = delegate.iterator[context.method];
	    if (method === undefined) {
	      // A .throw or .return when the delegate iterator has no .throw
	      // method always terminates the yield* loop.
	      context.delegate = null;
	
	      if (context.method === "throw") {
	        if (delegate.iterator.return) {
	          // If the delegate iterator has a return method, give it a
	          // chance to clean up.
	          context.method = "return";
	          context.arg = undefined;
	          maybeInvokeDelegate(delegate, context);
	
	          if (context.method === "throw") {
	            // If maybeInvokeDelegate(context) changed context.method from
	            // "return" to "throw", let that override the TypeError below.
	            return ContinueSentinel;
	          }
	        }
	
	        context.method = "throw";
	        context.arg = new TypeError(
	          "The iterator does not provide a 'throw' method");
	      }
	
	      return ContinueSentinel;
	    }
	
	    var record = tryCatch(method, delegate.iterator, context.arg);
	
	    if (record.type === "throw") {
	      context.method = "throw";
	      context.arg = record.arg;
	      context.delegate = null;
	      return ContinueSentinel;
	    }
	
	    var info = record.arg;
	
	    if (! info) {
	      context.method = "throw";
	      context.arg = new TypeError("iterator result is not an object");
	      context.delegate = null;
	      return ContinueSentinel;
	    }
	
	    if (info.done) {
	      // Assign the result of the finished delegate to the temporary
	      // variable specified by delegate.resultName (see delegateYield).
	      context[delegate.resultName] = info.value;
	
	      // Resume execution at the desired location (see delegateYield).
	      context.next = delegate.nextLoc;
	
	      // If context.method was "throw" but the delegate handled the
	      // exception, let the outer generator proceed normally. If
	      // context.method was "next", forget context.arg since it has been
	      // "consumed" by the delegate iterator. If context.method was
	      // "return", allow the original .return call to continue in the
	      // outer generator.
	      if (context.method !== "return") {
	        context.method = "next";
	        context.arg = undefined;
	      }
	
	    } else {
	      // Re-yield the result returned by the delegate method.
	      return info;
	    }
	
	    // The delegate iterator is finished, so forget it and continue with
	    // the outer generator.
	    context.delegate = null;
	    return ContinueSentinel;
	  }
	
	  // Define Generator.prototype.{next,throw,return} in terms of the
	  // unified ._invoke helper method.
	  defineIteratorMethods(Gp);
	
	  Gp[toStringTagSymbol] = "Generator";
	
	  // A Generator should always return itself as the iterator object when the
	  // @@iterator function is called on it. Some browsers' implementations of the
	  // iterator prototype chain incorrectly implement this, causing the Generator
	  // object to not be returned from this call. This ensures that doesn't happen.
	  // See https://github.com/facebook/regenerator/issues/274 for more details.
	  Gp[iteratorSymbol] = function() {
	    return this;
	  };
	
	  Gp.toString = function() {
	    return "[object Generator]";
	  };
	
	  function pushTryEntry(locs) {
	    var entry = { tryLoc: locs[0] };
	
	    if (1 in locs) {
	      entry.catchLoc = locs[1];
	    }
	
	    if (2 in locs) {
	      entry.finallyLoc = locs[2];
	      entry.afterLoc = locs[3];
	    }
	
	    this.tryEntries.push(entry);
	  }
	
	  function resetTryEntry(entry) {
	    var record = entry.completion || {};
	    record.type = "normal";
	    delete record.arg;
	    entry.completion = record;
	  }
	
	  function Context(tryLocsList) {
	    // The root entry object (effectively a try statement without a catch
	    // or a finally block) gives us a place to store values thrown from
	    // locations where there is no enclosing try statement.
	    this.tryEntries = [{ tryLoc: "root" }];
	    tryLocsList.forEach(pushTryEntry, this);
	    this.reset(true);
	  }
	
	  runtime.keys = function(object) {
	    var keys = [];
	    for (var key in object) {
	      keys.push(key);
	    }
	    keys.reverse();
	
	    // Rather than returning an object with a next method, we keep
	    // things simple and return the next function itself.
	    return function next() {
	      while (keys.length) {
	        var key = keys.pop();
	        if (key in object) {
	          next.value = key;
	          next.done = false;
	          return next;
	        }
	      }
	
	      // To avoid creating an additional object, we just hang the .value
	      // and .done properties off the next function object itself. This
	      // also ensures that the minifier will not anonymize the function.
	      next.done = true;
	      return next;
	    };
	  };
	
	  function values(iterable) {
	    if (iterable) {
	      var iteratorMethod = iterable[iteratorSymbol];
	      if (iteratorMethod) {
	        return iteratorMethod.call(iterable);
	      }
	
	      if (typeof iterable.next === "function") {
	        return iterable;
	      }
	
	      if (!isNaN(iterable.length)) {
	        var i = -1, next = function next() {
	          while (++i < iterable.length) {
	            if (hasOwn.call(iterable, i)) {
	              next.value = iterable[i];
	              next.done = false;
	              return next;
	            }
	          }
	
	          next.value = undefined;
	          next.done = true;
	
	          return next;
	        };
	
	        return next.next = next;
	      }
	    }
	
	    // Return an iterator with no values.
	    return { next: doneResult };
	  }
	  runtime.values = values;
	
	  function doneResult() {
	    return { value: undefined, done: true };
	  }
	
	  Context.prototype = {
	    constructor: Context,
	
	    reset: function(skipTempReset) {
	      this.prev = 0;
	      this.next = 0;
	      // Resetting context._sent for legacy support of Babel's
	      // function.sent implementation.
	      this.sent = this._sent = undefined;
	      this.done = false;
	      this.delegate = null;
	
	      this.method = "next";
	      this.arg = undefined;
	
	      this.tryEntries.forEach(resetTryEntry);
	
	      if (!skipTempReset) {
	        for (var name in this) {
	          // Not sure about the optimal order of these conditions:
	          if (name.charAt(0) === "t" &&
	              hasOwn.call(this, name) &&
	              !isNaN(+name.slice(1))) {
	            this[name] = undefined;
	          }
	        }
	      }
	    },
	
	    stop: function() {
	      this.done = true;
	
	      var rootEntry = this.tryEntries[0];
	      var rootRecord = rootEntry.completion;
	      if (rootRecord.type === "throw") {
	        throw rootRecord.arg;
	      }
	
	      return this.rval;
	    },
	
	    dispatchException: function(exception) {
	      if (this.done) {
	        throw exception;
	      }
	
	      var context = this;
	      function handle(loc, caught) {
	        record.type = "throw";
	        record.arg = exception;
	        context.next = loc;
	
	        if (caught) {
	          // If the dispatched exception was caught by a catch block,
	          // then let that catch block handle the exception normally.
	          context.method = "next";
	          context.arg = undefined;
	        }
	
	        return !! caught;
	      }
	
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        var record = entry.completion;
	
	        if (entry.tryLoc === "root") {
	          // Exception thrown outside of any try block that could handle
	          // it, so set the completion value of the entire function to
	          // throw the exception.
	          return handle("end");
	        }
	
	        if (entry.tryLoc <= this.prev) {
	          var hasCatch = hasOwn.call(entry, "catchLoc");
	          var hasFinally = hasOwn.call(entry, "finallyLoc");
	
	          if (hasCatch && hasFinally) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            } else if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	
	          } else if (hasCatch) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            }
	
	          } else if (hasFinally) {
	            if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	
	          } else {
	            throw new Error("try statement without catch or finally");
	          }
	        }
	      }
	    },
	
	    abrupt: function(type, arg) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc <= this.prev &&
	            hasOwn.call(entry, "finallyLoc") &&
	            this.prev < entry.finallyLoc) {
	          var finallyEntry = entry;
	          break;
	        }
	      }
	
	      if (finallyEntry &&
	          (type === "break" ||
	           type === "continue") &&
	          finallyEntry.tryLoc <= arg &&
	          arg <= finallyEntry.finallyLoc) {
	        // Ignore the finally entry if control is not jumping to a
	        // location outside the try/catch block.
	        finallyEntry = null;
	      }
	
	      var record = finallyEntry ? finallyEntry.completion : {};
	      record.type = type;
	      record.arg = arg;
	
	      if (finallyEntry) {
	        this.method = "next";
	        this.next = finallyEntry.finallyLoc;
	        return ContinueSentinel;
	      }
	
	      return this.complete(record);
	    },
	
	    complete: function(record, afterLoc) {
	      if (record.type === "throw") {
	        throw record.arg;
	      }
	
	      if (record.type === "break" ||
	          record.type === "continue") {
	        this.next = record.arg;
	      } else if (record.type === "return") {
	        this.rval = this.arg = record.arg;
	        this.method = "return";
	        this.next = "end";
	      } else if (record.type === "normal" && afterLoc) {
	        this.next = afterLoc;
	      }
	
	      return ContinueSentinel;
	    },
	
	    finish: function(finallyLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.finallyLoc === finallyLoc) {
	          this.complete(entry.completion, entry.afterLoc);
	          resetTryEntry(entry);
	          return ContinueSentinel;
	        }
	      }
	    },
	
	    "catch": function(tryLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc === tryLoc) {
	          var record = entry.completion;
	          if (record.type === "throw") {
	            var thrown = record.arg;
	            resetTryEntry(entry);
	          }
	          return thrown;
	        }
	      }
	
	      // The context.catch method must only be called with a location
	      // argument that corresponds to a known catch block.
	      throw new Error("illegal catch attempt");
	    },
	
	    delegateYield: function(iterable, resultName, nextLoc) {
	      this.delegate = {
	        iterator: values(iterable),
	        resultName: resultName,
	        nextLoc: nextLoc
	      };
	
	      if (this.method === "next") {
	        // Deliberately forget the last sent value so that we don't
	        // accidentally pass it on to the delegate.
	        this.arg = undefined;
	      }
	
	      return ContinueSentinel;
	    }
	  };
	})(
	  // Among the various tricks for obtaining a reference to the global
	  // object, this seems to be the most reliable technique that does not
	  // use indirect eval (which violates Content Security Policy).
	  typeof global === "object" ? global :
	  typeof window === "object" ? window :
	  typeof self === "object" ? self : this
	);
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(417), __esModule: true };

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(418), __esModule: true };

/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(419), __esModule: true };

/***/ },
/* 413 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _defineProperty = __webpack_require__(412);
	
	var _defineProperty2 = _interopRequireDefault(_defineProperty);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
	    }
	  }
	
	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _isIterable2 = __webpack_require__(410);
	
	var _isIterable3 = _interopRequireDefault(_isIterable2);
	
	var _getIterator2 = __webpack_require__(66);
	
	var _getIterator3 = _interopRequireDefault(_getIterator2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  function sliceIterator(arr, i) {
	    var _arr = [];
	    var _n = true;
	    var _d = false;
	    var _e = undefined;
	
	    try {
	      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
	        _arr.push(_s.value);
	
	        if (i && _arr.length === i) break;
	      }
	    } catch (err) {
	      _d = true;
	      _e = err;
	    } finally {
	      try {
	        if (!_n && _i["return"]) _i["return"]();
	      } finally {
	        if (_d) throw _e;
	      }
	    }
	
	    return _arr;
	  }
	
	  return function (arr, i) {
	    if (Array.isArray(arr)) {
	      return arr;
	    } else if ((0, _isIterable3.default)(Object(arr))) {
	      return sliceIterator(arr, i);
	    } else {
	      throw new TypeError("Invalid attempt to destructure non-iterable instance");
	    }
	  };
	}();

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(147);
	__webpack_require__(146);
	module.exports = __webpack_require__(442);


/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(147);
	__webpack_require__(146);
	module.exports = __webpack_require__(443);


/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(445);
	module.exports = __webpack_require__(38).Object.assign;


/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(446);
	var $Object = __webpack_require__(38).Object;
	module.exports = function defineProperty(it, key, desc) {
	  return $Object.defineProperty(it, key, desc);
	};


/***/ },
/* 420 */
/***/ function(module, exports) {

	module.exports = function (it) {
	  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
	  return it;
	};


/***/ },
/* 421 */
/***/ function(module, exports) {

	module.exports = function () { /* empty */ };


/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(92);
	var toLength = __webpack_require__(439);
	var toAbsoluteIndex = __webpack_require__(438);
	module.exports = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIObject($this);
	    var length = toLength(O.length);
	    var index = toAbsoluteIndex(fromIndex, length);
	    var value;
	    // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      // eslint-disable-next-line no-self-compare
	      if (value != value) return true;
	    // Array#indexOf ignores holes, Array#includes - not
	    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
	      if (O[index] === el) return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};


/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(420);
	module.exports = function (fn, that, length) {
	  aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 1: return function (a) {
	      return fn.call(that, a);
	    };
	    case 2: return function (a, b) {
	      return fn.call(that, a, b);
	    };
	    case 3: return function (a, b, c) {
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function (/* ...args */) {
	    return fn.apply(that, arguments);
	  };
	};


/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	var document = __webpack_require__(39).document;
	module.exports = document && document.documentElement;


/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(54) && !__webpack_require__(88)(function () {
	  return Object.defineProperty(__webpack_require__(136)('div'), 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create = __webpack_require__(430);
	var descriptor = __webpack_require__(141);
	var setToStringTag = __webpack_require__(142);
	var IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(55)(IteratorPrototype, __webpack_require__(35)('iterator'), function () { return this; });
	
	module.exports = function (Constructor, NAME, next) {
	  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
	  setToStringTag(Constructor, NAME + ' Iterator');
	};


/***/ },
/* 427 */
/***/ function(module, exports) {

	module.exports = function (done, value) {
	  return { value: value, done: !!done };
	};


/***/ },
/* 428 */
/***/ function(module, exports) {

	module.exports = true;


/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys = __webpack_require__(140);
	var gOPS = __webpack_require__(432);
	var pIE = __webpack_require__(435);
	var toObject = __webpack_require__(144);
	var IObject = __webpack_require__(138);
	var $assign = Object.assign;
	
	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(88)(function () {
	  var A = {};
	  var B = {};
	  // eslint-disable-next-line no-undef
	  var S = Symbol();
	  var K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function (k) { B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
	  var T = toObject(target);
	  var aLen = arguments.length;
	  var index = 1;
	  var getSymbols = gOPS.f;
	  var isEnum = pIE.f;
	  while (aLen > index) {
	    var S = IObject(arguments[index++]);
	    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
	    var length = keys.length;
	    var j = 0;
	    var key;
	    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
	  } return T;
	} : $assign;


/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject = __webpack_require__(68);
	var dPs = __webpack_require__(431);
	var enumBugKeys = __webpack_require__(137);
	var IE_PROTO = __webpack_require__(90)('IE_PROTO');
	var Empty = function () { /* empty */ };
	var PROTOTYPE = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function () {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(136)('iframe');
	  var i = enumBugKeys.length;
	  var lt = '<';
	  var gt = '>';
	  var iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(424).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty();
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(70);
	var anObject = __webpack_require__(68);
	var getKeys = __webpack_require__(140);
	
	module.exports = __webpack_require__(54) ? Object.defineProperties : function defineProperties(O, Properties) {
	  anObject(O);
	  var keys = getKeys(Properties);
	  var length = keys.length;
	  var i = 0;
	  var P;
	  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};


/***/ },
/* 432 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;


/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has = __webpack_require__(69);
	var toObject = __webpack_require__(144);
	var IE_PROTO = __webpack_require__(90)('IE_PROTO');
	var ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function (O) {
	  O = toObject(O);
	  if (has(O, IE_PROTO)) return O[IE_PROTO];
	  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};


/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	var has = __webpack_require__(69);
	var toIObject = __webpack_require__(92);
	var arrayIndexOf = __webpack_require__(422)(false);
	var IE_PROTO = __webpack_require__(90)('IE_PROTO');
	
	module.exports = function (object, names) {
	  var O = toIObject(object);
	  var i = 0;
	  var result = [];
	  var key;
	  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (has(O, key = names[i++])) {
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};


/***/ },
/* 435 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;


/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(55);


/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(91);
	var defined = __webpack_require__(86);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function (TO_STRING) {
	  return function (that, pos) {
	    var s = String(defined(that));
	    var i = toInteger(pos);
	    var l = s.length;
	    var a, b;
	    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};


/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(91);
	var max = Math.max;
	var min = Math.min;
	module.exports = function (index, length) {
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};


/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(91);
	var min = Math.min;
	module.exports = function (it) {
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};


/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(89);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function (it, S) {
	  if (!isObject(it)) return it;
	  var fn, val;
	  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};


/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	var classof = __webpack_require__(134);
	var ITERATOR = __webpack_require__(35)('iterator');
	var Iterators = __webpack_require__(56);
	module.exports = __webpack_require__(38).getIteratorMethod = function (it) {
	  if (it != undefined) return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};


/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(68);
	var get = __webpack_require__(441);
	module.exports = __webpack_require__(38).getIterator = function (it) {
	  var iterFn = get(it);
	  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
	  return anObject(iterFn.call(it));
	};


/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	var classof = __webpack_require__(134);
	var ITERATOR = __webpack_require__(35)('iterator');
	var Iterators = __webpack_require__(56);
	module.exports = __webpack_require__(38).isIterable = function (it) {
	  var O = Object(it);
	  return O[ITERATOR] !== undefined
	    || '@@iterator' in O
	    // eslint-disable-next-line no-prototype-builtins
	    || Iterators.hasOwnProperty(classof(O));
	};


/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(421);
	var step = __webpack_require__(427);
	var Iterators = __webpack_require__(56);
	var toIObject = __webpack_require__(92);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(139)(Array, 'Array', function (iterated, kind) {
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var kind = this._k;
	  var index = this._i++;
	  if (!O || index >= O.length) {
	    this._t = undefined;
	    return step(1);
	  }
	  if (kind == 'keys') return step(0, index);
	  if (kind == 'values') return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');


/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(87);
	
	$export($export.S + $export.F, 'Object', { assign: __webpack_require__(429) });


/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(87);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(54), 'Object', { defineProperty: __webpack_require__(70).f });


/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	var QueryHandler = __webpack_require__(449);
	var each = __webpack_require__(149).each;
	
	/**
	 * Represents a single media query, manages it's state and registered handlers for this query
	 *
	 * @constructor
	 * @param {string} query the media query string
	 * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design
	 */
	function MediaQuery(query, isUnconditional) {
	    this.query = query;
	    this.isUnconditional = isUnconditional;
	    this.handlers = [];
	    this.mql = window.matchMedia(query);
	
	    var self = this;
	    this.listener = function(mql) {
	        // Chrome passes an MediaQueryListEvent object, while other browsers pass MediaQueryList directly
	        self.mql = mql.currentTarget || mql;
	        self.assess();
	    };
	    this.mql.addListener(this.listener);
	}
	
	MediaQuery.prototype = {
	
	    constuctor : MediaQuery,
	
	    /**
	     * add a handler for this query, triggering if already active
	     *
	     * @param {object} handler
	     * @param {function} handler.match callback for when query is activated
	     * @param {function} [handler.unmatch] callback for when query is deactivated
	     * @param {function} [handler.setup] callback for immediate execution when a query handler is registered
	     * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?
	     */
	    addHandler : function(handler) {
	        var qh = new QueryHandler(handler);
	        this.handlers.push(qh);
	
	        this.matches() && qh.on();
	    },
	
	    /**
	     * removes the given handler from the collection, and calls it's destroy methods
	     *
	     * @param {object || function} handler the handler to remove
	     */
	    removeHandler : function(handler) {
	        var handlers = this.handlers;
	        each(handlers, function(h, i) {
	            if(h.equals(handler)) {
	                h.destroy();
	                return !handlers.splice(i,1); //remove from array and exit each early
	            }
	        });
	    },
	
	    /**
	     * Determine whether the media query should be considered a match
	     *
	     * @return {Boolean} true if media query can be considered a match, false otherwise
	     */
	    matches : function() {
	        return this.mql.matches || this.isUnconditional;
	    },
	
	    /**
	     * Clears all handlers and unbinds events
	     */
	    clear : function() {
	        each(this.handlers, function(handler) {
	            handler.destroy();
	        });
	        this.mql.removeListener(this.listener);
	        this.handlers.length = 0; //clear array
	    },
	
	    /*
	        * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match
	        */
	    assess : function() {
	        var action = this.matches() ? 'on' : 'off';
	
	        each(this.handlers, function(handler) {
	            handler[action]();
	        });
	    }
	};
	
	module.exports = MediaQuery;


/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	var MediaQuery = __webpack_require__(447);
	var Util = __webpack_require__(149);
	var each = Util.each;
	var isFunction = Util.isFunction;
	var isArray = Util.isArray;
	
	/**
	 * Allows for registration of query handlers.
	 * Manages the query handler's state and is responsible for wiring up browser events
	 *
	 * @constructor
	 */
	function MediaQueryDispatch () {
	    if(!window.matchMedia) {
	        throw new Error('matchMedia not present, legacy browsers require a polyfill');
	    }
	
	    this.queries = {};
	    this.browserIsIncapable = !window.matchMedia('only all').matches;
	}
	
	MediaQueryDispatch.prototype = {
	
	    constructor : MediaQueryDispatch,
	
	    /**
	     * Registers a handler for the given media query
	     *
	     * @param {string} q the media query
	     * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers
	     * @param {function} options.match fired when query matched
	     * @param {function} [options.unmatch] fired when a query is no longer matched
	     * @param {function} [options.setup] fired when handler first triggered
	     * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched
	     * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers
	     */
	    register : function(q, options, shouldDegrade) {
	        var queries         = this.queries,
	            isUnconditional = shouldDegrade && this.browserIsIncapable;
	
	        if(!queries[q]) {
	            queries[q] = new MediaQuery(q, isUnconditional);
	        }
	
	        //normalise to object in an array
	        if(isFunction(options)) {
	            options = { match : options };
	        }
	        if(!isArray(options)) {
	            options = [options];
	        }
	        each(options, function(handler) {
	            if (isFunction(handler)) {
	                handler = { match : handler };
	            }
	            queries[q].addHandler(handler);
	        });
	
	        return this;
	    },
	
	    /**
	     * unregisters a query and all it's handlers, or a specific handler for a query
	     *
	     * @param {string} q the media query to target
	     * @param {object || function} [handler] specific handler to unregister
	     */
	    unregister : function(q, handler) {
	        var query = this.queries[q];
	
	        if(query) {
	            if(handler) {
	                query.removeHandler(handler);
	            }
	            else {
	                query.clear();
	                delete this.queries[q];
	            }
	        }
	
	        return this;
	    }
	};
	
	module.exports = MediaQueryDispatch;


/***/ },
/* 449 */
/***/ function(module, exports) {

	/**
	 * Delegate to handle a media query being matched and unmatched.
	 *
	 * @param {object} options
	 * @param {function} options.match callback for when the media query is matched
	 * @param {function} [options.unmatch] callback for when the media query is unmatched
	 * @param {function} [options.setup] one-time callback triggered the first time a query is matched
	 * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?
	 * @constructor
	 */
	function QueryHandler(options) {
	    this.options = options;
	    !options.deferSetup && this.setup();
	}
	
	QueryHandler.prototype = {
	
	    constructor : QueryHandler,
	
	    /**
	     * coordinates setup of the handler
	     *
	     * @function
	     */
	    setup : function() {
	        if(this.options.setup) {
	            this.options.setup();
	        }
	        this.initialised = true;
	    },
	
	    /**
	     * coordinates setup and triggering of the handler
	     *
	     * @function
	     */
	    on : function() {
	        !this.initialised && this.setup();
	        this.options.match && this.options.match();
	    },
	
	    /**
	     * coordinates the unmatch event for the handler
	     *
	     * @function
	     */
	    off : function() {
	        this.options.unmatch && this.options.unmatch();
	    },
	
	    /**
	     * called when a handler is to be destroyed.
	     * delegates to the destroy or unmatch callbacks, depending on availability.
	     *
	     * @function
	     */
	    destroy : function() {
	        this.options.destroy ? this.options.destroy() : this.off();
	    },
	
	    /**
	     * determines equality by reference.
	     * if object is supplied compare options, if function, compare match callback
	     *
	     * @function
	     * @param {object || function} [target] the target for comparison
	     */
	    equals : function(target) {
	        return this.options === target || this.options.match === target;
	    }
	
	};
	
	module.exports = QueryHandler;


/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	var MediaQueryDispatch = __webpack_require__(448);
	module.exports = new MediaQueryDispatch();


/***/ },
/* 451 */
30,
/* 452 */
30,
/* 453 */
30,
/* 454 */
30,
/* 455 */
30,
/* 456 */
30,
/* 457 */
30,
/* 458 */
30,
/* 459 */
30,
/* 460 */
30,
/* 461 */
30,
/* 462 */
30,
/* 463 */
30,
/* 464 */
30,
/* 465 */
30,
/* 466 */
30,
/* 467 */
30,
/* 468 */
30,
/* 469 */
30,
/* 470 */
30,
/* 471 */
30,
/* 472 */
30,
/* 473 */
30,
/* 474 */
30,
/* 475 */
30,
/* 476 */
30,
/* 477 */
30,
/* 478 */
30,
/* 479 */
30,
/* 480 */
30,
/* 481 */
30,
/* 482 */
30,
/* 483 */
30,
/* 484 */
30,
/* 485 */
30,
/* 486 */
30,
/* 487 */
30,
/* 488 */
30,
/* 489 */
30,
/* 490 */
30,
/* 491 */
30,
/* 492 */
30,
/* 493 */
30,
/* 494 */
30,
/* 495 */
30,
/* 496 */
30,
/* 497 */
30,
/* 498 */
30,
/* 499 */
30,
/* 500 */
30,
/* 501 */
30,
/* 502 */
30,
/* 503 */
30,
/* 504 */
30,
/* 505 */
30,
/* 506 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ },
/* 507 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(506);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ },
/* 508 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	var isTextNode = __webpack_require__(516);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}
	
	module.exports = containsNode;

/***/ },
/* 509 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
	
	  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
	
	  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
	
	  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;

/***/ },
/* 510 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	var ExecutionEnvironment = __webpack_require__(17);
	
	var createArrayFromMixed = __webpack_require__(509);
	var getMarkupWrap = __webpack_require__(511);
	var invariant = __webpack_require__(8);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;

/***/ },
/* 511 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	var ExecutionEnvironment = __webpack_require__(17);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;

/***/ },
/* 512 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable.Window && scrollable instanceof scrollable.Window) {
	    return {
	      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
	      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ },
/* 513 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ },
/* 514 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(513);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ },
/* 515 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  var doc = object ? object.ownerDocument || object : document;
	  var defaultView = doc.defaultView || window;
	  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ },
/* 516 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var isNode = __webpack_require__(515);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ },
/* 517 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ },
/* 518 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	var loopAsync = exports.loopAsync = function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var isSync = false,
	      hasNext = false,
	      doneArgs = void 0;
	
	  var done = function done() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    isDone = true;
	
	    if (isSync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = args;
	      return;
	    }
	
	    callback.apply(undefined, args);
	  };
	
	  var next = function next() {
	    if (isDone) return;
	
	    hasNext = true;
	
	    if (isSync) return; // Iterate instead of recursing if possible.
	
	    isSync = true;
	
	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work(currentTurn++, next, done);
	    }
	
	    isSync = false;
	
	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(undefined, doneArgs);
	      return;
	    }
	
	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  };
	
	  next();
	};

/***/ },
/* 519 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.replaceLocation = exports.pushLocation = exports.startListener = exports.getCurrentLocation = exports.go = exports.getUserConfirmation = undefined;
	
	var _BrowserProtocol = __webpack_require__(94);
	
	Object.defineProperty(exports, 'getUserConfirmation', {
	  enumerable: true,
	  get: function get() {
	    return _BrowserProtocol.getUserConfirmation;
	  }
	});
	Object.defineProperty(exports, 'go', {
	  enumerable: true,
	  get: function get() {
	    return _BrowserProtocol.go;
	  }
	});
	
	var _warning = __webpack_require__(33);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _LocationUtils = __webpack_require__(40);
	
	var _DOMUtils = __webpack_require__(72);
	
	var _DOMStateStorage = __webpack_require__(154);
	
	var _PathUtils = __webpack_require__(31);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HashChangeEvent = 'hashchange';
	
	var getHashPath = function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  var href = window.location.href;
	  var hashIndex = href.indexOf('#');
	  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
	};
	
	var pushHashPath = function pushHashPath(path) {
	  return window.location.hash = path;
	};
	
	var replaceHashPath = function replaceHashPath(path) {
	  var hashIndex = window.location.href.indexOf('#');
	
	  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);
	};
	
	var getCurrentLocation = exports.getCurrentLocation = function getCurrentLocation(pathCoder, queryKey) {
	  var path = pathCoder.decodePath(getHashPath());
	  var key = (0, _PathUtils.getQueryStringValueFromPath)(path, queryKey);
	
	  var state = void 0;
	  if (key) {
	    path = (0, _PathUtils.stripQueryStringValueFromPath)(path, queryKey);
	    state = (0, _DOMStateStorage.readState)(key);
	  }
	
	  var init = (0, _PathUtils.parsePath)(path);
	  init.state = state;
	
	  return (0, _LocationUtils.createLocation)(init, undefined, key);
	};
	
	var prevLocation = void 0;
	
	var startListener = exports.startListener = function startListener(listener, pathCoder, queryKey) {
	  var handleHashChange = function handleHashChange() {
	    var path = getHashPath();
	    var encodedPath = pathCoder.encodePath(path);
	
	    if (path !== encodedPath) {
	      // Always be sure we have a properly-encoded hash.
	      replaceHashPath(encodedPath);
	    } else {
	      var currentLocation = getCurrentLocation(pathCoder, queryKey);
	
	      if (prevLocation && currentLocation.key && prevLocation.key === currentLocation.key) return; // Ignore extraneous hashchange events
	
	      prevLocation = currentLocation;
	
	      listener(currentLocation);
	    }
	  };
	
	  // Ensure the hash is encoded properly.
	  var path = getHashPath();
	  var encodedPath = pathCoder.encodePath(path);
	
	  if (path !== encodedPath) replaceHashPath(encodedPath);
	
	  (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
	
	  return function () {
	    return (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
	  };
	};
	
	var updateLocation = function updateLocation(location, pathCoder, queryKey, updateHash) {
	  var state = location.state,
	      key = location.key;
	
	
	  var path = pathCoder.encodePath((0, _PathUtils.createPath)(location));
	
	  if (state !== undefined) {
	    path = (0, _PathUtils.addQueryStringValueToPath)(path, queryKey, key);
	    (0, _DOMStateStorage.saveState)(key, state);
	  }
	
	  prevLocation = location;
	
	  updateHash(path);
	};
	
	var pushLocation = exports.pushLocation = function pushLocation(location, pathCoder, queryKey) {
	  return updateLocation(location, pathCoder, queryKey, function (path) {
	    if (getHashPath() !== path) {
	      pushHashPath(path);
	    } else {
	       false ? (0, _warning2.default)(false, 'You cannot PUSH the same path using hash history') : void 0;
	    }
	  });
	};
	
	var replaceLocation = exports.replaceLocation = function replaceLocation(location, pathCoder, queryKey) {
	  return updateLocation(location, pathCoder, queryKey, function (path) {
	    if (getHashPath() !== path) replaceHashPath(path);
	  });
	};

/***/ },
/* 520 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.replaceLocation = exports.pushLocation = exports.getCurrentLocation = exports.go = exports.getUserConfirmation = undefined;
	
	var _BrowserProtocol = __webpack_require__(94);
	
	Object.defineProperty(exports, 'getUserConfirmation', {
	  enumerable: true,
	  get: function get() {
	    return _BrowserProtocol.getUserConfirmation;
	  }
	});
	Object.defineProperty(exports, 'go', {
	  enumerable: true,
	  get: function get() {
	    return _BrowserProtocol.go;
	  }
	});
	
	var _LocationUtils = __webpack_require__(40);
	
	var _PathUtils = __webpack_require__(31);
	
	var getCurrentLocation = exports.getCurrentLocation = function getCurrentLocation() {
	  return (0, _LocationUtils.createLocation)(window.location);
	};
	
	var pushLocation = exports.pushLocation = function pushLocation(location) {
	  window.location.href = (0, _PathUtils.createPath)(location);
	  return false; // Don't update location
	};
	
	var replaceLocation = exports.replaceLocation = function replaceLocation(location) {
	  window.location.replace((0, _PathUtils.createPath)(location));
	  return false; // Don't update location
	};

/***/ },
/* 521 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _ExecutionEnvironment = __webpack_require__(95);
	
	var _BrowserProtocol = __webpack_require__(94);
	
	var BrowserProtocol = _interopRequireWildcard(_BrowserProtocol);
	
	var _RefreshProtocol = __webpack_require__(520);
	
	var RefreshProtocol = _interopRequireWildcard(_RefreshProtocol);
	
	var _DOMUtils = __webpack_require__(72);
	
	var _createHistory = __webpack_require__(96);
	
	var _createHistory2 = _interopRequireDefault(_createHistory);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Creates and returns a history object that uses HTML5's history API
	 * (pushState, replaceState, and the popstate event) to manage history.
	 * This is the recommended method of managing history in browsers because
	 * it provides the cleanest URLs.
	 *
	 * Note: In browsers that do not support the HTML5 history API full
	 * page reloads will be used to preserve clean URLs. You can force this
	 * behavior using { forceRefresh: true } in options.
	 */
	var createBrowserHistory = function createBrowserHistory() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  !_ExecutionEnvironment.canUseDOM ?  false ? (0, _invariant2.default)(false, 'Browser history needs a DOM') : (0, _invariant2.default)(false) : void 0;
	
	  var useRefresh = options.forceRefresh || !(0, _DOMUtils.supportsHistory)();
	  var Protocol = useRefresh ? RefreshProtocol : BrowserProtocol;
	
	  var getUserConfirmation = Protocol.getUserConfirmation,
	      getCurrentLocation = Protocol.getCurrentLocation,
	      pushLocation = Protocol.pushLocation,
	      replaceLocation = Protocol.replaceLocation,
	      go = Protocol.go;
	
	
	  var history = (0, _createHistory2.default)(_extends({
	    getUserConfirmation: getUserConfirmation }, options, {
	    getCurrentLocation: getCurrentLocation,
	    pushLocation: pushLocation,
	    replaceLocation: replaceLocation,
	    go: go
	  }));
	
	  var listenerCount = 0,
	      stopListener = void 0;
	
	  var startListener = function startListener(listener, before) {
	    if (++listenerCount === 1) stopListener = BrowserProtocol.startListener(history.transitionTo);
	
	    var unlisten = before ? history.listenBefore(listener) : history.listen(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopListener();
	    };
	  };
	
	  var listenBefore = function listenBefore(listener) {
	    return startListener(listener, true);
	  };
	
	  var listen = function listen(listener) {
	    return startListener(listener, false);
	  };
	
	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen
	  });
	};
	
	exports.default = createBrowserHistory;

/***/ },
/* 522 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _warning = __webpack_require__(33);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _ExecutionEnvironment = __webpack_require__(95);
	
	var _DOMUtils = __webpack_require__(72);
	
	var _HashProtocol = __webpack_require__(519);
	
	var HashProtocol = _interopRequireWildcard(_HashProtocol);
	
	var _createHistory = __webpack_require__(96);
	
	var _createHistory2 = _interopRequireDefault(_createHistory);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DefaultQueryKey = '_k';
	
	var addLeadingSlash = function addLeadingSlash(path) {
	  return path.charAt(0) === '/' ? path : '/' + path;
	};
	
	var HashPathCoders = {
	  hashbang: {
	    encodePath: function encodePath(path) {
	      return path.charAt(0) === '!' ? path : '!' + path;
	    },
	    decodePath: function decodePath(path) {
	      return path.charAt(0) === '!' ? path.substring(1) : path;
	    }
	  },
	  noslash: {
	    encodePath: function encodePath(path) {
	      return path.charAt(0) === '/' ? path.substring(1) : path;
	    },
	    decodePath: addLeadingSlash
	  },
	  slash: {
	    encodePath: addLeadingSlash,
	    decodePath: addLeadingSlash
	  }
	};
	
	var createHashHistory = function createHashHistory() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  !_ExecutionEnvironment.canUseDOM ?  false ? (0, _invariant2.default)(false, 'Hash history needs a DOM') : (0, _invariant2.default)(false) : void 0;
	
	  var queryKey = options.queryKey,
	      hashType = options.hashType;
	
	
	   false ? (0, _warning2.default)(queryKey !== false, 'Using { queryKey: false } no longer works. Instead, just don\'t ' + 'use location state if you don\'t want a key in your URL query string') : void 0;
	
	  if (typeof queryKey !== 'string') queryKey = DefaultQueryKey;
	
	  if (hashType == null) hashType = 'slash';
	
	  if (!(hashType in HashPathCoders)) {
	     false ? (0, _warning2.default)(false, 'Invalid hash type: %s', hashType) : void 0;
	
	    hashType = 'slash';
	  }
	
	  var pathCoder = HashPathCoders[hashType];
	
	  var getUserConfirmation = HashProtocol.getUserConfirmation;
	
	
	  var getCurrentLocation = function getCurrentLocation() {
	    return HashProtocol.getCurrentLocation(pathCoder, queryKey);
	  };
	
	  var pushLocation = function pushLocation(location) {
	    return HashProtocol.pushLocation(location, pathCoder, queryKey);
	  };
	
	  var replaceLocation = function replaceLocation(location) {
	    return HashProtocol.replaceLocation(location, pathCoder, queryKey);
	  };
	
	  var history = (0, _createHistory2.default)(_extends({
	    getUserConfirmation: getUserConfirmation }, options, {
	    getCurrentLocation: getCurrentLocation,
	    pushLocation: pushLocation,
	    replaceLocation: replaceLocation,
	    go: HashProtocol.go
	  }));
	
	  var listenerCount = 0,
	      stopListener = void 0;
	
	  var startListener = function startListener(listener, before) {
	    if (++listenerCount === 1) stopListener = HashProtocol.startListener(history.transitionTo, pathCoder, queryKey);
	
	    var unlisten = before ? history.listenBefore(listener) : history.listen(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopListener();
	    };
	  };
	
	  var listenBefore = function listenBefore(listener) {
	    return startListener(listener, true);
	  };
	
	  var listen = function listen(listener) {
	    return startListener(listener, false);
	  };
	
	  var goIsSupportedWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();
	
	  var go = function go(n) {
	     false ? (0, _warning2.default)(goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;
	
	    history.go(n);
	  };
	
	  var createHref = function createHref(path) {
	    return '#' + pathCoder.encodePath(history.createHref(path));
	  };
	
	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    go: go,
	    createHref: createHref
	  });
	};
	
	exports.default = createHashHistory;

/***/ },
/* 523 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _warning = __webpack_require__(33);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _LocationUtils = __webpack_require__(40);
	
	var _PathUtils = __webpack_require__(31);
	
	var _createHistory = __webpack_require__(96);
	
	var _createHistory2 = _interopRequireDefault(_createHistory);
	
	var _Actions = __webpack_require__(71);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var createStateStorage = function createStateStorage(entries) {
	  return entries.filter(function (entry) {
	    return entry.state;
	  }).reduce(function (memo, entry) {
	    memo[entry.key] = entry.state;
	    return memo;
	  }, {});
	};
	
	var createMemoryHistory = function createMemoryHistory() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  if (Array.isArray(options)) {
	    options = { entries: options };
	  } else if (typeof options === 'string') {
	    options = { entries: [options] };
	  }
	
	  var getCurrentLocation = function getCurrentLocation() {
	    var entry = entries[current];
	    var path = (0, _PathUtils.createPath)(entry);
	
	    var key = void 0,
	        state = void 0;
	    if (entry.key) {
	      key = entry.key;
	      state = readState(key);
	    }
	
	    var init = (0, _PathUtils.parsePath)(path);
	
	    return (0, _LocationUtils.createLocation)(_extends({}, init, { state: state }), undefined, key);
	  };
	
	  var canGo = function canGo(n) {
	    var index = current + n;
	    return index >= 0 && index < entries.length;
	  };
	
	  var go = function go(n) {
	    if (!n) return;
	
	    if (!canGo(n)) {
	       false ? (0, _warning2.default)(false, 'Cannot go(%s) there is not enough history', n) : void 0;
	
	      return;
	    }
	
	    current += n;
	    var currentLocation = getCurrentLocation();
	
	    // Change action to POP
	    history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));
	  };
	
	  var pushLocation = function pushLocation(location) {
	    current += 1;
	
	    if (current < entries.length) entries.splice(current);
	
	    entries.push(location);
	
	    saveState(location.key, location.state);
	  };
	
	  var replaceLocation = function replaceLocation(location) {
	    entries[current] = location;
	    saveState(location.key, location.state);
	  };
	
	  var history = (0, _createHistory2.default)(_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    pushLocation: pushLocation,
	    replaceLocation: replaceLocation,
	    go: go
	  }));
	
	  var _options = options,
	      entries = _options.entries,
	      current = _options.current;
	
	
	  if (typeof entries === 'string') {
	    entries = [entries];
	  } else if (!Array.isArray(entries)) {
	    entries = ['/'];
	  }
	
	  entries = entries.map(function (entry) {
	    return (0, _LocationUtils.createLocation)(entry);
	  });
	
	  if (current == null) {
	    current = entries.length - 1;
	  } else {
	    !(current >= 0 && current < entries.length) ?  false ? (0, _invariant2.default)(false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : (0, _invariant2.default)(false) : void 0;
	  }
	
	  var storage = createStateStorage(entries);
	
	  var saveState = function saveState(key, state) {
	    return storage[key] = state;
	  };
	
	  var readState = function readState(key) {
	    return storage[key];
	  };
	
	  return _extends({}, history, {
	    canGo: canGo
	  });
	};
	
	exports.default = createMemoryHistory;

/***/ },
/* 524 */
/***/ function(module, exports) {

	module.exports = {
		"country_phone_code_to_countries": {
			"1": [
				"US",
				"AG",
				"AI",
				"AS",
				"BB",
				"BM",
				"BS",
				"CA",
				"DM",
				"DO",
				"GD",
				"GU",
				"JM",
				"KN",
				"KY",
				"LC",
				"MP",
				"MS",
				"PR",
				"SX",
				"TC",
				"TT",
				"VC",
				"VG",
				"VI"
			],
			"7": [
				"RU",
				"KZ"
			],
			"20": [
				"EG"
			],
			"27": [
				"ZA"
			],
			"30": [
				"GR"
			],
			"31": [
				"NL"
			],
			"32": [
				"BE"
			],
			"33": [
				"FR"
			],
			"34": [
				"ES"
			],
			"36": [
				"HU"
			],
			"39": [
				"IT",
				"VA"
			],
			"40": [
				"RO"
			],
			"41": [
				"CH"
			],
			"43": [
				"AT"
			],
			"44": [
				"GB",
				"GG",
				"IM",
				"JE"
			],
			"45": [
				"DK"
			],
			"46": [
				"SE"
			],
			"47": [
				"NO",
				"SJ"
			],
			"48": [
				"PL"
			],
			"49": [
				"DE"
			],
			"51": [
				"PE"
			],
			"52": [
				"MX"
			],
			"53": [
				"CU"
			],
			"54": [
				"AR"
			],
			"55": [
				"BR"
			],
			"56": [
				"CL"
			],
			"57": [
				"CO"
			],
			"58": [
				"VE"
			],
			"60": [
				"MY"
			],
			"61": [
				"AU",
				"CC",
				"CX"
			],
			"62": [
				"ID"
			],
			"63": [
				"PH"
			],
			"64": [
				"NZ"
			],
			"65": [
				"SG"
			],
			"66": [
				"TH"
			],
			"81": [
				"JP"
			],
			"82": [
				"KR"
			],
			"84": [
				"VN"
			],
			"86": [
				"CN"
			],
			"90": [
				"TR"
			],
			"91": [
				"IN"
			],
			"92": [
				"PK"
			],
			"93": [
				"AF"
			],
			"94": [
				"LK"
			],
			"95": [
				"MM"
			],
			"98": [
				"IR"
			],
			"211": [
				"SS"
			],
			"212": [
				"MA",
				"EH"
			],
			"213": [
				"DZ"
			],
			"216": [
				"TN"
			],
			"218": [
				"LY"
			],
			"220": [
				"GM"
			],
			"221": [
				"SN"
			],
			"222": [
				"MR"
			],
			"223": [
				"ML"
			],
			"224": [
				"GN"
			],
			"225": [
				"CI"
			],
			"226": [
				"BF"
			],
			"227": [
				"NE"
			],
			"228": [
				"TG"
			],
			"229": [
				"BJ"
			],
			"230": [
				"MU"
			],
			"231": [
				"LR"
			],
			"232": [
				"SL"
			],
			"233": [
				"GH"
			],
			"234": [
				"NG"
			],
			"235": [
				"TD"
			],
			"236": [
				"CF"
			],
			"237": [
				"CM"
			],
			"238": [
				"CV"
			],
			"239": [
				"ST"
			],
			"240": [
				"GQ"
			],
			"241": [
				"GA"
			],
			"242": [
				"CG"
			],
			"243": [
				"CD"
			],
			"244": [
				"AO"
			],
			"245": [
				"GW"
			],
			"246": [
				"IO"
			],
			"247": [
				"AC"
			],
			"248": [
				"SC"
			],
			"249": [
				"SD"
			],
			"250": [
				"RW"
			],
			"251": [
				"ET"
			],
			"252": [
				"SO"
			],
			"253": [
				"DJ"
			],
			"254": [
				"KE"
			],
			"255": [
				"TZ"
			],
			"256": [
				"UG"
			],
			"257": [
				"BI"
			],
			"258": [
				"MZ"
			],
			"260": [
				"ZM"
			],
			"261": [
				"MG"
			],
			"262": [
				"RE",
				"YT"
			],
			"263": [
				"ZW"
			],
			"264": [
				"NA"
			],
			"265": [
				"MW"
			],
			"266": [
				"LS"
			],
			"267": [
				"BW"
			],
			"268": [
				"SZ"
			],
			"269": [
				"KM"
			],
			"290": [
				"SH",
				"TA"
			],
			"291": [
				"ER"
			],
			"297": [
				"AW"
			],
			"298": [
				"FO"
			],
			"299": [
				"GL"
			],
			"350": [
				"GI"
			],
			"351": [
				"PT"
			],
			"352": [
				"LU"
			],
			"353": [
				"IE"
			],
			"354": [
				"IS"
			],
			"355": [
				"AL"
			],
			"356": [
				"MT"
			],
			"357": [
				"CY"
			],
			"358": [
				"FI",
				"AX"
			],
			"359": [
				"BG"
			],
			"370": [
				"LT"
			],
			"371": [
				"LV"
			],
			"372": [
				"EE"
			],
			"373": [
				"MD"
			],
			"374": [
				"AM"
			],
			"375": [
				"BY"
			],
			"376": [
				"AD"
			],
			"377": [
				"MC"
			],
			"378": [
				"SM"
			],
			"380": [
				"UA"
			],
			"381": [
				"RS"
			],
			"382": [
				"ME"
			],
			"385": [
				"HR"
			],
			"386": [
				"SI"
			],
			"387": [
				"BA"
			],
			"389": [
				"MK"
			],
			"420": [
				"CZ"
			],
			"421": [
				"SK"
			],
			"423": [
				"LI"
			],
			"500": [
				"FK"
			],
			"501": [
				"BZ"
			],
			"502": [
				"GT"
			],
			"503": [
				"SV"
			],
			"504": [
				"HN"
			],
			"505": [
				"NI"
			],
			"506": [
				"CR"
			],
			"507": [
				"PA"
			],
			"508": [
				"PM"
			],
			"509": [
				"HT"
			],
			"590": [
				"GP",
				"BL",
				"MF"
			],
			"591": [
				"BO"
			],
			"592": [
				"GY"
			],
			"593": [
				"EC"
			],
			"594": [
				"GF"
			],
			"595": [
				"PY"
			],
			"596": [
				"MQ"
			],
			"597": [
				"SR"
			],
			"598": [
				"UY"
			],
			"599": [
				"CW",
				"BQ"
			],
			"670": [
				"TL"
			],
			"672": [
				"NF"
			],
			"673": [
				"BN"
			],
			"674": [
				"NR"
			],
			"675": [
				"PG"
			],
			"676": [
				"TO"
			],
			"677": [
				"SB"
			],
			"678": [
				"VU"
			],
			"679": [
				"FJ"
			],
			"680": [
				"PW"
			],
			"681": [
				"WF"
			],
			"682": [
				"CK"
			],
			"683": [
				"NU"
			],
			"685": [
				"WS"
			],
			"686": [
				"KI"
			],
			"687": [
				"NC"
			],
			"688": [
				"TV"
			],
			"689": [
				"PF"
			],
			"690": [
				"TK"
			],
			"691": [
				"FM"
			],
			"692": [
				"MH"
			],
			"800": [
				"001"
			],
			"808": [
				"001"
			],
			"850": [
				"KP"
			],
			"852": [
				"HK"
			],
			"853": [
				"MO"
			],
			"855": [
				"KH"
			],
			"856": [
				"LA"
			],
			"870": [
				"001"
			],
			"878": [
				"001"
			],
			"880": [
				"BD"
			],
			"881": [
				"001"
			],
			"882": [
				"001"
			],
			"883": [
				"001"
			],
			"886": [
				"TW"
			],
			"888": [
				"001"
			],
			"960": [
				"MV"
			],
			"961": [
				"LB"
			],
			"962": [
				"JO"
			],
			"963": [
				"SY"
			],
			"964": [
				"IQ"
			],
			"965": [
				"KW"
			],
			"966": [
				"SA"
			],
			"967": [
				"YE"
			],
			"968": [
				"OM"
			],
			"970": [
				"PS"
			],
			"971": [
				"AE"
			],
			"972": [
				"IL"
			],
			"973": [
				"BH"
			],
			"974": [
				"QA"
			],
			"975": [
				"BT"
			],
			"976": [
				"MN"
			],
			"977": [
				"NP"
			],
			"979": [
				"001"
			],
			"992": [
				"TJ"
			],
			"993": [
				"TM"
			],
			"994": [
				"AZ"
			],
			"995": [
				"GE"
			],
			"996": [
				"KG"
			],
			"998": [
				"UZ"
			]
		},
		"countries": {
			"AC": [
				"247",
				"[46]\\d{4}|[01589]\\d{5}"
			],
			"AD": [
				"376",
				"[16]\\d{5,8}|[37-9]\\d{5}",
				[
					[
						"(\\d{3})(\\d{3})",
						"$1 $2",
						[
							"[137-9]|6[0-8]"
						]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						[
							"180",
							"180[02]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"690"
						]
					]
				]
			],
			"AE": [
				"971",
				"[2-79]\\d{7,8}|800\\d{2,9}",
				[
					[
						"([2-4679])(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[2-4679][2-8]"
						]
					],
					[
						"(5\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"5"
						]
					],
					[
						"([479]00)(\\d)(\\d{5})",
						"$1 $2 $3",
						[
							"[479]00"
						],
						"$1"
					],
					[
						"([68]00)(\\d{2,9})",
						"$1 $2",
						[
							"[68]00"
						],
						"$1"
					]
				],
				"0",
				"0$1"
			],
			"AF": [
				"93",
				"[2-7]\\d{8}",
				[
					[
						"([2-7]\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[2-7]"
						]
					]
				],
				"0",
				"0$1"
			],
			"AG": [
				"1",
				"[2589]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"268"
			],
			"AI": [
				"1",
				"[2589]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"264"
			],
			"AL": [
				"355",
				"[2-57]\\d{7}|6\\d{8}|8\\d{5,7}|9\\d{5}",
				[
					[
						"(4)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"4[0-6]"
						]
					],
					[
						"(6\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"6"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[2358][2-5]|4[7-9]"
						]
					],
					[
						"(\\d{3})(\\d{3,5})",
						"$1 $2",
						[
							"[235][16-9]|[79]|8[016-9]"
						]
					]
				],
				"0",
				"0$1"
			],
			"AM": [
				"374",
				"[1-9]\\d{7}",
				[
					[
						"(\\d{2})(\\d{6})",
						"$1 $2",
						[
							"1|47"
						]
					],
					[
						"(\\d{2})(\\d{6})",
						"$1 $2",
						[
							"4[1349]|[5-7]|88|9[1-9]"
						],
						"0$1"
					],
					[
						"(\\d{3})(\\d{5})",
						"$1 $2",
						[
							"[23]"
						]
					],
					[
						"(\\d{3})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						[
							"8|90"
						],
						"0 $1"
					]
				],
				"0",
				"(0$1)"
			],
			"AO": [
				"244",
				"[29]\\d{8}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3"
					]
				]
			],
			"AR": [
				"54",
				"11\\d{8}|[2368]\\d{9}|9\\d{10}",
				[
					[
						"([68]\\d{2})(\\d{3})(\\d{4})",
						"$1-$2-$3",
						[
							"[68]"
						]
					],
					[
						"(9)(11)(\\d{4})(\\d{4})",
						"$2 15-$3-$4",
						[
							"911"
						],
						null,
						null,
						"$1 $2 $3-$4"
					],
					[
						"(9)(\\d{3})(\\d{3})(\\d{4})",
						"$2 15-$3-$4",
						[
							"9(?:2[2-4689]|3[3-8])",
							"9(?:2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578]))",
							"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))",
							"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))"
						],
						null,
						null,
						"$1 $2 $3-$4"
					],
					[
						"(9)(\\d{4})(\\d{2})(\\d{4})",
						"$2 15-$3-$4",
						[
							"9[23]"
						],
						null,
						null,
						"$1 $2 $3-$4"
					],
					[
						"(11)(\\d{4})(\\d{4})",
						"$1 $2-$3",
						[
							"11"
						],
						null,
						"true"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2-$3",
						[
							"2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578])",
							"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))",
							"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))"
						],
						null,
						"true"
					],
					[
						"(\\d{4})(\\d{2})(\\d{4})",
						"$1 $2-$3",
						[
							"[23]"
						],
						null,
						"true"
					]
				],
				"0",
				"0$1",
				"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))?15)?",
				"9$1"
			],
			"AS": [
				"1",
				"[5689]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"684"
			],
			"AT": [
				"43",
				"[1-9]\\d{3,12}",
				[
					[
						"(116\\d{3})",
						"$1",
						[
							"116"
						],
						"$1"
					],
					[
						"(1)(\\d{3,12})",
						"$1 $2",
						[
							"1"
						]
					],
					[
						"(5\\d)(\\d{3,5})",
						"$1 $2",
						[
							"5[079]"
						]
					],
					[
						"(5\\d)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"5[079]"
						]
					],
					[
						"(5\\d)(\\d{4})(\\d{4,7})",
						"$1 $2 $3",
						[
							"5[079]"
						]
					],
					[
						"(\\d{3})(\\d{3,10})",
						"$1 $2",
						[
							"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:[28]0|32)|[89]"
						]
					],
					[
						"(\\d{4})(\\d{3,9})",
						"$1 $2",
						[
							"2|3(?:1[1-578]|[3-8])|4[2378]|5[2-6]|6(?:[12]|4[1-9]|5[468])|7(?:[24][1-8]|35|[5-79])"
						]
					]
				],
				"0",
				"0$1"
			],
			"AU": [
				"61",
				"1\\d{4,9}|[2-578]\\d{8}",
				[
					[
						"([2378])(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"[2378]"
						],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"14|[45]"
						],
						"0$1"
					],
					[
						"(16)(\\d{3,4})",
						"$1 $2",
						[
							"16"
						],
						"0$1"
					],
					[
						"(16)(\\d{3})(\\d{2,4})",
						"$1 $2 $3",
						[
							"16"
						],
						"0$1"
					],
					[
						"(1[389]\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"1[389]0",
							"1(?:[38]0|9)0"
						]
					],
					[
						"(180)(2\\d{3})",
						"$1 $2",
						[
							"180",
							"1802"
						]
					],
					[
						"(19\\d)(\\d{3})",
						"$1 $2",
						[
							"19[13]"
						]
					],
					[
						"(19\\d{2})(\\d{4})",
						"$1 $2",
						[
							"19[679]"
						]
					],
					[
						"(13)(\\d{2})(\\d{2})",
						"$1 $2 $3",
						[
							"13[1-9]"
						]
					]
				],
				"0",
				null,
				null,
				null,
				null,
				null,
				[
					"[237]\\d{8}|8(?:51(?:0(?:0[03-9]|[1247]\\d|3[2-9]|5[0-8]|6[1-9]|8[0-6])|1(?:1[69]|[23]\\d|4[0-4]))|[6-8]\\d{4}|9(?:[02-9]\\d{3}|1(?:[0-57-9]\\d{2}|6[0135-9]\\d)))\\d{3}",
					"14(?:5\\d|71)\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12457-9]|9[017-9])\\d{6}",
					"180(?:0\\d{3}|2)\\d{3}",
					"19(?:0[0126]\\d|[679])\\d{5}",
					"500\\d{6}",
					null,
					null,
					"16\\d{3,7}",
					"550\\d{6}",
					"13(?:00\\d{3}|45[0-4]|\\d)\\d{3}"
				]
			],
			"AW": [
				"297",
				"[25-9]\\d{6}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2"
					]
				]
			],
			"AX": [
				"358",
				"1\\d{5,11}|[35]\\d{5,9}|2\\d{4,9}|4\\d{5,10}|6\\d{7,9}|7\\d{4,9}|8\\d{6,9}",
				[
					[
						"(\\d{3})(\\d{3,7})",
						"$1 $2",
						[
							"(?:[1-3]0|[6-8])0"
						]
					],
					[
						"(75\\d{3})",
						"$1",
						[
							"75[12]"
						]
					],
					[
						"(116\\d{3})",
						"$1",
						[
							"116"
						],
						"$1"
					],
					[
						"(\\d{2})(\\d{4,10})",
						"$1 $2",
						[
							"[14]|2[09]|50|7[135]"
						]
					],
					[
						"(\\d)(\\d{4,11})",
						"$1 $2",
						[
							"[25689][1-8]|3"
						]
					]
				],
				"0",
				null,
				null,
				null,
				null,
				null,
				[
					"18[1-8]\\d{3,9}",
					"4\\d{5,10}|50\\d{4,8}",
					"800\\d{4,7}",
					"[67]00\\d{5,6}",
					null,
					null,
					"[13]0\\d{4,8}|2(?:0(?:[016-8]\\d{3,7}|[2-59]\\d{2,7})|9\\d{4,8})|60(?:[12]\\d{5,6}|6\\d{7})|7(?:1\\d{7}|3\\d{8}|5[03-9]\\d{2,7})"
				]
			],
			"AZ": [
				"994",
				"[1-9]\\d{8}",
				[
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"1[28]|2(?:[0-36]|[45]2)|365"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[4-8]"
						],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"9"
						],
						"0$1"
					]
				],
				"0",
				"(0$1)"
			],
			"BA": [
				"387",
				"[3-9]\\d{7,8}",
				[
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2-$3",
						[
							"[3-5]"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"6[1-356]|[7-9]"
						]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3 $4",
						[
							"6[047]"
						]
					]
				],
				"0",
				"0$1"
			],
			"BB": [
				"1",
				"[2589]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"246"
			],
			"BD": [
				"880",
				"[2-79]\\d{5,9}|1\\d{9}|8[0-7]\\d{4,8}",
				[
					[
						"(2)(\\d{7,8})",
						"$1-$2",
						[
							"2"
						]
					],
					[
						"(\\d{2})(\\d{4,6})",
						"$1-$2",
						[
							"[3-79]1"
						]
					],
					[
						"(\\d{4})(\\d{3,6})",
						"$1-$2",
						[
							"1|3(?:0|[2-58]2)|4(?:0|[25]2|3[23]|[4689][25])|5(?:[02-578]2|6[25])|6(?:[0347-9]2|[26][25])|7[02-9]2|8(?:[023][23]|[4-7]2)|9(?:[02][23]|[458]2|6[016])"
						]
					],
					[
						"(\\d{3})(\\d{3,7})",
						"$1-$2",
						[
							"[3-79][2-9]|8"
						]
					]
				],
				"0",
				"0$1"
			],
			"BE": [
				"32",
				"[1-9]\\d{7,8}",
				[
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"4[6-9]"
						]
					],
					[
						"(\\d)(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[23]|4[23]|9[2-4]"
						]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[156]|7[018]|8(?:0[1-9]|[1-79])"
						]
					],
					[
						"(\\d{3})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						[
							"(?:80|9)0"
						]
					]
				],
				"0",
				"0$1"
			],
			"BF": [
				"226",
				"[25-7]\\d{7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4"
					]
				]
			],
			"BG": [
				"359",
				"[23567]\\d{5,7}|[489]\\d{6,8}",
				[
					[
						"(2)(\\d)(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"2"
						]
					],
					[
						"(2)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"2"
						]
					],
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						[
							"43[124-7]|70[1-9]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{2})",
						"$1 $2 $3",
						[
							"43[124-7]|70[1-9]"
						]
					],
					[
						"(\\d{3})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						[
							"[78]00"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"99[69]"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{2,3})",
						"$1 $2 $3",
						[
							"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"48|8[7-9]|9[08]"
						]
					]
				],
				"0",
				"0$1"
			],
			"BH": [
				"973",
				"[136-9]\\d{7}",
				[
					[
						"(\\d{4})(\\d{4})",
						"$1 $2"
					]
				]
			],
			"BI": [
				"257",
				"[267]\\d{7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4"
					]
				]
			],
			"BJ": [
				"229",
				"[2689]\\d{7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[2689]"
						]
					]
				]
			],
			"BL": [
				"590",
				"[56]\\d{8}",
				[
					[
						"([56]\\d{2})(\\d{2})(\\d{4})",
						"$1 $2-$3",
						[
							"590|69[01]"
						]
					]
				],
				"0",
				null,
				null,
				null,
				null,
				null,
				[
					"590(?:2[7-9]|5[12]|87)\\d{4}",
					"69(?:0\\d{2}|1(?:2[29]|3[0-5]))\\d{4}"
				]
			],
			"BM": [
				"1",
				"[4589]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"441"
			],
			"BN": [
				"673",
				"[2-578]\\d{6}",
				[
					[
						"([2-578]\\d{2})(\\d{4})",
						"$1 $2",
						[
							"[2-578]"
						]
					]
				]
			],
			"BO": [
				"591",
				"[23467]\\d{7}|8\\d{8}",
				[
					[
						"([234])(\\d{7})",
						"$1 $2",
						[
							"[2-4]"
						]
					],
					[
						"([67]\\d{7})",
						"$1",
						[
							"[67]"
						]
					],
					[
						"(800)(\\d{2})(\\d{4})",
						"$1 $2 $3",
						[
							"800"
						]
					]
				],
				"0",
				null,
				"0(1\\d)?"
			],
			"BQ": [
				"599",
				"[347]\\d{6}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						[
							"[13-7]"
						]
					],
					[
						"(9)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"9"
						]
					]
				],
				null,
				null,
				null,
				null,
				null,
				null,
				[
					"(?:318[023]|41(?:6[023]|70)|7(?:1[578]|50)\\d)\\d{3}",
					"(?:31(?:8[14-8]|9[14578])|416[145-9]|7(?:0[01]|7[07]|8\\d|9[056])\\d)\\d{3}"
				]
			],
			"BR": [
				"55",
				"[1-46-9]\\d{7,10}|5(?:[0-4]\\d{7,9}|5(?:[2-8]\\d{7}|9\\d{7,8}))",
				[
					[
						"(\\d{4})(\\d{4})",
						"$1-$2",
						[
							"300|40[02]",
							"300|40(?:0|20)"
						]
					],
					[
						"([3589]00)(\\d{2,3})(\\d{4})",
						"$1 $2 $3",
						[
							"[3589]00"
						],
						"0$1"
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2-$3",
						[
							"[1-9][1-9]"
						],
						"($1)"
					],
					[
						"(\\d{2})(\\d{5})(\\d{4})",
						"$1 $2-$3",
						[
							"[1-9][1-9]9"
						],
						"($1)"
					]
				],
				"0",
				null,
				"0(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\d{10,11}))?",
				"$2"
			],
			"BS": [
				"1",
				"[2589]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"242"
			],
			"BT": [
				"975",
				"[1-8]\\d{6,7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"1|77"
						]
					],
					[
						"([2-8])(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[2-68]|7[246]"
						]
					]
				]
			],
			"BW": [
				"267",
				"[2-79]\\d{6,7}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						[
							"[2-6]"
						]
					],
					[
						"(7\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"7"
						]
					],
					[
						"(90)(\\d{5})",
						"$1 $2",
						[
							"90"
						]
					]
				]
			],
			"BY": [
				"375",
				"[1-4]\\d{8}|8(?:0(?:0\\d{3,7}|[13]\\d{7})|(?:10|20\\d)\\d{7})|9\\d{9,10}",
				[
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2-$3-$4",
						[
							"17[0-3589]|2[4-9]|[34]",
							"17(?:[02358]|1[0-2]|9[0189])|2[4-9]|[34]"
						],
						"8 0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2-$3-$4",
						[
							"1(?:5[24]|6[235]|7[467])|2(?:1[246]|2[25]|3[26])",
							"1(?:5[24]|6(?:2|3[04-9]|5[0346-9])|7(?:[46]|7[37-9]))|2(?:1[246]|2[25]|3[26])"
						],
						"8 0$1"
					],
					[
						"(\\d{4})(\\d{2})(\\d{3})",
						"$1 $2-$3",
						[
							"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])",
							"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"
						],
						"8 0$1"
					],
					[
						"([89]\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"8[01]|9"
						],
						"8 $1"
					],
					[
						"(82\\d)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"82"
						],
						"8 $1"
					],
					[
						"(800)(\\d{3})",
						"$1 $2",
						[
							"800"
						],
						"8 $1"
					],
					[
						"(800)(\\d{2})(\\d{2,4})",
						"$1 $2 $3",
						[
							"800"
						],
						"8 $1"
					]
				],
				"8",
				null,
				"8?0?"
			],
			"BZ": [
				"501",
				"[2-8]\\d{6}|0\\d{10}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1-$2",
						[
							"[2-8]"
						]
					],
					[
						"(0)(800)(\\d{4})(\\d{3})",
						"$1-$2-$3-$4",
						[
							"080",
							"0800"
						]
					]
				]
			],
			"CA": [
				"1",
				"[2-9]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				null,
				[
					"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:0[04]|13|22|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}",
					null,
					"8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",
					"900[2-9]\\d{6}",
					"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\d{6}"
				]
			],
			"CC": [
				"61",
				"[1458]\\d{5,9}",
				[
					[
						"([2378])(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"[2378]"
						],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"14|[45]"
						],
						"0$1"
					],
					[
						"(16)(\\d{3,4})",
						"$1 $2",
						[
							"16"
						],
						"0$1"
					],
					[
						"(16)(\\d{3})(\\d{2,4})",
						"$1 $2 $3",
						[
							"16"
						],
						"0$1"
					],
					[
						"(1[389]\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"1[389]0",
							"1(?:[38]0|9)0"
						]
					],
					[
						"(180)(2\\d{3})",
						"$1 $2",
						[
							"180",
							"1802"
						]
					],
					[
						"(19\\d)(\\d{3})",
						"$1 $2",
						[
							"19[13]"
						]
					],
					[
						"(19\\d{2})(\\d{4})",
						"$1 $2",
						[
							"19[679]"
						]
					],
					[
						"(13)(\\d{2})(\\d{2})",
						"$1 $2 $3",
						[
							"13[1-9]"
						]
					]
				],
				"0",
				null,
				null,
				null,
				null,
				null,
				[
					"8(?:51(?:0(?:02|31|60)|118)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:08|22|68)|4[29]8|62\\d|70[23]|959))\\d{3}",
					"14(?:5\\d|71)\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12547-9]|9[017-9])\\d{6}",
					"180(?:0\\d{3}|2)\\d{3}",
					"19(?:0[0126]\\d|[679])\\d{5}",
					"500\\d{6}",
					null,
					null,
					null,
					"550\\d{6}",
					"13(?:00\\d{2})?\\d{4}"
				]
			],
			"CD": [
				"243",
				"[2-6]\\d{6}|[18]\\d{6,8}|9\\d{8}",
				[
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"12"
						]
					],
					[
						"([89]\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"8[0-2459]|9"
						]
					],
					[
						"(\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						[
							"88"
						]
					],
					[
						"(\\d{2})(\\d{5})",
						"$1 $2",
						[
							"[1-6]"
						]
					]
				],
				"0",
				"0$1"
			],
			"CF": [
				"236",
				"[278]\\d{7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4"
					]
				]
			],
			"CG": [
				"242",
				"[028]\\d{8}",
				[
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"801"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[02]"
						]
					],
					[
						"(\\d)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"800"
						]
					]
				]
			],
			"CH": [
				"41",
				"[2-9]\\d{8}|860\\d{9}",
				[
					[
						"([2-9]\\d)(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[2-7]|[89]1"
						]
					],
					[
						"([89]\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"8[047]|90"
						]
					],
					[
						"(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4 $5",
						[
							"860"
						]
					]
				],
				"0",
				"0$1"
			],
			"CI": [
				"225",
				"[02-8]\\d{7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4"
					]
				]
			],
			"CK": [
				"682",
				"[2-8]\\d{4}",
				[
					[
						"(\\d{2})(\\d{3})",
						"$1 $2"
					]
				]
			],
			"CL": [
				"56",
				"1230\\d{7}|[2-46-9]\\d{8,10}|5[1-3578]\\d{7}",
				[
					[
						"(\\d)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"2[23]"
						],
						"($1)"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[357]|4[1-35]|6[13-57]"
						],
						"($1)"
					],
					[
						"(9)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"9"
						]
					],
					[
						"(44)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"44"
						]
					],
					[
						"([68]00)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[68]00"
						],
						"$1"
					],
					[
						"(600)(\\d{3})(\\d{2})(\\d{3})",
						"$1 $2 $3 $4",
						[
							"600"
						],
						"$1"
					],
					[
						"(1230)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"123",
							"1230"
						],
						"$1"
					],
					[
						"(\\d{5})(\\d{4})",
						"$1 $2",
						[
							"219"
						],
						"($1)"
					]
				],
				"0",
				"0$1",
				"0|(1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))"
			],
			"CM": [
				"237",
				"[2368]\\d{7,8}",
				[
					[
						"([26])(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4 $5",
						[
							"[26]"
						]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[23]|88"
						]
					]
				]
			],
			"CN": [
				"86",
				"[1-7]\\d{6,11}|8[0-357-9]\\d{6,9}|9\\d{7,10}",
				[
					[
						"([48]00)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[48]00"
						]
					],
					[
						"(\\d{2})(\\d{5,6})",
						"$1 $2",
						[
							"(?:10|2\\d)[19]",
							"(?:10|2\\d)(?:10|9[56])",
							"(?:10|2\\d)(?:100|9[56])"
						],
						"0$1"
					],
					[
						"(\\d{3})(\\d{5,6})",
						"$1 $2",
						[
							"[3-9]",
							"[3-9]\\d\\d[19]",
							"[3-9]\\d\\d(?:10|9[56])"
						],
						"0$1"
					],
					[
						"(21)(\\d{4})(\\d{4,6})",
						"$1 $2 $3",
						[
							"21"
						],
						"0$1",
						"true"
					],
					[
						"([12]\\d)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"10[1-9]|2[02-9]",
							"10[1-9]|2[02-9]",
							"10(?:[1-79]|8(?:0[1-9]|[1-9]))|2[02-9]"
						],
						"0$1",
						"true"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[47-9]|7|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])"
						],
						"0$1",
						"true"
					],
					[
						"(\\d{3})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[457]|6[09])|8(?:[57]1|98)"
						],
						"0$1",
						"true"
					],
					[
						"(\\d{4})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"807",
							"8078"
						],
						"0$1",
						"true"
					],
					[
						"(\\d{3})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"1(?:[3-57-9]|66)"
						]
					],
					[
						"(10800)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"108",
							"1080",
							"10800"
						]
					],
					[
						"(\\d{3})(\\d{7,8})",
						"$1 $2",
						[
							"950"
						]
					]
				],
				"0",
				null,
				"(1(?:[129]\\d{3}|79\\d{2}))|0"
			],
			"CO": [
				"57",
				"(?:[13]\\d{0,3}|[24-8])\\d{7}",
				[
					[
						"(\\d)(\\d{7})",
						"$1 $2",
						[
							"1(?:[2-7]|8[2-9]|9[0-3])|[24-8]",
							"1(?:[2-7]|8[2-9]|9(?:09|[1-3]))|[24-8]"
						],
						"($1)"
					],
					[
						"(\\d{3})(\\d{7})",
						"$1 $2",
						[
							"3"
						]
					],
					[
						"(1)(\\d{3})(\\d{7})",
						"$1-$2-$3",
						[
							"1(?:80|9[04])",
							"1(?:800|9(?:0[01]|4[78]))"
						],
						"0$1",
						null,
						"$1 $2 $3"
					]
				],
				"0",
				null,
				"0([3579]|4(?:44|56))?"
			],
			"CR": [
				"506",
				"[24-9]\\d{7,9}",
				[
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						[
							"[24-7]|8[3-9]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1-$2-$3",
						[
							"[89]0"
						]
					]
				],
				null,
				null,
				"(19(?:0[012468]|1[09]|20|66|77|99))"
			],
			"CU": [
				"53",
				"[2-57]\\d{5,7}",
				[
					[
						"(\\d)(\\d{6,7})",
						"$1 $2",
						[
							"7"
						]
					],
					[
						"(\\d{2})(\\d{4,6})",
						"$1 $2",
						[
							"[2-4]"
						]
					],
					[
						"(\\d)(\\d{7})",
						"$1 $2",
						[
							"5"
						],
						"0$1"
					]
				],
				"0",
				"(0$1)"
			],
			"CV": [
				"238",
				"[259]\\d{6}",
				[
					[
						"(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3"
					]
				]
			],
			"CW": [
				"599",
				"[134679]\\d{6,7}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						[
							"[13-7]"
						]
					],
					[
						"(9)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"9"
						]
					]
				],
				null,
				null,
				null,
				null,
				null,
				null,
				[
					"9(?:[48]\\d{2}|50\\d|7(?:2[0-24]|[34]\\d|6[35-7]|77|8[7-9]))\\d{4}",
					"9(?:5(?:[12467]\\d|3[01])|6(?:[15-9]\\d|3[01]))\\d{4}",
					null,
					null,
					null,
					null,
					null,
					"955\\d{5}",
					null,
					"60[0-2]\\d{4}"
				]
			],
			"CX": [
				"61",
				"[1458]\\d{5,9}",
				[
					[
						"([2378])(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"[2378]"
						],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"14|[45]"
						],
						"0$1"
					],
					[
						"(16)(\\d{3,4})",
						"$1 $2",
						[
							"16"
						],
						"0$1"
					],
					[
						"(16)(\\d{3})(\\d{2,4})",
						"$1 $2 $3",
						[
							"16"
						],
						"0$1"
					],
					[
						"(1[389]\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"1[389]0",
							"1(?:[38]0|9)0"
						]
					],
					[
						"(180)(2\\d{3})",
						"$1 $2",
						[
							"180",
							"1802"
						]
					],
					[
						"(19\\d)(\\d{3})",
						"$1 $2",
						[
							"19[13]"
						]
					],
					[
						"(19\\d{2})(\\d{4})",
						"$1 $2",
						[
							"19[679]"
						]
					],
					[
						"(13)(\\d{2})(\\d{2})",
						"$1 $2 $3",
						[
							"13[1-9]"
						]
					]
				],
				"0",
				null,
				null,
				null,
				null,
				null,
				[
					"8(?:51(?:0(?:01|30|59)|117)|91(?:00[6-9]|1(?:21|49|78|81)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\d|7(?:0[01]|1[0-2])|958))\\d{3}",
					"14(?:5\\d|71)\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12547-9]|9[017-9])\\d{6}",
					"180(?:0\\d{3}|2)\\d{3}",
					"19(?:0[0126]\\d|[679])\\d{5}",
					"500\\d{6}",
					null,
					null,
					null,
					"550\\d{6}",
					"13(?:00\\d{2})?\\d{4}"
				]
			],
			"CY": [
				"357",
				"[257-9]\\d{7}",
				[
					[
						"(\\d{2})(\\d{6})",
						"$1 $2"
					]
				]
			],
			"CZ": [
				"420",
				"[2-8]\\d{8}|9\\d{8,11}",
				[
					[
						"([2-9]\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[2-8]|9[015-7]"
						]
					],
					[
						"(96\\d)(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						[
							"96"
						]
					],
					[
						"(9\\d)(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						[
							"9[36]"
						]
					]
				]
			],
			"DE": [
				"49",
				"[1-35-9]\\d{3,14}|4(?:[0-8]\\d{3,12}|9(?:[0-37]\\d|4(?:[1-35-8]|4\\d?)|5\\d{1,2}|6[1-8]\\d?)\\d{2,8})",
				[
					[
						"(1\\d{2})(\\d{7,8})",
						"$1 $2",
						[
							"1[67]"
						]
					],
					[
						"(15\\d{3})(\\d{6})",
						"$1 $2",
						[
							"15[0568]"
						]
					],
					[
						"(1\\d{3})(\\d{7})",
						"$1 $2",
						[
							"15"
						]
					],
					[
						"(\\d{2})(\\d{3,11})",
						"$1 $2",
						[
							"3[02]|40|[68]9"
						]
					],
					[
						"(\\d{3})(\\d{3,11})",
						"$1 $2",
						[
							"2(?:0[1-389]|1[124]|2[18]|3[14]|[4-9]1)|3(?:[35-9][15]|4[015])|[4-8][1-9]1|9(?:06|[1-9]1)"
						]
					],
					[
						"(\\d{4})(\\d{2,11})",
						"$1 $2",
						[
							"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|[7-9](?:0[1-9]|[1-9])",
							"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|[46][1246]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|3[1357]|4[13578]|6[1246]|7[1356]|9[1346])|5(?:0[14]|2[1-3589]|3[1357]|[49][1246]|6[1-4]|7[1346]|8[13568])|6(?:0[356]|2[1-489]|3[124-6]|4[1347]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|3[1357]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|4[1347]|6[0135-9]|7[1467]|8[136])|9(?:0[12479]|2[1358]|3[1357]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|[7-9](?:0[1-9]|[1-9])"
						]
					],
					[
						"(3\\d{4})(\\d{1,10})",
						"$1 $2",
						[
							"3"
						]
					],
					[
						"(800)(\\d{7,12})",
						"$1 $2",
						[
							"800"
						]
					],
					[
						"(\\d{3})(\\d)(\\d{4,10})",
						"$1 $2 $3",
						[
							"1(?:37|80)|900",
							"1(?:37|80)|900[1359]"
						]
					],
					[
						"(1\\d{2})(\\d{5,11})",
						"$1 $2",
						[
							"181"
						]
					],
					[
						"(18\\d{3})(\\d{6})",
						"$1 $2",
						[
							"185",
							"1850",
							"18500"
						]
					],
					[
						"(18\\d{2})(\\d{7})",
						"$1 $2",
						[
							"18[68]"
						]
					],
					[
						"(18\\d)(\\d{8})",
						"$1 $2",
						[
							"18[2-579]"
						]
					],
					[
						"(700)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"700"
						]
					],
					[
						"(138)(\\d{4})",
						"$1 $2",
						[
							"138"
						]
					],
					[
						"(15[013-68])(\\d{2})(\\d{8})",
						"$1 $2 $3",
						[
							"15[013-68]"
						]
					],
					[
						"(15[279]\\d)(\\d{2})(\\d{7})",
						"$1 $2 $3",
						[
							"15[279]"
						]
					],
					[
						"(1[67]\\d)(\\d{2})(\\d{7,8})",
						"$1 $2 $3",
						[
							"1(?:6[023]|7)"
						]
					]
				],
				"0",
				"0$1"
			],
			"DJ": [
				"253",
				"[27]\\d{7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4"
					]
				]
			],
			"DK": [
				"45",
				"[2-9]\\d{7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4"
					]
				]
			],
			"DM": [
				"1",
				"[57-9]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"767"
			],
			"DO": [
				"1",
				"[589]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"8[024]9"
			],
			"DZ": [
				"213",
				"(?:[1-4]|[5-9]\\d)\\d{7}",
				[
					[
						"([1-4]\\d)(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[1-4]"
						]
					],
					[
						"([5-8]\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[5-8]"
						]
					],
					[
						"(9\\d)(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"9"
						]
					]
				],
				"0",
				"0$1"
			],
			"EC": [
				"593",
				"1\\d{9,10}|[2-8]\\d{7}|9\\d{8}",
				[
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2-$3",
						[
							"[247]|[356][2-8]"
						],
						null,
						null,
						"$1-$2-$3"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"9"
						],
						"0$1"
					],
					[
						"(1800)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"180",
							"1800"
						],
						"$1"
					]
				],
				"0",
				"(0$1)"
			],
			"EE": [
				"372",
				"[3-9]\\d{6,7}|800\\d{6,7}",
				[
					[
						"([3-79]\\d{2})(\\d{4})",
						"$1 $2",
						[
							"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]",
							"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]"
						]
					],
					[
						"(70)(\\d{2})(\\d{4})",
						"$1 $2 $3",
						[
							"70"
						]
					],
					[
						"(8000)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"800",
							"8000"
						]
					],
					[
						"([458]\\d{3})(\\d{3,4})",
						"$1 $2",
						[
							"40|5|8(?:00|[1-5])",
							"40|5|8(?:00[1-9]|[1-5])"
						]
					]
				]
			],
			"EG": [
				"20",
				"1\\d{4,9}|[24-6]\\d{8}|3\\d{7}|[89]\\d{8,9}",
				[
					[
						"(\\d)(\\d{7,8})",
						"$1 $2",
						[
							"[23]"
						]
					],
					[
						"(\\d{2})(\\d{6,7})",
						"$1 $2",
						[
							"1(?:3|5[239])|[4-6]|[89][2-9]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1[0-25]|[89]00"
						]
					]
				],
				"0",
				"0$1"
			],
			"EH": [
				"212",
				"[5-9]\\d{8}",
				[
					[
						"([5-7]\\d{2})(\\d{6})",
						"$1-$2",
						[
							"5(?:2[015-7]|3[0-4])|[67]"
						]
					],
					[
						"([58]\\d{3})(\\d{5})",
						"$1-$2",
						[
							"5(?:2[2-489]|3[5-9]|92)|892",
							"5(?:2(?:[2-48]|9[0-7])|3(?:[5-79]|8[0-7])|924)|892"
						]
					],
					[
						"(5\\d{4})(\\d{4})",
						"$1-$2",
						[
							"5(?:29|38)",
							"5(?:29|38)[89]"
						]
					],
					[
						"([5]\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"5(?:4[067]|5[03])"
						]
					],
					[
						"(8[09])(\\d{7})",
						"$1-$2",
						[
							"8(?:0|9[013-9])"
						]
					]
				],
				"0",
				null,
				null,
				null,
				null,
				"528[89]"
			],
			"ER": [
				"291",
				"[178]\\d{6}",
				[
					[
						"(\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3"
					]
				],
				"0",
				"0$1"
			],
			"ES": [
				"34",
				"[5-9]\\d{8}",
				[
					[
						"([89]00)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[89]00"
						]
					],
					[
						"([5-9]\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[568]|[79][0-8]"
						]
					]
				]
			],
			"ET": [
				"251",
				"[1-59]\\d{8}",
				[
					[
						"([1-59]\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[1-59]"
						]
					]
				],
				"0",
				"0$1"
			],
			"FI": [
				"358",
				"1\\d{4,11}|[2-9]\\d{4,10}",
				[
					[
						"(\\d{3})(\\d{3,7})",
						"$1 $2",
						[
							"(?:[1-3]0|[6-8])0"
						]
					],
					[
						"(75\\d{3})",
						"$1",
						[
							"75[12]"
						]
					],
					[
						"(116\\d{3})",
						"$1",
						[
							"116"
						],
						"$1"
					],
					[
						"(\\d{2})(\\d{4,10})",
						"$1 $2",
						[
							"[14]|2[09]|50|7[135]"
						]
					],
					[
						"(\\d)(\\d{4,11})",
						"$1 $2",
						[
							"[25689][1-8]|3"
						]
					]
				],
				"0",
				"0$1",
				null,
				null,
				null,
				null,
				[
					"1(?:[3569][1-8]\\d{3,9}|[47]\\d{5,10})|2[1-8]\\d{3,9}|3(?:[1-8]\\d{3,9}|9\\d{4,8})|[5689][1-8]\\d{3,9}",
					"4(?:[0-8]\\d{4,9}|9\\d{3,8})|50\\d{4,8}",
					"800\\d{4,7}",
					"[67]00\\d{5,6}",
					null,
					null,
					"[13]0\\d{4,8}|2(?:0(?:[016-8]\\d{3,7}|[2-59]\\d{2,7})|9\\d{4,8})|60(?:[12]\\d{5,6}|6\\d{7})|7(?:1\\d{7}|3\\d{8}|5[03-9]\\d{3,7})"
				]
			],
			"FJ": [
				"679",
				"[2-9]\\d{6}|0\\d{10}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						[
							"[2-9]"
						]
					],
					[
						"(\\d{4})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"0"
						]
					]
				]
			],
			"FK": [
				"500",
				"[2-7]\\d{4}"
			],
			"FM": [
				"691",
				"[39]\\d{6}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2"
					]
				]
			],
			"FO": [
				"298",
				"[2-9]\\d{5}",
				[
					[
						"(\\d{6})",
						"$1"
					]
				],
				null,
				null,
				"(10(?:01|[12]0|88))"
			],
			"FR": [
				"33",
				"[1-9]\\d{8}",
				[
					[
						"([1-79])(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4 $5",
						[
							"[1-79]"
						]
					],
					[
						"(8\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"8"
						],
						"0 $1"
					]
				],
				"0",
				"0$1"
			],
			"GA": [
				"241",
				"0?\\d{7}",
				[
					[
						"(\\d)(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[2-7]"
						],
						"0$1"
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"0"
						]
					]
				]
			],
			"GB": [
				"44",
				"\\d{7,10}",
				[
					[
						"(7\\d{3})(\\d{6})",
						"$1 $2",
						[
							"7(?:[1-57-9]|62)",
							"7(?:[1-57-9]|624)"
						]
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"2|5[56]|7[06]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1(?:[02-9]1|1)|3|9[018]"
						]
					],
					[
						"(\\d{5})(\\d{4,5})",
						"$1 $2",
						[
							"1(?:38|5[23]|69|76|94)",
							"1(?:(?:38|69)7|5(?:24|39)|768|946)",
							"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"
						]
					],
					[
						"(1\\d{3})(\\d{5,6})",
						"$1 $2",
						[
							"1"
						]
					],
					[
						"(800)(\\d{4})",
						"$1 $2",
						[
							"800",
							"8001",
							"80011",
							"800111",
							"8001111"
						]
					],
					[
						"(845)(46)(4\\d)",
						"$1 $2 $3",
						[
							"845",
							"8454",
							"84546",
							"845464"
						]
					],
					[
						"(8\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"8(?:4[2-5]|7[0-3])"
						]
					],
					[
						"(80\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"80"
						]
					],
					[
						"(800)(\\d{6})",
						"$1 $2",
						[
							"800"
						]
					]
				],
				"0",
				"0$1",
				null,
				null,
				null,
				null,
				[
					"2(?:0[01378]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\d{7}|1(?:1(?:3[0-48]|[46][0-4]|5[0-26-9]|[78][0-49])|21[0-7]|31[0-8]|[4-69]1\\d)\\d{6}|1(?:2(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\d)|3(?:0\\d|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[28][02-57-9]|[37]\\d|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|2[024-9]|3[015689]|4[02-9]|5[03-9]|6\\d|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0124578])|7(?:0[0246-9]|2\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|8\\d|9[2-57]))\\d{6}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[345])))|3(?:638[2-5]|647[23]|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[123]))|5(?:24(?:3[2-79]|6\\d)|276\\d|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[567]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|955[0-4])|7(?:26(?:6[13-9]|7[0-7])|442\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|84(?:3[2-58]))|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d{3}|176888[2-46-8]\\d{2}|16977[23]\\d{3}",
					"7(?:[1-3]\\d{3}|4(?:[0-46-9]\\d{2}|5(?:[0-689]\\d|7[0-57-9]))|5(?:0[0-8]|[13-9]\\d|2[0-35-9])\\d|7(?:0(?:0[01]|[1-9]\\d)|[1-7]\\d{2}|8[02-9]\\d|9[0-689]\\d)|8(?:[014-9]\\d|[23][0-8])\\d|9(?:[024-9]\\d{2}|1(?:[02-9]\\d|1[028])|3[0-689]\\d))\\d{5}",
					"80(?:0(?:1111|\\d{6,7})|8\\d{7})",
					"(?:87[123]|9(?:[01]\\d|8[2349]))\\d{7}",
					"70\\d{8}",
					null,
					"(?:3[0347]|55)\\d{8}",
					"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}",
					"56\\d{8}",
					"8(?:4(?:5464\\d|[2-5]\\d{7})|70\\d{7})"
				]
			],
			"GD": [
				"1",
				"[4589]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"473"
			],
			"GE": [
				"995",
				"[34578]\\d{8}",
				[
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[348]"
						],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"7"
						],
						"0$1"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"5"
						]
					]
				],
				"0"
			],
			"GF": [
				"594",
				"[56]\\d{8}",
				[
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4"
					]
				],
				"0",
				"0$1"
			],
			"GG": [
				"44",
				"[135789]\\d{6,9}",
				[
					[
						"(7\\d{3})(\\d{6})",
						"$1 $2",
						[
							"7(?:[1-57-9]|62)",
							"7(?:[1-57-9]|624)"
						]
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"2|5[56]|7[06]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1(?:[02-9]1|1)|3|9[018]"
						]
					],
					[
						"(\\d{5})(\\d{4,5})",
						"$1 $2",
						[
							"1(?:38|5[23]|69|76|94)",
							"1(?:(?:38|69)7|5(?:24|39)|768|946)",
							"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"
						]
					],
					[
						"(1\\d{3})(\\d{5,6})",
						"$1 $2",
						[
							"1"
						]
					],
					[
						"(800)(\\d{4})",
						"$1 $2",
						[
							"800",
							"8001",
							"80011",
							"800111",
							"8001111"
						]
					],
					[
						"(845)(46)(4\\d)",
						"$1 $2 $3",
						[
							"845",
							"8454",
							"84546",
							"845464"
						]
					],
					[
						"(8\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"8(?:4[2-5]|7[0-3])"
						]
					],
					[
						"(80\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"80"
						]
					],
					[
						"(800)(\\d{6})",
						"$1 $2",
						[
							"800"
						]
					]
				],
				"0",
				null,
				null,
				null,
				null,
				null,
				[
					"1481[25-9]\\d{5}",
					"7(?:781\\d|839\\d|911[17])\\d{5}",
					"80(?:0(?:1111|\\d{6,7})|8\\d{7})",
					"(?:87[123]|9(?:[01]\\d|8[0-3]))\\d{7}",
					"70\\d{8}",
					null,
					"(?:3[0347]|55)\\d{8}",
					"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}",
					"56\\d{8}",
					"8(?:4(?:5464\\d|[2-5]\\d{7})|70\\d{7})"
				]
			],
			"GH": [
				"233",
				"[235]\\d{8}|8\\d{7}",
				[
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[235]"
						]
					],
					[
						"(\\d{3})(\\d{5})",
						"$1 $2",
						[
							"8"
						]
					]
				],
				"0",
				"0$1"
			],
			"GI": [
				"350",
				"[256]\\d{7}",
				[
					[
						"(\\d{3})(\\d{5})",
						"$1 $2",
						[
							"2"
						]
					]
				]
			],
			"GL": [
				"299",
				"[1-689]\\d{5}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3"
					]
				]
			],
			"GM": [
				"220",
				"[2-9]\\d{6}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2"
					]
				]
			],
			"GN": [
				"224",
				"[367]\\d{7,8}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"3"
						]
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[67]"
						]
					]
				]
			],
			"GP": [
				"590",
				"[56]\\d{8}",
				[
					[
						"([56]\\d{2})(\\d{2})(\\d{4})",
						"$1 $2-$3",
						[
							"590|69[01]"
						]
					]
				],
				"0",
				"0$1",
				null,
				null,
				null,
				null,
				[
					"590(?:0[1-68]|1[0-2]|2[0-68]|3[1289]|4[0-24-9]|5[3-579]|6[0189]|7[08]|8[0-689]|9\\d)\\d{4}",
					"69(?:0\\d{2}|1(?:2[29]|3[0-5]))\\d{4}"
				]
			],
			"GQ": [
				"240",
				"[23589]\\d{8}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[235]"
						]
					],
					[
						"(\\d{3})(\\d{6})",
						"$1 $2",
						[
							"[89]"
						]
					]
				]
			],
			"GR": [
				"30",
				"[26-9]\\d{9}",
				[
					[
						"([27]\\d)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"21|7"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"2[2-9]1|[689]"
						]
					],
					[
						"(2\\d{3})(\\d{6})",
						"$1 $2",
						[
							"2[2-9][02-9]"
						]
					]
				]
			],
			"GT": [
				"502",
				"[2-7]\\d{7}|1[89]\\d{9}",
				[
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						[
							"[2-7]"
						]
					],
					[
						"(\\d{4})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1"
						]
					]
				]
			],
			"GU": [
				"1",
				"[5689]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"671"
			],
			"GW": [
				"245",
				"(?:4(?:0\\d{5}|4\\d{7})|9\\d{8})",
				[
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"44|9[5-7]"
						]
					],
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						[
							"40"
						]
					]
				]
			],
			"GY": [
				"592",
				"[2-46-9]\\d{6}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2"
					]
				]
			],
			"HK": [
				"852",
				"[2-7]\\d{7}|8[0-3]\\d{6,7}|9\\d{4,10}",
				[
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						[
							"[2-7]|[89](?:0[1-9]|[1-9])"
						]
					],
					[
						"(800)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"800"
						]
					],
					[
						"(900)(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						[
							"900"
						]
					],
					[
						"(900)(\\d{2,5})",
						"$1 $2",
						[
							"900"
						]
					]
				]
			],
			"HN": [
				"504",
				"[237-9]\\d{7}",
				[
					[
						"(\\d{4})(\\d{4})",
						"$1-$2"
					]
				]
			],
			"HR": [
				"385",
				"[1-7]\\d{5,8}|[89]\\d{6,8}",
				[
					[
						"(1)(\\d{4})(\\d{3})",
						"$1 $2 $3",
						[
							"1"
						]
					],
					[
						"([2-5]\\d)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[2-5]"
						]
					],
					[
						"(9\\d)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"9"
						]
					],
					[
						"(6[01])(\\d{2})(\\d{2,3})",
						"$1 $2 $3",
						[
							"6[01]"
						]
					],
					[
						"([67]\\d)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[67]"
						]
					],
					[
						"(80[01])(\\d{2})(\\d{2,3})",
						"$1 $2 $3",
						[
							"80[01]"
						]
					],
					[
						"(80[01])(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"80[01]"
						]
					]
				],
				"0",
				"0$1"
			],
			"HT": [
				"509",
				"[2-489]\\d{7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{4})",
						"$1 $2 $3"
					]
				]
			],
			"HU": [
				"36",
				"[1-9]\\d{7,8}",
				[
					[
						"(1)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[2-9]"
						]
					]
				],
				"06",
				"($1)"
			],
			"ID": [
				"62",
				"(?:[1-79]\\d{6,10}|8\\d{7,11})",
				[
					[
						"(\\d{2})(\\d{5,8})",
						"$1 $2",
						[
							"2[124]|[36]1"
						],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{5,8})",
						"$1 $2",
						[
							"2[035-9]|[36][02-9]|[4579]"
						],
						"(0$1)"
					],
					[
						"(8\\d{2})(\\d{3,4})(\\d{3})",
						"$1-$2-$3",
						[
							"8[1-35-9]"
						]
					],
					[
						"(8\\d{2})(\\d{4})(\\d{4,5})",
						"$1-$2-$3",
						[
							"8[1-35-9]"
						]
					],
					[
						"(1)(500)(\\d{3})",
						"$1 $2 $3",
						[
							"150",
							"1500"
						],
						"$1"
					],
					[
						"(177)(\\d{6,8})",
						"$1 $2",
						[
							"177"
						]
					],
					[
						"(800)(\\d{5,7})",
						"$1 $2",
						[
							"800"
						]
					],
					[
						"(804)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"804"
						]
					],
					[
						"(80\\d)(\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						[
							"80[79]"
						]
					]
				],
				"0",
				"0$1"
			],
			"IE": [
				"353",
				"[124-9]\\d{6,9}",
				[
					[
						"(1)(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						[
							"1"
						]
					],
					[
						"(\\d{2})(\\d{5})",
						"$1 $2",
						[
							"2[24-9]|47|58|6[237-9]|9[35-9]"
						]
					],
					[
						"(\\d{3})(\\d{5})",
						"$1 $2",
						[
							"40[24]|50[45]"
						]
					],
					[
						"(48)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"48"
						]
					],
					[
						"(818)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"818"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[24-69]|7[14]"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"76|8[35-9]"
						],
						"0$1"
					],
					[
						"(8\\d)(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3 $4",
						[
							"8[35-9]5"
						],
						"0$1"
					],
					[
						"(700)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"700"
						],
						"0$1"
					],
					[
						"(\\d{4})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"1(?:5|8[059])",
							"1(?:5|8[059]0)"
						],
						"$1"
					]
				],
				"0",
				"(0$1)"
			],
			"IL": [
				"972",
				"1\\d{6,11}|[2-589]\\d{3}(?:\\d{3,6})?|6\\d{3}|7\\d{6,9}",
				[
					[
						"([2-489])(\\d{3})(\\d{4})",
						"$1-$2-$3",
						[
							"[2-489]"
						],
						"0$1"
					],
					[
						"([57]\\d)(\\d{3})(\\d{4})",
						"$1-$2-$3",
						[
							"[57]"
						],
						"0$1"
					],
					[
						"(153)(\\d{1,2})(\\d{3})(\\d{4})",
						"$1 $2 $3 $4",
						[
							"153"
						]
					],
					[
						"(1)([7-9]\\d{2})(\\d{3})(\\d{3})",
						"$1-$2-$3-$4",
						[
							"1[7-9]"
						]
					],
					[
						"(1255)(\\d{3})",
						"$1-$2",
						[
							"125",
							"1255"
						]
					],
					[
						"(1200)(\\d{3})(\\d{3})",
						"$1-$2-$3",
						[
							"120",
							"1200"
						]
					],
					[
						"(1212)(\\d{2})(\\d{2})",
						"$1-$2-$3",
						[
							"121",
							"1212"
						]
					],
					[
						"(1599)(\\d{6})",
						"$1-$2",
						[
							"159",
							"1599"
						]
					],
					[
						"(151)(\\d{1,2})(\\d{3})(\\d{4})",
						"$1-$2 $3-$4",
						[
							"151"
						]
					],
					[
						"(\\d{4})",
						"*$1",
						[
							"[2-689]"
						]
					]
				],
				"0"
			],
			"IM": [
				"44",
				"[135789]\\d{6,9}",
				[
					[
						"(7\\d{3})(\\d{6})",
						"$1 $2",
						[
							"7(?:[1-57-9]|62)",
							"7(?:[1-57-9]|624)"
						]
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"2|5[56]|7[06]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1(?:[02-9]1|1)|3|9[018]"
						]
					],
					[
						"(\\d{5})(\\d{4,5})",
						"$1 $2",
						[
							"1(?:38|5[23]|69|76|94)",
							"1(?:(?:38|69)7|5(?:24|39)|768|946)",
							"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"
						]
					],
					[
						"(1\\d{3})(\\d{5,6})",
						"$1 $2",
						[
							"1"
						]
					],
					[
						"(800)(\\d{4})",
						"$1 $2",
						[
							"800",
							"8001",
							"80011",
							"800111",
							"8001111"
						]
					],
					[
						"(845)(46)(4\\d)",
						"$1 $2 $3",
						[
							"845",
							"8454",
							"84546",
							"845464"
						]
					],
					[
						"(8\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"8(?:4[2-5]|7[0-3])"
						]
					],
					[
						"(80\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"80"
						]
					],
					[
						"(800)(\\d{6})",
						"$1 $2",
						[
							"800"
						]
					]
				],
				"0",
				null,
				null,
				null,
				null,
				null,
				[
					"1624[5-8]\\d{5}",
					"7(?:4576|[59]24\\d|624[0-4689])\\d{5}",
					"808162\\d{4}",
					"(?:872299|90[0167]624)\\d{4}",
					"70\\d{8}",
					null,
					"3(?:08162\\d|3\\d{5}|4(?:40[49]06|5624\\d)|7(?:0624\\d|2299\\d))\\d{3}|55\\d{8}",
					null,
					"56\\d{8}",
					"8(?:4(?:40[49]06|5624\\d)|70624\\d)\\d{3}"
				]
			],
			"IN": [
				"91",
				"008\\d{9}|1\\d{7,12}|[2-9]\\d{9,10}",
				[
					[
						"(\\d{8})",
						"$1",
						[
							"561",
							"5616",
							"56161"
						],
						"$1"
					],
					[
						"(\\d{5})(\\d{5})",
						"$1 $2",
						[
							"6(?:[09]0|2[03689]|3[05-9])|7(?:[02-8]|19|9[037-9])|8(?:0[015-9]|[1-9])|9",
							"6(?:[09]0|2(?:0[01]|39|60|8[0-2]|9[04])|3(?:0[01]|5[0-2]|60|7[05]|81|9[03-5]))|7(?:[07]|19[0-5]|2(?:[0235-9]|[14][017-9])|3(?:[025-9]|[134][017-9])|4(?:[0-35689]|[47][017-9])|5(?:[02-46-9]|[15][017-9])|6(?:[02-9]|1[0-257-9])|8(?:[0-79]|8[0189])|9(?:[089]|31|7[02-9]))|8(?:0(?:[01589]|6[67]|7[02-9])|1(?:[0-57-9]|6[07-9])|2(?:[014][07-9]|[235-9])|3(?:[03-57-9]|[126][07-9])|[45]|6(?:[02457-9]|[136][07-9])|7(?:[078][07-9]|[1-69])|8(?:[0-25-9]|3[07-9]|4[047-9])|9(?:[02-9]|1[027-9]))|9",
							"6(?:[09]0|2(?:0[01]|39|60|8[0-2]|9[04])|3(?:0[01]|5[0-2]|60|7[05]|81|9[03-5]))|7(?:0|19[0-5]|2(?:[0235-79]|[14][017-9]|8(?:[0-69]|[78][089]))|3(?:[05-8]|1(?:[0189]|7[5-9])|2(?:[0-49][089]|[5-8])|3[017-9]|4(?:[07-9]|11)|9(?:[01689]|[2-5][089]|7[0189]))|4(?:[056]|1(?:[0135-9]|[24][089])|[29](?:[0-7][089]|[89])|3(?:[0-8][089]|9)|[47](?:[089]|11|7[02-8])|8(?:[0-24-7][089]|[389]))|5(?:[0346-9]|[15][017-9]|2(?:[03-9]|[12][089]))|6(?:[0346-9]|1[0-257-9]|2(?:[0-4]|[5-9][089])|5(?:[0-367][089]|[4589]))|7(?:0(?:[02-9]|1[089])|[1-9])|8(?:[0-79]|8(?:0[0189]|11|8[013-9]|9))|9(?:[089]|313|7(?:[02-8]|9[07-9])))|8(?:0(?:[01589]|6[67]|7(?:[02-8]|9[05-9]))|1(?:[02-57-9]|1(?:[0-35-9]|4[0-46-9])|6(?:[089]|7[02-8]))|2(?:0(?:[089]|7[02])|[14](?:[089]|7[02-8])|[235-9])|3(?:[03-57-9]|1(?:[089]|7[02-6])|2(?:[09]|77|8[0-689])|6(?:[089]|7[02-7]))|[45]|6(?:[02457-9]|[136](?:[089]|7[02-8]))|7(?:0[07-9]|[1-69]|[78](?:[089]|7[02-8]))|8(?:[0-25-9]|3(?:[089]|7[02-8])|4(?:[0489]|7[02-68]))|9(?:[02-9]|1(?:[0289]|7[2-6])))|9"
						]
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"11|2[02]|33|4[04]|79[1-9]|80[2-46]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1(?:2[0-249]|3[0-25]|4[145]|[59][14]|[68][1-9]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1|9[15])|6(?:12|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)"
						]
					],
					[
						"(\\d{4})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"1(?:[23579]|[468][1-9])|[2-8]"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})(\\d{3})",
						"$1 $2 $3 $4",
						[
							"008"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"140"
						],
						"$1"
					],
					[
						"(\\d{4})(\\d{2})(\\d{4})",
						"$1 $2 $3",
						[
							"160",
							"1600"
						],
						"$1"
					],
					[
						"(\\d{4})(\\d{4,5})",
						"$1 $2",
						[
							"180",
							"1800"
						],
						"$1"
					],
					[
						"(\\d{4})(\\d{2,4})(\\d{4})",
						"$1 $2 $3",
						[
							"180",
							"1800"
						],
						"$1"
					],
					[
						"(\\d{4})(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						[
							"186",
							"1860"
						],
						"$1"
					],
					[
						"(\\d{4})(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						[
							"18[06]"
						],
						"$1"
					]
				],
				"0",
				"0$1",
				null,
				null,
				true
			],
			"IO": [
				"246",
				"3\\d{6}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2"
					]
				]
			],
			"IQ": [
				"964",
				"[1-7]\\d{7,9}",
				[
					[
						"(1)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1"
						]
					],
					[
						"([2-6]\\d)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[2-6]"
						]
					],
					[
						"(7\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"7"
						]
					]
				],
				"0",
				"0$1"
			],
			"IR": [
				"98",
				"[1-8]\\d{5,9}|9(?:[0-4]\\d{8}|9\\d{8})",
				[
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"[1-8]"
						]
					],
					[
						"(\\d{2})(\\d{4,5})",
						"$1 $2",
						[
							"[1-8]"
						]
					],
					[
						"(\\d{4,5})",
						"$1",
						[
							"96"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"9"
						]
					]
				],
				"0",
				"0$1"
			],
			"IS": [
				"354",
				"[4-9]\\d{6}|38\\d{7}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						[
							"[4-9]"
						]
					],
					[
						"(3\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"3"
						]
					]
				]
			],
			"IT": [
				"39",
				"[01589]\\d{5,10}|3(?:[12457-9]\\d{8}|[36]\\d{7,9})",
				[
					[
						"(\\d{2})(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						[
							"0[26]|55"
						]
					],
					[
						"(0[26])(\\d{4})(\\d{5})",
						"$1 $2 $3",
						[
							"0[26]"
						]
					],
					[
						"(0[26])(\\d{4,6})",
						"$1 $2",
						[
							"0[26]"
						]
					],
					[
						"(0\\d{2})(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						[
							"0[13-57-9][0159]"
						]
					],
					[
						"(\\d{3})(\\d{3,6})",
						"$1 $2",
						[
							"0[13-57-9][0159]|8(?:03|4[17]|9[245])",
							"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))"
						]
					],
					[
						"(0\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"0[13-57-9][2-46-8]"
						]
					],
					[
						"(0\\d{3})(\\d{2,6})",
						"$1 $2",
						[
							"0[13-57-9][2-46-8]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[13]|8(?:00|4[08]|9[59])",
							"[13]|8(?:00|4[08]|9(?:5[5-9]|9))"
						]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						[
							"894",
							"894[5-9]"
						]
					],
					[
						"(\\d{3})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"3"
						]
					]
				],
				null,
				null,
				null,
				null,
				null,
				null,
				[
					"0(?:[26]\\d{4,9}|(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2346]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[34578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d{2,7})",
					"3(?:[12457-9]\\d{8}|6\\d{7,8}|3\\d{7,9})",
					"80(?:0\\d{6}|3\\d{3})",
					"0878\\d{5}|1(?:44|6[346])\\d{6}|89(?:2\\d{3}|4(?:[0-4]\\d{2}|[5-9]\\d{4})|5(?:[0-4]\\d{2}|[5-9]\\d{6})|9\\d{6})",
					"1(?:78\\d|99)\\d{6}",
					null,
					null,
					null,
					"55\\d{8}",
					"84(?:[08]\\d{6}|[17]\\d{3})"
				]
			],
			"JE": [
				"44",
				"[135789]\\d{6,9}",
				[
					[
						"(7\\d{3})(\\d{6})",
						"$1 $2",
						[
							"7(?:[1-57-9]|62)",
							"7(?:[1-57-9]|624)"
						]
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"2|5[56]|7[06]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1(?:[02-9]1|1)|3|9[018]"
						]
					],
					[
						"(\\d{5})(\\d{4,5})",
						"$1 $2",
						[
							"1(?:38|5[23]|69|76|94)",
							"1(?:(?:38|69)7|5(?:24|39)|768|946)",
							"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"
						]
					],
					[
						"(1\\d{3})(\\d{5,6})",
						"$1 $2",
						[
							"1"
						]
					],
					[
						"(800)(\\d{4})",
						"$1 $2",
						[
							"800",
							"8001",
							"80011",
							"800111",
							"8001111"
						]
					],
					[
						"(845)(46)(4\\d)",
						"$1 $2 $3",
						[
							"845",
							"8454",
							"84546",
							"845464"
						]
					],
					[
						"(8\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"8(?:4[2-5]|7[0-3])"
						]
					],
					[
						"(80\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"80"
						]
					],
					[
						"(800)(\\d{6})",
						"$1 $2",
						[
							"800"
						]
					]
				],
				"0",
				null,
				null,
				null,
				null,
				null,
				[
					"1534[0-24-8]\\d{5}",
					"7(?:509\\d|7(?:00[378]|97[7-9])|829\\d|937\\d)\\d{5}",
					"80(?:07(?:35|81)|8901)\\d{4}",
					"(?:871206|90(?:066[59]|1810|71(?:07|55)))\\d{4}",
					"701511\\d{4}",
					null,
					"3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))\\d{4}|55\\d{8}",
					"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}",
					"56\\d{8}",
					"8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|70002)\\d{4}"
				]
			],
			"JM": [
				"1",
				"[589]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"876"
			],
			"JO": [
				"962",
				"[235-9]\\d{7,8}",
				[
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[2356]|87"
						],
						"(0$1)"
					],
					[
						"(7)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"7[457-9]"
						]
					],
					[
						"(\\d{2})(\\d{7})",
						"$1 $2",
						[
							"70"
						]
					],
					[
						"(\\d{3})(\\d{5,6})",
						"$1 $2",
						[
							"8[0158]|9"
						]
					]
				],
				"0",
				"0$1"
			],
			"JP": [
				"81",
				"[1-9]\\d{8,9}|00(?:[36]\\d{7,14}|7\\d{5,7}|8\\d{7})",
				[
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1-$2-$3",
						[
							"(?:12|57|99)0"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1-$2-$3",
						[
							"800"
						]
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1-$2-$3",
						[
							"[2579]0|80[1-9]"
						]
					],
					[
						"(\\d{4})(\\d)(\\d{4})",
						"$1-$2-$3",
						[
							"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])",
							"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[78]|96)|477|51[24]|636)|9(?:496|802|9(?:1[23]|69))",
							"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[78]|96[2457-9])|477|51[24]|636[2-57-9])|9(?:496|802|9(?:1[23]|69))"
						]
					],
					[
						"(\\d{3})(\\d{2})(\\d{4})",
						"$1-$2-$3",
						[
							"1(?:2[3-6]|3[3-9]|4[2-6]|5[2-8]|[68][2-7]|7[2-689]|9[1-578])|2(?:2[03-689]|3[3-58]|4[0-468]|5[04-8]|6[013-8]|7[06-9]|8[02-57-9]|9[13])|4(?:2[28]|3[689]|6[035-7]|7[05689]|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9[4-9])|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9[014-9])|8(?:2[49]|3[3-8]|4[5-8]|5[2-9]|6[35-9]|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9[3-7])",
							"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9[2-8])|3(?:[3-6][2-9]|7[2-6]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5[4-7]|6[2-9]|8[2-8]|9[236-9])|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3[34]|4[2-69]|[5-7]))",
							"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6[56]))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))",
							"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6(?:5[25]|60)))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1-$2-$3",
						[
							"1|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93)",
							"1|2(?:2[37]|5(?:[57]|[68]0|9[19])|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93[34])",
							"1|2(?:2[37]|5(?:[57]|[68]0|9(?:17|99))|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93(?:31|4))"
						]
					],
					[
						"(\\d{3})(\\d{2})(\\d{4})",
						"$1-$2-$3",
						[
							"2(?:[34]7|[56]9|74|9[14-79])|82|993"
						]
					],
					[
						"(\\d)(\\d{4})(\\d{4})",
						"$1-$2-$3",
						[
							"3|4(?:2[09]|7[01])|6[1-9]"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1-$2-$3",
						[
							"[2479][1-9]"
						]
					]
				],
				"0",
				"0$1"
			],
			"KE": [
				"254",
				"20\\d{6,7}|[4-9]\\d{6,9}",
				[
					[
						"(\\d{2})(\\d{5,7})",
						"$1 $2",
						[
							"[24-6]"
						]
					],
					[
						"(\\d{3})(\\d{6})",
						"$1 $2",
						[
							"7"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[89]"
						]
					]
				],
				"0",
				"0$1",
				"005|0"
			],
			"KG": [
				"996",
				"[235-8]\\d{8,9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[25-7]|31[25]"
						]
					],
					[
						"(\\d{4})(\\d{5})",
						"$1 $2",
						[
							"3(?:1[36]|[2-9])"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d)(\\d{3})",
						"$1 $2 $3 $4",
						[
							"8"
						]
					]
				],
				"0",
				"0$1"
			],
			"KH": [
				"855",
				"[1-9]\\d{7,9}",
				[
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"1\\d[1-9]|[2-9]"
						],
						"0$1"
					],
					[
						"(1[89]00)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"1[89]0",
							"1[89]00"
						]
					]
				],
				"0"
			],
			"KI": [
				"686",
				"[2458]\\d{4}|3\\d{4,7}|[67]\\d{7}",
				[],
				null,
				null,
				"0"
			],
			"KM": [
				"269",
				"[3478]\\d{6}",
				[
					[
						"(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3"
					]
				]
			],
			"KN": [
				"1",
				"[589]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"869"
			],
			"KP": [
				"850",
				"1\\d{9}|[28]\\d{7}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1"
						]
					],
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"2"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"8"
						]
					]
				],
				"0",
				"0$1"
			],
			"KR": [
				"82",
				"00(?:3\\d{8,9}|7\\d{9,11})|[1-7]\\d{4,9}|8\\d{8}",
				[
					[
						"(\\d{2})(\\d{3,4})",
						"$1-$2",
						[
							"(?:3[1-3]|[46][1-4]|5[1-5])1"
						]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1-$2",
						[
							"1(?:5[246-9]|6[046-8]|8[03579])",
							"1(?:5(?:22|44|66|77|88|99)|6(?:[07]0|44|6[16]|88)|8(?:00|33|55|77|99))"
						],
						"$1"
					],
					[
						"(\\d{5})",
						"$1",
						[
							"1[016-9]1",
							"1[016-9]11",
							"1[016-9]114"
						]
					],
					[
						"(\\d)(\\d{3,4})(\\d{4})",
						"$1-$2-$3",
						[
							"2[1-9]"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1-$2-$3",
						[
							"60[2-9]|80"
						]
					],
					[
						"(\\d{2})(\\d{3,4})(\\d{4})",
						"$1-$2-$3",
						[
							"1[0-25-9]|(?:3[1-3]|[46][1-4]|5[1-5])[1-9]"
						]
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1-$2-$3",
						[
							"[57]0"
						]
					]
				],
				"0",
				"0$1",
				"0(8[1-46-8]|85\\d{2})?"
			],
			"KW": [
				"965",
				"[12569]\\d{6,7}",
				[
					[
						"(\\d{4})(\\d{3,4})",
						"$1 $2",
						[
							"[16]|2(?:[0-35-9]|4[0-35-9])|52[25]|9[024-9]"
						]
					],
					[
						"(\\d{3})(\\d{5})",
						"$1 $2",
						[
							"244|5(?:[015]|6[56])"
						]
					]
				]
			],
			"KY": [
				"1",
				"[3589]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"345"
			],
			"KZ": [
				"7",
				"(?:33\\d|7\\d{2}|80[089])\\d{7}",
				[
					[
						"([3489]\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2-$3-$4",
						[
							"[3489]"
						]
					],
					[
						"(7\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"7"
						]
					]
				],
				"8",
				null,
				null,
				null,
				null,
				null,
				[
					"33622\\d{5}|7(?:1(?:0(?:[23]\\d|4[0-3]|59|63)|1(?:[23]\\d|4[0-79]|59)|2(?:[23]\\d|59)|3(?:2\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\d|3[013-9]|5[1-9])|5(?:2\\d|3[1-9]|4[0-7]|59)|6(?:[234]\\d|5[19]|61)|72\\d|8(?:[27]\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\d|4[46-9]|5[3469])|2(?:2\\d|3[0679]|46|5[12679])|3(?:[234]\\d|5[139])|4(?:2\\d|3[1235-9]|59)|5(?:[23]\\d|4[01246-8]|59|61)|6(?:2\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\d|40|5[279])|8(?:[23]\\d|4[0-3]|59)|9(?:2\\d|3[124578]|59)))\\d{5}",
					"7(?:0[012578]|47|6[02-4]|7[15-8]|85)\\d{7}",
					"800\\d{7}",
					"809\\d{7}",
					"808\\d{7}",
					null,
					null,
					null,
					"751\\d{7}"
				]
			],
			"LA": [
				"856",
				"[2-8]\\d{7,9}",
				[
					[
						"(20)(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						[
							"20"
						]
					],
					[
						"([2-8]\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"2[13]|3[14]|[4-8]"
						]
					],
					[
						"(30)(\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3 $4",
						[
							"30"
						]
					]
				],
				"0",
				"0$1"
			],
			"LB": [
				"961",
				"[13-9]\\d{6,7}",
				[
					[
						"(\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]"
						],
						"0$1"
					],
					[
						"([7-9]\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"7(?:[01]|6[013-9]|8[89]|9[1-3])|[89][01]"
						]
					]
				],
				"0"
			],
			"LC": [
				"1",
				"[5789]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"758"
			],
			"LI": [
				"423",
				"6\\d{8}|[23789]\\d{6}",
				[
					[
						"(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3",
						[
							"[237-9]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"6[56]"
						]
					],
					[
						"(69)(7\\d{2})(\\d{4})",
						"$1 $2 $3",
						[
							"697"
						]
					]
				],
				"0",
				null,
				"0|10(?:01|20|66)"
			],
			"LK": [
				"94",
				"[1-9]\\d{8}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[1-689]"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"7"
						]
					]
				],
				"0",
				"0$1"
			],
			"LR": [
				"231",
				"2\\d{7,8}|[378]\\d{8}|4\\d{6}|5\\d{6,8}",
				[
					[
						"(2\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"2"
						]
					],
					[
						"([4-5])(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[45]"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[23578]"
						]
					]
				],
				"0",
				"0$1"
			],
			"LS": [
				"266",
				"[2568]\\d{7}",
				[
					[
						"(\\d{4})(\\d{4})",
						"$1 $2"
					]
				]
			],
			"LT": [
				"370",
				"[3-9]\\d{7}",
				[
					[
						"([34]\\d)(\\d{6})",
						"$1 $2",
						[
							"37|4(?:1|5[45]|6[2-4])"
						]
					],
					[
						"([3-6]\\d{2})(\\d{5})",
						"$1 $2",
						[
							"3[148]|4(?:[24]|6[09])|528|6"
						]
					],
					[
						"([7-9]\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						[
							"[7-9]"
						],
						"8 $1"
					],
					[
						"(5)(2\\d{2})(\\d{4})",
						"$1 $2 $3",
						[
							"52[0-79]"
						]
					]
				],
				"8",
				"(8-$1)",
				"[08]",
				null,
				true
			],
			"LU": [
				"352",
				"[24-9]\\d{3,10}|3(?:[0-46-9]\\d{2,9}|5[013-9]\\d{1,8})",
				[
					[
						"(\\d{2})(\\d{3})",
						"$1 $2",
						[
							"[2-5]|7[1-9]|[89](?:0[2-9]|[1-9])"
						]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3",
						[
							"[2-5]|7[1-9]|[89](?:0[2-9]|[1-9])"
						]
					],
					[
						"(\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						[
							"20"
						]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})",
						"$1 $2 $3 $4",
						[
							"2(?:[0367]|4[3-8])"
						]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3 $4",
						[
							"20"
						]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})",
						"$1 $2 $3 $4 $5",
						[
							"2(?:[0367]|4[3-8])"
						]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{1,4})",
						"$1 $2 $3 $4",
						[
							"2(?:[12589]|4[12])|[3-5]|7[1-9]|8(?:0[2-9]|[1-9])|9(?:0[2-46-9]|[1-9])"
						]
					],
					[
						"(\\d{3})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						[
							"70|80[01]|90[015]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"6"
						]
					]
				],
				null,
				null,
				"(15(?:0[06]|1[12]|35|4[04]|55|6[26]|77|88|99)\\d)"
			],
			"LV": [
				"371",
				"[2689]\\d{7}",
				[
					[
						"([2689]\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[2689]"
						]
					]
				]
			],
			"LY": [
				"218",
				"[25679]\\d{8}",
				[
					[
						"([25-79]\\d)(\\d{7})",
						"$1-$2",
						[
							"[25-79]"
						]
					]
				],
				"0",
				"0$1"
			],
			"MA": [
				"212",
				"[5-9]\\d{8}",
				[
					[
						"([5-7]\\d{2})(\\d{6})",
						"$1-$2",
						[
							"5(?:2[015-7]|3[0-4])|[67]"
						]
					],
					[
						"([58]\\d{3})(\\d{5})",
						"$1-$2",
						[
							"5(?:2[2-489]|3[5-9]|92)|892",
							"5(?:2(?:[2-48]|9[0-7])|3(?:[5-79]|8[0-7])|924)|892"
						]
					],
					[
						"(5\\d{4})(\\d{4})",
						"$1-$2",
						[
							"5(?:29|38)",
							"5(?:29|38)[89]"
						]
					],
					[
						"([5]\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"5(?:4[067]|5[03])"
						]
					],
					[
						"(8[09])(\\d{7})",
						"$1-$2",
						[
							"8(?:0|9[013-9])"
						]
					]
				],
				"0",
				"0$1",
				null,
				null,
				null,
				null,
				[
					"5(?:2(?:[015-79]\\d|2[02-9]|3[2-57]|4[2-8]|8[235-7])\\d|3(?:[0-48]\\d|[57][2-9]|6[2-8]|9[3-9])\\d|4[067]\\d{2}|5[03]\\d{2})\\d{4}",
					"(?:6(?:[0-79]\\d|8[0-247-9])|7(?:0[067]|6[1267]|7[07]))\\d{6}",
					"80\\d{7}",
					"89\\d{7}",
					null,
					null,
					null,
					null,
					"5924[01]\\d{4}"
				]
			],
			"MC": [
				"377",
				"[34689]\\d{7,8}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[39]"
						],
						"$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"4"
						]
					],
					[
						"(6)(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4 $5",
						[
							"6"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{2})",
						"$1 $2 $3",
						[
							"8"
						],
						"$1"
					]
				],
				"0",
				"0$1"
			],
			"MD": [
				"373",
				"[235-9]\\d{7}",
				[
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"22|3"
						]
					],
					[
						"([25-7]\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						[
							"2[13-9]|[5-7]"
						]
					],
					[
						"([89]\\d{2})(\\d{5})",
						"$1 $2",
						[
							"[89]"
						]
					]
				],
				"0",
				"0$1"
			],
			"ME": [
				"382",
				"[2-9]\\d{7,8}",
				[
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[2-57-9]|6[036-9]"
						]
					]
				],
				"0",
				"0$1"
			],
			"MF": [
				"590",
				"[56]\\d{8}",
				[
					[
						"([56]\\d{2})(\\d{2})(\\d{4})",
						"$1 $2-$3",
						[
							"590|69[01]"
						]
					]
				],
				"0",
				null,
				null,
				null,
				null,
				null,
				[
					"590(?:0[079]|13|2[79]|30|43|5[0-268]|7[79]|87)\\d{4}",
					"69(?:0\\d{2}|1(?:2[29]|3[0-5]))\\d{4}"
				]
			],
			"MG": [
				"261",
				"[23]\\d{8}",
				[
					[
						"([23]\\d)(\\d{2})(\\d{3})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[23]"
						]
					]
				],
				"0",
				"0$1"
			],
			"MH": [
				"692",
				"[2-6]\\d{6}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1-$2"
					]
				],
				"1"
			],
			"MK": [
				"389",
				"[2-578]\\d{7}",
				[
					[
						"(2)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"2"
						]
					],
					[
						"([347]\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[347]"
						]
					],
					[
						"([58]\\d{2})(\\d)(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[58]"
						]
					]
				],
				"0",
				"0$1"
			],
			"ML": [
				"223",
				"[246-9]\\d{7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[246-9]"
						]
					]
				]
			],
			"MM": [
				"95",
				"[178]\\d{5,7}|[24-6]\\d{5,8}|9(?:[279]\\d{0,2}|5|[34]\\d{1,2}|6(?:\\d{1,2})?|8(?:\\d{2})?)\\d{6}",
				[
					[
						"(\\d)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"1|2[245]"
						]
					],
					[
						"(2)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"251"
						]
					],
					[
						"(\\d)(\\d{2})(\\d{3})",
						"$1 $2 $3",
						[
							"16|2"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"432|67|81"
						]
					],
					[
						"(\\d{2})(\\d{2})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[4-8]"
						]
					],
					[
						"(9)(\\d{3})(\\d{4,6})",
						"$1 $2 $3",
						[
							"9(?:2[0-4]|[35-9]|4[137-9])"
						]
					],
					[
						"(9)([34]\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"9(?:3[0-36]|4[0-57-9])"
						]
					],
					[
						"(9)(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						[
							"92[56]"
						]
					],
					[
						"(9)(\\d{3})(\\d{3})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"93"
						]
					]
				],
				"0",
				"0$1"
			],
			"MN": [
				"976",
				"[12]\\d{7,9}|[57-9]\\d{7}",
				[
					[
						"([12]\\d)(\\d{2})(\\d{4})",
						"$1 $2 $3",
						[
							"[12]1"
						]
					],
					[
						"([12]2\\d)(\\d{5,6})",
						"$1 $2",
						[
							"[12]2[1-3]"
						]
					],
					[
						"([12]\\d{3})(\\d{5})",
						"$1 $2",
						[
							"[12](?:27|[3-5])",
							"[12](?:27|[3-5]\\d)2"
						]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						[
							"[57-9]"
						],
						"$1"
					],
					[
						"([12]\\d{4})(\\d{4,5})",
						"$1 $2",
						[
							"[12](?:27|[3-5])",
							"[12](?:27|[3-5]\\d)[4-9]"
						]
					]
				],
				"0",
				"0$1"
			],
			"MO": [
				"853",
				"[268]\\d{7}",
				[
					[
						"([268]\\d{3})(\\d{4})",
						"$1 $2",
						[
							"[268]"
						]
					]
				]
			],
			"MP": [
				"1",
				"[5689]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"670"
			],
			"MQ": [
				"596",
				"[56]\\d{8}",
				[
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4"
					]
				],
				"0",
				"0$1"
			],
			"MR": [
				"222",
				"[2-48]\\d{7}",
				[
					[
						"([2-48]\\d)(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[2-48]"
						]
					]
				]
			],
			"MS": [
				"1",
				"[5689]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"664"
			],
			"MT": [
				"356",
				"[2357-9]\\d{7}",
				[
					[
						"(\\d{4})(\\d{4})",
						"$1 $2"
					]
				]
			],
			"MU": [
				"230",
				"[2-9]\\d{6,7}",
				[
					[
						"([2-46-9]\\d{2})(\\d{4})",
						"$1 $2",
						[
							"[2-46-9]"
						]
					],
					[
						"(5\\d{3})(\\d{4})",
						"$1 $2",
						[
							"5"
						]
					]
				]
			],
			"MV": [
				"960",
				"[346-8]\\d{6,9}|9(?:00\\d{7}|\\d{6})",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1-$2",
						[
							"[3467]|9(?:0[1-9]|[1-9])"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[89]00"
						]
					]
				]
			],
			"MW": [
				"265",
				"(?:1(?:\\d{2})?|[2789]\\d{2})\\d{6}",
				[
					[
						"(\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"1"
						]
					],
					[
						"(2\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"2"
						]
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[17-9]"
						]
					]
				],
				"0",
				"0$1"
			],
			"MX": [
				"52",
				"[1-9]\\d{9,10}",
				[
					[
						"([358]\\d)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"33|55|81"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[2467]|3[0-2457-9]|5[089]|8[02-9]|9[0-35-9]"
						]
					],
					[
						"(1)([358]\\d)(\\d{4})(\\d{4})",
						"044 $2 $3 $4",
						[
							"1(?:33|55|81)"
						],
						"$1",
						null,
						"$1 $2 $3 $4"
					],
					[
						"(1)(\\d{3})(\\d{3})(\\d{4})",
						"044 $2 $3 $4",
						[
							"1(?:[2467]|3[0-2457-9]|5[089]|8[2-9]|9[1-35-9])"
						],
						"$1",
						null,
						"$1 $2 $3 $4"
					]
				],
				"01",
				"01 $1",
				"0[12]|04[45](\\d{10})",
				"1$1",
				true
			],
			"MY": [
				"60",
				"[13-9]\\d{7,9}",
				[
					[
						"([4-79])(\\d{3})(\\d{4})",
						"$1-$2 $3",
						[
							"[4-79]"
						],
						"0$1"
					],
					[
						"(3)(\\d{4})(\\d{4})",
						"$1-$2 $3",
						[
							"3"
						],
						"0$1"
					],
					[
						"([18]\\d)(\\d{3})(\\d{3,4})",
						"$1-$2 $3",
						[
							"1[02-46-9][1-9]|8"
						],
						"0$1"
					],
					[
						"(1)([36-8]00)(\\d{2})(\\d{4})",
						"$1-$2-$3-$4",
						[
							"1[36-8]0",
							"1[36-8]00"
						]
					],
					[
						"(11)(\\d{4})(\\d{4})",
						"$1-$2 $3",
						[
							"11"
						],
						"0$1"
					],
					[
						"(15[49])(\\d{3})(\\d{4})",
						"$1-$2 $3",
						[
							"15[49]"
						],
						"0$1"
					]
				],
				"0"
			],
			"MZ": [
				"258",
				"[28]\\d{7,8}",
				[
					[
						"([28]\\d)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"2|8[2-7]"
						]
					],
					[
						"(80\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"80"
						]
					]
				]
			],
			"NA": [
				"264",
				"[68]\\d{7,8}",
				[
					[
						"(8\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"8[1-35]"
						]
					],
					[
						"(6\\d)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"6"
						]
					],
					[
						"(88)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"88"
						]
					],
					[
						"(870)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"870"
						]
					]
				],
				"0",
				"0$1"
			],
			"NC": [
				"687",
				"[2-57-9]\\d{5}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})",
						"$1.$2.$3",
						[
							"[2-46-9]|5[0-4]"
						]
					]
				]
			],
			"NE": [
				"227",
				"[0289]\\d{7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"09|[289]"
						]
					],
					[
						"(08)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"08"
						]
					]
				]
			],
			"NF": [
				"672",
				"[13]\\d{5}",
				[
					[
						"(\\d{2})(\\d{4})",
						"$1 $2",
						[
							"1"
						]
					],
					[
						"(\\d)(\\d{5})",
						"$1 $2",
						[
							"3"
						]
					]
				]
			],
			"NG": [
				"234",
				"[1-6]\\d{5,8}|9\\d{5,9}|[78]\\d{5,13}",
				[
					[
						"(\\d)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[12]|9(?:0[3-9]|[1-9])"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{2,3})",
						"$1 $2 $3",
						[
							"[3-6]|7(?:0[1-9]|[1-79])|8[2-9]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"70|8[01]|90[235-9]"
						]
					],
					[
						"([78]00)(\\d{4})(\\d{4,5})",
						"$1 $2 $3",
						[
							"[78]00"
						]
					],
					[
						"([78]00)(\\d{5})(\\d{5,6})",
						"$1 $2 $3",
						[
							"[78]00"
						]
					],
					[
						"(78)(\\d{2})(\\d{3})",
						"$1 $2 $3",
						[
							"78"
						]
					]
				],
				"0",
				"0$1"
			],
			"NI": [
				"505",
				"[125-8]\\d{7}",
				[
					[
						"(\\d{4})(\\d{4})",
						"$1 $2"
					]
				]
			],
			"NL": [
				"31",
				"1\\d{4,8}|[2-7]\\d{8}|[89]\\d{6,9}",
				[
					[
						"([1-578]\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1[035]|2[0346]|3[03568]|4[0356]|5[0358]|7|8[4578]"
						]
					],
					[
						"([1-5]\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"
						]
					],
					[
						"(6)(\\d{8})",
						"$1 $2",
						[
							"6[0-57-9]"
						]
					],
					[
						"(66)(\\d{7})",
						"$1 $2",
						[
							"66"
						]
					],
					[
						"(14)(\\d{3,4})",
						"$1 $2",
						[
							"14"
						],
						"$1"
					],
					[
						"([89]0\\d)(\\d{4,7})",
						"$1 $2",
						[
							"[89]0"
						]
					]
				],
				"0",
				"0$1"
			],
			"NO": [
				"47",
				"0\\d{4}|[2-9]\\d{7}",
				[
					[
						"([489]\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						[
							"[489]"
						]
					],
					[
						"([235-7]\\d)(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[235-7]"
						]
					]
				],
				null,
				null,
				null,
				null,
				null,
				null,
				[
					"(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\d{6}",
					"(?:4[015-8]|5[89]|87|9\\d)\\d{6}",
					"80[01]\\d{5}",
					"82[09]\\d{5}",
					"880\\d{5}",
					null,
					"0\\d{4}|81(?:0(?:0[7-9]|1\\d)|5\\d{2})\\d{3}",
					null,
					"85[0-5]\\d{5}",
					"810(?:0[0-6]|[2-8]\\d)\\d{3}"
				]
			],
			"NP": [
				"977",
				"[1-8]\\d{7}|9(?:[1-69]\\d{6,8}|7[2-6]\\d{5,7}|8\\d{8})",
				[
					[
						"(1)(\\d{7})",
						"$1-$2",
						[
							"1[2-6]"
						]
					],
					[
						"(\\d{2})(\\d{6})",
						"$1-$2",
						[
							"1[01]|[2-8]|9(?:[1-69]|7[15-9])"
						]
					],
					[
						"(9\\d{2})(\\d{7})",
						"$1-$2",
						[
							"9(?:6[013]|7[245]|8)"
						],
						"$1"
					]
				],
				"0",
				"0$1"
			],
			"NR": [
				"674",
				"[458]\\d{6}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2"
					]
				]
			],
			"NU": [
				"683",
				"[1-5]\\d{3}"
			],
			"NZ": [
				"64",
				"6[235-9]\\d{6}|[2-57-9]\\d{7,9}",
				[
					[
						"(\\d)(\\d{3})(\\d{4})",
						"$1-$2 $3",
						[
							"240|[346]|7[2-57-9]|9[1-9]"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"21"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,5})",
						"$1 $2 $3",
						[
							"2(?:1[1-9]|[69]|7[0-35-9])|70|86"
						]
					],
					[
						"(2\\d)(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						[
							"2[028]"
						]
					],
					[
						"(\\d{3})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						[
							"90"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"2(?:10|74)|5|[89]0"
						]
					]
				],
				"0",
				"0$1"
			],
			"OM": [
				"968",
				"(?:5|[279]\\d)\\d{6}|800\\d{5,6}",
				[
					[
						"(2\\d)(\\d{6})",
						"$1 $2",
						[
							"2"
						]
					],
					[
						"([79]\\d{3})(\\d{4})",
						"$1 $2",
						[
							"[79]"
						]
					],
					[
						"([58]00)(\\d{4,6})",
						"$1 $2",
						[
							"[58]00"
						]
					]
				]
			],
			"PA": [
				"507",
				"[1-9]\\d{6,7}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1-$2",
						[
							"[1-57-9]"
						]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1-$2",
						[
							"6"
						]
					]
				]
			],
			"PE": [
				"51",
				"[14-9]\\d{7,8}",
				[
					[
						"(1)(\\d{7})",
						"$1 $2",
						[
							"1"
						]
					],
					[
						"([4-8]\\d)(\\d{6})",
						"$1 $2",
						[
							"[4-7]|8[2-4]"
						]
					],
					[
						"(\\d{3})(\\d{5})",
						"$1 $2",
						[
							"80"
						]
					],
					[
						"(9\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"9"
						],
						"$1"
					]
				],
				"0",
				"(0$1)"
			],
			"PF": [
				"689",
				"4\\d{5,7}|8\\d{7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"4[09]|8[79]"
						]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3",
						[
							"44"
						]
					]
				]
			],
			"PG": [
				"675",
				"[1-9]\\d{6,7}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						[
							"[13-689]|27"
						]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						[
							"20|7"
						]
					]
				]
			],
			"PH": [
				"63",
				"1\\d{10,12}|2\\d{5,7}|[3-7]\\d{8}|8\\d{7,9}|9\\d{9}",
				[
					[
						"(2)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"2"
						],
						"(0$1)"
					],
					[
						"(2)(\\d{5})",
						"$1 $2",
						[
							"2"
						],
						"(0$1)"
					],
					[
						"(\\d{4})(\\d{4,6})",
						"$1 $2",
						[
							"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|5(?:22|44)|642|8(?:62|8[245])",
							"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"
						],
						"(0$1)"
					],
					[
						"(\\d{5})(\\d{4})",
						"$1 $2",
						[
							"346|4(?:27|9[35])|883",
							"3469|4(?:279|9(?:30|56))|8834"
						],
						"(0$1)"
					],
					[
						"([3-8]\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[3-8]"
						],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"81|9"
						],
						"0$1"
					],
					[
						"(1800)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"180",
							"1800"
						]
					],
					[
						"(1800)(\\d{1,2})(\\d{3})(\\d{4})",
						"$1 $2 $3 $4",
						[
							"180",
							"1800"
						]
					]
				],
				"0"
			],
			"PK": [
				"92",
				"1\\d{8}|[2-8]\\d{5,11}|9(?:[013-9]\\d{4,10}|2\\d(?:111\\d{6}|\\d{3,7}))",
				[
					[
						"([89]00)(\\d{3})(\\d{2})",
						"$1 $2 $3",
						[
							"[89]00"
						],
						"0$1"
					],
					[
						"(1\\d{3})(\\d{5})",
						"$1 $2",
						[
							"1"
						],
						"$1"
					],
					[
						"(\\d{2})(\\d{7,8})",
						"$1 $2",
						[
							"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"
						]
					],
					[
						"(\\d{3})(\\d{6,7})",
						"$1 $2",
						[
							"2[349]|45|54|60|72|8[2-5]|9[2-469]",
							"(?:2[349]|45|54|60|72|8[2-5]|9[2-469])\\d[2-9]"
						]
					],
					[
						"(58\\d{3})(\\d{5})",
						"$1 $2",
						[
							"58[126]"
						]
					],
					[
						"(3\\d{2})(\\d{7})",
						"$1 $2",
						[
							"3"
						],
						"0$1"
					],
					[
						"(\\d{2})(111)(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						[
							"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)1",
							"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)11",
							"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)111"
						]
					],
					[
						"(\\d{3})(111)(\\d{3})(\\d{3})",
						"$1 $2 $3 $4",
						[
							"2[349]|45|54|60|72|8[2-5]|9[2-9]",
							"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\d1",
							"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\d11",
							"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\d111"
						]
					]
				],
				"0",
				"(0$1)"
			],
			"PL": [
				"48",
				"[1-57-9]\\d{6,8}|6\\d{5,8}",
				[
					[
						"(\\d{3})(\\d{3})",
						"$1 $2",
						[
							"11[68]|64"
						]
					],
					[
						"(\\d{5})",
						"$1",
						[
							"19"
						]
					],
					[
						"(\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						[
							"1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]"
						]
					],
					[
						"(\\d{3})(\\d{2})(\\d{2,3})",
						"$1 $2 $3",
						[
							"64"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"26|39|45|5[0137]|6[0469]|7[02389]|8[08]"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[14]|2[0-57-9]|3[2-4]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]"
						]
					]
				]
			],
			"PM": [
				"508",
				"[45]\\d{5}",
				[
					[
						"([45]\\d)(\\d{2})(\\d{2})",
						"$1 $2 $3",
						[
							"[45]"
						]
					]
				],
				"0",
				"0$1"
			],
			"PR": [
				"1",
				"[5789]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"787|939"
			],
			"PS": [
				"970",
				"1\\d{9}|[24589]\\d{7,8}",
				[
					[
						"([2489])(2\\d{2})(\\d{4})",
						"$1 $2 $3",
						[
							"[2489]2"
						]
					],
					[
						"(5[69]\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"5[69]"
						]
					],
					[
						"(1[78]00)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"1[78]0",
							"1[78]00"
						],
						"$1"
					]
				],
				"0",
				"0$1"
			],
			"PT": [
				"351",
				"[2-46-9]\\d{8}",
				[
					[
						"(2\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"2[12]"
						]
					],
					[
						"([2-46-9]\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"2[3-9]|[346-9]"
						]
					]
				]
			],
			"PW": [
				"680",
				"[2-8]\\d{6}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2"
					]
				]
			],
			"PY": [
				"595",
				"5[0-5]\\d{4,7}|[2-46-9]\\d{5,8}",
				[
					[
						"(\\d{2})(\\d{5})",
						"$1 $2",
						[
							"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"
						],
						"(0$1)"
					],
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"
						],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{3,6})",
						"$1 $2",
						[
							"[2-9]0"
						],
						"0$1"
					],
					[
						"(\\d{3})(\\d{6})",
						"$1 $2",
						[
							"9[1-9]"
						],
						"0$1"
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"870",
							"8700"
						]
					],
					[
						"(\\d{3})(\\d{4,5})",
						"$1 $2",
						[
							"[2-8][1-9]"
						],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[2-8][1-9]"
						],
						"0$1"
					]
				],
				"0"
			],
			"QA": [
				"974",
				"[2-8]\\d{6,7}",
				[
					[
						"([28]\\d{2})(\\d{4})",
						"$1 $2",
						[
							"[28]"
						]
					],
					[
						"([3-7]\\d{3})(\\d{4})",
						"$1 $2",
						[
							"[3-7]"
						]
					]
				]
			],
			"RE": [
				"262",
				"[268]\\d{8}",
				[
					[
						"([268]\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[268]"
						]
					]
				],
				"0",
				"0$1",
				null,
				null,
				null,
				"262|69|8"
			],
			"RO": [
				"40",
				"[23]\\d{5,8}|[7-9]\\d{8}",
				[
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[23]1"
						]
					],
					[
						"(\\d{2})(\\d{4})",
						"$1 $2",
						[
							"[23]1"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[23][3-7]|[7-9]"
						]
					],
					[
						"(2\\d{2})(\\d{3})",
						"$1 $2",
						[
							"2[3-6]"
						]
					]
				],
				"0",
				"0$1"
			],
			"RS": [
				"381",
				"[126-9]\\d{4,11}|3(?:[0-79]\\d{3,10}|8[2-9]\\d{2,9})",
				[
					[
						"([23]\\d{2})(\\d{4,9})",
						"$1 $2",
						[
							"(?:2[389]|39)0"
						]
					],
					[
						"([1-3]\\d)(\\d{5,10})",
						"$1 $2",
						[
							"1|2(?:[0-24-7]|[389][1-9])|3(?:[0-8]|9[1-9])"
						]
					],
					[
						"(6\\d)(\\d{6,8})",
						"$1 $2",
						[
							"6"
						]
					],
					[
						"([89]\\d{2})(\\d{3,9})",
						"$1 $2",
						[
							"[89]"
						]
					],
					[
						"(7[26])(\\d{4,9})",
						"$1 $2",
						[
							"7[26]"
						]
					],
					[
						"(7[08]\\d)(\\d{4,9})",
						"$1 $2",
						[
							"7[08]"
						]
					]
				],
				"0",
				"0$1"
			],
			"RU": [
				"7",
				"[347-9]\\d{9}",
				[
					[
						"([3489]\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2-$3-$4",
						[
							"[3489]"
						]
					],
					[
						"(7\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"7"
						]
					]
				],
				"8",
				"8 ($1)",
				null,
				null,
				true,
				null,
				[
					"(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\d{7}",
					"9\\d{9}",
					"80[04]\\d{7}",
					"80[39]\\d{7}",
					"808\\d{7}"
				]
			],
			"RW": [
				"250",
				"[027-9]\\d{7,8}",
				[
					[
						"(2\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"2"
						]
					],
					[
						"([7-9]\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[7-9]"
						],
						"0$1"
					],
					[
						"(0\\d)(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"0"
						]
					]
				],
				"0"
			],
			"SA": [
				"966",
				"1\\d{7,8}|(?:[2-467]|92)\\d{7}|5\\d{8}|8\\d{9}",
				[
					[
						"([1-467])(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[1-467]"
						]
					],
					[
						"(1\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1[1-467]"
						]
					],
					[
						"(5\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"5"
						]
					],
					[
						"(92\\d{2})(\\d{5})",
						"$1 $2",
						[
							"92"
						],
						"$1"
					],
					[
						"(800)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"800"
						],
						"$1"
					],
					[
						"(811)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"811"
						]
					]
				],
				"0",
				"0$1"
			],
			"SB": [
				"677",
				"[1-9]\\d{4,6}",
				[
					[
						"(\\d{2})(\\d{5})",
						"$1 $2",
						[
							"[7-9]"
						]
					]
				]
			],
			"SC": [
				"248",
				"[24689]\\d{5,6}",
				[
					[
						"(\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[246]"
						]
					]
				]
			],
			"SD": [
				"249",
				"[19]\\d{8}",
				[
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3"
					]
				],
				"0",
				"0$1"
			],
			"SE": [
				"46",
				"[1-35-9]\\d{5,11}|4\\d{6,8}",
				[
					[
						"(8)(\\d{2,3})(\\d{2,3})(\\d{2})",
						"$1-$2 $3 $4",
						[
							"8"
						],
						null,
						null,
						"$1 $2 $3 $4"
					],
					[
						"([1-69]\\d)(\\d{2,3})(\\d{2})(\\d{2})",
						"$1-$2 $3 $4",
						[
							"1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90"
						],
						null,
						null,
						"$1 $2 $3 $4"
					],
					[
						"([1-469]\\d)(\\d{3})(\\d{2})",
						"$1-$2 $3",
						[
							"[12][136]|3[356]|4[0246]|6[03]|90"
						],
						null,
						null,
						"$1 $2 $3"
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1-$2 $3 $4",
						[
							"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])"
						],
						null,
						null,
						"$1 $2 $3 $4"
					],
					[
						"(\\d{3})(\\d{2,3})(\\d{2})",
						"$1-$2 $3",
						[
							"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])"
						],
						null,
						null,
						"$1 $2 $3"
					],
					[
						"(7\\d)(\\d{3})(\\d{2})(\\d{2})",
						"$1-$2 $3 $4",
						[
							"7"
						],
						null,
						null,
						"$1 $2 $3 $4"
					],
					[
						"(77)(\\d{2})(\\d{2})",
						"$1-$2$3",
						[
							"77"
						],
						null,
						null,
						"$1 $2 $3"
					],
					[
						"(20)(\\d{2,3})(\\d{2})",
						"$1-$2 $3",
						[
							"20"
						],
						null,
						null,
						"$1 $2 $3"
					],
					[
						"(9[034]\\d)(\\d{2})(\\d{2})(\\d{3})",
						"$1-$2 $3 $4",
						[
							"9[034]"
						],
						null,
						null,
						"$1 $2 $3 $4"
					],
					[
						"(9[034]\\d)(\\d{4})",
						"$1-$2",
						[
							"9[034]"
						],
						null,
						null,
						"$1 $2"
					],
					[
						"(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1-$2 $3 $4 $5",
						[
							"25[245]|67[3-6]"
						],
						null,
						null,
						"$1 $2 $3 $4 $5"
					]
				],
				"0",
				"0$1"
			],
			"SG": [
				"65",
				"[36]\\d{7}|[17-9]\\d{7,10}",
				[
					[
						"([3689]\\d{3})(\\d{4})",
						"$1 $2",
						[
							"[369]|8[1-9]"
						]
					],
					[
						"(1[89]00)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1[89]0",
							"1[89]00"
						]
					],
					[
						"(7000)(\\d{4})(\\d{3})",
						"$1 $2 $3",
						[
							"700",
							"7000"
						]
					],
					[
						"(800)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"800"
						]
					]
				]
			],
			"SH": [
				"290",
				"[256]\\d{4}|8\\d{3}",
				[],
				null,
				null,
				null,
				null,
				null,
				null,
				[
					"2(?:[0-57-9]\\d|6[4-9])\\d{2}",
					"[56]\\d{4}",
					null,
					null,
					null,
					null,
					null,
					null,
					"262\\d{2}"
				]
			],
			"SI": [
				"386",
				"[1-7]\\d{6,7}|[89]\\d{4,7}",
				[
					[
						"(\\d)(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[12]|[34][24-8]|5[2-8]|7[3-8]"
						],
						"(0$1)"
					],
					[
						"([3-7]\\d)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[37][01]|4[0139]|51|6"
						]
					],
					[
						"([89][09])(\\d{3,6})",
						"$1 $2",
						[
							"[89][09]"
						]
					],
					[
						"([58]\\d{2})(\\d{5})",
						"$1 $2",
						[
							"59|8[1-3]"
						]
					]
				],
				"0",
				"0$1"
			],
			"SJ": [
				"47",
				"0\\d{4}|[45789]\\d{7}",
				[
					[
						"([489]\\d{2})(\\d{2})(\\d{3})",
						"$1 $2 $3",
						[
							"[489]"
						]
					],
					[
						"([235-7]\\d)(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[235-7]"
						]
					]
				],
				null,
				null,
				null,
				null,
				null,
				null,
				[
					"79\\d{6}",
					"(?:4[015-8]|5[89]|9\\d)\\d{6}",
					"80[01]\\d{5}",
					"82[09]\\d{5}",
					"880\\d{5}",
					null,
					"0\\d{4}|81(?:0(?:0[7-9]|1\\d)|5\\d{2})\\d{3}",
					null,
					"85[0-5]\\d{5}",
					"810(?:0[0-6]|[2-8]\\d)\\d{3}"
				]
			],
			"SK": [
				"421",
				"(?:[2-68]\\d{5,8}|9\\d{6,8})",
				[
					[
						"(2)(1[67])(\\d{3,4})",
						"$1 $2 $3",
						[
							"21[67]"
						]
					],
					[
						"([3-5]\\d)(\\d{2})(\\d{2,3})",
						"$1 $2 $3",
						[
							"[3-5]"
						]
					],
					[
						"(2)(\\d{3})(\\d{3})(\\d{2})",
						"$1/$2 $3 $4",
						[
							"2"
						]
					],
					[
						"([3-5]\\d)(\\d{3})(\\d{2})(\\d{2})",
						"$1/$2 $3 $4",
						[
							"[3-5]"
						]
					],
					[
						"([689]\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[689]"
						]
					],
					[
						"(9090)(\\d{3})",
						"$1 $2",
						[
							"909",
							"9090"
						]
					]
				],
				"0",
				"0$1"
			],
			"SL": [
				"232",
				"[2-9]\\d{7}",
				[
					[
						"(\\d{2})(\\d{6})",
						"$1 $2"
					]
				],
				"0",
				"(0$1)"
			],
			"SM": [
				"378",
				"[05-7]\\d{7,9}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[5-7]"
						]
					],
					[
						"(0549)(\\d{6})",
						"$1 $2",
						[
							"054",
							"0549"
						],
						null,
						null,
						"($1) $2"
					],
					[
						"(\\d{6})",
						"0549 $1",
						[
							"[89]"
						],
						null,
						null,
						"(0549) $1"
					]
				],
				null,
				null,
				"([89]\\d{5})",
				"0549$1"
			],
			"SN": [
				"221",
				"[3789]\\d{8}",
				[
					[
						"(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[379]"
						]
					],
					[
						"(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"8"
						]
					]
				]
			],
			"SO": [
				"252",
				"[1-9]\\d{5,8}",
				[
					[
						"(\\d{6})",
						"$1",
						[
							"[134]"
						]
					],
					[
						"(\\d)(\\d{6})",
						"$1 $2",
						[
							"[13-5]|2[0-79]"
						]
					],
					[
						"(\\d)(\\d{7})",
						"$1 $2",
						[
							"24|[67]"
						]
					],
					[
						"(\\d{2})(\\d{4})",
						"$1 $2",
						[
							"8[125]"
						]
					],
					[
						"(\\d{2})(\\d{5,7})",
						"$1 $2",
						[
							"15|28|6[1-35-9]|799|9[2-9]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"3[59]|4[89]|6[24-6]|79|8[08]|90"
						]
					]
				],
				"0"
			],
			"SR": [
				"597",
				"[2-8]\\d{5,6}",
				[
					[
						"(\\d{3})(\\d{3})",
						"$1-$2",
						[
							"[2-4]|5[2-58]"
						]
					],
					[
						"(\\d{2})(\\d{2})(\\d{2})",
						"$1-$2-$3",
						[
							"56"
						]
					],
					[
						"(\\d{3})(\\d{4})",
						"$1-$2",
						[
							"[6-8]"
						]
					]
				]
			],
			"SS": [
				"211",
				"[19]\\d{8}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						null,
						"0$1"
					]
				],
				"0"
			],
			"ST": [
				"239",
				"[29]\\d{6}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2"
					]
				]
			],
			"SV": [
				"503",
				"[267]\\d{7}|[89]\\d{6}(?:\\d{4})?",
				[
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						[
							"[267]"
						]
					],
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						[
							"[89]"
						]
					],
					[
						"(\\d{3})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"[89]"
						]
					]
				]
			],
			"SX": [
				"1",
				"[5789]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"721"
			],
			"SY": [
				"963",
				"[1-59]\\d{7,8}",
				[
					[
						"(\\d{2})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[1-5]"
						]
					],
					[
						"(9\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"9"
						]
					]
				],
				"0",
				"0$1",
				null,
				null,
				true
			],
			"SZ": [
				"268",
				"[027]\\d{7}",
				[
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						[
							"[027]"
						]
					]
				]
			],
			"TA": [
				"290",
				"8\\d{3}",
				[],
				null,
				null,
				null,
				null,
				null,
				null,
				[
					"8\\d{3}"
				]
			],
			"TC": [
				"1",
				"[5689]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"649"
			],
			"TD": [
				"235",
				"[2679]\\d{7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4"
					]
				]
			],
			"TG": [
				"228",
				"[279]\\d{7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[279]"
						]
					]
				]
			],
			"TH": [
				"66",
				"1\\d{8,9}|[2-9]\\d{7,8}",
				[
					[
						"(2)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"2"
						]
					],
					[
						"([13-9]\\d)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"14|[3-9]"
						]
					],
					[
						"(1[89]00)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"1[89]0",
							"1[89]00"
						],
						"$1"
					]
				],
				"0",
				"0$1"
			],
			"TJ": [
				"992",
				"[3-57-9]\\d{8}",
				[
					[
						"([349]\\d{2})(\\d{2})(\\d{4})",
						"$1 $2 $3",
						[
							"[34]7|91[78]"
						]
					],
					[
						"([457-9]\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"4[148]|[578]|9(?:[0235-9]|1[59])"
						]
					],
					[
						"(331700)(\\d)(\\d{2})",
						"$1 $2 $3",
						[
							"331",
							"3317",
							"33170",
							"331700"
						]
					],
					[
						"(\\d{4})(\\d)(\\d{4})",
						"$1 $2 $3",
						[
							"3[1-5]",
							"3(?:[1245]|3(?:[02-9]|1[0-589]))"
						]
					]
				],
				"8",
				null,
				null,
				null,
				true
			],
			"TK": [
				"690",
				"[2-47]\\d{3,6}"
			],
			"TL": [
				"670",
				"[2-489]\\d{6}|7\\d{6,7}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						[
							"[2-489]|70"
						]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						[
							"7[3-8]"
						]
					]
				]
			],
			"TM": [
				"993",
				"[1-6]\\d{7}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2-$3-$4",
						[
							"12"
						]
					],
					[
						"(\\d{2})(\\d{6})",
						"$1 $2",
						[
							"6"
						],
						"8 $1"
					],
					[
						"(\\d{3})(\\d)(\\d{2})(\\d{2})",
						"$1 $2-$3-$4",
						[
							"13|[2-5]"
						]
					]
				],
				"8",
				"(8 $1)"
			],
			"TN": [
				"216",
				"[2-57-9]\\d{7}",
				[
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3"
					]
				]
			],
			"TO": [
				"676",
				"[02-8]\\d{4,6}",
				[
					[
						"(\\d{2})(\\d{3})",
						"$1-$2",
						[
							"[1-6]|7[0-4]|8[05]"
						]
					],
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						[
							"7[5-9]|8[47-9]"
						]
					],
					[
						"(\\d{4})(\\d{3})",
						"$1 $2",
						[
							"0"
						]
					]
				]
			],
			"TR": [
				"90",
				"[2-589]\\d{9}|444\\d{4}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[23]|4(?:[0-35-9]|4[0-35-9])"
						],
						"(0$1)"
					],
					[
						"(\\d{3})(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"5[02-69]"
						],
						"0$1"
					],
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"51|[89]"
						],
						"0$1"
					],
					[
						"(444)(\\d{1})(\\d{3})",
						"$1 $2 $3",
						[
							"444"
						]
					]
				],
				"0",
				null,
				null,
				null,
				true
			],
			"TT": [
				"1",
				"[589]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"868"
			],
			"TV": [
				"688",
				"[279]\\d{4,6}"
			],
			"TW": [
				"886",
				"2\\d{6,8}|[3-689]\\d{7,8}|7\\d{7,9}",
				[
					[
						"(20)(\\d)(\\d{4})",
						"$1 $2 $3",
						[
							"202"
						]
					],
					[
						"([258]0)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"20[013-9]|50[0-46-9]|80[0-79]"
						]
					],
					[
						"([2-8])(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						[
							"[25][2-8]|[346]|[78][1-9]"
						]
					],
					[
						"(9\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"9"
						]
					],
					[
						"(70)(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"70"
						]
					]
				],
				"0",
				"0$1"
			],
			"TZ": [
				"255",
				"\\d{9}",
				[
					[
						"([24]\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[24]"
						]
					],
					[
						"([67]\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"[67]"
						]
					],
					[
						"([89]\\d{2})(\\d{2})(\\d{4})",
						"$1 $2 $3",
						[
							"[89]"
						]
					]
				],
				"0",
				"0$1"
			],
			"UA": [
				"380",
				"[3-9]\\d{8}",
				[
					[
						"([3-9]\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[38]9|4(?:[45][0-5]|87)|5(?:0|[67][37])|6[36-8]|7|9[1-9]",
							"[38]9|4(?:[45][0-5]|87)|5(?:0|6(?:3[14-7]|7)|7[37])|6[36-8]|7|9[1-9]"
						]
					],
					[
						"([3-689]\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"(?:3[1-8]|4[136-8])2|5(?:[12457]2|6[24])|6(?:[12][29]|[49]2|5[24])|8[0-8]|90",
							"3(?:[1-46-8]2[013-9]|52)|4(?:[1378]2|62[013-9])|5(?:[12457]2|6[24])|6(?:[12][29]|[49]2|5[24])|8[0-8]|90"
						]
					],
					[
						"([3-6]\\d{3})(\\d{5})",
						"$1 $2",
						[
							"3(?:[1-46-8]|5[013-9])|4(?:[137][013-9]|[45][6-9]|6|8[4-6])|5(?:[1245][013-9]|3|6[0135689]|7[4-6])|6(?:[12][13-8]|[49][013-9]|5[0135-9])",
							"3(?:[1-46-8](?:[013-9]|22)|5[013-9])|4(?:[137][013-9]|[45][6-9]|6(?:[013-9]|22)|8[4-6])|5(?:[1245][013-9]|3|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][13-8]|[49][013-9]|5[0135-9])"
						]
					]
				],
				"0",
				"0$1"
			],
			"UG": [
				"256",
				"\\d{9}",
				[
					[
						"(\\d{3})(\\d{6})",
						"$1 $2",
						[
							"20[0-8]|4(?:6[45]|[7-9])|[7-9]",
							"20(?:[013-8]|2[5-9])|4(?:6[45]|[7-9])|[7-9]"
						]
					],
					[
						"(\\d{2})(\\d{7})",
						"$1 $2",
						[
							"3|4(?:[1-5]|6[0-36-9])"
						]
					],
					[
						"(2024)(\\d{5})",
						"$1 $2",
						[
							"202",
							"2024"
						]
					]
				],
				"0",
				"0$1"
			],
			"US": [
				"1",
				"[2-9]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				true,
				null,
				[
					"(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[026]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[16]|5[017]|6[0-279]|78|8[012])|7(?:0[1-46-8]|1[02-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|28|3[0-258]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[014678]|4[0179]|5[12469]|7[0-3589]|8[04-69]))[2-9]\\d{6}",
					null,
					"8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",
					"900[2-9]\\d{6}",
					"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\d{6}"
				]
			],
			"UY": [
				"598",
				"[2489]\\d{6,7}",
				[
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						[
							"[24]"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"9[1-9]"
						],
						"0$1"
					],
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						[
							"[89]0"
						],
						"0$1"
					]
				],
				"0"
			],
			"UZ": [
				"998",
				"[679]\\d{8}",
				[
					[
						"([679]\\d)(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[679]"
						]
					]
				],
				"8",
				"8 $1"
			],
			"VA": [
				"39",
				"(?:0(?:878\\d{5}|6698\\d{5})|[1589]\\d{5,10}|3(?:[12457-9]\\d{8}|[36]\\d{7,9}))",
				[
					[
						"(\\d{2})(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						[
							"0[26]|55"
						]
					],
					[
						"(0[26])(\\d{4})(\\d{5})",
						"$1 $2 $3",
						[
							"0[26]"
						]
					],
					[
						"(0[26])(\\d{4,6})",
						"$1 $2",
						[
							"0[26]"
						]
					],
					[
						"(0\\d{2})(\\d{3,4})(\\d{4})",
						"$1 $2 $3",
						[
							"0[13-57-9][0159]"
						]
					],
					[
						"(\\d{3})(\\d{3,6})",
						"$1 $2",
						[
							"0[13-57-9][0159]|8(?:03|4[17]|9[245])",
							"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))"
						]
					],
					[
						"(0\\d{3})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"0[13-57-9][2-46-8]"
						]
					],
					[
						"(0\\d{3})(\\d{2,6})",
						"$1 $2",
						[
							"0[13-57-9][2-46-8]"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[13]|8(?:00|4[08]|9[59])",
							"[13]|8(?:00|4[08]|9(?:5[5-9]|9))"
						]
					],
					[
						"(\\d{4})(\\d{4})",
						"$1 $2",
						[
							"894",
							"894[5-9]"
						]
					],
					[
						"(\\d{3})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"3"
						]
					]
				],
				null,
				null,
				null,
				null,
				null,
				null,
				[
					"06698\\d{5}",
					"3(?:[12457-9]\\d{8}|6\\d{7,8}|3\\d{7,9})",
					"80(?:0\\d{6}|3\\d{3})",
					"0878\\d{5}|1(?:44|6[346])\\d{6}|89(?:2\\d{3}|4(?:[0-4]\\d{2}|[5-9]\\d{4})|5(?:[0-4]\\d{2}|[5-9]\\d{6})|9\\d{6})",
					"1(?:78\\d|99)\\d{6}",
					null,
					null,
					null,
					"55\\d{8}",
					"84(?:[08]\\d{6}|[17]\\d{3})"
				]
			],
			"VC": [
				"1",
				"[5789]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"784"
			],
			"VE": [
				"58",
				"[24589]\\d{9}",
				[
					[
						"(\\d{3})(\\d{7})",
						"$1-$2"
					]
				],
				"0",
				"0$1"
			],
			"VG": [
				"1",
				"[2589]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"284"
			],
			"VI": [
				"1",
				"[3589]\\d{9}",
				[
					[
						"(\\d{3})(\\d{3})(\\d{4})",
						"($1) $2-$3",
						null,
						null,
						null,
						"$1-$2-$3"
					]
				],
				"1",
				null,
				null,
				null,
				null,
				"340"
			],
			"VN": [
				"84",
				"1\\d{6,9}|2\\d{9}|6\\d{6,7}|7\\d{6}|8\\d{6,8}|9\\d{8}",
				[
					[
						"([17]99)(\\d{4})",
						"$1 $2",
						[
							"[17]99"
						]
					],
					[
						"(\\d{2})(\\d{4})(\\d{4})",
						"$1 $2 $3",
						[
							"2[48]"
						]
					],
					[
						"(80)(\\d{5})",
						"$1 $2",
						[
							"80"
						]
					],
					[
						"(69\\d)(\\d{4,5})",
						"$1 $2",
						[
							"69"
						]
					],
					[
						"(\\d{3})(\\d{4})(\\d{3})",
						"$1 $2 $3",
						[
							"2[0-35-79]"
						]
					],
					[
						"([89]\\d)(\\d{3})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"8(?:8|9[89])|9"
						]
					],
					[
						"(1[2689]\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"1(?:[26]|8[68]|99)"
						]
					],
					[
						"(86[89])(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"86[89]"
						]
					],
					[
						"(1[89]00)(\\d{4,6})",
						"$1 $2",
						[
							"1[89]0",
							"1[89]00"
						],
						"$1"
					]
				],
				"0",
				"0$1",
				null,
				null,
				true
			],
			"VU": [
				"678",
				"[2-57-9]\\d{4,6}",
				[
					[
						"(\\d{3})(\\d{4})",
						"$1 $2",
						[
							"[579]"
						]
					]
				]
			],
			"WF": [
				"681",
				"[4-8]\\d{5}",
				[
					[
						"(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3"
					]
				]
			],
			"WS": [
				"685",
				"[2-8]\\d{4,6}",
				[
					[
						"(8\\d{2})(\\d{3,4})",
						"$1 $2",
						[
							"8"
						]
					],
					[
						"(7\\d)(\\d{5})",
						"$1 $2",
						[
							"7"
						]
					],
					[
						"(\\d{5})",
						"$1",
						[
							"[2-6]"
						]
					]
				]
			],
			"YE": [
				"967",
				"[1-7]\\d{6,8}",
				[
					[
						"([1-7])(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[1-6]|7[24-68]"
						]
					],
					[
						"(7\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"7[0137]"
						]
					]
				],
				"0",
				"0$1"
			],
			"YT": [
				"262",
				"[268]\\d{8}",
				[
					[
						"([268]\\d{2})(\\d{2})(\\d{2})(\\d{2})",
						"$1 $2 $3 $4",
						[
							"[268]"
						]
					]
				],
				"0",
				null,
				null,
				null,
				null,
				"269|63"
			],
			"ZA": [
				"27",
				"[1-79]\\d{8}|8\\d{4,8}",
				[
					[
						"(860)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"860"
						]
					],
					[
						"(\\d{2})(\\d{3,4})",
						"$1 $2",
						[
							"8[1-4]"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{2,3})",
						"$1 $2 $3",
						[
							"8[1-4]"
						]
					],
					[
						"(\\d{2})(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"[1-79]|8(?:[0-57]|6[1-9])"
						]
					]
				],
				"0",
				"0$1"
			],
			"ZM": [
				"260",
				"[289]\\d{8}",
				[
					[
						"(\\d{2})(\\d{4})",
						"$1 $2",
						null,
						"$1"
					],
					[
						"([1-8])(\\d{2})(\\d{4})",
						"$1 $2 $3",
						[
							"[1-8]"
						],
						"$1"
					],
					[
						"([29]\\d)(\\d{7})",
						"$1 $2",
						[
							"[29]"
						]
					],
					[
						"(800)(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"800"
						]
					]
				],
				"0",
				"0$1"
			],
			"ZW": [
				"263",
				"2(?:[0-57-9]\\d{3,8}|6(?:[14]\\d{7}|\\d{4}))|[13-69]\\d{4,9}|7\\d{8}|8[06]\\d{5,8}",
				[
					[
						"([49])(\\d{3})(\\d{2,4})",
						"$1 $2 $3",
						[
							"4|9[2-9]"
						]
					],
					[
						"(7\\d)(\\d{3})(\\d{4})",
						"$1 $2 $3",
						[
							"7"
						]
					],
					[
						"(86\\d{2})(\\d{3})(\\d{3})",
						"$1 $2 $3",
						[
							"86[24]"
						]
					],
					[
						"([2356]\\d{2})(\\d{3,5})",
						"$1 $2",
						[
							"2(?:0[45]|2[278]|[49]8|[78])|3(?:[09]8|17|3[78]|7[1569]|8[37])|5[15][78]|6(?:[29]8|37|[68][78]|75)"
						]
					],
					[
						"(\\d{3})(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"2(?:1[39]|2[0157]|31|[56][14]|7[35]|84)|329"
						]
					],
					[
						"([1-356]\\d)(\\d{3,5})",
						"$1 $2",
						[
							"1[3-9]|2[02569]|3[0-69]|5[05689]|6"
						]
					],
					[
						"([235]\\d)(\\d{3})(\\d{3,4})",
						"$1 $2 $3",
						[
							"[23]9|54"
						]
					],
					[
						"([25]\\d{3})(\\d{3,5})",
						"$1 $2",
						[
							"(?:25|54)8",
							"258[23]|5483"
						]
					],
					[
						"(8\\d{3})(\\d{6})",
						"$1 $2",
						[
							"86"
						]
					],
					[
						"(80\\d)(\\d{4})",
						"$1 $2",
						[
							"80"
						]
					]
				],
				"0",
				"0$1"
			],
			"001": [
				"979",
				"\\d{9}",
				[
					[
						"(\\d)(\\d{4})(\\d{4})",
						"$1 $2 $3"
					]
				]
			]
		}
	};

/***/ },
/* 525 */
/***/ function(module, exports, __webpack_require__) {

	var camel2hyphen = __webpack_require__(660);
	
	var isDimension = function (feature) {
	  var re = /[height|width]$/;
	  return re.test(feature);
	};
	
	var obj2mq = function (obj) {
	  var mq = '';
	  var features = Object.keys(obj);
	  features.forEach(function (feature, index) {
	    var value = obj[feature];
	    feature = camel2hyphen(feature);
	    // Add px to dimension features
	    if (isDimension(feature) && typeof value === 'number') {
	      value = value + 'px';
	    }
	    if (value === true) {
	      mq += feature;
	    } else if (value === false) {
	      mq += 'not ' + feature;
	    } else {
	      mq += '(' + feature + ': ' + value + ')';
	    }
	    if (index < features.length-1) {
	      mq += ' and '
	    }
	  });
	  return mq;
	};
	
	var json2mq = function (query) {
	  var mq = '';
	  if (typeof query === 'string') {
	    return query;
	  }
	  // Handling array of media queries
	  if (query instanceof Array) {
	    query.forEach(function (q, index) {
	      mq += obj2mq(q);
	      if (index < query.length-1) {
	        mq += ', '
	      }
	    });
	    return mq;
	  }
	  // Handling single media query
	  return obj2mq(query);
	};
	
	module.exports = json2mq;

/***/ },
/* 526 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = is_valid;
	
	var _parse = __webpack_require__(42);
	
	var _parse2 = _interopRequireDefault(_parse);
	
	var _types = __webpack_require__(99);
	
	var _types2 = _interopRequireDefault(_types);
	
	var _metadata = __webpack_require__(41);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Checks if a given phone number is valid
	//
	// Example use cases:
	//
	// ```js
	// is_valid('8005553535', 'RU')
	// is_valid('8005553535', 'RU', metadata)
	// is_valid({ phone: '8005553535', country: 'RU' })
	// is_valid({ phone: '8005553535', country: 'RU' }, metadata)
	// is_valid('+78005553535')
	// is_valid('+78005553535', metadata)
	// ```
	//
	function is_valid(arg_1, arg_2, arg_3) {
		var _sort_out_arguments = (0, _types.sort_out_arguments)(arg_1, arg_2, arg_3),
		    input = _sort_out_arguments.input,
		    metadata = _sort_out_arguments.metadata;
	
		if (!input) {
			return false;
		}
	
		if (!input.country) {
			return false;
		}
	
		var country_metadata = metadata.countries[input.country];
	
		if ((0, _metadata.get_types)(country_metadata)) {
			if (!(0, _types2.default)(input, metadata)) {
				return false;
			}
		}
	
		return true;
	}
	//# sourceMappingURL=validate.js.map

/***/ },
/* 527 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'
	
	exports = module.exports = {}
	
	exports.parse             = __webpack_require__(42).default
	exports.DIGITS            = __webpack_require__(42).DIGIT_MAPPINGS
	exports.format            = __webpack_require__(98).default
	exports.getNumberType     = __webpack_require__(99).default
	exports.isValidNumber     = __webpack_require__(526).default
	exports.AsYouType         = __webpack_require__(158).default
	exports.DIGIT_PLACEHOLDER = __webpack_require__(158).DIGIT_PLACEHOLDER
	
	// `get_number_type` name is deprecated
	exports.get_number_type = exports.getNumberType
	// `is_valid_number` name is deprecated
	exports.is_valid_number = exports.isValidNumber
	// `as_you_type` name is deprecated
	exports.as_you_type = exports.AsYouType
	// `asYouType` name is deprecated
	exports.asYouType = exports.AsYouType
	
	var get_phone_code = __webpack_require__(41).get_phone_code
	
	exports.getPhoneCode = function(country, metadata)
	{
		if (!metadata.countries[country])
		{
			throw new Error('Unknown country: "' + country + '"')
		}
	
		return get_phone_code(metadata.countries[country])
	}
	
	// exports['default'] = ...

/***/ },
/* 528 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;
	
	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;
	
	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;
	
	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;
	
	/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max,
	    nativeMin = Math.min;
	
	/**
	 * Gets the timestamp of the number of milliseconds that have elapsed since
	 * the Unix epoch (1 January 1970 00:00:00 UTC).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Date
	 * @returns {number} Returns the timestamp.
	 * @example
	 *
	 * _.defer(function(stamp) {
	 *   console.log(_.now() - stamp);
	 * }, _.now());
	 * // => Logs the number of milliseconds it took for the deferred invocation.
	 */
	var now = function() {
	  return root.Date.now();
	};
	
	/**
	 * Creates a debounced function that delays invoking `func` until after `wait`
	 * milliseconds have elapsed since the last time the debounced function was
	 * invoked. The debounced function comes with a `cancel` method to cancel
	 * delayed `func` invocations and a `flush` method to immediately invoke them.
	 * Provide `options` to indicate whether `func` should be invoked on the
	 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	 * with the last arguments provided to the debounced function. Subsequent
	 * calls to the debounced function return the result of the last `func`
	 * invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the debounced function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.debounce` and `_.throttle`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to debounce.
	 * @param {number} [wait=0] The number of milliseconds to delay.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=false]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {number} [options.maxWait]
	 *  The maximum time `func` is allowed to be delayed before it's invoked.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new debounced function.
	 * @example
	 *
	 * // Avoid costly calculations while the window size is in flux.
	 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	 *
	 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	 * jQuery(element).on('click', _.debounce(sendMail, 300, {
	 *   'leading': true,
	 *   'trailing': false
	 * }));
	 *
	 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	 * var source = new EventSource('/stream');
	 * jQuery(source).on('message', debounced);
	 *
	 * // Cancel the trailing debounced invocation.
	 * jQuery(window).on('popstate', debounced.cancel);
	 */
	function debounce(func, wait, options) {
	  var lastArgs,
	      lastThis,
	      maxWait,
	      result,
	      timerId,
	      lastCallTime,
	      lastInvokeTime = 0,
	      leading = false,
	      maxing = false,
	      trailing = true;
	
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  wait = toNumber(wait) || 0;
	  if (isObject(options)) {
	    leading = !!options.leading;
	    maxing = 'maxWait' in options;
	    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	
	  function invokeFunc(time) {
	    var args = lastArgs,
	        thisArg = lastThis;
	
	    lastArgs = lastThis = undefined;
	    lastInvokeTime = time;
	    result = func.apply(thisArg, args);
	    return result;
	  }
	
	  function leadingEdge(time) {
	    // Reset any `maxWait` timer.
	    lastInvokeTime = time;
	    // Start the timer for the trailing edge.
	    timerId = setTimeout(timerExpired, wait);
	    // Invoke the leading edge.
	    return leading ? invokeFunc(time) : result;
	  }
	
	  function remainingWait(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime,
	        result = wait - timeSinceLastCall;
	
	    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	  }
	
	  function shouldInvoke(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime;
	
	    // Either this is the first call, activity has stopped and we're at the
	    // trailing edge, the system time has gone backwards and we're treating
	    // it as the trailing edge, or we've hit the `maxWait` limit.
	    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	  }
	
	  function timerExpired() {
	    var time = now();
	    if (shouldInvoke(time)) {
	      return trailingEdge(time);
	    }
	    // Restart the timer.
	    timerId = setTimeout(timerExpired, remainingWait(time));
	  }
	
	  function trailingEdge(time) {
	    timerId = undefined;
	
	    // Only invoke if we have `lastArgs` which means `func` has been
	    // debounced at least once.
	    if (trailing && lastArgs) {
	      return invokeFunc(time);
	    }
	    lastArgs = lastThis = undefined;
	    return result;
	  }
	
	  function cancel() {
	    if (timerId !== undefined) {
	      clearTimeout(timerId);
	    }
	    lastInvokeTime = 0;
	    lastArgs = lastCallTime = lastThis = timerId = undefined;
	  }
	
	  function flush() {
	    return timerId === undefined ? result : trailingEdge(now());
	  }
	
	  function debounced() {
	    var time = now(),
	        isInvoking = shouldInvoke(time);
	
	    lastArgs = arguments;
	    lastThis = this;
	    lastCallTime = time;
	
	    if (isInvoking) {
	      if (timerId === undefined) {
	        return leadingEdge(lastCallTime);
	      }
	      if (maxing) {
	        // Handle invocations in a tight loop.
	        timerId = setTimeout(timerExpired, wait);
	        return invokeFunc(lastCallTime);
	      }
	    }
	    if (timerId === undefined) {
	      timerId = setTimeout(timerExpired, wait);
	    }
	    return result;
	  }
	  debounced.cancel = cancel;
	  debounced.flush = flush;
	  return debounced;
	}
	
	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}
	
	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}
	
	module.exports = debounce;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 529 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(159),
	    getRawTag = __webpack_require__(532),
	    objectToString = __webpack_require__(533);
	
	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}
	
	module.exports = baseGetTag;


/***/ },
/* 530 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 531 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(534);
	
	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);
	
	module.exports = getPrototype;


/***/ },
/* 532 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(159);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];
	
	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}
	
	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}
	
	module.exports = getRawTag;


/***/ },
/* 533 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}
	
	module.exports = objectToString;


/***/ },
/* 534 */
/***/ function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ },
/* 535 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(530);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ },
/* 536 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ },
/* 537 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./af": 160,
		"./af.js": 160,
		"./ar": 167,
		"./ar-dz": 161,
		"./ar-dz.js": 161,
		"./ar-kw": 162,
		"./ar-kw.js": 162,
		"./ar-ly": 163,
		"./ar-ly.js": 163,
		"./ar-ma": 164,
		"./ar-ma.js": 164,
		"./ar-sa": 165,
		"./ar-sa.js": 165,
		"./ar-tn": 166,
		"./ar-tn.js": 166,
		"./ar.js": 167,
		"./az": 168,
		"./az.js": 168,
		"./be": 169,
		"./be.js": 169,
		"./bg": 170,
		"./bg.js": 170,
		"./bm": 171,
		"./bm.js": 171,
		"./bn": 172,
		"./bn.js": 172,
		"./bo": 173,
		"./bo.js": 173,
		"./br": 174,
		"./br.js": 174,
		"./bs": 175,
		"./bs.js": 175,
		"./ca": 176,
		"./ca.js": 176,
		"./cs": 177,
		"./cs.js": 177,
		"./cv": 178,
		"./cv.js": 178,
		"./cy": 179,
		"./cy.js": 179,
		"./da": 180,
		"./da.js": 180,
		"./de": 183,
		"./de-at": 181,
		"./de-at.js": 181,
		"./de-ch": 182,
		"./de-ch.js": 182,
		"./de.js": 183,
		"./dv": 184,
		"./dv.js": 184,
		"./el": 185,
		"./el.js": 185,
		"./en-au": 186,
		"./en-au.js": 186,
		"./en-ca": 187,
		"./en-ca.js": 187,
		"./en-gb": 188,
		"./en-gb.js": 188,
		"./en-ie": 189,
		"./en-ie.js": 189,
		"./en-nz": 190,
		"./en-nz.js": 190,
		"./eo": 191,
		"./eo.js": 191,
		"./es": 194,
		"./es-do": 192,
		"./es-do.js": 192,
		"./es-us": 193,
		"./es-us.js": 193,
		"./es.js": 194,
		"./et": 195,
		"./et.js": 195,
		"./eu": 196,
		"./eu.js": 196,
		"./fa": 197,
		"./fa.js": 197,
		"./fi": 198,
		"./fi.js": 198,
		"./fo": 199,
		"./fo.js": 199,
		"./fr": 202,
		"./fr-ca": 200,
		"./fr-ca.js": 200,
		"./fr-ch": 201,
		"./fr-ch.js": 201,
		"./fr.js": 202,
		"./fy": 203,
		"./fy.js": 203,
		"./gd": 204,
		"./gd.js": 204,
		"./gl": 205,
		"./gl.js": 205,
		"./gom-latn": 206,
		"./gom-latn.js": 206,
		"./gu": 207,
		"./gu.js": 207,
		"./he": 208,
		"./he.js": 208,
		"./hi": 209,
		"./hi.js": 209,
		"./hr": 210,
		"./hr.js": 210,
		"./hu": 211,
		"./hu.js": 211,
		"./hy-am": 212,
		"./hy-am.js": 212,
		"./id": 213,
		"./id.js": 213,
		"./is": 214,
		"./is.js": 214,
		"./it": 215,
		"./it.js": 215,
		"./ja": 216,
		"./ja.js": 216,
		"./jv": 217,
		"./jv.js": 217,
		"./ka": 218,
		"./ka.js": 218,
		"./kk": 219,
		"./kk.js": 219,
		"./km": 220,
		"./km.js": 220,
		"./kn": 221,
		"./kn.js": 221,
		"./ko": 222,
		"./ko.js": 222,
		"./ky": 223,
		"./ky.js": 223,
		"./lb": 224,
		"./lb.js": 224,
		"./lo": 225,
		"./lo.js": 225,
		"./lt": 226,
		"./lt.js": 226,
		"./lv": 227,
		"./lv.js": 227,
		"./me": 228,
		"./me.js": 228,
		"./mi": 229,
		"./mi.js": 229,
		"./mk": 230,
		"./mk.js": 230,
		"./ml": 231,
		"./ml.js": 231,
		"./mr": 232,
		"./mr.js": 232,
		"./ms": 234,
		"./ms-my": 233,
		"./ms-my.js": 233,
		"./ms.js": 234,
		"./mt": 235,
		"./mt.js": 235,
		"./my": 236,
		"./my.js": 236,
		"./nb": 237,
		"./nb.js": 237,
		"./ne": 238,
		"./ne.js": 238,
		"./nl": 240,
		"./nl-be": 239,
		"./nl-be.js": 239,
		"./nl.js": 240,
		"./nn": 241,
		"./nn.js": 241,
		"./pa-in": 242,
		"./pa-in.js": 242,
		"./pl": 243,
		"./pl.js": 243,
		"./pt": 245,
		"./pt-br": 244,
		"./pt-br.js": 244,
		"./pt.js": 245,
		"./ro": 246,
		"./ro.js": 246,
		"./ru": 247,
		"./ru.js": 247,
		"./sd": 248,
		"./sd.js": 248,
		"./se": 249,
		"./se.js": 249,
		"./si": 250,
		"./si.js": 250,
		"./sk": 251,
		"./sk.js": 251,
		"./sl": 252,
		"./sl.js": 252,
		"./sq": 253,
		"./sq.js": 253,
		"./sr": 255,
		"./sr-cyrl": 254,
		"./sr-cyrl.js": 254,
		"./sr.js": 255,
		"./ss": 256,
		"./ss.js": 256,
		"./sv": 257,
		"./sv.js": 257,
		"./sw": 258,
		"./sw.js": 258,
		"./ta": 259,
		"./ta.js": 259,
		"./te": 260,
		"./te.js": 260,
		"./tet": 261,
		"./tet.js": 261,
		"./th": 262,
		"./th.js": 262,
		"./tl-ph": 263,
		"./tl-ph.js": 263,
		"./tlh": 264,
		"./tlh.js": 264,
		"./tr": 265,
		"./tr.js": 265,
		"./tzl": 266,
		"./tzl.js": 266,
		"./tzm": 268,
		"./tzm-latn": 267,
		"./tzm-latn.js": 267,
		"./tzm.js": 268,
		"./uk": 269,
		"./uk.js": 269,
		"./ur": 270,
		"./ur.js": 270,
		"./uz": 272,
		"./uz-latn": 271,
		"./uz-latn.js": 271,
		"./uz.js": 272,
		"./vi": 273,
		"./vi.js": 273,
		"./x-pseudo": 274,
		"./x-pseudo.js": 274,
		"./yo": 275,
		"./yo.js": 275,
		"./zh-cn": 276,
		"./zh-cn.js": 276,
		"./zh-hk": 277,
		"./zh-hk.js": 277,
		"./zh-tw": 278,
		"./zh-tw.js": 278
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 537;


/***/ },
/* 538 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	//This file contains the ES6 extensions to the core Promises/A+ API
	
	var Promise = __webpack_require__(280);
	
	module.exports = Promise;
	
	/* Static Functions */
	
	var TRUE = valuePromise(true);
	var FALSE = valuePromise(false);
	var NULL = valuePromise(null);
	var UNDEFINED = valuePromise(undefined);
	var ZERO = valuePromise(0);
	var EMPTYSTRING = valuePromise('');
	
	function valuePromise(value) {
	  var p = new Promise(Promise._61);
	  p._81 = 1;
	  p._65 = value;
	  return p;
	}
	Promise.resolve = function (value) {
	  if (value instanceof Promise) return value;
	
	  if (value === null) return NULL;
	  if (value === undefined) return UNDEFINED;
	  if (value === true) return TRUE;
	  if (value === false) return FALSE;
	  if (value === 0) return ZERO;
	  if (value === '') return EMPTYSTRING;
	
	  if (typeof value === 'object' || typeof value === 'function') {
	    try {
	      var then = value.then;
	      if (typeof then === 'function') {
	        return new Promise(then.bind(value));
	      }
	    } catch (ex) {
	      return new Promise(function (resolve, reject) {
	        reject(ex);
	      });
	    }
	  }
	  return valuePromise(value);
	};
	
	Promise.all = function (arr) {
	  var args = Array.prototype.slice.call(arr);
	
	  return new Promise(function (resolve, reject) {
	    if (args.length === 0) return resolve([]);
	    var remaining = args.length;
	    function res(i, val) {
	      if (val && (typeof val === 'object' || typeof val === 'function')) {
	        if (val instanceof Promise && val.then === Promise.prototype.then) {
	          while (val._81 === 3) {
	            val = val._65;
	          }
	          if (val._81 === 1) return res(i, val._65);
	          if (val._81 === 2) reject(val._65);
	          val.then(function (val) {
	            res(i, val);
	          }, reject);
	          return;
	        } else {
	          var then = val.then;
	          if (typeof then === 'function') {
	            var p = new Promise(then.bind(val));
	            p.then(function (val) {
	              res(i, val);
	            }, reject);
	            return;
	          }
	        }
	      }
	      args[i] = val;
	      if (--remaining === 0) {
	        resolve(args);
	      }
	    }
	    for (var i = 0; i < args.length; i++) {
	      res(i, args[i]);
	    }
	  });
	};
	
	Promise.reject = function (value) {
	  return new Promise(function (resolve, reject) {
	    reject(value);
	  });
	};
	
	Promise.race = function (values) {
	  return new Promise(function (resolve, reject) {
	    values.forEach(function(value){
	      Promise.resolve(value).then(resolve, reject);
	    });
	  });
	};
	
	/* Prototype Methods */
	
	Promise.prototype['catch'] = function (onRejected) {
	  return this.then(null, onRejected);
	};


/***/ },
/* 539 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Promise = __webpack_require__(280);
	
	var DEFAULT_WHITELIST = [
	  ReferenceError,
	  TypeError,
	  RangeError
	];
	
	var enabled = false;
	exports.disable = disable;
	function disable() {
	  enabled = false;
	  Promise._10 = null;
	  Promise._97 = null;
	}
	
	exports.enable = enable;
	function enable(options) {
	  options = options || {};
	  if (enabled) disable();
	  enabled = true;
	  var id = 0;
	  var displayId = 0;
	  var rejections = {};
	  Promise._10 = function (promise) {
	    if (
	      promise._81 === 2 && // IS REJECTED
	      rejections[promise._72]
	    ) {
	      if (rejections[promise._72].logged) {
	        onHandled(promise._72);
	      } else {
	        clearTimeout(rejections[promise._72].timeout);
	      }
	      delete rejections[promise._72];
	    }
	  };
	  Promise._97 = function (promise, err) {
	    if (promise._45 === 0) { // not yet handled
	      promise._72 = id++;
	      rejections[promise._72] = {
	        displayId: null,
	        error: err,
	        timeout: setTimeout(
	          onUnhandled.bind(null, promise._72),
	          // For reference errors and type errors, this almost always
	          // means the programmer made a mistake, so log them after just
	          // 100ms
	          // otherwise, wait 2 seconds to see if they get handled
	          matchWhitelist(err, DEFAULT_WHITELIST)
	            ? 100
	            : 2000
	        ),
	        logged: false
	      };
	    }
	  };
	  function onUnhandled(id) {
	    if (
	      options.allRejections ||
	      matchWhitelist(
	        rejections[id].error,
	        options.whitelist || DEFAULT_WHITELIST
	      )
	    ) {
	      rejections[id].displayId = displayId++;
	      if (options.onUnhandled) {
	        rejections[id].logged = true;
	        options.onUnhandled(
	          rejections[id].displayId,
	          rejections[id].error
	        );
	      } else {
	        rejections[id].logged = true;
	        logError(
	          rejections[id].displayId,
	          rejections[id].error
	        );
	      }
	    }
	  }
	  function onHandled(id) {
	    if (rejections[id].logged) {
	      if (options.onHandled) {
	        options.onHandled(rejections[id].displayId, rejections[id].error);
	      } else if (!rejections[id].onUnhandled) {
	        console.warn(
	          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'
	        );
	        console.warn(
	          '  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id ' +
	          rejections[id].displayId + '.'
	        );
	      }
	    }
	  }
	}
	
	function logError(id, error) {
	  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');
	  var errStr = (error && (error.stack || error)) + '';
	  errStr.split('\n').forEach(function (line) {
	    console.warn('  ' + line);
	  });
	}
	
	function matchWhitelist(error, list) {
	  return list.some(function (cls) {
	    return error instanceof cls;
	  });
	}

/***/ },
/* 540 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(24);
	var invariant = __webpack_require__(8);
	var ReactPropTypesSecret = __webpack_require__(541);
	
	module.exports = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    invariant(
	      false,
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	  };
	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  };
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,
	
	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim,
	    exact: getShim
	  };
	
	  ReactPropTypes.checkPropTypes = emptyFunction;
	  ReactPropTypes.PropTypes = ReactPropTypes;
	
	  return ReactPropTypes;
	};


/***/ },
/* 541 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;


/***/ },
/* 542 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strictUriEncode = __webpack_require__(659);
	var objectAssign = __webpack_require__(14);
	
	function encoderForArrayFormat(opts) {
		switch (opts.arrayFormat) {
			case 'index':
				return function (key, value, index) {
					return value === null ? [
						encode(key, opts),
						'[',
						index,
						']'
					].join('') : [
						encode(key, opts),
						'[',
						encode(index, opts),
						']=',
						encode(value, opts)
					].join('');
				};
	
			case 'bracket':
				return function (key, value) {
					return value === null ? encode(key, opts) : [
						encode(key, opts),
						'[]=',
						encode(value, opts)
					].join('');
				};
	
			default:
				return function (key, value) {
					return value === null ? encode(key, opts) : [
						encode(key, opts),
						'=',
						encode(value, opts)
					].join('');
				};
		}
	}
	
	function parserForArrayFormat(opts) {
		var result;
	
		switch (opts.arrayFormat) {
			case 'index':
				return function (key, value, accumulator) {
					result = /\[(\d*)\]$/.exec(key);
	
					key = key.replace(/\[\d*\]$/, '');
	
					if (!result) {
						accumulator[key] = value;
						return;
					}
	
					if (accumulator[key] === undefined) {
						accumulator[key] = {};
					}
	
					accumulator[key][result[1]] = value;
				};
	
			case 'bracket':
				return function (key, value, accumulator) {
					result = /(\[\])$/.exec(key);
					key = key.replace(/\[\]$/, '');
	
					if (!result) {
						accumulator[key] = value;
						return;
					} else if (accumulator[key] === undefined) {
						accumulator[key] = [value];
						return;
					}
	
					accumulator[key] = [].concat(accumulator[key], value);
				};
	
			default:
				return function (key, value, accumulator) {
					if (accumulator[key] === undefined) {
						accumulator[key] = value;
						return;
					}
	
					accumulator[key] = [].concat(accumulator[key], value);
				};
		}
	}
	
	function encode(value, opts) {
		if (opts.encode) {
			return opts.strict ? strictUriEncode(value) : encodeURIComponent(value);
		}
	
		return value;
	}
	
	function keysSorter(input) {
		if (Array.isArray(input)) {
			return input.sort();
		} else if (typeof input === 'object') {
			return keysSorter(Object.keys(input)).sort(function (a, b) {
				return Number(a) - Number(b);
			}).map(function (key) {
				return input[key];
			});
		}
	
		return input;
	}
	
	exports.extract = function (str) {
		return str.split('?')[1] || '';
	};
	
	exports.parse = function (str, opts) {
		opts = objectAssign({arrayFormat: 'none'}, opts);
	
		var formatter = parserForArrayFormat(opts);
	
		// Create an object with no prototype
		// https://github.com/sindresorhus/query-string/issues/47
		var ret = Object.create(null);
	
		if (typeof str !== 'string') {
			return ret;
		}
	
		str = str.trim().replace(/^(\?|#|&)/, '');
	
		if (!str) {
			return ret;
		}
	
		str.split('&').forEach(function (param) {
			var parts = param.replace(/\+/g, ' ').split('=');
			// Firefox (pre 40) decodes `%3D` to `=`
			// https://github.com/sindresorhus/query-string/pull/37
			var key = parts.shift();
			var val = parts.length > 0 ? parts.join('=') : undefined;
	
			// missing `=` should be `null`:
			// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
			val = val === undefined ? null : decodeURIComponent(val);
	
			formatter(decodeURIComponent(key), val, ret);
		});
	
		return Object.keys(ret).sort().reduce(function (result, key) {
			var val = ret[key];
			if (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {
				// Sort object keys, not values
				result[key] = keysSorter(val);
			} else {
				result[key] = val;
			}
	
			return result;
		}, Object.create(null));
	};
	
	exports.stringify = function (obj, opts) {
		var defaults = {
			encode: true,
			strict: true,
			arrayFormat: 'none'
		};
	
		opts = objectAssign(defaults, opts);
	
		var formatter = encoderForArrayFormat(opts);
	
		return obj ? Object.keys(obj).sort().map(function (key) {
			var val = obj[key];
	
			if (val === undefined) {
				return '';
			}
	
			if (val === null) {
				return encode(key, opts);
			}
	
			if (Array.isArray(val)) {
				var result = [];
	
				val.slice().forEach(function (val2) {
					if (val2 === undefined) {
						return;
					}
	
					result.push(formatter(key, val2, result.length));
				});
	
				return result.join('&');
			}
	
			return encode(key, opts) + '=' + encode(val, opts);
		}).filter(function (x) {
			return x.length > 0;
		}).join('&') : '';
	};


/***/ },
/* 543 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _propTypes=__webpack_require__(281);var _propTypes2=_interopRequireDefault(_propTypes);var _react=__webpack_require__(2);var _react2=_interopRequireDefault(_react);var _reactDom=__webpack_require__(74);var _reactDom2=_interopRequireDefault(_reactDom);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var isTouchDevice=!!(typeof window!=='undefined'&&typeof navigator!=='undefined'&&('ontouchstart'in window||navigator.msMaxTouchPoints>0));var draggableEvents={touch:{react:{down:'onTouchStart',mouseDown:'onMouseDown',drag:'onTouchMove',drop:'onTouchEnd',move:'onTouchMove',mouseMove:'onMouseMove',up:'onTouchEnd',mouseUp:'onMouseUp'},native:{down:'touchstart',mouseDown:'mousedown',drag:'touchmove',drop:'touchend',move:'touchmove',mouseMove:'mousemove',up:'touchend',mouseUp:'mouseup'}},desktop:{react:{down:'onMouseDown',drag:'onDragOver',drop:'onDrop',move:'onMouseMove',up:'onMouseUp'},native:{down:'mousedown',drag:'dragStart',drop:'drop',move:'mousemove',up:'mouseup'}}};var deviceEvents=isTouchDevice?draggableEvents.touch:draggableEvents.desktop;var drawRoundedRect=function drawRoundedRect(context,x,y,width,height,borderRadius){if(borderRadius===0){context.rect(x,y,width,height)}else{var widthMinusRad=width-borderRadius;var heightMinusRad=height-borderRadius;context.translate(x,y);context.arc(borderRadius,borderRadius,borderRadius,Math.PI,Math.PI*1.5);context.lineTo(widthMinusRad,0);context.arc(widthMinusRad,borderRadius,borderRadius,Math.PI*1.5,Math.PI*2);context.lineTo(width,heightMinusRad);context.arc(widthMinusRad,heightMinusRad,borderRadius,Math.PI*2,Math.PI*0.5);context.lineTo(borderRadius,height);context.arc(borderRadius,heightMinusRad,borderRadius,Math.PI*0.5,Math.PI);context.translate(-x,-y)}};var AvatarEditor=function(_React$Component){_inherits(AvatarEditor,_React$Component);function AvatarEditor(props){_classCallCheck(this,AvatarEditor);var _this=_possibleConstructorReturn(this,(AvatarEditor.__proto__||Object.getPrototypeOf(AvatarEditor)).call(this,props));_this.state={drag:false,my:null,mx:null,image:{x:0.5,y:0.5}};_this.setCanvas=_this.setCanvas.bind(_this);_this.handleMouseMove=_this.handleMouseMove.bind(_this);_this.handleMouseDown=_this.handleMouseDown.bind(_this);_this.handleMouseUp=_this.handleMouseUp.bind(_this);_this.handleDragOver=_this.handleDragOver.bind(_this);_this.handleDrop=_this.handleDrop.bind(_this);return _this}_createClass(AvatarEditor,[{key:'isVertical',value:function isVertical(){return this.props.rotate%180!==0}},{key:'getDimensions',value:function getDimensions(){var _props=this.props,width=_props.width,height=_props.height,rotate=_props.rotate,border=_props.border;var canvas={};var canvasWidth=width+border*2;var canvasHeight=height+border*2;if(this.isVertical()){canvas.width=canvasHeight;canvas.height=canvasWidth}else{canvas.width=canvasWidth;canvas.height=canvasHeight}return{canvas:canvas,rotate:rotate,width:width,height:height,border:border}}},{key:'getImage',value:function getImage(){var cropRect=this.getCroppingRect();var image=this.state.image;cropRect.x*=image.resource.width;cropRect.y*=image.resource.height;cropRect.width*=image.resource.width;cropRect.height*=image.resource.height;var canvas=document.createElement('canvas');if(this.isVertical()){canvas.width=cropRect.height;canvas.height=cropRect.width}else{canvas.width=cropRect.width;canvas.height=cropRect.height}var context=canvas.getContext('2d');context.translate(canvas.width/2,canvas.height/2);context.rotate(this.props.rotate*Math.PI/180);context.translate(-(canvas.width/2),-(canvas.height/2));if(this.isVertical()){context.translate((canvas.width-canvas.height)/2,(canvas.height-canvas.width)/2)}context.drawImage(image.resource,-cropRect.x,-cropRect.y);return canvas}},{key:'getImageScaledToCanvas',value:function getImageScaledToCanvas(){var _getDimensions=this.getDimensions(),width=_getDimensions.width,height=_getDimensions.height;var canvas=document.createElement('canvas');if(this.isVertical()){canvas.width=height;canvas.height=width}else{canvas.width=width;canvas.height=height}this.paintImage(canvas.getContext('2d'),this.state.image,0);return canvas}},{key:'getXScale',value:function getXScale(){var canvasAspect=this.props.width/this.props.height;var imageAspect=this.state.image.width/this.state.image.height;return Math.min(1,canvasAspect/imageAspect)}},{key:'getYScale',value:function getYScale(){var canvasAspect=this.props.height/this.props.width;var imageAspect=this.state.image.height/this.state.image.width;return Math.min(1,canvasAspect/imageAspect)}},{key:'getCroppingRect',value:function getCroppingRect(){var position=this.props.position||{x:this.state.image.x,y:this.state.image.y};var width=1/this.props.scale*this.getXScale();var height=1/this.props.scale*this.getYScale();var croppingRect={x:position.x-width/2,y:position.y-height/2,width:width,height:height};var xMin=0;var xMax=1-croppingRect.width;var yMin=0;var yMax=1-croppingRect.height;var isLargerThanImage=width>1||height>1;if(isLargerThanImage){xMin=-croppingRect.width;xMax=1;yMin=-croppingRect.height;yMax=1}return _extends({},croppingRect,{x:Math.max(xMin,Math.min(croppingRect.x,xMax)),y:Math.max(yMin,Math.min(croppingRect.y,yMax))})}},{key:'isDataURL',value:function isDataURL(str){if(str===null){return false}var regex=/^\s*data:([a-z]+\/[a-z]+(;[a-z-]+=[a-z-]+)?)?(;base64)?,[a-z0-9!$&',()*+;=\-._~:@/?%\s]*\s*$/i;return!!str.match(regex)}},{key:'loadImage',value:function loadImage(imageURL){var imageObj=new Image;imageObj.onload=this.handleImageReady.bind(this,imageObj);imageObj.onerror=this.props.onLoadFailure;if(!this.isDataURL(imageURL)&&this.props.crossOrigin)imageObj.crossOrigin=this.props.crossOrigin;imageObj.src=imageURL}},{key:'componentDidMount',value:function componentDidMount(){var context=_reactDom2.default.findDOMNode(this.canvas).getContext('2d');if(this.props.image){this.loadImage(this.props.image)}this.paint(context);if(document){var nativeEvents=deviceEvents.native;document.addEventListener(nativeEvents.move,this.handleMouseMove,false);document.addEventListener(nativeEvents.up,this.handleMouseUp,false);if(isTouchDevice){document.addEventListener(nativeEvents.mouseMove,this.handleMouseMove,false);document.addEventListener(nativeEvents.mouseUp,this.handleMouseUp,false)}}}},{key:'componentWillUnmount',value:function componentWillUnmount(){if(document){var nativeEvents=deviceEvents.native;document.removeEventListener(nativeEvents.move,this.handleMouseMove,false);document.removeEventListener(nativeEvents.up,this.handleMouseUp,false);if(isTouchDevice){document.removeEventListener(nativeEvents.mouseMove,this.handleMouseMove,false);document.removeEventListener(nativeEvents.mouseUp,this.handleMouseUp,false)}}}},{key:'componentDidUpdate',value:function componentDidUpdate(prevProps,prevState){var context=_reactDom2.default.findDOMNode(this.canvas).getContext('2d');context.clearRect(0,0,this.getDimensions().canvas.width,this.getDimensions().canvas.height);this.paint(context);this.paintImage(context,this.state.image,this.props.border);if(prevProps.image!==this.props.image||prevProps.width!==this.props.width||prevProps.height!==this.props.height||prevProps.position!==this.props.position||prevProps.scale!==this.props.scale||prevProps.rotate!==this.props.rotate||prevState.my!==this.state.my||prevState.mx!==this.state.mx||prevState.image.x!==this.state.image.x||prevState.image.y!==this.state.image.y){this.props.onImageChange()}}},{key:'handleImageReady',value:function handleImageReady(image){var imageState=this.getInitialSize(image.width,image.height);imageState.resource=image;imageState.x=0.5;imageState.y=0.5;this.setState({drag:false,image:imageState},this.props.onImageReady);this.props.onLoadSuccess(imageState)}},{key:'getInitialSize',value:function getInitialSize(width,height){var newHeight=void 0;var newWidth=void 0;var dimensions=this.getDimensions();var canvasRatio=dimensions.height/dimensions.width;var imageRatio=height/width;if(canvasRatio>imageRatio){newHeight=this.getDimensions().height;newWidth=width*(newHeight/height)}else{newWidth=this.getDimensions().width;newHeight=height*(newWidth/width)}return{height:newHeight,width:newWidth}}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(newProps){if(newProps.image&&this.props.image!==newProps.image||this.props.width!==newProps.width||this.props.height!==newProps.height){this.loadImage(newProps.image)}}},{key:'paintImage',value:function paintImage(context,image,border){if(image.resource){var position=this.calculatePosition(image,border);context.save();context.translate(context.canvas.width/2,context.canvas.height/2);context.rotate(this.props.rotate*Math.PI/180);context.translate(-(context.canvas.width/2),-(context.canvas.height/2));if(this.isVertical()){context.translate((context.canvas.width-context.canvas.height)/2,(context.canvas.height-context.canvas.width)/2)}context.globalCompositeOperation='destination-over';context.drawImage(image.resource,position.x,position.y,position.width,position.height);context.restore()}}},{key:'calculatePosition',value:function calculatePosition(image,border){image=image||this.state.image;var croppingRect=this.getCroppingRect();var width=image.width*this.props.scale;var height=image.height*this.props.scale;var x=border-croppingRect.x*width;var y=border-croppingRect.y*height;return{x:x,y:y,height:height,width:width}}},{key:'paint',value:function paint(context){context.save();context.translate(0,0);context.fillStyle='rgba('+this.props.color.slice(0,4).join(',')+')';var borderRadius=this.props.borderRadius;var dimensions=this.getDimensions();var borderSize=dimensions.border;var height=dimensions.canvas.height;var width=dimensions.canvas.width;borderRadius=Math.max(borderRadius,0);borderRadius=Math.min(borderRadius,width/2-borderSize,height/2-borderSize);context.beginPath();drawRoundedRect(context,borderSize,borderSize,width-borderSize*2,height-borderSize*2,borderRadius);context.rect(width,0,-width,height);context.fill('evenodd');context.restore()}},{key:'handleMouseDown',value:function handleMouseDown(e){e=e||window.event;e.preventDefault();this.setState({drag:true,mx:null,my:null})}},{key:'handleMouseUp',value:function handleMouseUp(){if(this.state.drag){this.setState({drag:false});this.props.onMouseUp()}}},{key:'handleMouseMove',value:function handleMouseMove(e){e=e||window.event;if(this.state.drag===false){return}var mousePositionX=e.targetTouches?e.targetTouches[0].pageX:e.clientX;var mousePositionY=e.targetTouches?e.targetTouches[0].pageY:e.clientY;var newState={mx:mousePositionX,my:mousePositionY};var rotate=this.props.rotate;rotate%=360;rotate=rotate<0?rotate+360:rotate;rotate-=rotate%90;if(this.state.mx&&this.state.my){var mx=this.state.mx-mousePositionX;var my=this.state.my-mousePositionY;var width=this.state.image.width*this.props.scale;var height=this.state.image.height*this.props.scale;var _getCroppingRect=this.getCroppingRect(),lastX=_getCroppingRect.x,lastY=_getCroppingRect.y;lastX*=width;lastY*=height;var toRadians=function toRadians(degree){return degree*(Math.PI/180)};var cos=Math.cos(toRadians(rotate));var sin=Math.sin(toRadians(rotate));var x=lastX+mx*cos+my*sin;var y=lastY+-mx*sin+my*cos;var relativeWidth=1/this.props.scale*this.getXScale();var relativeHeight=1/this.props.scale*this.getYScale();var position={x:x/width+relativeWidth/2,y:y/height+relativeHeight/2};this.props.onPositionChange(position);newState.image=_extends({},this.state.image,position)}this.setState(newState);this.props.onMouseMove()}},{key:'handleDragOver',value:function handleDragOver(e){e=e||window.event;e.preventDefault()}},{key:'handleDrop',value:function handleDrop(e){var _this2=this;e=e||window.event;e.stopPropagation();e.preventDefault();if(e.dataTransfer&&e.dataTransfer.files.length){this.props.onDropFile(e);var reader=new FileReader;var file=e.dataTransfer.files[0];reader.onload=function(e){return _this2.loadImage(e.target.result)};reader.readAsDataURL(file)}}},{key:'setCanvas',value:function setCanvas(canvas){this.canvas=canvas}},{key:'render',value:function render(){var defaultStyle={cursor:this.state.drag?'grabbing':'grab'};var attributes={width:this.getDimensions().canvas.width,height:this.getDimensions().canvas.height,style:_extends({},defaultStyle,this.props.style)};attributes[deviceEvents.react.down]=this.handleMouseDown;attributes[deviceEvents.react.drag]=this.handleDragOver;attributes[deviceEvents.react.drop]=this.handleDrop;if(isTouchDevice)attributes[deviceEvents.react.mouseDown]=this.handleMouseDown;return _react2.default.createElement('canvas',_extends({ref:this.setCanvas},attributes))}}]);return AvatarEditor}(_react2.default.Component);AvatarEditor.propTypes={scale:_propTypes2.default.number,rotate:_propTypes2.default.number,image:_propTypes2.default.string,border:_propTypes2.default.number,borderRadius:_propTypes2.default.number,width:_propTypes2.default.number,height:_propTypes2.default.number,position:_propTypes2.default.shape({x:_propTypes2.default.number,y:_propTypes2.default.number}),color:_propTypes2.default.arrayOf(_propTypes2.default.number),style:_propTypes2.default.object,crossOrigin:_propTypes2.default.oneOf(['','anonymous','use-credentials']),onDropFile:_propTypes2.default.func,onLoadFailure:_propTypes2.default.func,onLoadSuccess:_propTypes2.default.func,onImageReady:_propTypes2.default.func,onImageChange:_propTypes2.default.func,onMouseUp:_propTypes2.default.func,onMouseMove:_propTypes2.default.func,onPositionChange:_propTypes2.default.func};AvatarEditor.defaultProps={scale:1,rotate:0,border:25,borderRadius:0,width:200,height:200,color:[0,0,0,0.5],style:{},onDropFile:function onDropFile(){},onLoadFailure:function onLoadFailure(){},onLoadSuccess:function onLoadSuccess(){},onImageReady:function onImageReady(){},onImageChange:function onImageChange(){},onMouseUp:function onMouseUp(){},onMouseMove:function onMouseMove(){},onPositionChange:function onPositionChange(){}};exports.default=AvatarEditor;

/***/ },
/* 544 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ARIADOMPropertyConfig = {
	  Properties: {
	    // Global States and Properties
	    'aria-current': 0, // state
	    'aria-details': 0,
	    'aria-disabled': 0, // state
	    'aria-hidden': 0, // state
	    'aria-invalid': 0, // state
	    'aria-keyshortcuts': 0,
	    'aria-label': 0,
	    'aria-roledescription': 0,
	    // Widget Attributes
	    'aria-autocomplete': 0,
	    'aria-checked': 0,
	    'aria-expanded': 0,
	    'aria-haspopup': 0,
	    'aria-level': 0,
	    'aria-modal': 0,
	    'aria-multiline': 0,
	    'aria-multiselectable': 0,
	    'aria-orientation': 0,
	    'aria-placeholder': 0,
	    'aria-pressed': 0,
	    'aria-readonly': 0,
	    'aria-required': 0,
	    'aria-selected': 0,
	    'aria-sort': 0,
	    'aria-valuemax': 0,
	    'aria-valuemin': 0,
	    'aria-valuenow': 0,
	    'aria-valuetext': 0,
	    // Live Region Attributes
	    'aria-atomic': 0,
	    'aria-busy': 0,
	    'aria-live': 0,
	    'aria-relevant': 0,
	    // Drag-and-Drop Attributes
	    'aria-dropeffect': 0,
	    'aria-grabbed': 0,
	    // Relationship Attributes
	    'aria-activedescendant': 0,
	    'aria-colcount': 0,
	    'aria-colindex': 0,
	    'aria-colspan': 0,
	    'aria-controls': 0,
	    'aria-describedby': 0,
	    'aria-errormessage': 0,
	    'aria-flowto': 0,
	    'aria-labelledby': 0,
	    'aria-owns': 0,
	    'aria-posinset': 0,
	    'aria-rowcount': 0,
	    'aria-rowindex': 0,
	    'aria-rowspan': 0,
	    'aria-setsize': 0
	  },
	  DOMAttributeNames: {},
	  DOMPropertyNames: {}
	};
	
	module.exports = ARIADOMPropertyConfig;

/***/ },
/* 545 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(15);
	
	var focusNode = __webpack_require__(152);
	
	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ },
/* 546 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(59);
	var ExecutionEnvironment = __webpack_require__(17);
	var FallbackCompositionState = __webpack_require__(552);
	var SyntheticCompositionEvent = __webpack_require__(589);
	var SyntheticInputEvent = __webpack_require__(592);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: 'onBeforeInput',
	      captured: 'onBeforeInputCapture'
	    },
	    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionEnd',
	      captured: 'onCompositionEndCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionStart',
	      captured: 'onCompositionStartCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionUpdate',
	      captured: 'onCompositionUpdateCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case 'topCompositionStart':
	      return eventTypes.compositionStart;
	    case 'topCompositionEnd':
	      return eventTypes.compositionEnd;
	    case 'topCompositionUpdate':
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topKeyUp':
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case 'topKeyDown':
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case 'topKeyPress':
	    case 'topMouseDown':
	    case 'topBlur':
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topCompositionEnd':
	      return getDataFromCustomEvent(nativeEvent);
	    case 'topKeyPress':
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case 'topTextInput':
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (currentComposition) {
	    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case 'topPaste':
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case 'topKeyPress':
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case 'topCompositionEnd':
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ },
/* 547 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(282);
	var ExecutionEnvironment = __webpack_require__(17);
	var ReactInstrumentation = __webpack_require__(25);
	
	var camelizeStyleName = __webpack_require__(507);
	var dangerousStyleValue = __webpack_require__(598);
	var hyphenateStyleName = __webpack_require__(514);
	var memoizeStringOnly = __webpack_require__(517);
	var warning = __webpack_require__(11);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (false) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	
	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };
	
	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }
	
	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };
	
	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }
	
	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (false) {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: component._debugID,
	        type: 'update styles',
	        payload: styles
	      });
	    }
	
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (false) {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = CSSPropertyOperations;

/***/ },
/* 548 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(58);
	var EventPropagators = __webpack_require__(59);
	var ExecutionEnvironment = __webpack_require__(17);
	var ReactDOMComponentTree = __webpack_require__(15);
	var ReactUpdates = __webpack_require__(26);
	var SyntheticEvent = __webpack_require__(27);
	
	var getEventTarget = __webpack_require__(114);
	var isEventSupported = __webpack_require__(115);
	var isTextInputElement = __webpack_require__(299);
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: 'onChange',
	      captured: 'onChangeCapture'
	    },
	    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}
	
	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topChange') {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
	}
	
	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}
	
	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	
	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }
	
	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topInput') {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}
	
	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topClick') {
	    return targetInst;
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }
	
	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

/***/ },
/* 549 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var DOMLazyTree = __webpack_require__(43);
	var ExecutionEnvironment = __webpack_require__(17);
	
	var createNodesFromMarkup = __webpack_require__(510);
	var emptyFunction = __webpack_require__(24);
	var invariant = __webpack_require__(8);
	
	var Danger = {
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
	
	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	
	};
	
	module.exports = Danger;

/***/ },
/* 550 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	
	var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];
	
	module.exports = DefaultEventPluginOrder;

/***/ },
/* 551 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(59);
	var ReactDOMComponentTree = __webpack_require__(15);
	var SyntheticMouseEvent = __webpack_require__(76);
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: 'onMouseEnter',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  },
	  mouseLeave: {
	    registrationName: 'onMouseLeave',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  }
	};
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    if (topLevelType === 'topMouseOut') {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
	
	    return [leave, enter];
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 552 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(14);
	
	var PooledClass = __webpack_require__(36);
	
	var getTextContentAccessor = __webpack_require__(297);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ },
/* 553 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(44);
	
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    // specifies target context for links with `preload` type
	    as: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    playsInline: HAS_BOOLEAN_VALUE,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,
	
	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 554 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(45);
	
	var instantiateReactComponent = __webpack_require__(298);
	var KeyEscapeUtils = __webpack_require__(106);
	var shouldUpdateReactComponent = __webpack_require__(116);
	var traverseAllChildren = __webpack_require__(301);
	var warning = __webpack_require__(11);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && ({"NODE_ENV":"production","PUBLIC_URL":""}) && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(319);
	}
	
	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (false) {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
	    }
	    if (!keyUnique) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	
	    if (false) {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
	  ) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(279)))

/***/ },
/* 555 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(102);
	var ReactDOMIDOperations = __webpack_require__(562);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 556 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(14);
	
	var React = __webpack_require__(48);
	var ReactComponentEnvironment = __webpack_require__(108);
	var ReactCurrentOwner = __webpack_require__(28);
	var ReactErrorUtils = __webpack_require__(109);
	var ReactInstanceMap = __webpack_require__(60);
	var ReactInstrumentation = __webpack_require__(25);
	var ReactNodeTypes = __webpack_require__(292);
	var ReactReconciler = __webpack_require__(45);
	
	if (false) {
	  var checkReactTypeSpec = require('./checkReactTypeSpec');
	}
	
	var emptyObject = __webpack_require__(57);
	var invariant = __webpack_require__(8);
	var shallowEqual = __webpack_require__(93);
	var shouldUpdateReactComponent = __webpack_require__(116);
	var warning = __webpack_require__(11);
	
	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};
	
	function warnIfInvalidElement(Component, element) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}
	
	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}
	
	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}
	
	// Separated into a function to contain deoptimizations caused by try/finally.
	function measureLifeCyclePerf(fn, debugID, timerType) {
	  if (debugID === 0) {
	    // Top-level wrappers (see ReactMount) and empty components (see
	    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
	    // Both are implementation details that should go away in the future.
	    return fn();
	  }
	
	  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
	  try {
	    return fn();
	  } finally {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
	  }
	}
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponent = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;
	
	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	
	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;
	
	    if (false) {
	      this._warnedAboutRefsInRender = false;
	    }
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;
	
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    var updateQueue = transaction.getUpdateQueue();
	
	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;
	
	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || React.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }
	
	    if (false) {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }
	
	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';
	
	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (false) {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	
	    if (inst.componentDidMount) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(function () {
	            return inst.componentDidMount();
	          }, _this._debugID, 'componentDidMount');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }
	
	    return markup;
	  },
	
	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (false) {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },
	
	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	
	    if (doConstruct) {
	      if (false) {
	        return measureLifeCyclePerf(function () {
	          return new Component(publicProps, publicContext, updateQueue);
	        }, this._debugID, 'ctor');
	      } else {
	        return new Component(publicProps, publicContext, updateQueue);
	      }
	    }
	
	    // This can still be an instance in case of factory components
	    // but we'll count this as time spent rendering as the more common case.
	    if (false) {
	      return measureLifeCyclePerf(function () {
	        return Component(publicProps, publicContext, updateQueue);
	      }, this._debugID, 'render');
	    } else {
	      return Component(publicProps, publicContext, updateQueue);
	    }
	  },
	
	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();
	
	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);
	
	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },
	
	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	
	    var debugID = 0;
	    if (false) {
	      debugID = this._debugID;
	    }
	
	    if (inst.componentWillMount) {
	      if (false) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillMount();
	        }, debugID, 'componentWillMount');
	      } else {
	        inst.componentWillMount();
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;
	
	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);
	
	    if (false) {
	      if (debugID !== 0) {
	        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	      }
	    }
	
	    return markup;
	  },
	
	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        if (false) {
	          measureLifeCyclePerf(function () {
	            return inst.componentWillUnmount();
	          }, this._debugID, 'componentWillUnmount');
	        } else {
	          inst.componentWillUnmount();
	        }
	      }
	    }
	
	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (false) {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext;
	
	    if (inst.getChildContext) {
	      if (false) {
	        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	        try {
	          childContext = inst.getChildContext();
	        } finally {
	          ReactInstrumentation.debugTool.onEndProcessingChildContext();
	        }
	      } else {
	        childContext = inst.getChildContext();
	      }
	    }
	
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (false) {
	        this._checkContextTypes(Component.childContextTypes, childContext, 'childContext');
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    if (false) {
	      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	    }
	  },
	
	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    var willReceive = false;
	    var nextContext;
	
	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }
	
	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;
	
	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }
	
	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (false) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillReceiveProps(nextProps, nextContext);
	        }, this._debugID, 'componentWillReceiveProps');
	      } else {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;
	
	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (false) {
	          shouldUpdate = measureLifeCyclePerf(function () {
	            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	          }, this._debugID, 'shouldComponentUpdate');
	        } else {
	          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }
	
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }
	
	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var _this2 = this;
	
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      if (false) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillUpdate(nextProps, nextState, nextContext);
	        }, this._debugID, 'componentWillUpdate');
	      } else {
	        inst.componentWillUpdate(nextProps, nextState, nextContext);
	      }
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	
	    var debugID = 0;
	    if (false) {
	      debugID = this._debugID;
	    }
	
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);
	
	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;
	
	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);
	
	      if (false) {
	        if (debugID !== 0) {
	          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	        }
	      }
	
	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },
	
	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedElement;
	
	    if (false) {
	      renderedElement = measureLifeCyclePerf(function () {
	        return inst.render();
	      }, this._debugID, 'render');
	    } else {
	      renderedElement = inst.render();
	    }
	
	    if (false) {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedElement === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedElement = null;
	      }
	    }
	
	    return renderedElement;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedElement;
	    if (("production") !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    return renderedElement;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (false) {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	module.exports = ReactCompositeComponent;

/***/ },
/* 557 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(15);
	var ReactDefaultInjection = __webpack_require__(570);
	var ReactMount = __webpack_require__(291);
	var ReactReconciler = __webpack_require__(45);
	var ReactUpdates = __webpack_require__(26);
	var ReactVersion = __webpack_require__(583);
	
	var findDOMNode = __webpack_require__(599);
	var getHostComponentFromComposite = __webpack_require__(296);
	var renderSubtreeIntoContainer = __webpack_require__(607);
	var warning = __webpack_require__(11);
	
	ReactDefaultInjection.inject();
	
	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}
	
	if (false) {
	  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }
	
	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
	
	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
	
	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}
	
	if (false) {
	  var ReactInstrumentation = require('./ReactInstrumentation');
	  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');
	  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');
	  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');
	
	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
	}
	
	module.exports = ReactDOM;

/***/ },
/* 558 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(14);
	
	var AutoFocusUtils = __webpack_require__(545);
	var CSSPropertyOperations = __webpack_require__(547);
	var DOMLazyTree = __webpack_require__(43);
	var DOMNamespaces = __webpack_require__(103);
	var DOMProperty = __webpack_require__(44);
	var DOMPropertyOperations = __webpack_require__(284);
	var EventPluginHub = __webpack_require__(58);
	var EventPluginRegistry = __webpack_require__(104);
	var ReactBrowserEventEmitter = __webpack_require__(75);
	var ReactDOMComponentFlags = __webpack_require__(285);
	var ReactDOMComponentTree = __webpack_require__(15);
	var ReactDOMInput = __webpack_require__(563);
	var ReactDOMOption = __webpack_require__(564);
	var ReactDOMSelect = __webpack_require__(286);
	var ReactDOMTextarea = __webpack_require__(567);
	var ReactInstrumentation = __webpack_require__(25);
	var ReactMultiChild = __webpack_require__(576);
	var ReactServerRenderingTransaction = __webpack_require__(581);
	
	var emptyFunction = __webpack_require__(24);
	var escapeTextContentForBrowser = __webpack_require__(78);
	var invariant = __webpack_require__(8);
	var isEventSupported = __webpack_require__(115);
	var shallowEqual = __webpack_require__(93);
	var validateDOMNesting = __webpack_require__(117);
	var warning = __webpack_require__(11);
	
	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var STYLE = 'style';
	var HTML = '__html';
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};
	
	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}
	
	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (false) {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}
	
	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}
	
	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}
	
	var setAndValidateContentChildDev = emptyFunction;
	if (false) {
	  setAndValidateContentChildDev = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;
	
	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }
	
	    validateDOMNesting(null, String(content), this, this._ancestorInfo);
	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
	
	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
	      break;
	  }
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	var globalIdCounter = 1;
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (false) {
	    this._ancestorInfo = null;
	    setAndValidateContentChildDev.call(this, null);
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }
	
	    assertValidProps(this, props);
	
	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;
	
	    if (false) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, null, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (false) {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (false) {
	          setAndValidateContentChildDev.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      // TODO: Validate that text is allowed as a child of this node
	      if (contentToUse != null) {
	        // Avoid setting textContent when the text is empty. In IE11 setting
	        // textContent on a text area will cause the placeholder to not
	        // show within the textarea until it has been focused and blurred again.
	        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
	        if (contentToUse !== '') {
	          if (false) {
	            setAndValidateContentChildDev.call(this, contentToUse);
	          }
	          DOMLazyTree.queueText(lazyTree, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (false) {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (false) {
	          setAndValidateContentChildDev.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (false) {
	        setAndValidateContentChildDev.call(this, null);
	      }
	
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  getHostNode: function () {
	    return getNode(this);
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }
	
	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;
	
	    if (false) {
	      setAndValidateContentChildDev.call(this, null);
	    }
	  },
	
	  getPublicInstance: function () {
	    return getNode(this);
	  }
	
	};
	
	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;

/***/ },
/* 559 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var validateDOMNesting = __webpack_require__(117);
	
	var DOC_NODE_TYPE = 9;
	
	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (false) {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}
	
	module.exports = ReactDOMContainerInfo;

/***/ },
/* 560 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(14);
	
	var DOMLazyTree = __webpack_require__(43);
	var ReactDOMComponentTree = __webpack_require__(15);
	
	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});
	
	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 561 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: true,
	  useFiber: false
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 562 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(102);
	var ReactDOMComponentTree = __webpack_require__(15);
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};
	
	module.exports = ReactDOMIDOperations;

/***/ },
/* 563 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(14);
	
	var DOMPropertyOperations = __webpack_require__(284);
	var LinkedValueUtils = __webpack_require__(107);
	var ReactDOMComponentTree = __webpack_require__(15);
	var ReactUpdates = __webpack_require__(26);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}
	
	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	
	      var owner = inst._currentElement._owner;
	
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	
	    if (false) {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    if (false) {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;
	
	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        // In Chrome, assigning defaultValue to certain input types triggers input validation.
	        // For number inputs, the display value loses trailing decimal points. For email inputs,
	        // Chrome raises "The specified value <x> is not a valid email address".
	        //
	        // Here we check to see if the defaultValue has actually changed, avoiding these problems
	        // when the user is inputting text
	        //
	        // https://github.com/facebook/react/issues/7253
	        if (node.defaultValue !== '' + props.defaultValue) {
	          node.defaultValue = '' + props.defaultValue;
	        }
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.
	
	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }
	
	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;

/***/ },
/* 564 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(14);
	
	var React = __webpack_require__(48);
	var ReactDOMComponentTree = __webpack_require__(15);
	var ReactDOMSelect = __webpack_require__(286);
	
	var warning = __webpack_require__(11);
	var didWarnInvalidOptionChildren = false;
	
	function flattenChildren(children) {
	  var content = '';
	
	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });
	
	  return content;
	}
	
	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }
	
	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;
	
	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }
	
	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }
	
	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },
	
	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = flattenChildren(props.children);
	
	    if (content) {
	      hostProps.children = content;
	    }
	
	    return hostProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;

/***/ },
/* 565 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(17);
	
	var getNodeForCharacterOffset = __webpack_require__(604);
	var getTextContentAccessor = __webpack_require__(297);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ },
/* 566 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(14);
	
	var DOMChildrenOperations = __webpack_require__(102);
	var DOMLazyTree = __webpack_require__(43);
	var ReactDOMComponentTree = __webpack_require__(15);
	
	var escapeTextContentForBrowser = __webpack_require__(78);
	var invariant = __webpack_require__(8);
	var validateDOMNesting = __webpack_require__(117);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	
	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};
	
	_assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (false) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(null, this._stringText, this, parentInfo);
	      }
	    }
	
	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },
	
	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },
	
	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;

/***/ },
/* 567 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(14);
	
	var LinkedValueUtils = __webpack_require__(107);
	var ReactDOMComponentTree = __webpack_require__(15);
	var ReactUpdates = __webpack_require__(26);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, props, {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;
	
	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }
	
	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }
	
	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var textContent = node.textContent;
	
	    // Only set node.value if textContent is equal to the expected
	    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
	    // will populate textContent as well.
	    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
	    if (textContent === inst._wrapperState.initialValue) {
	      node.value = textContent;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;

/***/ },
/* 568 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }
	
	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }
	
	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }
	
	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}
	
	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	
	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}
	
	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
	
	  return inst._hostParent;
	}
	
	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], 'captured', arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], 'bubbled', arg);
	  }
	}
	
	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], 'bubbled', argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], 'captured', argTo);
	  }
	}
	
	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};

/***/ },
/* 569 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(14);
	
	var ReactUpdates = __webpack_require__(26);
	var Transaction = __webpack_require__(77);
	
	var emptyFunction = __webpack_require__(24);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      return callback(a, b, c, d, e);
	    } else {
	      return transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 570 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ARIADOMPropertyConfig = __webpack_require__(544);
	var BeforeInputEventPlugin = __webpack_require__(546);
	var ChangeEventPlugin = __webpack_require__(548);
	var DefaultEventPluginOrder = __webpack_require__(550);
	var EnterLeaveEventPlugin = __webpack_require__(551);
	var HTMLDOMPropertyConfig = __webpack_require__(553);
	var ReactComponentBrowserEnvironment = __webpack_require__(555);
	var ReactDOMComponent = __webpack_require__(558);
	var ReactDOMComponentTree = __webpack_require__(15);
	var ReactDOMEmptyComponent = __webpack_require__(560);
	var ReactDOMTreeTraversal = __webpack_require__(568);
	var ReactDOMTextComponent = __webpack_require__(566);
	var ReactDefaultBatchingStrategy = __webpack_require__(569);
	var ReactEventListener = __webpack_require__(573);
	var ReactInjection = __webpack_require__(574);
	var ReactReconcileTransaction = __webpack_require__(579);
	var SVGDOMPropertyConfig = __webpack_require__(584);
	var SelectEventPlugin = __webpack_require__(585);
	var SimpleEventPlugin = __webpack_require__(586);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}
	
	module.exports = {
	  inject: inject
	};

/***/ },
/* 571 */
320,
/* 572 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(58);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ },
/* 573 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(14);
	
	var EventListener = __webpack_require__(151);
	var ExecutionEnvironment = __webpack_require__(17);
	var PooledClass = __webpack_require__(36);
	var ReactDOMComponentTree = __webpack_require__(15);
	var ReactUpdates = __webpack_require__(26);
	
	var getEventTarget = __webpack_require__(114);
	var getUnboundedScrollPosition = __webpack_require__(512);
	
	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ },
/* 574 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(44);
	var EventPluginHub = __webpack_require__(58);
	var EventPluginUtils = __webpack_require__(105);
	var ReactComponentEnvironment = __webpack_require__(108);
	var ReactEmptyComponent = __webpack_require__(287);
	var ReactBrowserEventEmitter = __webpack_require__(75);
	var ReactHostComponent = __webpack_require__(289);
	var ReactUpdates = __webpack_require__(26);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ },
/* 575 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(597);
	
	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ },
/* 576 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactComponentEnvironment = __webpack_require__(108);
	var ReactInstanceMap = __webpack_require__(60);
	var ReactInstrumentation = __webpack_require__(25);
	
	var ReactCurrentOwner = __webpack_require__(28);
	var ReactReconciler = __webpack_require__(45);
	var ReactChildReconciler = __webpack_require__(554);
	
	var emptyFunction = __webpack_require__(24);
	var flattenChildren = __webpack_require__(600);
	var invariant = __webpack_require__(8);
	
	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'INSERT_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'MOVE_EXISTING',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'REMOVE_NODE',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'SET_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'TEXT_CONTENT',
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}
	
	var setChildrenForInstrumentation = emptyFunction;
	if (false) {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (false) {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (false) {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (false) {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	
	      if (false) {
	        setChildrenForInstrumentation.call(this, children);
	      }
	
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },
	
	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;
	
	      if (false) {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;

/***/ },
/* 577 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid owner.
	 * @final
	 */
	function isValidOwner(object) {
	  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	}
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;

/***/ },
/* 578 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;

/***/ },
/* 579 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(14);
	
	var CallbackQueue = __webpack_require__(283);
	var PooledClass = __webpack_require__(36);
	var ReactBrowserEventEmitter = __webpack_require__(75);
	var ReactInputSelection = __webpack_require__(290);
	var ReactInstrumentation = __webpack_require__(25);
	var Transaction = __webpack_require__(77);
	var ReactUpdateQueue = __webpack_require__(110);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },
	
	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },
	
	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;

/***/ },
/* 580 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(577);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevRef = null;
	  var prevOwner = null;
	  if (prevElement !== null && typeof prevElement === 'object') {
	    prevRef = prevElement.ref;
	    prevOwner = prevElement._owner;
	  }
	
	  var nextRef = null;
	  var nextOwner = null;
	  if (nextElement !== null && typeof nextElement === 'object') {
	    nextRef = nextElement.ref;
	    nextOwner = nextElement._owner;
	  }
	
	  return prevRef !== nextRef ||
	  // If owner changes but we have an unchanged function ref, don't update refs
	  typeof nextRef === 'string' && nextOwner !== prevOwner;
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ },
/* 581 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(14);
	
	var PooledClass = __webpack_require__(36);
	var Transaction = __webpack_require__(77);
	var ReactInstrumentation = __webpack_require__(25);
	var ReactServerUpdateQueue = __webpack_require__(582);
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];
	
	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	var noopCallbackQueue = {
	  enqueue: function () {}
	};
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},
	
	  checkpoint: function () {},
	
	  rollback: function () {}
	};
	
	_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 582 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ReactUpdateQueue = __webpack_require__(110);
	
	var warning = __webpack_require__(11);
	
	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */
	
	var ReactServerUpdateQueue = function () {
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);
	
	    this.transaction = transaction;
	  }
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	
	
	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };
	
	  return ReactServerUpdateQueue;
	}();
	
	module.exports = ReactServerUpdateQueue;

/***/ },
/* 583 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	module.exports = '15.4.2';

/***/ },
/* 584 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};
	
	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});
	
	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 585 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(59);
	var ExecutionEnvironment = __webpack_require__(17);
	var ReactDOMComponentTree = __webpack_require__(15);
	var ReactInputSelection = __webpack_require__(290);
	var SyntheticEvent = __webpack_require__(27);
	
	var getActiveElement = __webpack_require__(153);
	var isTextInputElement = __webpack_require__(299);
	var shallowEqual = __webpack_require__(93);
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: 'onSelect',
	      captured: 'onSelectCapture'
	    },
	    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
	  }
	};
	
	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case 'topFocus':
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case 'topBlur':
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case 'topMouseDown':
	        mouseDown = true;
	        break;
	      case 'topContextMenu':
	      case 'topMouseUp':
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case 'topSelectionChange':
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case 'topKeyDown':
	      case 'topKeyUp':
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === 'onSelect') {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ },
/* 586 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var EventListener = __webpack_require__(151);
	var EventPropagators = __webpack_require__(59);
	var ReactDOMComponentTree = __webpack_require__(15);
	var SyntheticAnimationEvent = __webpack_require__(587);
	var SyntheticClipboardEvent = __webpack_require__(588);
	var SyntheticEvent = __webpack_require__(27);
	var SyntheticFocusEvent = __webpack_require__(591);
	var SyntheticKeyboardEvent = __webpack_require__(593);
	var SyntheticMouseEvent = __webpack_require__(76);
	var SyntheticDragEvent = __webpack_require__(590);
	var SyntheticTouchEvent = __webpack_require__(594);
	var SyntheticTransitionEvent = __webpack_require__(595);
	var SyntheticUIEvent = __webpack_require__(61);
	var SyntheticWheelEvent = __webpack_require__(596);
	
	var emptyFunction = __webpack_require__(24);
	var getEventCharCode = __webpack_require__(112);
	var invariant = __webpack_require__(8);
	
	/**
	 * Turns
	 * ['abort', ...]
	 * into
	 * eventTypes = {
	 *   'abort': {
	 *     phasedRegistrationNames: {
	 *       bubbled: 'onAbort',
	 *       captured: 'onAbortCapture',
	 *     },
	 *     dependencies: ['topAbort'],
	 *   },
	 *   ...
	 * };
	 * topLevelEventsToDispatchConfig = {
	 *   'topAbort': { sameConfig }
	 * };
	 */
	var eventTypes = {};
	var topLevelEventsToDispatchConfig = {};
	['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
	  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
	  var onEvent = 'on' + capitalizedEvent;
	  var topEvent = 'top' + capitalizedEvent;
	
	  var type = {
	    phasedRegistrationNames: {
	      bubbled: onEvent,
	      captured: onEvent + 'Capture'
	    },
	    dependencies: [topEvent]
	  };
	  eventTypes[event] = type;
	  topLevelEventsToDispatchConfig[topEvent] = type;
	});
	
	var onClickListeners = {};
	
	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}
	
	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case 'topAbort':
	      case 'topCanPlay':
	      case 'topCanPlayThrough':
	      case 'topDurationChange':
	      case 'topEmptied':
	      case 'topEncrypted':
	      case 'topEnded':
	      case 'topError':
	      case 'topInput':
	      case 'topInvalid':
	      case 'topLoad':
	      case 'topLoadedData':
	      case 'topLoadedMetadata':
	      case 'topLoadStart':
	      case 'topPause':
	      case 'topPlay':
	      case 'topPlaying':
	      case 'topProgress':
	      case 'topRateChange':
	      case 'topReset':
	      case 'topSeeked':
	      case 'topSeeking':
	      case 'topStalled':
	      case 'topSubmit':
	      case 'topSuspend':
	      case 'topTimeUpdate':
	      case 'topVolumeChange':
	      case 'topWaiting':
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case 'topKeyPress':
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case 'topKeyDown':
	      case 'topKeyUp':
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case 'topBlur':
	      case 'topFocus':
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case 'topClick':
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case 'topDoubleClick':
	      case 'topMouseDown':
	      case 'topMouseMove':
	      case 'topMouseUp':
	      // TODO: Disabled elements should not respond to mouse events
	      /* falls through */
	      case 'topMouseOut':
	      case 'topMouseOver':
	      case 'topContextMenu':
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case 'topDrag':
	      case 'topDragEnd':
	      case 'topDragEnter':
	      case 'topDragExit':
	      case 'topDragLeave':
	      case 'topDragOver':
	      case 'topDragStart':
	      case 'topDrop':
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case 'topTouchCancel':
	      case 'topTouchEnd':
	      case 'topTouchMove':
	      case 'topTouchStart':
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case 'topAnimationEnd':
	      case 'topAnimationIteration':
	      case 'topAnimationStart':
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case 'topTransitionEnd':
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case 'topScroll':
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case 'topWheel':
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case 'topCopy':
	      case 'topCut':
	      case 'topPaste':
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;

/***/ },
/* 587 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(27);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
	
	module.exports = SyntheticAnimationEvent;

/***/ },
/* 588 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(27);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ },
/* 589 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(27);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ },
/* 590 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(76);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ },
/* 591 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(61);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ },
/* 592 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(27);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ },
/* 593 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(61);
	
	var getEventCharCode = __webpack_require__(112);
	var getEventKey = __webpack_require__(601);
	var getEventModifierState = __webpack_require__(113);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 594 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(61);
	
	var getEventModifierState = __webpack_require__(113);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ },
/* 595 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(27);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
	
	module.exports = SyntheticTransitionEvent;

/***/ },
/* 596 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(76);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ },
/* 597 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ },
/* 598 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(282);
	var warning = __webpack_require__(11);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    if (false) {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;

/***/ },
/* 599 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactCurrentOwner = __webpack_require__(28);
	var ReactDOMComponentTree = __webpack_require__(15);
	var ReactInstanceMap = __webpack_require__(60);
	
	var getHostComponentFromComposite = __webpack_require__(296);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (false) {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	
	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }
	
	  if (typeof componentOrElement.render === 'function') {
	     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}
	
	module.exports = findDOMNode;

/***/ },
/* 600 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var KeyEscapeUtils = __webpack_require__(106);
	var traverseAllChildren = __webpack_require__(301);
	var warning = __webpack_require__(11);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && ({"NODE_ENV":"production","PUBLIC_URL":""}) && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(319);
	}
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (false) {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	
	  if (false) {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}
	
	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(279)))

/***/ },
/* 601 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(112);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ },
/* 602 */
323,
/* 603 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var nextDebugID = 1;
	
	function getNextDebugID() {
	  return nextDebugID++;
	}
	
	module.exports = getNextDebugID;

/***/ },
/* 604 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ },
/* 605 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(17);
	
	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};
	
	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
	
	  return prefixes;
	}
	
	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};
	
	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};
	
	/**
	 * Element to check for prefixes on.
	 */
	var style = {};
	
	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;
	
	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }
	
	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}
	
	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }
	
	  var prefixMap = vendorPrefixes[eventName];
	
	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }
	
	  return '';
	}
	
	module.exports = getVendorPrefixedEventName;

/***/ },
/* 606 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(78);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 607 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactMount = __webpack_require__(291);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 608 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = undefined;
	
	var _react = __webpack_require__(2);
	
	var _PropTypes = __webpack_require__(304);
	
	var _warning = __webpack_require__(118);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var didWarnAboutReceivingStore = false;
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }
	  didWarnAboutReceivingStore = true;
	
	  (0, _warning2.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	}
	
	var Provider = function (_Component) {
	  _inherits(Provider, _Component);
	
	  Provider.prototype.getChildContext = function getChildContext() {
	    return { store: this.store, storeSubscription: null };
	  };
	
	  function Provider(props, context) {
	    _classCallCheck(this, Provider);
	
	    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
	
	    _this.store = props.store;
	    return _this;
	  }
	
	  Provider.prototype.render = function render() {
	    return _react.Children.only(this.props.children);
	  };
	
	  return Provider;
	}(_react.Component);
	
	exports.default = Provider;
	
	
	if (false) {
	  Provider.prototype.componentWillReceiveProps = function (nextProps) {
	    var store = this.store;
	    var nextStore = nextProps.store;
	
	
	    if (store !== nextStore) {
	      warnAboutReceivingStore();
	    }
	  };
	}
	
	Provider.propTypes = {
	  store: _PropTypes.storeShape.isRequired,
	  children: _react.PropTypes.element.isRequired
	};
	Provider.childContextTypes = {
	  store: _PropTypes.storeShape.isRequired,
	  storeSubscription: _PropTypes.subscriptionShape
	};
	Provider.displayName = 'Provider';

/***/ },
/* 609 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.createConnect = createConnect;
	
	var _connectAdvanced = __webpack_require__(302);
	
	var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);
	
	var _shallowEqual = __webpack_require__(616);
	
	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);
	
	var _mapDispatchToProps = __webpack_require__(610);
	
	var _mapDispatchToProps2 = _interopRequireDefault(_mapDispatchToProps);
	
	var _mapStateToProps = __webpack_require__(611);
	
	var _mapStateToProps2 = _interopRequireDefault(_mapStateToProps);
	
	var _mergeProps = __webpack_require__(612);
	
	var _mergeProps2 = _interopRequireDefault(_mergeProps);
	
	var _selectorFactory = __webpack_require__(613);
	
	var _selectorFactory2 = _interopRequireDefault(_selectorFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/*
	  connect is a facade over connectAdvanced. It turns its args into a compatible
	  selectorFactory, which has the signature:
	
	    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
	  
	  connect passes its args to connectAdvanced as options, which will in turn pass them to
	  selectorFactory each time a Connect component instance is instantiated or hot reloaded.
	
	  selectorFactory returns a final props selector from its mapStateToProps,
	  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
	  mergePropsFactories, and pure args.
	
	  The resulting final props selector is called by the Connect component instance whenever
	  it receives new props or store state.
	 */
	
	function match(arg, factories, name) {
	  for (var i = factories.length - 1; i >= 0; i--) {
	    var result = factories[i](arg);
	    if (result) return result;
	  }
	
	  return function (dispatch, options) {
	    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');
	  };
	}
	
	function strictEqual(a, b) {
	  return a === b;
	}
	
	// createConnect with default args builds the 'official' connect behavior. Calling it with
	// different options opens up some testing and extensibility scenarios
	function createConnect() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref$connectHOC = _ref.connectHOC,
	      connectHOC = _ref$connectHOC === undefined ? _connectAdvanced2.default : _ref$connectHOC,
	      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
	      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? _mapStateToProps2.default : _ref$mapStateToPropsF,
	      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
	      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? _mapDispatchToProps2.default : _ref$mapDispatchToPro,
	      _ref$mergePropsFactor = _ref.mergePropsFactories,
	      mergePropsFactories = _ref$mergePropsFactor === undefined ? _mergeProps2.default : _ref$mergePropsFactor,
	      _ref$selectorFactory = _ref.selectorFactory,
	      selectorFactory = _ref$selectorFactory === undefined ? _selectorFactory2.default : _ref$selectorFactory;
	
	  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
	    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
	        _ref2$pure = _ref2.pure,
	        pure = _ref2$pure === undefined ? true : _ref2$pure,
	        _ref2$areStatesEqual = _ref2.areStatesEqual,
	        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,
	        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
	        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? _shallowEqual2.default : _ref2$areOwnPropsEqua,
	        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
	        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? _shallowEqual2.default : _ref2$areStatePropsEq,
	        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
	        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? _shallowEqual2.default : _ref2$areMergedPropsE,
	        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);
	
	    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
	    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
	    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
	
	    return connectHOC(selectorFactory, _extends({
	      // used in error messages
	      methodName: 'connect',
	
	      // used to compute Connect's displayName from the wrapped component's displayName.
	      getDisplayName: function getDisplayName(name) {
	        return 'Connect(' + name + ')';
	      },
	
	      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
	      shouldHandleStateChanges: Boolean(mapStateToProps),
	
	      // passed through to selectorFactory
	      initMapStateToProps: initMapStateToProps,
	      initMapDispatchToProps: initMapDispatchToProps,
	      initMergeProps: initMergeProps,
	      pure: pure,
	      areStatesEqual: areStatesEqual,
	      areOwnPropsEqual: areOwnPropsEqual,
	      areStatePropsEqual: areStatePropsEqual,
	      areMergedPropsEqual: areMergedPropsEqual
	
	    }, extraOptions));
	  };
	}
	
	exports.default = createConnect();

/***/ },
/* 610 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
	exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
	exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;
	
	var _redux = __webpack_require__(6);
	
	var _wrapMapToProps = __webpack_require__(303);
	
	function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
	  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
	}
	
	function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
	  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return { dispatch: dispatch };
	  }) : undefined;
	}
	
	function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
	  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);
	  }) : undefined;
	}
	
	exports.default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];

/***/ },
/* 611 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;
	exports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;
	
	var _wrapMapToProps = __webpack_require__(303);
	
	function whenMapStateToPropsIsFunction(mapStateToProps) {
	  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
	}
	
	function whenMapStateToPropsIsMissing(mapStateToProps) {
	  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {
	    return {};
	  }) : undefined;
	}
	
	exports.default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];

/***/ },
/* 612 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.defaultMergeProps = defaultMergeProps;
	exports.wrapMergePropsFunc = wrapMergePropsFunc;
	exports.whenMergePropsIsFunction = whenMergePropsIsFunction;
	exports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;
	
	var _verifyPlainObject = __webpack_require__(305);
	
	var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function defaultMergeProps(stateProps, dispatchProps, ownProps) {
	  return _extends({}, ownProps, stateProps, dispatchProps);
	}
	
	function wrapMergePropsFunc(mergeProps) {
	  return function initMergePropsProxy(dispatch, _ref) {
	    var displayName = _ref.displayName,
	        pure = _ref.pure,
	        areMergedPropsEqual = _ref.areMergedPropsEqual;
	
	    var hasRunOnce = false;
	    var mergedProps = void 0;
	
	    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
	      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	
	      if (hasRunOnce) {
	        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
	      } else {
	        hasRunOnce = true;
	        mergedProps = nextMergedProps;
	
	        if (false) (0, _verifyPlainObject2.default)(mergedProps, displayName, 'mergeProps');
	      }
	
	      return mergedProps;
	    };
	  };
	}
	
	function whenMergePropsIsFunction(mergeProps) {
	  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
	}
	
	function whenMergePropsIsOmitted(mergeProps) {
	  return !mergeProps ? function () {
	    return defaultMergeProps;
	  } : undefined;
	}
	
	exports.default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];

/***/ },
/* 613 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;
	exports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;
	exports.default = finalPropsSelectorFactory;
	
	var _verifySubselectors = __webpack_require__(614);
	
	var _verifySubselectors2 = _interopRequireDefault(_verifySubselectors);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
	  return function impureFinalPropsSelector(state, ownProps) {
	    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
	  };
	}
	
	function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
	  var areStatesEqual = _ref.areStatesEqual,
	      areOwnPropsEqual = _ref.areOwnPropsEqual,
	      areStatePropsEqual = _ref.areStatePropsEqual;
	
	  var hasRunAtLeastOnce = false;
	  var state = void 0;
	  var ownProps = void 0;
	  var stateProps = void 0;
	  var dispatchProps = void 0;
	  var mergedProps = void 0;
	
	  function handleFirstCall(firstState, firstOwnProps) {
	    state = firstState;
	    ownProps = firstOwnProps;
	    stateProps = mapStateToProps(state, ownProps);
	    dispatchProps = mapDispatchToProps(dispatch, ownProps);
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    hasRunAtLeastOnce = true;
	    return mergedProps;
	  }
	
	  function handleNewPropsAndNewState() {
	    stateProps = mapStateToProps(state, ownProps);
	
	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
	
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }
	
	  function handleNewProps() {
	    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
	
	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
	
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }
	
	  function handleNewState() {
	    var nextStateProps = mapStateToProps(state, ownProps);
	    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
	    stateProps = nextStateProps;
	
	    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	
	    return mergedProps;
	  }
	
	  function handleSubsequentCalls(nextState, nextOwnProps) {
	    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
	    var stateChanged = !areStatesEqual(nextState, state);
	    state = nextState;
	    ownProps = nextOwnProps;
	
	    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
	    if (propsChanged) return handleNewProps();
	    if (stateChanged) return handleNewState();
	    return mergedProps;
	  }
	
	  return function pureFinalPropsSelector(nextState, nextOwnProps) {
	    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
	  };
	}
	
	// TODO: Add more comments
	
	// If pure is true, the selector returned by selectorFactory will memoize its results,
	// allowing connectAdvanced's shouldComponentUpdate to return false if final
	// props have not changed. If false, the selector will always return a new
	// object and shouldComponentUpdate will always return true.
	
	function finalPropsSelectorFactory(dispatch, _ref2) {
	  var initMapStateToProps = _ref2.initMapStateToProps,
	      initMapDispatchToProps = _ref2.initMapDispatchToProps,
	      initMergeProps = _ref2.initMergeProps,
	      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);
	
	  var mapStateToProps = initMapStateToProps(dispatch, options);
	  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
	  var mergeProps = initMergeProps(dispatch, options);
	
	  if (false) {
	    (0, _verifySubselectors2.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
	  }
	
	  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
	
	  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
	}

/***/ },
/* 614 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = verifySubselectors;
	
	var _warning = __webpack_require__(118);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function verify(selector, methodName, displayName) {
	  if (!selector) {
	    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
	  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
	    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
	      (0, _warning2.default)('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');
	    }
	  }
	}
	
	function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
	  verify(mapStateToProps, 'mapStateToProps', displayName);
	  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
	  verify(mergeProps, 'mergeProps', displayName);
	}

/***/ },
/* 615 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	// encapsulates the subscription logic for connecting a component to the redux store, as
	// well as nesting subscriptions of descendant components, so that we can ensure the
	// ancestor components re-render before descendants
	
	var CLEARED = null;
	var nullListeners = {
	  notify: function notify() {}
	};
	
	function createListenerCollection() {
	  // the current/next pattern is copied from redux's createStore code.
	  // TODO: refactor+expose that code to be reusable here?
	  var current = [];
	  var next = [];
	
	  return {
	    clear: function clear() {
	      next = CLEARED;
	      current = CLEARED;
	    },
	    notify: function notify() {
	      var listeners = current = next;
	      for (var i = 0; i < listeners.length; i++) {
	        listeners[i]();
	      }
	    },
	    subscribe: function subscribe(listener) {
	      var isSubscribed = true;
	      if (next === current) next = current.slice();
	      next.push(listener);
	
	      return function unsubscribe() {
	        if (!isSubscribed || current === CLEARED) return;
	        isSubscribed = false;
	
	        if (next === current) next = current.slice();
	        next.splice(next.indexOf(listener), 1);
	      };
	    }
	  };
	}
	
	var Subscription = function () {
	  function Subscription(store, parentSub, onStateChange) {
	    _classCallCheck(this, Subscription);
	
	    this.store = store;
	    this.parentSub = parentSub;
	    this.onStateChange = onStateChange;
	    this.unsubscribe = null;
	    this.listeners = nullListeners;
	  }
	
	  Subscription.prototype.addNestedSub = function addNestedSub(listener) {
	    this.trySubscribe();
	    return this.listeners.subscribe(listener);
	  };
	
	  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
	    this.listeners.notify();
	  };
	
	  Subscription.prototype.isSubscribed = function isSubscribed() {
	    return Boolean(this.unsubscribe);
	  };
	
	  Subscription.prototype.trySubscribe = function trySubscribe() {
	    if (!this.unsubscribe) {
	      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);
	
	      this.listeners = createListenerCollection();
	    }
	  };
	
	  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
	    if (this.unsubscribe) {
	      this.unsubscribe();
	      this.unsubscribe = null;
	      this.listeners.clear();
	      this.listeners = nullListeners;
	    }
	  };
	
	  return Subscription;
	}();
	
	exports.default = Subscription;

/***/ },
/* 616 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = shallowEqual;
	var hasOwn = Object.prototype.hasOwnProperty;
	
	function is(x, y) {
	  if (x === y) {
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    return x !== x && y !== y;
	  }
	}
	
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) return true;
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) return false;
	
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}

/***/ },
/* 617 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = routerMiddleware;
	
	var _actions = __webpack_require__(306);
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	/**
	 * This middleware captures CALL_HISTORY_METHOD actions to redirect to the
	 * provided history object. This will prevent these actions from reaching your
	 * reducer or any middleware that comes after this one.
	 */
	function routerMiddleware(history) {
	  return function () {
	    return function (next) {
	      return function (action) {
	        if (action.type !== _actions.CALL_HISTORY_METHOD) {
	          return next(action);
	        }
	
	        var _action$payload = action.payload,
	            method = _action$payload.method,
	            args = _action$payload.args;
	
	        history[method].apply(history, _toConsumableArray(args));
	      };
	    };
	  };
	}

/***/ },
/* 618 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports['default'] = syncHistoryWithStore;
	
	var _reducer = __webpack_require__(307);
	
	var defaultSelectLocationState = function defaultSelectLocationState(state) {
	  return state.routing;
	};
	
	/**
	 * This function synchronizes your history state with the Redux store.
	 * Location changes flow from history to the store. An enhanced history is
	 * returned with a listen method that responds to store updates for location.
	 *
	 * When this history is provided to the router, this means the location data
	 * will flow like this:
	 * history.push -> store.dispatch -> enhancedHistory.listen -> router
	 * This ensures that when the store state changes due to a replay or other
	 * event, the router will be updated appropriately and can transition to the
	 * correct router state.
	 */
	function syncHistoryWithStore(history, store) {
	  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
	      _ref$selectLocationSt = _ref.selectLocationState,
	      selectLocationState = _ref$selectLocationSt === undefined ? defaultSelectLocationState : _ref$selectLocationSt,
	      _ref$adjustUrlOnRepla = _ref.adjustUrlOnReplay,
	      adjustUrlOnReplay = _ref$adjustUrlOnRepla === undefined ? true : _ref$adjustUrlOnRepla;
	
	  // Ensure that the reducer is mounted on the store and functioning properly.
	  if (typeof selectLocationState(store.getState()) === 'undefined') {
	    throw new Error('Expected the routing state to be available either as `state.routing` ' + 'or as the custom expression you can specify as `selectLocationState` ' + 'in the `syncHistoryWithStore()` options. ' + 'Ensure you have added the `routerReducer` to your store\'s ' + 'reducers via `combineReducers` or whatever method you use to isolate ' + 'your reducers.');
	  }
	
	  var initialLocation = void 0;
	  var isTimeTraveling = void 0;
	  var unsubscribeFromStore = void 0;
	  var unsubscribeFromHistory = void 0;
	  var currentLocation = void 0;
	
	  // What does the store say about current location?
	  var getLocationInStore = function getLocationInStore(useInitialIfEmpty) {
	    var locationState = selectLocationState(store.getState());
	    return locationState.locationBeforeTransitions || (useInitialIfEmpty ? initialLocation : undefined);
	  };
	
	  // Init initialLocation with potential location in store
	  initialLocation = getLocationInStore();
	
	  // If the store is replayed, update the URL in the browser to match.
	  if (adjustUrlOnReplay) {
	    var handleStoreChange = function handleStoreChange() {
	      var locationInStore = getLocationInStore(true);
	      if (currentLocation === locationInStore || initialLocation === locationInStore) {
	        return;
	      }
	
	      // Update address bar to reflect store state
	      isTimeTraveling = true;
	      currentLocation = locationInStore;
	      history.transitionTo(_extends({}, locationInStore, {
	        action: 'PUSH'
	      }));
	      isTimeTraveling = false;
	    };
	
	    unsubscribeFromStore = store.subscribe(handleStoreChange);
	    handleStoreChange();
	  }
	
	  // Whenever location changes, dispatch an action to get it in the store
	  var handleLocationChange = function handleLocationChange(location) {
	    // ... unless we just caused that location change
	    if (isTimeTraveling) {
	      return;
	    }
	
	    // Remember where we are
	    currentLocation = location;
	
	    // Are we being called for the first time?
	    if (!initialLocation) {
	      // Remember as a fallback in case state is reset
	      initialLocation = location;
	
	      // Respect persisted location, if any
	      if (getLocationInStore()) {
	        return;
	      }
	    }
	
	    // Tell the store to update by dispatching an action
	    store.dispatch({
	      type: _reducer.LOCATION_CHANGE,
	      payload: location
	    });
	  };
	  unsubscribeFromHistory = history.listen(handleLocationChange);
	
	  // History 3.x doesn't call listen synchronously, so fire the initial location change ourselves
	  if (history.getCurrentLocation) {
	    handleLocationChange(history.getCurrentLocation());
	  }
	
	  // The enhanced history uses store as source of truth
	  return _extends({}, history, {
	    // The listeners are subscribed to the store instead of history
	    listen: function listen(listener) {
	      // Copy of last location.
	      var lastPublishedLocation = getLocationInStore(true);
	
	      // Keep track of whether we unsubscribed, as Redux store
	      // only applies changes in subscriptions on next dispatch
	      var unsubscribed = false;
	      var unsubscribeFromStore = store.subscribe(function () {
	        var currentLocation = getLocationInStore(true);
	        if (currentLocation === lastPublishedLocation) {
	          return;
	        }
	        lastPublishedLocation = currentLocation;
	        if (!unsubscribed) {
	          listener(lastPublishedLocation);
	        }
	      });
	
	      // History 2.x listeners expect a synchronous call. Make the first call to the
	      // listener after subscribing to the store, in case the listener causes a
	      // location change (e.g. when it redirects)
	      if (!history.getCurrentLocation) {
	        listener(lastPublishedLocation);
	      }
	
	      // Let user unsubscribe later
	      return function () {
	        unsubscribed = true;
	        unsubscribeFromStore();
	      };
	    },
	
	
	    // It also provides a way to destroy internal listeners
	    unsubscribe: function unsubscribe() {
	      if (adjustUrlOnReplay) {
	        unsubscribeFromStore();
	      }
	      unsubscribeFromHistory();
	    }
	  });
	}

/***/ },
/* 619 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Link = __webpack_require__(308);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * An <IndexLink> is used to link to an <IndexRoute>.
	 */
	var IndexLink = _react2.default.createClass({
	  displayName: 'IndexLink',
	  render: function render() {
	    return _react2.default.createElement(_Link2.default, _extends({}, this.props, { onlyActiveOnIndex: true }));
	  }
	});
	
	exports.default = IndexLink;
	module.exports = exports['default'];

/***/ },
/* 620 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _routerWarning = __webpack_require__(47);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _Redirect = __webpack_require__(310);
	
	var _Redirect2 = _interopRequireDefault(_Redirect);
	
	var _InternalPropTypes = __webpack_require__(62);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes,
	    string = _React$PropTypes.string,
	    object = _React$PropTypes.object;
	
	/**
	 * An <IndexRedirect> is used to redirect from an indexRoute.
	 */
	/* eslint-disable react/require-render-return */
	
	var IndexRedirect = _react2.default.createClass({
	  displayName: 'IndexRedirect',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = _Redirect2.default.createRouteFromReactElement(element);
	      } else {
	         false ? (0, _routerWarning2.default)(false, 'An <IndexRedirect> does not make sense at the root of your route config') : void 0;
	      }
	    }
	  },
	
	  propTypes: {
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _InternalPropTypes.falsy,
	    children: _InternalPropTypes.falsy
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? (0, _invariant2.default)(false, '<IndexRedirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = IndexRedirect;
	module.exports = exports['default'];

/***/ },
/* 621 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _routerWarning = __webpack_require__(47);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(32);
	
	var _InternalPropTypes = __webpack_require__(62);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var func = _react2.default.PropTypes.func;
	
	/**
	 * An <IndexRoute> is used to specify its parent's <Route indexRoute> in
	 * a JSX route config.
	 */
	/* eslint-disable react/require-render-return */
	
	var IndexRoute = _react2.default.createClass({
	  displayName: 'IndexRoute',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = (0, _RouteUtils.createRouteFromReactElement)(element);
	      } else {
	         false ? (0, _routerWarning2.default)(false, 'An <IndexRoute> does not make sense at the root of your route config') : void 0;
	      }
	    }
	  },
	
	  propTypes: {
	    path: _InternalPropTypes.falsy,
	    component: _InternalPropTypes.component,
	    components: _InternalPropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? (0, _invariant2.default)(false, '<IndexRoute> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = IndexRoute;
	module.exports = exports['default'];

/***/ },
/* 622 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(32);
	
	var _InternalPropTypes = __webpack_require__(62);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes,
	    string = _React$PropTypes.string,
	    func = _React$PropTypes.func;
	
	/**
	 * A <Route> is used to declare which components are rendered to the
	 * page when the URL matches a given pattern.
	 *
	 * Routes are arranged in a nested tree structure. When a new URL is
	 * requested, the tree is searched depth-first to find a route whose
	 * path matches the URL.  When one is found, all routes in the tree
	 * that lead to it are considered "active" and their components are
	 * rendered into the DOM, nested in the same order as in the tree.
	 */
	/* eslint-disable react/require-render-return */
	
	var Route = _react2.default.createClass({
	  displayName: 'Route',
	
	
	  statics: {
	    createRouteFromReactElement: _RouteUtils.createRouteFromReactElement
	  },
	
	  propTypes: {
	    path: string,
	    component: _InternalPropTypes.component,
	    components: _InternalPropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? (0, _invariant2.default)(false, '<Route> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = Route;
	module.exports = exports['default'];

/***/ },
/* 623 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _createTransitionManager2 = __webpack_require__(314);
	
	var _createTransitionManager3 = _interopRequireDefault(_createTransitionManager2);
	
	var _InternalPropTypes = __webpack_require__(62);
	
	var _RouterContext = __webpack_require__(122);
	
	var _RouterContext2 = _interopRequireDefault(_RouterContext);
	
	var _RouteUtils = __webpack_require__(32);
	
	var _RouterUtils = __webpack_require__(311);
	
	var _routerWarning = __webpack_require__(47);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var _React$PropTypes = _react2.default.PropTypes,
	    func = _React$PropTypes.func,
	    object = _React$PropTypes.object;
	
	/**
	 * A <Router> is a high-level API for automatically setting up
	 * a router that renders a <RouterContext> with all the props
	 * it needs each time the URL changes.
	 */
	
	var Router = _react2.default.createClass({
	  displayName: 'Router',
	
	
	  propTypes: {
	    history: object,
	    children: _InternalPropTypes.routes,
	    routes: _InternalPropTypes.routes, // alias for children
	    render: func,
	    createElement: func,
	    onError: func,
	    onUpdate: func,
	
	    // PRIVATE: For client-side rehydration of server match.
	    matchContext: object
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      render: function render(props) {
	        return _react2.default.createElement(_RouterContext2.default, props);
	      }
	    };
	  },
	  getInitialState: function getInitialState() {
	    return {
	      location: null,
	      routes: null,
	      params: null,
	      components: null
	    };
	  },
	  handleError: function handleError(error) {
	    if (this.props.onError) {
	      this.props.onError.call(this, error);
	    } else {
	      // Throw errors by default so we don't silently swallow them!
	      throw error; // This error probably occurred in getChildRoutes or getComponents.
	    }
	  },
	  createRouterObject: function createRouterObject(state) {
	    var matchContext = this.props.matchContext;
	
	    if (matchContext) {
	      return matchContext.router;
	    }
	
	    var history = this.props.history;
	
	    return (0, _RouterUtils.createRouterObject)(history, this.transitionManager, state);
	  },
	  createTransitionManager: function createTransitionManager() {
	    var matchContext = this.props.matchContext;
	
	    if (matchContext) {
	      return matchContext.transitionManager;
	    }
	
	    var history = this.props.history;
	    var _props = this.props,
	        routes = _props.routes,
	        children = _props.children;
	
	
	    !history.getCurrentLocation ?  false ? (0, _invariant2.default)(false, 'You have provided a history object created with history v4.x or v2.x ' + 'and earlier. This version of React Router is only compatible with v3 ' + 'history objects. Please change to history v3.x.') : (0, _invariant2.default)(false) : void 0;
	
	    return (0, _createTransitionManager3.default)(history, (0, _RouteUtils.createRoutes)(routes || children));
	  },
	  componentWillMount: function componentWillMount() {
	    var _this = this;
	
	    this.transitionManager = this.createTransitionManager();
	    this.router = this.createRouterObject(this.state);
	
	    this._unlisten = this.transitionManager.listen(function (error, state) {
	      if (error) {
	        _this.handleError(error);
	      } else {
	        // Keep the identity of this.router because of a caveat in ContextUtils:
	        // they only work if the object identity is preserved.
	        (0, _RouterUtils.assignRouterState)(_this.router, state);
	        _this.setState(state, _this.props.onUpdate);
	      }
	    });
	  },
	
	
	  /* istanbul ignore next: sanity check */
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	     false ? (0, _routerWarning2.default)(nextProps.history === this.props.history, 'You cannot change <Router history>; it will be ignored') : void 0;
	
	     false ? (0, _routerWarning2.default)((nextProps.routes || nextProps.children) === (this.props.routes || this.props.children), 'You cannot change <Router routes>; it will be ignored') : void 0;
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlisten) this._unlisten();
	  },
	  render: function render() {
	    var _state = this.state,
	        location = _state.location,
	        routes = _state.routes,
	        params = _state.params,
	        components = _state.components;
	
	    var _props2 = this.props,
	        createElement = _props2.createElement,
	        render = _props2.render,
	        props = _objectWithoutProperties(_props2, ['createElement', 'render']);
	
	    if (location == null) return null; // Async match
	
	    // Only forward non-Router-specific props to routing context, as those are
	    // the only ones that might be custom routing context props.
	    Object.keys(Router.propTypes).forEach(function (propType) {
	      return delete props[propType];
	    });
	
	    return render(_extends({}, props, {
	      router: this.router,
	      location: location,
	      routes: routes,
	      params: params,
	      components: components,
	      createElement: createElement
	    }));
	  }
	});
	
	exports.default = Router;
	module.exports = exports['default'];

/***/ },
/* 624 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.runEnterHooks = runEnterHooks;
	exports.runChangeHooks = runChangeHooks;
	exports.runLeaveHooks = runLeaveHooks;
	
	var _AsyncUtils = __webpack_require__(119);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var PendingHooks = function PendingHooks() {
	  var _this = this;
	
	  _classCallCheck(this, PendingHooks);
	
	  this.hooks = [];
	
	  this.add = function (hook) {
	    return _this.hooks.push(hook);
	  };
	
	  this.remove = function (hook) {
	    return _this.hooks = _this.hooks.filter(function (h) {
	      return h !== hook;
	    });
	  };
	
	  this.has = function (hook) {
	    return _this.hooks.indexOf(hook) !== -1;
	  };
	
	  this.clear = function () {
	    return _this.hooks = [];
	  };
	};
	
	var enterHooks = new PendingHooks();
	var changeHooks = new PendingHooks();
	
	function createTransitionHook(hook, route, asyncArity, pendingHooks) {
	  var isSync = hook.length < asyncArity;
	
	  var transitionHook = function transitionHook() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    hook.apply(route, args);
	
	    if (isSync) {
	      var callback = args[args.length - 1];
	      // Assume hook executes synchronously and
	      // automatically call the callback.
	      callback();
	    }
	  };
	
	  pendingHooks.add(transitionHook);
	
	  return transitionHook;
	}
	
	function getEnterHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onEnter) hooks.push(createTransitionHook(route.onEnter, route, 3, enterHooks));
	    return hooks;
	  }, []);
	}
	
	function getChangeHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onChange) hooks.push(createTransitionHook(route.onChange, route, 4, changeHooks));
	    return hooks;
	  }, []);
	}
	
	function runTransitionHooks(length, iter, callback) {
	  if (!length) {
	    callback();
	    return;
	  }
	
	  var redirectInfo = void 0;
	  function replace(location) {
	    redirectInfo = location;
	  }
	
	  (0, _AsyncUtils.loopAsync)(length, function (index, next, done) {
	    iter(index, replace, function (error) {
	      if (error || redirectInfo) {
	        done(error, redirectInfo); // No need to continue.
	      } else {
	        next();
	      }
	    });
	  }, callback);
	}
	
	/**
	 * Runs all onEnter hooks in the given array of routes in order
	 * with onEnter(nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	function runEnterHooks(routes, nextState, callback) {
	  enterHooks.clear();
	  var hooks = getEnterHooks(routes);
	  return runTransitionHooks(hooks.length, function (index, replace, next) {
	    var wrappedNext = function wrappedNext() {
	      if (enterHooks.has(hooks[index])) {
	        next.apply(undefined, arguments);
	        enterHooks.remove(hooks[index]);
	      }
	    };
	    hooks[index](nextState, replace, wrappedNext);
	  }, callback);
	}
	
	/**
	 * Runs all onChange hooks in the given array of routes in order
	 * with onChange(prevState, nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	function runChangeHooks(routes, state, nextState, callback) {
	  changeHooks.clear();
	  var hooks = getChangeHooks(routes);
	  return runTransitionHooks(hooks.length, function (index, replace, next) {
	    var wrappedNext = function wrappedNext() {
	      if (changeHooks.has(hooks[index])) {
	        next.apply(undefined, arguments);
	        changeHooks.remove(hooks[index]);
	      }
	    };
	    hooks[index](state, nextState, replace, wrappedNext);
	  }, callback);
	}
	
	/**
	 * Runs all onLeave hooks in the given array of routes in order.
	 */
	function runLeaveHooks(routes, prevState) {
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    if (routes[i].onLeave) routes[i].onLeave.call(routes[i], prevState);
	  }
	}

/***/ },
/* 625 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _RouterContext = __webpack_require__(122);
	
	var _RouterContext2 = _interopRequireDefault(_RouterContext);
	
	var _routerWarning = __webpack_require__(47);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  if (false) {
	    middlewares.forEach(function (middleware, index) {
	      process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(middleware.renderRouterContext || middleware.renderRouteComponent, 'The middleware specified at index ' + index + ' does not appear to be ' + 'a valid React Router middleware.') : void 0;
	    });
	  }
	
	  var withContext = middlewares.map(function (middleware) {
	    return middleware.renderRouterContext;
	  }).filter(Boolean);
	  var withComponent = middlewares.map(function (middleware) {
	    return middleware.renderRouteComponent;
	  }).filter(Boolean);
	
	  var makeCreateElement = function makeCreateElement() {
	    var baseCreateElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _react.createElement;
	    return function (Component, props) {
	      return withComponent.reduceRight(function (previous, renderRouteComponent) {
	        return renderRouteComponent(previous, props);
	      }, baseCreateElement(Component, props));
	    };
	  };
	
	  return function (renderProps) {
	    return withContext.reduceRight(function (previous, renderRouterContext) {
	      return renderRouterContext(previous, renderProps);
	    }, _react2.default.createElement(_RouterContext2.default, _extends({}, renderProps, {
	      createElement: makeCreateElement(renderProps.createElement)
	    })));
	  };
	};
	
	module.exports = exports['default'];

/***/ },
/* 626 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _createBrowserHistory = __webpack_require__(521);
	
	var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);
	
	var _createRouterHistory = __webpack_require__(313);
	
	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = (0, _createRouterHistory2.default)(_createBrowserHistory2.default);
	module.exports = exports['default'];

/***/ },
/* 627 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _PatternUtils = __webpack_require__(46);
	
	function routeParamsChanged(route, prevState, nextState) {
	  if (!route.path) return false;
	
	  var paramNames = (0, _PatternUtils.getParamNames)(route.path);
	
	  return paramNames.some(function (paramName) {
	    return prevState.params[paramName] !== nextState.params[paramName];
	  });
	}
	
	/**
	 * Returns an object of { leaveRoutes, changeRoutes, enterRoutes } determined by
	 * the change from prevState to nextState. We leave routes if either
	 * 1) they are not in the next state or 2) they are in the next state
	 * but their params have changed (i.e. /users/123 => /users/456).
	 *
	 * leaveRoutes are ordered starting at the leaf route of the tree
	 * we're leaving up to the common parent route. enterRoutes are ordered
	 * from the top of the tree we're entering down to the leaf route.
	 *
	 * changeRoutes are any routes that didn't leave or enter during
	 * the transition.
	 */
	function computeChangedRoutes(prevState, nextState) {
	  var prevRoutes = prevState && prevState.routes;
	  var nextRoutes = nextState.routes;
	
	  var leaveRoutes = void 0,
	      changeRoutes = void 0,
	      enterRoutes = void 0;
	  if (prevRoutes) {
	    (function () {
	      var parentIsLeaving = false;
	      leaveRoutes = prevRoutes.filter(function (route) {
	        if (parentIsLeaving) {
	          return true;
	        } else {
	          var isLeaving = nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);
	          if (isLeaving) parentIsLeaving = true;
	          return isLeaving;
	        }
	      });
	
	      // onLeave hooks start at the leaf route.
	      leaveRoutes.reverse();
	
	      enterRoutes = [];
	      changeRoutes = [];
	
	      nextRoutes.forEach(function (route) {
	        var isNew = prevRoutes.indexOf(route) === -1;
	        var paramsChanged = leaveRoutes.indexOf(route) !== -1;
	
	        if (isNew || paramsChanged) enterRoutes.push(route);else changeRoutes.push(route);
	      });
	    })();
	  } else {
	    leaveRoutes = [];
	    changeRoutes = [];
	    enterRoutes = nextRoutes;
	  }
	
	  return {
	    leaveRoutes: leaveRoutes,
	    changeRoutes: changeRoutes,
	    enterRoutes: enterRoutes
	  };
	}
	
	exports.default = computeChangedRoutes;
	module.exports = exports['default'];

/***/ },
/* 628 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _AsyncUtils = __webpack_require__(119);
	
	var _PromiseUtils = __webpack_require__(309);
	
	function getComponentsForRoute(nextState, route, callback) {
	  if (route.component || route.components) {
	    callback(null, route.component || route.components);
	    return;
	  }
	
	  var getComponent = route.getComponent || route.getComponents;
	  if (getComponent) {
	    var componentReturn = getComponent.call(route, nextState, callback);
	    if ((0, _PromiseUtils.isPromise)(componentReturn)) componentReturn.then(function (component) {
	      return callback(null, component);
	    }, callback);
	  } else {
	    callback();
	  }
	}
	
	/**
	 * Asynchronously fetches all components needed for the given router
	 * state and calls callback(error, components) when finished.
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getComponents method.
	 */
	function getComponents(nextState, callback) {
	  (0, _AsyncUtils.mapAsync)(nextState.routes, function (route, index, callback) {
	    getComponentsForRoute(nextState, route, callback);
	  }, callback);
	}
	
	exports.default = getComponents;
	module.exports = exports['default'];

/***/ },
/* 629 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _PatternUtils = __webpack_require__(46);
	
	/**
	 * Extracts an object of params the given route cares about from
	 * the given params object.
	 */
	function getRouteParams(route, params) {
	  var routeParams = {};
	
	  if (!route.path) return routeParams;
	
	  (0, _PatternUtils.getParamNames)(route.path).forEach(function (p) {
	    if (Object.prototype.hasOwnProperty.call(params, p)) {
	      routeParams[p] = params[p];
	    }
	  });
	
	  return routeParams;
	}
	
	exports.default = getRouteParams;
	module.exports = exports['default'];

/***/ },
/* 630 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _createHashHistory = __webpack_require__(522);
	
	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);
	
	var _createRouterHistory = __webpack_require__(313);
	
	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = (0, _createRouterHistory2.default)(_createHashHistory2.default);
	module.exports = exports['default'];

/***/ },
/* 631 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = isActive;
	
	var _PatternUtils = __webpack_require__(46);
	
	function deepEqual(a, b) {
	  if (a == b) return true;
	
	  if (a == null || b == null) return false;
	
	  if (Array.isArray(a)) {
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return deepEqual(item, b[index]);
	    });
	  }
	
	  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object') {
	    for (var p in a) {
	      if (!Object.prototype.hasOwnProperty.call(a, p)) {
	        continue;
	      }
	
	      if (a[p] === undefined) {
	        if (b[p] !== undefined) {
	          return false;
	        }
	      } else if (!Object.prototype.hasOwnProperty.call(b, p)) {
	        return false;
	      } else if (!deepEqual(a[p], b[p])) {
	        return false;
	      }
	    }
	
	    return true;
	  }
	
	  return String(a) === String(b);
	}
	
	/**
	 * Returns true if the current pathname matches the supplied one, net of
	 * leading and trailing slash normalization. This is sufficient for an
	 * indexOnly route match.
	 */
	function pathIsActive(pathname, currentPathname) {
	  // Normalize leading slash for consistency. Leading slash on pathname has
	  // already been normalized in isActive. See caveat there.
	  if (currentPathname.charAt(0) !== '/') {
	    currentPathname = '/' + currentPathname;
	  }
	
	  // Normalize the end of both path names too. Maybe `/foo/` shouldn't show
	  // `/foo` as active, but in this case, we would already have failed the
	  // match.
	  if (pathname.charAt(pathname.length - 1) !== '/') {
	    pathname += '/';
	  }
	  if (currentPathname.charAt(currentPathname.length - 1) !== '/') {
	    currentPathname += '/';
	  }
	
	  return currentPathname === pathname;
	}
	
	/**
	 * Returns true if the given pathname matches the active routes and params.
	 */
	function routeIsActive(pathname, routes, params) {
	  var remainingPathname = pathname,
	      paramNames = [],
	      paramValues = [];
	
	  // for...of would work here but it's probably slower post-transpilation.
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    var route = routes[i];
	    var pattern = route.path || '';
	
	    if (pattern.charAt(0) === '/') {
	      remainingPathname = pathname;
	      paramNames = [];
	      paramValues = [];
	    }
	
	    if (remainingPathname !== null && pattern) {
	      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
	      if (matched) {
	        remainingPathname = matched.remainingPathname;
	        paramNames = [].concat(paramNames, matched.paramNames);
	        paramValues = [].concat(paramValues, matched.paramValues);
	      } else {
	        remainingPathname = null;
	      }
	
	      if (remainingPathname === '') {
	        // We have an exact match on the route. Just check that all the params
	        // match.
	        // FIXME: This doesn't work on repeated params.
	        return paramNames.every(function (paramName, index) {
	          return String(paramValues[index]) === String(params[paramName]);
	        });
	      }
	    }
	  }
	
	  return false;
	}
	
	/**
	 * Returns true if all key/value pairs in the given query are
	 * currently active.
	 */
	function queryIsActive(query, activeQuery) {
	  if (activeQuery == null) return query == null;
	
	  if (query == null) return true;
	
	  return deepEqual(query, activeQuery);
	}
	
	/**
	 * Returns true if a <Link> to the given pathname/query combination is
	 * currently active.
	 */
	function isActive(_ref, indexOnly, currentLocation, routes, params) {
	  var pathname = _ref.pathname,
	      query = _ref.query;
	
	  if (currentLocation == null) return false;
	
	  // TODO: This is a bit ugly. It keeps around support for treating pathnames
	  // without preceding slashes as absolute paths, but possibly also works
	  // around the same quirks with basenames as in matchRoutes.
	  if (pathname.charAt(0) !== '/') {
	    pathname = '/' + pathname;
	  }
	
	  if (!pathIsActive(pathname, currentLocation.pathname)) {
	    // The path check is necessary and sufficient for indexOnly, but otherwise
	    // we still need to check the routes.
	    if (indexOnly || !routeIsActive(pathname, routes, params)) {
	      return false;
	    }
	  }
	
	  return queryIsActive(query, currentLocation.query);
	}
	module.exports = exports['default'];

/***/ },
/* 632 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _Actions = __webpack_require__(71);
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _createMemoryHistory = __webpack_require__(312);
	
	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);
	
	var _createTransitionManager = __webpack_require__(314);
	
	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
	
	var _RouteUtils = __webpack_require__(32);
	
	var _RouterUtils = __webpack_require__(311);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * A high-level API to be used for server-side rendering.
	 *
	 * This function matches a location to a set of routes and calls
	 * callback(error, redirectLocation, renderProps) when finished.
	 *
	 * Note: You probably don't want to use this in a browser unless you're using
	 * server-side rendering with async routes.
	 */
	function match(_ref, callback) {
	  var history = _ref.history,
	      routes = _ref.routes,
	      location = _ref.location,
	      options = _objectWithoutProperties(_ref, ['history', 'routes', 'location']);
	
	  !(history || location) ?  false ? (0, _invariant2.default)(false, 'match needs a history or a location') : (0, _invariant2.default)(false) : void 0;
	
	  history = history ? history : (0, _createMemoryHistory2.default)(options);
	  var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes));
	
	  if (location) {
	    // Allow match({ location: '/the/path', ... })
	    location = history.createLocation(location);
	  } else {
	    location = history.getCurrentLocation();
	  }
	
	  transitionManager.match(location, function (error, redirectLocation, nextState) {
	    var renderProps = void 0;
	
	    if (nextState) {
	      var router = (0, _RouterUtils.createRouterObject)(history, transitionManager, nextState);
	      renderProps = _extends({}, nextState, {
	        router: router,
	        matchContext: { transitionManager: transitionManager, router: router }
	      });
	    }
	
	    callback(error, redirectLocation && history.createLocation(redirectLocation, _Actions.REPLACE), renderProps);
	  });
	}
	
	exports.default = match;
	module.exports = exports['default'];

/***/ },
/* 633 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = matchRoutes;
	
	var _AsyncUtils = __webpack_require__(119);
	
	var _PromiseUtils = __webpack_require__(309);
	
	var _PatternUtils = __webpack_require__(46);
	
	var _routerWarning = __webpack_require__(47);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _RouteUtils = __webpack_require__(32);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getChildRoutes(route, location, paramNames, paramValues, callback) {
	  if (route.childRoutes) {
	    return [null, route.childRoutes];
	  }
	  if (!route.getChildRoutes) {
	    return [];
	  }
	
	  var sync = true,
	      result = void 0;
	
	  var partialNextState = {
	    location: location,
	    params: createParams(paramNames, paramValues)
	  };
	
	  var childRoutesReturn = route.getChildRoutes(partialNextState, function (error, childRoutes) {
	    childRoutes = !error && (0, _RouteUtils.createRoutes)(childRoutes);
	    if (sync) {
	      result = [error, childRoutes];
	      return;
	    }
	
	    callback(error, childRoutes);
	  });
	
	  if ((0, _PromiseUtils.isPromise)(childRoutesReturn)) childRoutesReturn.then(function (childRoutes) {
	    return callback(null, (0, _RouteUtils.createRoutes)(childRoutes));
	  }, callback);
	
	  sync = false;
	  return result; // Might be undefined.
	}
	
	function getIndexRoute(route, location, paramNames, paramValues, callback) {
	  if (route.indexRoute) {
	    callback(null, route.indexRoute);
	  } else if (route.getIndexRoute) {
	    var partialNextState = {
	      location: location,
	      params: createParams(paramNames, paramValues)
	    };
	
	    var indexRoutesReturn = route.getIndexRoute(partialNextState, function (error, indexRoute) {
	      callback(error, !error && (0, _RouteUtils.createRoutes)(indexRoute)[0]);
	    });
	
	    if ((0, _PromiseUtils.isPromise)(indexRoutesReturn)) indexRoutesReturn.then(function (indexRoute) {
	      return callback(null, (0, _RouteUtils.createRoutes)(indexRoute)[0]);
	    }, callback);
	  } else if (route.childRoutes || route.getChildRoutes) {
	    var onChildRoutes = function onChildRoutes(error, childRoutes) {
	      if (error) {
	        callback(error);
	        return;
	      }
	
	      var pathless = childRoutes.filter(function (childRoute) {
	        return !childRoute.path;
	      });
	
	      (0, _AsyncUtils.loopAsync)(pathless.length, function (index, next, done) {
	        getIndexRoute(pathless[index], location, paramNames, paramValues, function (error, indexRoute) {
	          if (error || indexRoute) {
	            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);
	            done(error, routes);
	          } else {
	            next();
	          }
	        });
	      }, function (err, routes) {
	        callback(null, routes);
	      });
	    };
	
	    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);
	    if (result) {
	      onChildRoutes.apply(undefined, result);
	    }
	  } else {
	    callback();
	  }
	}
	
	function assignParams(params, paramNames, paramValues) {
	  return paramNames.reduce(function (params, paramName, index) {
	    var paramValue = paramValues && paramValues[index];
	
	    if (Array.isArray(params[paramName])) {
	      params[paramName].push(paramValue);
	    } else if (paramName in params) {
	      params[paramName] = [params[paramName], paramValue];
	    } else {
	      params[paramName] = paramValue;
	    }
	
	    return params;
	  }, params);
	}
	
	function createParams(paramNames, paramValues) {
	  return assignParams({}, paramNames, paramValues);
	}
	
	function matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {
	  var pattern = route.path || '';
	
	  if (pattern.charAt(0) === '/') {
	    remainingPathname = location.pathname;
	    paramNames = [];
	    paramValues = [];
	  }
	
	  // Only try to match the path if the route actually has a pattern, and if
	  // we're not just searching for potential nested absolute paths.
	  if (remainingPathname !== null && pattern) {
	    try {
	      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
	      if (matched) {
	        remainingPathname = matched.remainingPathname;
	        paramNames = [].concat(paramNames, matched.paramNames);
	        paramValues = [].concat(paramValues, matched.paramValues);
	      } else {
	        remainingPathname = null;
	      }
	    } catch (error) {
	      callback(error);
	    }
	
	    // By assumption, pattern is non-empty here, which is the prerequisite for
	    // actually terminating a match.
	    if (remainingPathname === '') {
	      var _ret = function () {
	        var match = {
	          routes: [route],
	          params: createParams(paramNames, paramValues)
	        };
	
	        getIndexRoute(route, location, paramNames, paramValues, function (error, indexRoute) {
	          if (error) {
	            callback(error);
	          } else {
	            if (Array.isArray(indexRoute)) {
	              var _match$routes;
	
	               false ? (0, _routerWarning2.default)(indexRoute.every(function (route) {
	                return !route.path;
	              }), 'Index routes should not have paths') : void 0;
	              (_match$routes = match.routes).push.apply(_match$routes, indexRoute);
	            } else if (indexRoute) {
	               false ? (0, _routerWarning2.default)(!indexRoute.path, 'Index routes should not have paths') : void 0;
	              match.routes.push(indexRoute);
	            }
	
	            callback(null, match);
	          }
	        });
	
	        return {
	          v: void 0
	        };
	      }();
	
	      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	    }
	  }
	
	  if (remainingPathname != null || route.childRoutes) {
	    // Either a) this route matched at least some of the path or b)
	    // we don't have to load this route's children asynchronously. In
	    // either case continue checking for matches in the subtree.
	    var onChildRoutes = function onChildRoutes(error, childRoutes) {
	      if (error) {
	        callback(error);
	      } else if (childRoutes) {
	        // Check the child routes to see if any of them match.
	        matchRoutes(childRoutes, location, function (error, match) {
	          if (error) {
	            callback(error);
	          } else if (match) {
	            // A child route matched! Augment the match and pass it up the stack.
	            match.routes.unshift(route);
	            callback(null, match);
	          } else {
	            callback();
	          }
	        }, remainingPathname, paramNames, paramValues);
	      } else {
	        callback();
	      }
	    };
	
	    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);
	    if (result) {
	      onChildRoutes.apply(undefined, result);
	    }
	  } else {
	    callback();
	  }
	}
	
	/**
	 * Asynchronously matches the given location to a set of routes and calls
	 * callback(error, state) when finished. The state object will have the
	 * following properties:
	 *
	 * - routes       An array of routes that matched, in hierarchical order
	 * - params       An object of URL parameters
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getChildRoutes method.
	 */
	function matchRoutes(routes, location, callback, remainingPathname) {
	  var paramNames = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
	  var paramValues = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];
	
	  if (remainingPathname === undefined) {
	    // TODO: This is a little bit ugly, but it works around a quirk in history
	    // that strips the leading slash from pathnames when using basenames with
	    // trailing slashes.
	    if (location.pathname.charAt(0) !== '/') {
	      location = _extends({}, location, {
	        pathname: '/' + location.pathname
	      });
	    }
	    remainingPathname = location.pathname;
	  }
	
	  (0, _AsyncUtils.loopAsync)(routes.length, function (index, next, done) {
	    matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {
	      if (error || match) {
	        done(error, match);
	      } else {
	        next();
	      }
	    });
	  }, callback);
	}
	module.exports = exports['default'];

/***/ },
/* 634 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = withRouter;
	
	var _invariant = __webpack_require__(16);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _hoistNonReactStatics = __webpack_require__(157);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _ContextUtils = __webpack_require__(120);
	
	var _PropTypes = __webpack_require__(121);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	}
	
	function withRouter(WrappedComponent, options) {
	  var withRef = options && options.withRef;
	
	  var WithRouter = _react2.default.createClass({
	    displayName: 'WithRouter',
	
	    mixins: [(0, _ContextUtils.ContextSubscriber)('router')],
	
	    contextTypes: { router: _PropTypes.routerShape },
	    propTypes: { router: _PropTypes.routerShape },
	
	    getWrappedInstance: function getWrappedInstance() {
	      !withRef ?  false ? (0, _invariant2.default)(false, 'To access the wrapped instance, you need to specify ' + '`{ withRef: true }` as the second argument of the withRouter() call.') : (0, _invariant2.default)(false) : void 0;
	
	      return this.wrappedInstance;
	    },
	    render: function render() {
	      var _this = this;
	
	      var router = this.props.router || this.context.router;
	      if (!router) {
	        return _react2.default.createElement(WrappedComponent, this.props);
	      }
	
	      var params = router.params,
	          location = router.location,
	          routes = router.routes;
	
	      var props = _extends({}, this.props, { router: router, params: params, location: location, routes: routes });
	
	      if (withRef) {
	        props.ref = function (c) {
	          _this.wrappedInstance = c;
	        };
	      }
	
	      return _react2.default.createElement(WrappedComponent, props);
	    }
	  });
	
	  WithRouter.displayName = 'withRouter(' + getDisplayName(WrappedComponent) + ')';
	  WithRouter.WrappedComponent = WrappedComponent;
	
	  return (0, _hoistNonReactStatics2.default)(WithRouter, WrappedComponent);
	}
	module.exports = exports['default'];

/***/ },
/* 635 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(281);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var upKeys = [33, // pageUp
	38 // arrowUp
	];
	var downKeys = [32, // space
	34, // pageDown
	40 // arrowDown
	];
	
	var ScrollLock = function (_Component) {
	    _inherits(ScrollLock, _Component);
	
	    function ScrollLock(props) {
	        _classCallCheck(this, ScrollLock);
	
	        var _this = _possibleConstructorReturn(this, (ScrollLock.__proto__ || Object.getPrototypeOf(ScrollLock)).call(this, props));
	
	        ['listenToScrollEvents', 'stopListeningToScrollEvents', 'handleEventDelta', 'onWheelHandler', 'onTouchStartHandler', 'onTouchMoveHandler', 'onKeyDownHandler', 'setScrollingElement', 'cancelScrollEvent'].forEach(function (func) {
	            _this[func] = _this[func].bind(_this);
	        });
	        return _this;
	    }
	
	    _createClass(ScrollLock, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            if (this.props.enabled) {
	                this.listenToScrollEvents(this.scrollingElement);
	            }
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            this.stopListeningToScrollEvents(this.scrollingElement);
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            if (this.props.enabled !== nextProps.enabled) {
	                var fn = nextProps.enabled ? this.listenToScrollEvents : this.stopListeningToScrollEvents;
	
	                fn(this.scrollingElement);
	            }
	        }
	    }, {
	        key: 'setScrollingElement',
	        value: function setScrollingElement(r) {
	            this.scrollingElement = r && r.firstChild;
	        }
	    }, {
	        key: 'handleEventDelta',
	        value: function handleEventDelta(e, delta) {
	            var isDeltaPositive = delta > 0;
	            var elem = this.scrollingElement;
	            var scrollTop = elem.scrollTop,
	                scrollHeight = elem.scrollHeight,
	                clientHeight = elem.clientHeight;
	
	
	            var shouldCancelScroll = false;
	            if (isDeltaPositive && delta > scrollHeight - clientHeight - scrollTop) {
	                // bottom limit
	                elem.scrollTop = scrollHeight;
	                shouldCancelScroll = true;
	            } else if (!isDeltaPositive && -delta > scrollTop) {
	                // top limit
	                elem.scrollTop = 0;
	                shouldCancelScroll = true;
	            }
	
	            if (shouldCancelScroll) {
	                this.cancelScrollEvent(e);
	            }
	        }
	    }, {
	        key: 'onWheelHandler',
	        value: function onWheelHandler(e) {
	            this.handleEventDelta(e, e.deltaY);
	        }
	    }, {
	        key: 'onTouchStartHandler',
	        value: function onTouchStartHandler(e) {
	            // set touch start so we can calculate touchmove delta
	            this.touchStart = e.changedTouches[0].clientY;
	        }
	    }, {
	        key: 'onTouchMoveHandler',
	        value: function onTouchMoveHandler(e) {
	            var delta = this.touchStart - e.changedTouches[0].clientY;
	            this.handleEventDelta(e, delta);
	        }
	    }, {
	        key: 'onKeyDownHandler',
	        value: function onKeyDownHandler(e) {
	            if (e.target !== this.scrollingElement) {
	                return;
	            }
	
	            if (upKeys.indexOf(e.keyCode) >= 0) {
	                this.handleEventDelta(e, -1);
	            } else if (downKeys.indexOf(e.keyCode) >= 0) {
	                this.handleEventDelta(e, 1);
	            }
	        }
	    }, {
	        key: 'cancelScrollEvent',
	        value: function cancelScrollEvent(e) {
	            e.stopImmediatePropagation();
	            e.preventDefault();
	            return false;
	        }
	    }, {
	        key: 'listenToScrollEvents',
	        value: function listenToScrollEvents(el) {
	            el.addEventListener('wheel', this.onWheelHandler, false);
	            el.addEventListener('touchstart', this.onTouchStartHandler, false);
	            el.addEventListener('touchmove', this.onTouchMoveHandler, false);
	            el.addEventListener('keydown', this.onKeyDownHandler, false);
	        }
	    }, {
	        key: 'stopListeningToScrollEvents',
	        value: function stopListeningToScrollEvents(el) {
	            el.removeEventListener('wheel', this.onWheelHandler, false);
	            el.removeEventListener('touchstart', this.onTouchStartHandler, false);
	            el.removeEventListener('touchmove', this.onTouchMoveHandler, false);
	            el.removeEventListener('keydown', this.onKeyDownHandler, false);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: this.props.className, ref: this.setScrollingElement },
	                _react2.default.cloneElement(this.props.children, {
	                    tabIndex: 0,
	                    style: { outline: 'none' }
	                })
	            );
	        }
	    }]);
	
	    return ScrollLock;
	}(_react.Component);
	
	ScrollLock.propTypes = {
	    enabled: _propTypes2.default.bool,
	    className: _propTypes2.default.string
	};
	ScrollLock.defaultProps = {
	    enabled: true,
	    className: ''
	};
	exports.default = ScrollLock;

/***/ },
/* 636 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.NextArrow = exports.PrevArrow = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(67);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _innerSliderUtils = __webpack_require__(81);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var PrevArrow = exports.PrevArrow = function (_React$PureComponent) {
	  _inherits(PrevArrow, _React$PureComponent);
	
	  function PrevArrow() {
	    _classCallCheck(this, PrevArrow);
	
	    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
	  }
	
	  PrevArrow.prototype.clickHandler = function clickHandler(options, e) {
	    if (e) {
	      e.preventDefault();
	    }
	    this.props.clickHandler(options, e);
	  };
	
	  PrevArrow.prototype.render = function render() {
	    var prevClasses = { "slick-arrow": true, "slick-prev": true };
	    var prevHandler = this.clickHandler.bind(this, { message: "previous" });
	
	    if (!this.props.infinite && (this.props.currentSlide === 0 || this.props.slideCount <= this.props.slidesToShow)) {
	      prevClasses["slick-disabled"] = true;
	      prevHandler = null;
	    }
	
	    var prevArrowProps = {
	      key: "0",
	      "data-role": "none",
	      className: (0, _classnames2.default)(prevClasses),
	      style: { display: "block" },
	      onClick: prevHandler
	    };
	    var customProps = {
	      currentSlide: this.props.currentSlide,
	      slideCount: this.props.slideCount
	    };
	    var prevArrow = void 0;
	
	    if (this.props.prevArrow) {
	      prevArrow = _react2.default.cloneElement(this.props.prevArrow, _extends({}, prevArrowProps, customProps));
	    } else {
	      prevArrow = _react2.default.createElement(
	        "button",
	        _extends({ key: "0", type: "button" }, prevArrowProps),
	        " ",
	        "Previous"
	      );
	    }
	
	    return prevArrow;
	  };
	
	  return PrevArrow;
	}(_react2.default.PureComponent);
	
	var NextArrow = exports.NextArrow = function (_React$PureComponent2) {
	  _inherits(NextArrow, _React$PureComponent2);
	
	  function NextArrow() {
	    _classCallCheck(this, NextArrow);
	
	    return _possibleConstructorReturn(this, _React$PureComponent2.apply(this, arguments));
	  }
	
	  NextArrow.prototype.clickHandler = function clickHandler(options, e) {
	    if (e) {
	      e.preventDefault();
	    }
	    this.props.clickHandler(options, e);
	  };
	
	  NextArrow.prototype.render = function render() {
	    var nextClasses = { "slick-arrow": true, "slick-next": true };
	    var nextHandler = this.clickHandler.bind(this, { message: "next" });
	
	    if (!(0, _innerSliderUtils.canGoNext)(this.props)) {
	      nextClasses["slick-disabled"] = true;
	      nextHandler = null;
	    }
	
	    var nextArrowProps = {
	      key: "1",
	      "data-role": "none",
	      className: (0, _classnames2.default)(nextClasses),
	      style: { display: "block" },
	      onClick: nextHandler
	    };
	    var customProps = {
	      currentSlide: this.props.currentSlide,
	      slideCount: this.props.slideCount
	    };
	    var nextArrow = void 0;
	
	    if (this.props.nextArrow) {
	      nextArrow = _react2.default.cloneElement(this.props.nextArrow, _extends({}, nextArrowProps, customProps));
	    } else {
	      nextArrow = _react2.default.createElement(
	        "button",
	        _extends({ key: "1", type: "button" }, nextArrowProps),
	        " ",
	        "Next"
	      );
	    }
	
	    return nextArrow;
	  };
	
	  return NextArrow;
	}(_react2.default.PureComponent);

/***/ },
/* 637 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var defaultProps = {
	  accessibility: true,
	  adaptiveHeight: false,
	  afterChange: null,
	  appendDots: function appendDots(dots) {
	    return _react2.default.createElement(
	      "ul",
	      { style: { display: "block" } },
	      dots
	    );
	  },
	  arrows: true,
	  autoplay: false,
	  autoplaySpeed: 3000,
	  beforeChange: null,
	  centerMode: false,
	  centerPadding: "50px",
	  className: "",
	  cssEase: "ease",
	  customPaging: function customPaging(i) {
	    return _react2.default.createElement(
	      "button",
	      null,
	      i + 1
	    );
	  },
	  dots: false,
	  dotsClass: "slick-dots",
	  draggable: true,
	  easing: "linear",
	  edgeFriction: 0.35,
	  fade: false,
	  focusOnSelect: false,
	  infinite: true,
	  initialSlide: 0,
	  lazyLoad: null,
	  nextArrow: null,
	  onEdge: null,
	  onInit: null,
	  onLazyLoadError: null,
	  onReInit: null,
	  pauseOnDotsHover: false,
	  pauseOnFocus: false,
	  pauseOnHover: true,
	  prevArrow: null,
	  responsive: null,
	  rows: 1,
	  rtl: false,
	  slide: "div",
	  slidesPerRow: 1,
	  slidesToScroll: 1,
	  slidesToShow: 1,
	  speed: 500,
	  swipe: true,
	  swipeEvent: null,
	  swipeToSlide: false,
	  touchMove: true,
	  touchThreshold: 5,
	  useCSS: true,
	  useTransform: true,
	  variableWidth: false,
	  vertical: false,
	  waitForAnimate: true
	};
	
	exports.default = defaultProps;

/***/ },
/* 638 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.Dots = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(67);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var getDotCount = function getDotCount(spec) {
	  var dots;
	
	  if (spec.infinite) {
	    dots = Math.ceil(spec.slideCount / spec.slidesToScroll);
	  } else {
	    dots = Math.ceil((spec.slideCount - spec.slidesToShow) / spec.slidesToScroll) + 1;
	  }
	
	  return dots;
	};
	
	var Dots = exports.Dots = function (_React$PureComponent) {
	  _inherits(Dots, _React$PureComponent);
	
	  function Dots() {
	    _classCallCheck(this, Dots);
	
	    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
	  }
	
	  Dots.prototype.clickHandler = function clickHandler(options, e) {
	    // In Autoplay the focus stays on clicked button even after transition
	    // to next slide. That only goes away by click somewhere outside
	    e.preventDefault();
	    this.props.clickHandler(options);
	  };
	
	  Dots.prototype.render = function render() {
	    var _this2 = this;
	
	    var dotCount = getDotCount({
	      slideCount: this.props.slideCount,
	      slidesToScroll: this.props.slidesToScroll,
	      slidesToShow: this.props.slidesToShow,
	      infinite: this.props.infinite
	    });
	
	    // Apply join & split to Array to pre-fill it for IE8
	    //
	    // Credit: http://stackoverflow.com/a/13735425/1849458
	    var _props = this.props,
	        onMouseEnter = _props.onMouseEnter,
	        onMouseOver = _props.onMouseOver,
	        onMouseLeave = _props.onMouseLeave;
	
	    var mouseEvents = { onMouseEnter: onMouseEnter, onMouseOver: onMouseOver, onMouseLeave: onMouseLeave };
	    var dots = Array.apply(null, Array(dotCount + 1).join("0").split("")).map(function (x, i) {
	      var leftBound = i * _this2.props.slidesToScroll;
	      var rightBound = i * _this2.props.slidesToScroll + (_this2.props.slidesToScroll - 1);
	      var className = (0, _classnames2.default)({
	        "slick-active": _this2.props.currentSlide >= leftBound && _this2.props.currentSlide <= rightBound
	      });
	
	      var dotOptions = {
	        message: "dots",
	        index: i,
	        slidesToScroll: _this2.props.slidesToScroll,
	        currentSlide: _this2.props.currentSlide
	      };
	
	      var onClick = _this2.clickHandler.bind(_this2, dotOptions);
	      return _react2.default.createElement(
	        "li",
	        { key: i, className: className },
	        _react2.default.cloneElement(_this2.props.customPaging(i), { onClick: onClick })
	      );
	    });
	
	    return _react2.default.cloneElement(this.props.appendDots(dots), _extends({
	      className: this.props.dotsClass
	    }, mouseEvents));
	  };
	
	  return Dots;
	}(_react2.default.PureComponent);

/***/ },
/* 639 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	var initialState = {
	  animating: false,
	  autoplaying: null,
	  currentDirection: 0,
	  currentLeft: null,
	  currentSlide: 0,
	  direction: 1,
	  dragging: false,
	  edgeDragged: false,
	  initialized: false,
	  lazyLoadedList: [],
	  listHeight: null,
	  listWidth: null,
	  scrolling: false,
	  slideCount: null,
	  slideHeight: null,
	  slideWidth: null,
	  swipeLeft: null,
	  swiped: false, // used by swipeEvent. differentites between touch and swipe.
	  swiping: false,
	  touchObject: { startX: 0, startY: 0, curX: 0, curY: 0 },
	  trackStyle: {},
	  trackWidth: 0
	};
	
	exports.default = initialState;

/***/ },
/* 640 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.InnerSlider = undefined;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(74);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _initialState = __webpack_require__(639);
	
	var _initialState2 = _interopRequireDefault(_initialState);
	
	var _lodash = __webpack_require__(528);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _classnames = __webpack_require__(67);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _innerSliderUtils = __webpack_require__(81);
	
	var _track = __webpack_require__(642);
	
	var _dots = __webpack_require__(638);
	
	var _arrows = __webpack_require__(636);
	
	var _resizeObserverPolyfill = __webpack_require__(657);
	
	var _resizeObserverPolyfill2 = _interopRequireDefault(_resizeObserverPolyfill);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var InnerSlider = exports.InnerSlider = function (_React$Component) {
	  _inherits(InnerSlider, _React$Component);
	
	  function InnerSlider(props) {
	    _classCallCheck(this, InnerSlider);
	
	    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
	
	    _this.listRefHandler = function (ref) {
	      return _this.list = ref;
	    };
	
	    _this.trackRefHandler = function (ref) {
	      return _this.track = ref;
	    };
	
	    _this.adaptHeight = function () {
	      if (_this.props.adaptiveHeight && _this.list) {
	        var elem = _this.list.querySelector("[data-index=\"" + _this.state.currentSlide + "\"]");
	        _this.list.style.height = (0, _innerSliderUtils.getHeight)(elem) + "px";
	      }
	    };
	
	    _this.componentWillMount = function () {
	      _this.ssrInit();
	      _this.props.onInit && _this.props.onInit();
	      if (_this.props.lazyLoad) {
	        var slidesToLoad = (0, _innerSliderUtils.getOnDemandLazySlides)(_extends({}, _this.props, _this.state));
	        if (slidesToLoad.length > 0) {
	          _this.setState(function (prevState) {
	            return {
	              lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)
	            };
	          });
	          if (_this.props.onLazyLoad) {
	            _this.props.onLazyLoad(slidesToLoad);
	          }
	        }
	      }
	    };
	
	    _this.componentDidMount = function () {
	      var spec = _extends({ listRef: _this.list, trackRef: _this.track }, _this.props);
	      _this.updateState(spec, true, function () {
	        _this.adaptHeight();
	        _this.props.autoplay && _this.autoPlay("update");
	      });
	      if (_this.props.lazyLoad === "progressive") {
	        _this.lazyLoadTimer = setInterval(_this.progressiveLazyLoad, 1000);
	      }
	      _this.ro = new _resizeObserverPolyfill2.default(function () {
	        if (_this.state.animating) {
	          _this.onWindowResized(false); // don't set trackStyle hence don't break animation
	          _this.callbackTimers.push(setTimeout(function () {
	            return _this.onWindowResized();
	          }, _this.props.speed));
	        } else {
	          _this.onWindowResized();
	        }
	      });
	      _this.ro.observe(_this.list);
	      Array.prototype.forEach.call(document.querySelectorAll(".slick-slide"), function (slide) {
	        slide.onfocus = _this.props.pauseOnFocus ? _this.onSlideFocus : null;
	        slide.onblur = _this.props.pauseOnFocus ? _this.onSlideBlur : null;
	      });
	      // To support server-side rendering
	      if (!window) {
	        return;
	      }
	      if (window.addEventListener) {
	        window.addEventListener("resize", _this.onWindowResized);
	      } else {
	        window.attachEvent("onresize", _this.onWindowResized);
	      }
	    };
	
	    _this.componentWillUnmount = function () {
	      if (_this.animationEndCallback) {
	        clearTimeout(_this.animationEndCallback);
	      }
	      if (_this.lazyLoadTimer) {
	        clearInterval(_this.lazyLoadTimer);
	      }
	      if (_this.callbackTimers.length) {
	        _this.callbackTimers.forEach(function (timer) {
	          return clearTimeout(timer);
	        });
	        _this.callbackTimers = [];
	      }
	      if (window.addEventListener) {
	        window.removeEventListener("resize", _this.onWindowResized);
	      } else {
	        window.detachEvent("onresize", _this.onWindowResized);
	      }
	      if (_this.autoplayTimer) {
	        clearInterval(_this.autoplayTimer);
	      }
	    };
	
	    _this.componentWillReceiveProps = function (nextProps) {
	      var spec = _extends({
	        listRef: _this.list,
	        trackRef: _this.track
	      }, nextProps, _this.state);
	      var setTrackStyle = false;
	      for (var _iterator = Object.keys(_this.props), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
	        var _ref;
	
	        if (_isArray) {
	          if (_i >= _iterator.length) break;
	          _ref = _iterator[_i++];
	        } else {
	          _i = _iterator.next();
	          if (_i.done) break;
	          _ref = _i.value;
	        }
	
	        var key = _ref;
	
	        if (!nextProps.hasOwnProperty(key)) {
	          setTrackStyle = true;
	          break;
	        }
	        if (_typeof(nextProps[key]) === "object" || typeof nextProps[key] === "function") {
	          continue;
	        }
	        if (nextProps[key] !== _this.props[key]) {
	          setTrackStyle = true;
	          break;
	        }
	      }
	      _this.updateState(spec, setTrackStyle, function () {
	        if (_this.state.currentSlide >= _react2.default.Children.count(nextProps.children)) {
	          _this.changeSlide({
	            message: "index",
	            index: _react2.default.Children.count(nextProps.children) - nextProps.slidesToShow,
	            currentSlide: _this.state.currentSlide
	          });
	        }
	        if (nextProps.autoplay) {
	          _this.autoPlay("update");
	        } else {
	          _this.pause("paused");
	        }
	      });
	    };
	
	    _this.componentDidUpdate = function () {
	      _this.checkImagesLoad();
	      _this.props.onReInit && _this.props.onReInit();
	      if (_this.props.lazyLoad) {
	        var slidesToLoad = (0, _innerSliderUtils.getOnDemandLazySlides)(_extends({}, _this.props, _this.state));
	        if (slidesToLoad.length > 0) {
	          _this.setState(function (prevState) {
	            return {
	              lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)
	            };
	          });
	          if (_this.props.onLazyLoad) {
	            _this.props.onLazyLoad(slidesToLoad);
	          }
	        }
	      }
	      // if (this.props.onLazyLoad) {
	      //   this.props.onLazyLoad([leftMostSlide])
	      // }
	      _this.adaptHeight();
	    };
	
	    _this.onWindowResized = function (setTrackStyle) {
	      if (_this.debouncedResize) _this.debouncedResize.cancel();
	      _this.debouncedResize = (0, _lodash2.default)(function () {
	        return _this.resizeWindow(setTrackStyle);
	      }, 50);
	      _this.debouncedResize();
	    };
	
	    _this.resizeWindow = function () {
	      var setTrackStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
	
	      if (!_reactDom2.default.findDOMNode(_this.track)) return;
	      var spec = _extends({
	        listRef: _this.list,
	        trackRef: _this.track
	      }, _this.props, _this.state);
	      _this.updateState(spec, setTrackStyle, function () {
	        if (_this.props.autoplay) _this.autoPlay("update");else _this.pause("paused");
	      });
	      // animating state should be cleared while resizing, otherwise autoplay stops working
	      _this.setState({
	        animating: false
	      });
	      clearTimeout(_this.animationEndCallback);
	      delete _this.animationEndCallback;
	    };
	
	    _this.updateState = function (spec, setTrackStyle, callback) {
	      var updatedState = (0, _innerSliderUtils.initializedState)(spec);
	      spec = _extends({}, spec, updatedState, { slideIndex: updatedState.currentSlide });
	      var targetLeft = (0, _innerSliderUtils.getTrackLeft)(spec);
	      spec = _extends({}, spec, { left: targetLeft });
	      var trackStyle = (0, _innerSliderUtils.getTrackCSS)(spec);
	      if (setTrackStyle || _react2.default.Children.count(_this.props.children) !== _react2.default.Children.count(spec.children)) {
	        updatedState["trackStyle"] = trackStyle;
	      }
	      _this.setState(updatedState, callback);
	    };
	
	    _this.ssrInit = function () {
	      if (_this.props.variableWidth) {
	        var _trackWidth = 0,
	            _trackLeft = 0;
	        var childrenWidths = [];
	        var preClones = (0, _innerSliderUtils.getPreClones)(_extends({}, _this.props, _this.state, {
	          slideCount: _this.props.children.length
	        }));
	        var postClones = (0, _innerSliderUtils.getPostClones)(_extends({}, _this.props, _this.state, {
	          slideCount: _this.props.children.length
	        }));
	        _this.props.children.forEach(function (child) {
	          childrenWidths.push(child.props.style.width);
	          _trackWidth += child.props.style.width;
	        });
	        for (var i = 0; i < preClones; i++) {
	          _trackLeft += childrenWidths[childrenWidths.length - 1 - i];
	          _trackWidth += childrenWidths[childrenWidths.length - 1 - i];
	        }
	        for (var _i2 = 0; _i2 < postClones; _i2++) {
	          _trackWidth += childrenWidths[_i2];
	        }
	        for (var _i3 = 0; _i3 < _this.state.currentSlide; _i3++) {
	          _trackLeft += childrenWidths[_i3];
	        }
	        var _trackStyle = {
	          width: _trackWidth + "px",
	          left: -_trackLeft + "px"
	        };
	        if (_this.props.centerMode) {
	          var currentWidth = childrenWidths[_this.state.currentSlide] + "px";
	          _trackStyle.left = "calc(" + _trackStyle.left + " + (100% - " + currentWidth + ") / 2 ) ";
	        }
	        _this.setState({
	          trackStyle: _trackStyle
	        });
	        return;
	      }
	      var childrenCount = _react2.default.Children.count(_this.props.children);
	      var spec = _extends({}, _this.props, _this.state, { slideCount: childrenCount });
	      var slideCount = (0, _innerSliderUtils.getPreClones)(spec) + (0, _innerSliderUtils.getPostClones)(spec) + childrenCount;
	      var trackWidth = 100 / _this.props.slidesToShow * slideCount;
	      var slideWidth = 100 / slideCount;
	      var trackLeft = -slideWidth * ((0, _innerSliderUtils.getPreClones)(spec) + _this.state.currentSlide) * trackWidth / 100;
	      if (_this.props.centerMode) {
	        trackLeft += (100 - slideWidth * trackWidth / 100) / 2;
	      }
	      var trackStyle = {
	        width: trackWidth + "%",
	        left: trackLeft + "%"
	      };
	      _this.setState({
	        slideWidth: slideWidth + "%",
	        trackStyle: trackStyle
	      });
	    };
	
	    _this.checkImagesLoad = function () {
	      var images = document.querySelectorAll(".slick-slide img");
	      var imagesCount = images.length,
	          loadedCount = 0;
	      Array.prototype.forEach.call(images, function (image) {
	        var handler = function handler() {
	          return ++loadedCount && loadedCount >= imagesCount && _this.onWindowResized();
	        };
	        if (!image.onclick) {
	          image.onclick = function () {
	            return image.parentNode.focus();
	          };
	        } else {
	          var prevClickHandler = image.onclick;
	          image.onclick = function () {
	            prevClickHandler();
	            image.parentNode.focus();
	          };
	        }
	        if (!image.onload) {
	          if (_this.props.lazyLoad) {
	            image.onload = function () {
	              _this.adaptHeight();
	              _this.callbackTimers.push(setTimeout(_this.onWindowResized, _this.props.speed));
	            };
	          } else {
	            image.onload = handler;
	            image.onerror = function () {
	              handler();
	              _this.props.onLazyLoadError && _this.props.onLazyLoadError();
	            };
	          }
	        }
	      });
	    };
	
	    _this.progressiveLazyLoad = function () {
	      var slidesToLoad = [];
	      var spec = _extends({}, _this.props, _this.state);
	      for (var index = _this.state.currentSlide; index < _this.state.slideCount + (0, _innerSliderUtils.getPostClones)(spec); index++) {
	        if (_this.state.lazyLoadedList.indexOf(index) < 0) {
	          slidesToLoad.push(index);
	          break;
	        }
	      }
	      for (var _index = _this.state.currentSlide - 1; _index >= -(0, _innerSliderUtils.getPreClones)(spec); _index--) {
	        if (_this.state.lazyLoadedList.indexOf(_index) < 0) {
	          slidesToLoad.push(_index);
	          break;
	        }
	      }
	      if (slidesToLoad.length > 0) {
	        _this.setState(function (state) {
	          return {
	            lazyLoadedList: state.lazyLoadedList.concat(slidesToLoad)
	          };
	        });
	        if (_this.props.onLazyLoad) {
	          _this.props.onLazyLoad(slidesToLoad);
	        }
	      } else {
	        if (_this.lazyLoadTimer) {
	          clearInterval(_this.lazyLoadTimer);
	          delete _this.lazyLoadTimer;
	        }
	      }
	    };
	
	    _this.slideHandler = function (index) {
	      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	      var _this$props = _this.props,
	          asNavFor = _this$props.asNavFor,
	          currentSlide = _this$props.currentSlide,
	          beforeChange = _this$props.beforeChange,
	          onLazyLoad = _this$props.onLazyLoad,
	          speed = _this$props.speed,
	          afterChange = _this$props.afterChange;
	
	      var _slideHandler = (0, _innerSliderUtils.slideHandler)(_extends({
	        index: index
	      }, _this.props, _this.state, {
	        trackRef: _this.track,
	        useCSS: _this.props.useCSS && !dontAnimate
	      })),
	          state = _slideHandler.state,
	          nextState = _slideHandler.nextState;
	
	      if (!state) return;
	      beforeChange && beforeChange(currentSlide, state.currentSlide);
	      var slidesToLoad = state.lazyLoadedList.filter(function (value) {
	        return _this.state.lazyLoadedList.indexOf(value) < 0;
	      });
	      onLazyLoad && slidesToLoad.length > 0 && onLazyLoad(slidesToLoad);
	      _this.setState(state, function () {
	        asNavFor && asNavFor.innerSlider.state.currentSlide !== currentSlide && asNavFor.innerSlider.slideHandler(index);
	        if (!nextState) return;
	        _this.animationEndCallback = setTimeout(function () {
	          var animating = nextState.animating,
	              firstBatch = _objectWithoutProperties(nextState, ["animating"]);
	
	          _this.setState(firstBatch, function () {
	            _this.callbackTimers.push(setTimeout(function () {
	              return _this.setState({ animating: animating });
	            }, 10));
	            afterChange && afterChange(state.currentSlide);
	            delete _this.animationEndCallback;
	          });
	        }, speed);
	      });
	    };
	
	    _this.changeSlide = function (options) {
	      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	      var spec = _extends({}, _this.props, _this.state);
	      var targetSlide = (0, _innerSliderUtils.changeSlide)(spec, options);
	      if (targetSlide !== 0 && !targetSlide) return;
	      if (dontAnimate === true) {
	        _this.slideHandler(targetSlide, dontAnimate);
	      } else {
	        _this.slideHandler(targetSlide);
	      }
	    };
	
	    _this.clickHandler = function (e) {
	      if (_this.clickable === false) {
	        e.stopPropagation();
	        e.preventDefault();
	      }
	      _this.clickable = true;
	    };
	
	    _this.keyHandler = function (e) {
	      var dir = (0, _innerSliderUtils.keyHandler)(e, _this.props.accessibility, _this.props.rtl);
	      dir !== "" && _this.changeSlide({ message: dir });
	    };
	
	    _this.selectHandler = function (options) {
	      _this.changeSlide(options);
	    };
	
	    _this.disableBodyScroll = function () {
	      var preventDefault = function preventDefault(e) {
	        e = e || window.event;
	        if (e.preventDefault) e.preventDefault();
	        e.returnValue = false;
	      };
	      window.ontouchmove = preventDefault;
	    };
	
	    _this.enableBodyScroll = function () {
	      window.ontouchmove = null;
	    };
	
	    _this.swipeStart = function (e) {
	      if (_this.props.verticalSwiping) {
	        _this.disableBodyScroll();
	      }
	      var state = (0, _innerSliderUtils.swipeStart)(e, _this.props.swipe, _this.props.draggable);
	      state !== "" && _this.setState(state);
	    };
	
	    _this.swipeMove = function (e) {
	      var state = (0, _innerSliderUtils.swipeMove)(e, _extends({}, _this.props, _this.state, {
	        trackRef: _this.track,
	        listRef: _this.list,
	        slideIndex: _this.state.currentSlide
	      }));
	      if (!state) return;
	      if (state["swiping"]) {
	        _this.clickable = false;
	      }
	      _this.setState(state);
	    };
	
	    _this.swipeEnd = function (e) {
	      var state = (0, _innerSliderUtils.swipeEnd)(e, _extends({}, _this.props, _this.state, {
	        trackRef: _this.track,
	        listRef: _this.list,
	        slideIndex: _this.state.currentSlide
	      }));
	      if (!state) return;
	      var triggerSlideHandler = state["triggerSlideHandler"];
	      delete state["triggerSlideHandler"];
	      _this.setState(state);
	      if (triggerSlideHandler === undefined) return;
	      _this.slideHandler(triggerSlideHandler);
	      if (_this.props.verticalSwiping) {
	        _this.enableBodyScroll();
	      }
	    };
	
	    _this.slickPrev = function () {
	      // this and fellow methods are wrapped in setTimeout
	      // to make sure initialize setState has happened before
	      // any of such methods are called
	      _this.callbackTimers.push(setTimeout(function () {
	        return _this.changeSlide({ message: "previous" });
	      }, 0));
	    };
	
	    _this.slickNext = function () {
	      _this.callbackTimers.push(setTimeout(function () {
	        return _this.changeSlide({ message: "next" });
	      }, 0));
	    };
	
	    _this.slickGoTo = function (slide) {
	      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	      slide = Number(slide);
	      if (isNaN(slide)) return "";
	      _this.callbackTimers.push(setTimeout(function () {
	        return _this.changeSlide({
	          message: "index",
	          index: slide,
	          currentSlide: _this.state.currentSlide
	        }, dontAnimate);
	      }, 0));
	    };
	
	    _this.play = function () {
	      var nextIndex;
	      if (_this.props.rtl) {
	        nextIndex = _this.state.currentSlide - _this.props.slidesToScroll;
	      } else {
	        if ((0, _innerSliderUtils.canGoNext)(_extends({}, _this.props, _this.state))) {
	          nextIndex = _this.state.currentSlide + _this.props.slidesToScroll;
	        } else {
	          return false;
	        }
	      }
	
	      _this.slideHandler(nextIndex);
	    };
	
	    _this.autoPlay = function (playType) {
	      if (_this.autoplayTimer) {
	        clearInterval(_this.autoplayTimer);
	      }
	      var autoplaying = _this.state.autoplaying;
	      if (playType === "update") {
	        if (autoplaying === "hovered" || autoplaying === "focused" || autoplaying === "paused") {
	          return;
	        }
	      } else if (playType === "leave") {
	        if (autoplaying === "paused" || autoplaying === "focused") {
	          return;
	        }
	      } else if (playType === "blur") {
	        if (autoplaying === "paused" || autoplaying === "hovered") {
	          return;
	        }
	      }
	      _this.autoplayTimer = setInterval(_this.play, _this.props.autoplaySpeed + 50);
	      _this.setState({ autoplaying: "playing" });
	    };
	
	    _this.pause = function (pauseType) {
	      if (_this.autoplayTimer) {
	        clearInterval(_this.autoplayTimer);
	        _this.autoplayTimer = null;
	      }
	      var autoplaying = _this.state.autoplaying;
	      if (pauseType === "paused") {
	        _this.setState({ autoplaying: "paused" });
	      } else if (pauseType === "focused") {
	        if (autoplaying === "hovered" || autoplaying === "playing") {
	          _this.setState({ autoplaying: "focused" });
	        }
	      } else {
	        // pauseType  is 'hovered'
	        if (autoplaying === "playing") {
	          _this.setState({ autoplaying: "hovered" });
	        }
	      }
	    };
	
	    _this.onDotsOver = function () {
	      return _this.props.autoplay && _this.pause("hovered");
	    };
	
	    _this.onDotsLeave = function () {
	      return _this.props.autoplay && _this.state.autoplaying === "hovered" && _this.autoPlay("leave");
	    };
	
	    _this.onTrackOver = function () {
	      return _this.props.autoplay && _this.pause("hovered");
	    };
	
	    _this.onTrackLeave = function () {
	      return _this.props.autoplay && _this.state.autoplaying === "hovered" && _this.autoPlay("leave");
	    };
	
	    _this.onSlideFocus = function () {
	      return _this.props.autoplay && _this.pause("focused");
	    };
	
	    _this.onSlideBlur = function () {
	      return _this.props.autoplay && _this.state.autoplaying === "focused" && _this.autoPlay("blur");
	    };
	
	    _this.render = function () {
	      var className = (0, _classnames2.default)("slick-slider", _this.props.className, {
	        "slick-vertical": _this.props.vertical,
	        "slick-initialized": true
	      });
	      var spec = _extends({}, _this.props, _this.state);
	      var trackProps = (0, _innerSliderUtils.extractObject)(spec, ["fade", "cssEase", "speed", "infinite", "centerMode", "focusOnSelect", "currentSlide", "lazyLoad", "lazyLoadedList", "rtl", "slideWidth", "slideHeight", "listHeight", "vertical", "slidesToShow", "slidesToScroll", "slideCount", "trackStyle", "variableWidth", "unslick", "centerPadding"]);
	      var pauseOnHover = _this.props.pauseOnHover;
	
	      trackProps = _extends({}, trackProps, {
	        onMouseEnter: pauseOnHover ? _this.onTrackOver : null,
	        onMouseLeave: pauseOnHover ? _this.onTrackLeave : null,
	        onMouseOver: pauseOnHover ? _this.onTrackOver : null,
	        focusOnSelect: _this.props.focusOnSelect ? _this.selectHandler : null
	      });
	
	      var dots;
	      if (_this.props.dots === true && _this.state.slideCount >= _this.props.slidesToShow) {
	        var dotProps = (0, _innerSliderUtils.extractObject)(spec, ["dotsClass", "slideCount", "slidesToShow", "currentSlide", "slidesToScroll", "clickHandler", "children", "customPaging", "infinite", "appendDots"]);
	        var pauseOnDotsHover = _this.props.pauseOnDotsHover;
	
	        dotProps = _extends({}, dotProps, {
	          clickHandler: _this.changeSlide,
	          onMouseEnter: pauseOnDotsHover ? _this.onDotsLeave : null,
	          onMouseOver: pauseOnDotsHover ? _this.onDotsOver : null,
	          onMouseLeave: pauseOnDotsHover ? _this.onDotsLeave : null
	        });
	        dots = _react2.default.createElement(_dots.Dots, dotProps);
	      }
	
	      var prevArrow, nextArrow;
	      var arrowProps = (0, _innerSliderUtils.extractObject)(spec, ["infinite", "centerMode", "currentSlide", "slideCount", "slidesToShow", "prevArrow", "nextArrow"]);
	      arrowProps.clickHandler = _this.changeSlide;
	
	      if (_this.props.arrows) {
	        prevArrow = _react2.default.createElement(_arrows.PrevArrow, arrowProps);
	        nextArrow = _react2.default.createElement(_arrows.NextArrow, arrowProps);
	      }
	
	      var verticalHeightStyle = null;
	
	      if (_this.props.vertical) {
	        verticalHeightStyle = {
	          height: _this.state.listHeight
	        };
	      }
	
	      var centerPaddingStyle = null;
	
	      if (_this.props.vertical === false) {
	        if (_this.props.centerMode === true) {
	          centerPaddingStyle = {
	            padding: "0px " + _this.props.centerPadding
	          };
	        }
	      } else {
	        if (_this.props.centerMode === true) {
	          centerPaddingStyle = {
	            padding: _this.props.centerPadding + " 0px"
	          };
	        }
	      }
	
	      var listStyle = _extends({}, verticalHeightStyle, centerPaddingStyle);
	      var touchMove = _this.props.touchMove;
	      var listProps = {
	        className: "slick-list",
	        style: listStyle,
	        onClick: _this.clickHandler,
	        onMouseDown: touchMove ? _this.swipeStart : null,
	        onMouseMove: _this.state.dragging && touchMove ? _this.swipeMove : null,
	        onMouseUp: touchMove ? _this.swipeEnd : null,
	        onMouseLeave: _this.state.dragging && touchMove ? _this.swipeEnd : null,
	        onTouchStart: touchMove ? _this.swipeStart : null,
	        onTouchMove: _this.state.dragging && touchMove ? _this.swipeMove : null,
	        onTouchEnd: touchMove ? _this.swipeEnd : null,
	        onTouchCancel: _this.state.dragging && touchMove ? _this.swipeEnd : null,
	        onKeyDown: _this.props.accessibility ? _this.keyHandler : null
	      };
	
	      var innerSliderProps = {
	        className: className,
	        dir: "ltr"
	      };
	
	      if (_this.props.unslick) {
	        listProps = { className: "slick-list" };
	        innerSliderProps = { className: className };
	      }
	      return _react2.default.createElement(
	        "div",
	        innerSliderProps,
	        !_this.props.unslick ? prevArrow : "",
	        _react2.default.createElement(
	          "div",
	          _extends({ ref: _this.listRefHandler }, listProps),
	          _react2.default.createElement(
	            _track.Track,
	            _extends({ ref: _this.trackRefHandler }, trackProps),
	            _this.props.children
	          )
	        ),
	        !_this.props.unslick ? nextArrow : "",
	        !_this.props.unslick ? dots : ""
	      );
	    };
	
	    _this.list = null;
	    _this.track = null;
	    _this.state = _extends({}, _initialState2.default, {
	      currentSlide: _this.props.initialSlide,
	      slideCount: _react2.default.Children.count(_this.props.children)
	    });
	    _this.callbackTimers = [];
	    _this.clickable = true;
	    _this.debouncedResize = null;
	    return _this;
	  }
	
	  return InnerSlider;
	}(_react2.default.Component);

/***/ },
/* 641 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _innerSlider = __webpack_require__(640);
	
	var _json2mq = __webpack_require__(525);
	
	var _json2mq2 = _interopRequireDefault(_json2mq);
	
	var _defaultProps = __webpack_require__(637);
	
	var _defaultProps2 = _interopRequireDefault(_defaultProps);
	
	var _innerSliderUtils = __webpack_require__(81);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var enquire = (0, _innerSliderUtils.canUseDOM)() && __webpack_require__(450);
	
	var Slider = function (_React$Component) {
	  _inherits(Slider, _React$Component);
	
	  function Slider(props) {
	    _classCallCheck(this, Slider);
	
	    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
	
	    _this.innerSliderRefHandler = function (ref) {
	      return _this.innerSlider = ref;
	    };
	
	    _this.slickPrev = function () {
	      return _this.innerSlider.slickPrev();
	    };
	
	    _this.slickNext = function () {
	      return _this.innerSlider.slickNext();
	    };
	
	    _this.slickGoTo = function (slide) {
	      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	      return _this.innerSlider.slickGoTo(slide, dontAnimate);
	    };
	
	    _this.slickPause = function () {
	      return _this.innerSlider.pause("paused");
	    };
	
	    _this.slickPlay = function () {
	      return _this.innerSlider.autoPlay("play");
	    };
	
	    _this.state = {
	      breakpoint: null
	    };
	    _this._responsiveMediaHandlers = [];
	    return _this;
	  }
	
	  Slider.prototype.media = function media(query, handler) {
	    // javascript handler for  css media query
	    enquire.register(query, handler);
	    this._responsiveMediaHandlers.push({ query: query, handler: handler });
	  };
	
	  // handles responsive breakpoints
	
	
	  Slider.prototype.componentWillMount = function componentWillMount() {
	    var _this2 = this;
	
	    // performance monitoring
	    //if (process.env.NODE_ENV !== 'production') {
	    //const { whyDidYouUpdate } = require('why-did-you-update')
	    //whyDidYouUpdate(React)
	    //}
	    if (this.props.responsive) {
	      var breakpoints = this.props.responsive.map(function (breakpt) {
	        return breakpt.breakpoint;
	      });
	      // sort them in increasing order of their numerical value
	      breakpoints.sort(function (x, y) {
	        return x - y;
	      });
	
	      breakpoints.forEach(function (breakpoint, index) {
	        // media query for each breakpoint
	        var bQuery = void 0;
	        if (index === 0) {
	          bQuery = (0, _json2mq2.default)({ minWidth: 0, maxWidth: breakpoint });
	        } else {
	          bQuery = (0, _json2mq2.default)({
	            minWidth: breakpoints[index - 1] + 1,
	            maxWidth: breakpoint
	          });
	        }
	        // when not using server side rendering
	        (0, _innerSliderUtils.canUseDOM)() && _this2.media(bQuery, function () {
	          _this2.setState({ breakpoint: breakpoint });
	        });
	      });
	
	      // Register media query for full screen. Need to support resize from small to large
	      // convert javascript object to media query string
	      var query = (0, _json2mq2.default)({ minWidth: breakpoints.slice(-1)[0] });
	
	      (0, _innerSliderUtils.canUseDOM)() && this.media(query, function () {
	        _this2.setState({ breakpoint: null });
	      });
	    }
	  };
	
	  Slider.prototype.componentWillUnmount = function componentWillUnmount() {
	    this._responsiveMediaHandlers.forEach(function (obj) {
	      enquire.unregister(obj.query, obj.handler);
	    });
	  };
	
	  Slider.prototype.render = function render() {
	    var _this3 = this;
	
	    var settings;
	    var newProps;
	    if (this.state.breakpoint) {
	      newProps = this.props.responsive.filter(function (resp) {
	        return resp.breakpoint === _this3.state.breakpoint;
	      });
	      settings = newProps[0].settings === "unslick" ? "unslick" : _extends({}, _defaultProps2.default, this.props, newProps[0].settings);
	    } else {
	      settings = _extends({}, _defaultProps2.default, this.props);
	    }
	
	    // force scrolling by one if centerMode is on
	    if (settings.centerMode) {
	      if (settings.slidesToScroll > 1 && ("production") !== "production") {
	        console.warn("slidesToScroll should be equal to 1 in centerMode, you are using " + settings.slidesToScroll);
	      }
	      settings.slidesToScroll = 1;
	    }
	    // force showing one slide and scrolling by one if the fade mode is on
	    if (settings.fade) {
	      if (settings.slidesToShow > 1 && ("production") !== "production") {
	        console.warn("slidesToShow should be equal to 1 when fade is true, you're using " + settings.slidesToShow);
	      }
	      if (settings.slidesToScroll > 1 && ("production") !== "production") {
	        console.warn("slidesToScroll should be equal to 1 when fade is true, you're using " + settings.slidesToScroll);
	      }
	      settings.slidesToShow = 1;
	      settings.slidesToScroll = 1;
	    }
	
	    // makes sure that children is an array, even when there is only 1 child
	    var children = _react2.default.Children.toArray(this.props.children);
	
	    // Children may contain false or null, so we should filter them
	    // children may also contain string filled with spaces (in certain cases where we use jsx strings)
	    children = children.filter(function (child) {
	      if (typeof child === "string") {
	        return !!child.trim();
	      }
	      return !!child;
	    });
	
	    // rows and slidesPerRow logic is handled here
	    if (settings.variableWidth && (settings.rows > 1 || settings.slidesPerRow > 1)) {
	      console.warn("variableWidth is not supported in case of rows > 1 or slidesPerRow > 1");
	      settings.variableWidth = false;
	    }
	    var newChildren = [];
	    var currentWidth = null;
	    for (var i = 0; i < children.length; i += settings.rows * settings.slidesPerRow) {
	      var newSlide = [];
	      for (var j = i; j < i + settings.rows * settings.slidesPerRow; j += settings.slidesPerRow) {
	        var row = [];
	        for (var k = j; k < j + settings.slidesPerRow; k += 1) {
	          if (settings.variableWidth && children[k].props.style) {
	            currentWidth = children[k].props.style.width;
	          }
	          if (k >= children.length) break;
	          row.push(_react2.default.cloneElement(children[k], {
	            key: 100 * i + 10 * j + k,
	            tabIndex: -1,
	            style: {
	              width: 100 / settings.slidesPerRow + "%",
	              display: "inline-block"
	            }
	          }));
	        }
	        newSlide.push(_react2.default.createElement(
	          "div",
	          { key: 10 * i + j },
	          row
	        ));
	      }
	      if (settings.variableWidth) {
	        newChildren.push(_react2.default.createElement(
	          "div",
	          { key: i, style: { width: currentWidth } },
	          newSlide
	        ));
	      } else {
	        newChildren.push(_react2.default.createElement(
	          "div",
	          { key: i },
	          newSlide
	        ));
	      }
	    }
	
	    if (settings === "unslick") {
	      var className = "regular slider " + (this.props.className || "");
	      return _react2.default.createElement(
	        "div",
	        { className: className },
	        newChildren
	      );
	    } else if (newChildren.length <= settings.slidesToShow) {
	      settings.unslick = true;
	    }
	    return _react2.default.createElement(
	      _innerSlider.InnerSlider,
	      _extends({ ref: this.innerSliderRefHandler }, settings),
	      newChildren
	    );
	  };
	
	  return Slider;
	}(_react2.default.Component);
	
	exports.default = Slider;

/***/ },
/* 642 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.Track = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(67);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _innerSliderUtils = __webpack_require__(81);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	// given specifications/props for a slide, fetch all the classes that need to be applied to the slide
	var getSlideClasses = function getSlideClasses(spec) {
	  var slickActive, slickCenter, slickCloned;
	  var centerOffset, index;
	
	  if (spec.rtl) {
	    index = spec.slideCount - 1 - spec.index;
	  } else {
	    index = spec.index;
	  }
	  slickCloned = index < 0 || index >= spec.slideCount;
	  if (spec.centerMode) {
	    centerOffset = Math.floor(spec.slidesToShow / 2);
	    slickCenter = (index - spec.currentSlide) % spec.slideCount === 0;
	    if (index > spec.currentSlide - centerOffset - 1 && index <= spec.currentSlide + centerOffset) {
	      slickActive = true;
	    }
	  } else {
	    slickActive = spec.currentSlide <= index && index < spec.currentSlide + spec.slidesToShow;
	  }
	  var slickCurrent = index === spec.currentSlide;
	  return {
	    "slick-slide": true,
	    "slick-active": slickActive,
	    "slick-center": slickCenter,
	    "slick-cloned": slickCloned,
	    "slick-current": slickCurrent // dubious in case of RTL
	  };
	};
	
	var getSlideStyle = function getSlideStyle(spec) {
	  var style = {};
	
	  if (spec.variableWidth === undefined || spec.variableWidth === false) {
	    style.width = spec.slideWidth;
	  }
	
	  if (spec.fade) {
	    style.position = "relative";
	    if (spec.vertical) {
	      style.top = -spec.index * parseInt(spec.slideHeight);
	    } else {
	      style.left = -spec.index * parseInt(spec.slideWidth);
	    }
	    style.opacity = spec.currentSlide === spec.index ? 1 : 0;
	    style.transition = "opacity " + spec.speed + "ms " + spec.cssEase + ", " + "visibility " + spec.speed + "ms " + spec.cssEase;
	    style.WebkitTransition = "opacity " + spec.speed + "ms " + spec.cssEase + ", " + "visibility " + spec.speed + "ms " + spec.cssEase;
	  }
	
	  return style;
	};
	
	var getKey = function getKey(child, fallbackKey) {
	  return child.key || fallbackKey;
	};
	
	var renderSlides = function renderSlides(spec) {
	  var key;
	  var slides = [];
	  var preCloneSlides = [];
	  var postCloneSlides = [];
	  var childrenCount = _react2.default.Children.count(spec.children);
	  var startIndex = (0, _innerSliderUtils.lazyStartIndex)(spec);
	  var endIndex = (0, _innerSliderUtils.lazyEndIndex)(spec);
	
	  _react2.default.Children.forEach(spec.children, function (elem, index) {
	    var child = void 0;
	    var childOnClickOptions = {
	      message: "children",
	      index: index,
	      slidesToScroll: spec.slidesToScroll,
	      currentSlide: spec.currentSlide
	    };
	
	    // in case of lazyLoad, whether or not we want to fetch the slide
	    if (!spec.lazyLoad || spec.lazyLoad && spec.lazyLoadedList.indexOf(index) >= 0) {
	      child = elem;
	    } else {
	      child = _react2.default.createElement("div", null);
	    }
	    var childStyle = getSlideStyle(_extends({}, spec, { index: index }));
	    var slideClass = child.props.className || "";
	    var slideClasses = getSlideClasses(_extends({}, spec, { index: index }));
	    // push a cloned element of the desired slide
	    slides.push(_react2.default.cloneElement(child, {
	      key: "original" + getKey(child, index),
	      "data-index": index,
	      className: (0, _classnames2.default)(slideClasses, slideClass),
	      tabIndex: "-1",
	      "aria-hidden": !slideClasses["slick-active"],
	      style: _extends({ outline: "none" }, child.props.style || {}, childStyle),
	      onClick: function onClick(e) {
	        child.props && child.props.onClick && child.props.onClick(e);
	        if (spec.focusOnSelect) {
	          spec.focusOnSelect(childOnClickOptions);
	        }
	      }
	    }));
	
	    // if slide needs to be precloned or postcloned
	    if (spec.infinite && spec.fade === false) {
	      var preCloneNo = childrenCount - index;
	      if (preCloneNo <= (0, _innerSliderUtils.getPreClones)(spec) && childrenCount !== spec.slidesToShow) {
	        key = -preCloneNo;
	        if (key >= startIndex) {
	          child = elem;
	        }
	        slideClasses = getSlideClasses(_extends({}, spec, { index: key }));
	        preCloneSlides.push(_react2.default.cloneElement(child, {
	          key: "precloned" + getKey(child, key),
	          "data-index": key,
	          tabIndex: "-1",
	          className: (0, _classnames2.default)(slideClasses, slideClass),
	          "aria-hidden": !slideClasses["slick-active"],
	          style: _extends({}, child.props.style || {}, childStyle),
	          onClick: function onClick(e) {
	            child.props && child.props.onClick && child.props.onClick(e);
	            if (spec.focusOnSelect) {
	              spec.focusOnSelect(childOnClickOptions);
	            }
	          }
	        }));
	      }
	
	      if (childrenCount !== spec.slidesToShow) {
	        key = childrenCount + index;
	        if (key < endIndex) {
	          child = elem;
	        }
	        slideClasses = getSlideClasses(_extends({}, spec, { index: key }));
	        postCloneSlides.push(_react2.default.cloneElement(child, {
	          key: "postcloned" + getKey(child, key),
	          "data-index": key,
	          tabIndex: "-1",
	          className: (0, _classnames2.default)(slideClasses, slideClass),
	          "aria-hidden": !slideClasses["slick-active"],
	          style: _extends({}, child.props.style || {}, childStyle),
	          onClick: function onClick(e) {
	            child.props && child.props.onClick && child.props.onClick(e);
	            if (spec.focusOnSelect) {
	              spec.focusOnSelect(childOnClickOptions);
	            }
	          }
	        }));
	      }
	    }
	  });
	
	  if (spec.rtl) {
	    return preCloneSlides.concat(slides, postCloneSlides).reverse();
	  } else {
	    return preCloneSlides.concat(slides, postCloneSlides);
	  }
	};
	
	var Track = exports.Track = function (_React$PureComponent) {
	  _inherits(Track, _React$PureComponent);
	
	  function Track() {
	    _classCallCheck(this, Track);
	
	    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
	  }
	
	  Track.prototype.render = function render() {
	    var slides = renderSlides(this.props);
	    var _props = this.props,
	        onMouseEnter = _props.onMouseEnter,
	        onMouseOver = _props.onMouseOver,
	        onMouseLeave = _props.onMouseLeave;
	
	    var mouseEvents = { onMouseEnter: onMouseEnter, onMouseOver: onMouseOver, onMouseLeave: onMouseLeave };
	    return _react2.default.createElement(
	      "div",
	      _extends({
	        className: "slick-track",
	        style: this.props.trackStyle
	      }, mouseEvents),
	      slides
	    );
	  };
	
	  return Track;
	}(_react2.default.PureComponent);

/***/ },
/* 643 */
106,
/* 644 */
[664, 50],
/* 645 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(644);
	var ReactElement = __webpack_require__(49);
	
	var emptyFunction = __webpack_require__(24);
	var traverseAllChildren = __webpack_require__(653);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func,
	      context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result,
	      keyPrefix = bookKeeping.keyPrefix,
	      func = bookKeeping.func,
	      context = bookKeeping.context;
	
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

/***/ },
/* 646 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(50),
	    _assign = __webpack_require__(14);
	
	var ReactComponent = __webpack_require__(123);
	var ReactElement = __webpack_require__(49);
	var ReactPropTypeLocationNames = __webpack_require__(321);
	var ReactNoopUpdateQueue = __webpack_require__(124);
	
	var emptyObject = __webpack_require__(57);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var MIXINS_KEY = 'mixins';
	
	// Helper function to allow the creation of anonymous functions which do not
	// have .name set to the name of the variable being assigned to.
	function identity(fn) {
	  return fn;
	}
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	
	
	var injectedMixins = [];
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: 'DEFINE_MANY',
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: 'DEFINE_MANY',
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: 'DEFINE_MANY',
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: 'DEFINE_MANY',
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: 'DEFINE_MANY',
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: 'DEFINE_MANY_MERGED',
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: 'DEFINE_MANY_MERGED',
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: 'DEFINE_MANY_MERGED',
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: 'DEFINE_ONCE',
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: 'DEFINE_MANY',
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: 'DEFINE_MANY',
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: 'DEFINE_ONCE',
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: 'DEFINE_MANY',
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: 'OVERRIDE_BASE'
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, childContextTypes, 'childContext');
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, contextTypes, 'context');
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (false) {
	      validateTypeDef(Constructor, propTypes, 'prop');
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };
	
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}
	
	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === 'OVERRIDE_BASE') ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (false) {
	      var typeofSpec = typeof spec;
	      var isMixinValid = typeofSpec === 'object' && spec !== null;
	
	      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }
	
	    return;
	  }
	
	  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;
	
	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }
	
	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === 'DEFINE_MANY_MERGED') {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === 'DEFINE_MANY') {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (false) {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;
	
	    var isInherited = name in Constructor;
	    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (false) {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};
	
	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    // To keep our warnings more understandable, we'll use a little hack here to
	    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
	    // unnecessarily identify a class without displayName as 'Constructor'.
	    var Constructor = identity(function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (false) {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;
	
	      this.state = initialState;
	    });
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (false) {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;
	
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;

/***/ },
/* 647 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(49);
	
	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (false) {
	  var ReactElementValidator = require('./ReactElementValidator');
	  createDOMFactory = ReactElementValidator.createFactory;
	}
	
	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),
	
	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};
	
	module.exports = ReactDOMFactories;

/***/ },
/* 648 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(49);
	var ReactPropTypeLocationNames = __webpack_require__(321);
	var ReactPropTypesSecret = __webpack_require__(649);
	
	var emptyFunction = __webpack_require__(24);
	var getIteratorFn = __webpack_require__(323);
	var warning = __webpack_require__(11);
	
	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */
	
	var ANONYMOUS = '<<anonymous>>';
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/
	
	/**
	 * We use an Error-like object for backward compatibility as people may call
	 * PropTypes directly and inspect their output. However we don't use real
	 * Errors anymore. We don't inspect their stack anyway, and creating them
	 * is prohibitively expensive if they are created too often, such as what
	 * happens in oneOfType() for any type before the one that matched.
	 */
	function PropTypeError(message) {
	  this.message = message;
	  this.stack = '';
	}
	// Make `instanceof Error` still work for returned errors.
	PropTypeError.prototype = Error.prototype;
	
	function createChainableTypeChecker(validate) {
	  if (false) {
	    var manualPropTypeCallCache = {};
	  }
	  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (false) {
	      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
	        var cacheKey = componentName + ':' + propName;
	        if (!manualPropTypeCallCache[cacheKey]) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;
	          manualPropTypeCallCache[cacheKey] = true;
	        }
	      }
	    }
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        if (props[propName] === null) {
	          return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	        }
	        return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName, secret) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);
	
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!ReactElement.isValidElement(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	     false ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	     false ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	
	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }
	
	      return true;
	    default:
	      return false;
	  }
	}
	
	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }
	
	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }
	
	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }
	
	  return false;
	}
	
	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}
	
	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}
	
	module.exports = ReactPropTypes;

/***/ },
/* 649 */
578,
/* 650 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(14);
	
	var ReactComponent = __webpack_require__(123);
	var ReactNoopUpdateQueue = __webpack_require__(124);
	
	var emptyObject = __webpack_require__(57);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;
	
	module.exports = ReactPureComponent;

/***/ },
/* 651 */
583,
/* 652 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	'use strict';
	
	var _prodInvariant = __webpack_require__(50);
	
	var ReactElement = __webpack_require__(49);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}
	
	module.exports = onlyChild;

/***/ },
/* 653 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(50);
	
	var ReactCurrentOwner = __webpack_require__(28);
	var REACT_ELEMENT_TYPE = __webpack_require__(320);
	
	var getIteratorFn = __webpack_require__(323);
	var invariant = __webpack_require__(8);
	var KeyEscapeUtils = __webpack_require__(643);
	var warning = __webpack_require__(11);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (false) {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (false) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;

/***/ },
/* 654 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports['default'] = applyMiddleware;
	
	var _compose = __webpack_require__(324);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  return function (createStore) {
	    return function (reducer, preloadedState, enhancer) {
	      var store = createStore(reducer, preloadedState, enhancer);
	      var _dispatch = store.dispatch;
	      var chain = [];
	
	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch(action) {
	          return _dispatch(action);
	        }
	      };
	      chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);
	
	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}

/***/ },
/* 655 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = bindActionCreators;
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(undefined, arguments));
	  };
	}
	
	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }
	
	  if (typeof actionCreators !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }
	
	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}

/***/ },
/* 656 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = combineReducers;
	
	var _createStore = __webpack_require__(325);
	
	var _isPlainObject = __webpack_require__(101);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _warning = __webpack_require__(326);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';
	
	  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';
	}
	
	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';
	
	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }
	
	  if (!(0, _isPlainObject2['default'])(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }
	
	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
	  });
	
	  unexpectedKeys.forEach(function (key) {
	    unexpectedKeyCache[key] = true;
	  });
	
	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}
	
	function assertReducerSanity(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });
	
	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');
	    }
	
	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');
	    }
	  });
	}
	
	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];
	
	    if (false) {
	      if (typeof reducers[key] === 'undefined') {
	        (0, _warning2['default'])('No reducer provided for key "' + key + '"');
	      }
	    }
	
	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);
	
	  if (false) {
	    var unexpectedKeyCache = {};
	  }
	
	  var sanityError;
	  try {
	    assertReducerSanity(finalReducers);
	  } catch (e) {
	    sanityError = e;
	  }
	
	  return function combination() {
	    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var action = arguments[1];
	
	    if (sanityError) {
	      throw sanityError;
	    }
	
	    if (false) {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
	      if (warningMessage) {
	        (0, _warning2['default'])(warningMessage);
	      }
	    }
	
	    var hasChanged = false;
	    var nextState = {};
	    for (var i = 0; i < finalReducerKeys.length; i++) {
	      var key = finalReducerKeys[i];
	      var reducer = finalReducers[key];
	      var previousStateForKey = state[key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}

/***/ },
/* 657 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {
		 true ? module.exports = factory() :
		typeof define === 'function' && define.amd ? define(factory) :
		(global.ResizeObserver = factory());
	}(this, (function () { 'use strict';
	
	/**
	 * A collection of shims that provide minimal functionality of the ES6 collections.
	 *
	 * These implementations are not meant to be used outside of the ResizeObserver
	 * modules as they cover only a limited range of use cases.
	 */
	/* eslint-disable require-jsdoc, valid-jsdoc */
	var MapShim = (function () {
	    if (typeof Map !== 'undefined') {
	        return Map;
	    }
	
	    /**
	     * Returns index in provided array that matches the specified key.
	     *
	     * @param {Array<Array>} arr
	     * @param {*} key
	     * @returns {number}
	     */
	    function getIndex(arr, key) {
	        var result = -1;
	
	        arr.some(function (entry, index) {
	            if (entry[0] === key) {
	                result = index;
	
	                return true;
	            }
	
	            return false;
	        });
	
	        return result;
	    }
	
	    return (function () {
	        function anonymous() {
	            this.__entries__ = [];
	        }
	
	        var prototypeAccessors = { size: { configurable: true } };
	
	        /**
	         * @returns {boolean}
	         */
	        prototypeAccessors.size.get = function () {
	            return this.__entries__.length;
	        };
	
	        /**
	         * @param {*} key
	         * @returns {*}
	         */
	        anonymous.prototype.get = function (key) {
	            var index = getIndex(this.__entries__, key);
	            var entry = this.__entries__[index];
	
	            return entry && entry[1];
	        };
	
	        /**
	         * @param {*} key
	         * @param {*} value
	         * @returns {void}
	         */
	        anonymous.prototype.set = function (key, value) {
	            var index = getIndex(this.__entries__, key);
	
	            if (~index) {
	                this.__entries__[index][1] = value;
	            } else {
	                this.__entries__.push([key, value]);
	            }
	        };
	
	        /**
	         * @param {*} key
	         * @returns {void}
	         */
	        anonymous.prototype.delete = function (key) {
	            var entries = this.__entries__;
	            var index = getIndex(entries, key);
	
	            if (~index) {
	                entries.splice(index, 1);
	            }
	        };
	
	        /**
	         * @param {*} key
	         * @returns {void}
	         */
	        anonymous.prototype.has = function (key) {
	            return !!~getIndex(this.__entries__, key);
	        };
	
	        /**
	         * @returns {void}
	         */
	        anonymous.prototype.clear = function () {
	            this.__entries__.splice(0);
	        };
	
	        /**
	         * @param {Function} callback
	         * @param {*} [ctx=null]
	         * @returns {void}
	         */
	        anonymous.prototype.forEach = function (callback, ctx) {
	            var this$1 = this;
	            if ( ctx === void 0 ) ctx = null;
	
	            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {
	                var entry = list[i];
	
	                callback.call(ctx, entry[1], entry[0]);
	            }
	        };
	
	        Object.defineProperties( anonymous.prototype, prototypeAccessors );
	
	        return anonymous;
	    }());
	})();
	
	/**
	 * Detects whether window and document objects are available in current environment.
	 */
	var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;
	
	// Returns global object of a current environment.
	var global$1 = (function () {
	    if (typeof global !== 'undefined' && global.Math === Math) {
	        return global;
	    }
	
	    if (typeof self !== 'undefined' && self.Math === Math) {
	        return self;
	    }
	
	    if (typeof window !== 'undefined' && window.Math === Math) {
	        return window;
	    }
	
	    // eslint-disable-next-line no-new-func
	    return Function('return this')();
	})();
	
	/**
	 * A shim for the requestAnimationFrame which falls back to the setTimeout if
	 * first one is not supported.
	 *
	 * @returns {number} Requests' identifier.
	 */
	var requestAnimationFrame$1 = (function () {
	    if (typeof requestAnimationFrame === 'function') {
	        // It's required to use a bounded function because IE sometimes throws
	        // an "Invalid calling object" error if rAF is invoked without the global
	        // object on the left hand side.
	        return requestAnimationFrame.bind(global$1);
	    }
	
	    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
	})();
	
	// Defines minimum timeout before adding a trailing call.
	var trailingTimeout = 2;
	
	/**
	 * Creates a wrapper function which ensures that provided callback will be
	 * invoked only once during the specified delay period.
	 *
	 * @param {Function} callback - Function to be invoked after the delay period.
	 * @param {number} delay - Delay after which to invoke callback.
	 * @returns {Function}
	 */
	var throttle = function (callback, delay) {
	    var leadingCall = false,
	        trailingCall = false,
	        lastCallTime = 0;
	
	    /**
	     * Invokes the original callback function and schedules new invocation if
	     * the "proxy" was called during current request.
	     *
	     * @returns {void}
	     */
	    function resolvePending() {
	        if (leadingCall) {
	            leadingCall = false;
	
	            callback();
	        }
	
	        if (trailingCall) {
	            proxy();
	        }
	    }
	
	    /**
	     * Callback invoked after the specified delay. It will further postpone
	     * invocation of the original function delegating it to the
	     * requestAnimationFrame.
	     *
	     * @returns {void}
	     */
	    function timeoutCallback() {
	        requestAnimationFrame$1(resolvePending);
	    }
	
	    /**
	     * Schedules invocation of the original function.
	     *
	     * @returns {void}
	     */
	    function proxy() {
	        var timeStamp = Date.now();
	
	        if (leadingCall) {
	            // Reject immediately following calls.
	            if (timeStamp - lastCallTime < trailingTimeout) {
	                return;
	            }
	
	            // Schedule new call to be in invoked when the pending one is resolved.
	            // This is important for "transitions" which never actually start
	            // immediately so there is a chance that we might miss one if change
	            // happens amids the pending invocation.
	            trailingCall = true;
	        } else {
	            leadingCall = true;
	            trailingCall = false;
	
	            setTimeout(timeoutCallback, delay);
	        }
	
	        lastCallTime = timeStamp;
	    }
	
	    return proxy;
	};
	
	// Minimum delay before invoking the update of observers.
	var REFRESH_DELAY = 20;
	
	// A list of substrings of CSS properties used to find transition events that
	// might affect dimensions of observed elements.
	var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
	
	// Check if MutationObserver is available.
	var mutationObserverSupported = typeof MutationObserver !== 'undefined';
	
	/**
	 * Singleton controller class which handles updates of ResizeObserver instances.
	 */
	var ResizeObserverController = function() {
	    this.connected_ = false;
	    this.mutationEventsAdded_ = false;
	    this.mutationsObserver_ = null;
	    this.observers_ = [];
	
	    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
	    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
	};
	
	/**
	 * Adds observer to observers list.
	 *
	 * @param {ResizeObserverSPI} observer - Observer to be added.
	 * @returns {void}
	 */
	
	
	/**
	 * Holds reference to the controller's instance.
	 *
	 * @private {ResizeObserverController}
	 */
	
	
	/**
	 * Keeps reference to the instance of MutationObserver.
	 *
	 * @private {MutationObserver}
	 */
	
	/**
	 * Indicates whether DOM listeners have been added.
	 *
	 * @private {boolean}
	 */
	ResizeObserverController.prototype.addObserver = function (observer) {
	    if (!~this.observers_.indexOf(observer)) {
	        this.observers_.push(observer);
	    }
	
	    // Add listeners if they haven't been added yet.
	    if (!this.connected_) {
	        this.connect_();
	    }
	};
	
	/**
	 * Removes observer from observers list.
	 *
	 * @param {ResizeObserverSPI} observer - Observer to be removed.
	 * @returns {void}
	 */
	ResizeObserverController.prototype.removeObserver = function (observer) {
	    var observers = this.observers_;
	    var index = observers.indexOf(observer);
	
	    // Remove observer if it's present in registry.
	    if (~index) {
	        observers.splice(index, 1);
	    }
	
	    // Remove listeners if controller has no connected observers.
	    if (!observers.length && this.connected_) {
	        this.disconnect_();
	    }
	};
	
	/**
	 * Invokes the update of observers. It will continue running updates insofar
	 * it detects changes.
	 *
	 * @returns {void}
	 */
	ResizeObserverController.prototype.refresh = function () {
	    var changesDetected = this.updateObservers_();
	
	    // Continue running updates if changes have been detected as there might
	    // be future ones caused by CSS transitions.
	    if (changesDetected) {
	        this.refresh();
	    }
	};
	
	/**
	 * Updates every observer from observers list and notifies them of queued
	 * entries.
	 *
	 * @private
	 * @returns {boolean} Returns "true" if any observer has detected changes in
	 *  dimensions of it's elements.
	 */
	ResizeObserverController.prototype.updateObservers_ = function () {
	    // Collect observers that have active observations.
	    var activeObservers = this.observers_.filter(function (observer) {
	        return observer.gatherActive(), observer.hasActive();
	    });
	
	    // Deliver notifications in a separate cycle in order to avoid any
	    // collisions between observers, e.g. when multiple instances of
	    // ResizeObserver are tracking the same element and the callback of one
	    // of them changes content dimensions of the observed target. Sometimes
	    // this may result in notifications being blocked for the rest of observers.
	    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });
	
	    return activeObservers.length > 0;
	};
	
	/**
	 * Initializes DOM listeners.
	 *
	 * @private
	 * @returns {void}
	 */
	ResizeObserverController.prototype.connect_ = function () {
	    // Do nothing if running in a non-browser environment or if listeners
	    // have been already added.
	    if (!isBrowser || this.connected_) {
	        return;
	    }
	
	    // Subscription to the "Transitionend" event is used as a workaround for
	    // delayed transitions. This way it's possible to capture at least the
	    // final state of an element.
	    document.addEventListener('transitionend', this.onTransitionEnd_);
	
	    window.addEventListener('resize', this.refresh);
	
	    if (mutationObserverSupported) {
	        this.mutationsObserver_ = new MutationObserver(this.refresh);
	
	        this.mutationsObserver_.observe(document, {
	            attributes: true,
	            childList: true,
	            characterData: true,
	            subtree: true
	        });
	    } else {
	        document.addEventListener('DOMSubtreeModified', this.refresh);
	
	        this.mutationEventsAdded_ = true;
	    }
	
	    this.connected_ = true;
	};
	
	/**
	 * Removes DOM listeners.
	 *
	 * @private
	 * @returns {void}
	 */
	ResizeObserverController.prototype.disconnect_ = function () {
	    // Do nothing if running in a non-browser environment or if listeners
	    // have been already removed.
	    if (!isBrowser || !this.connected_) {
	        return;
	    }
	
	    document.removeEventListener('transitionend', this.onTransitionEnd_);
	    window.removeEventListener('resize', this.refresh);
	
	    if (this.mutationsObserver_) {
	        this.mutationsObserver_.disconnect();
	    }
	
	    if (this.mutationEventsAdded_) {
	        document.removeEventListener('DOMSubtreeModified', this.refresh);
	    }
	
	    this.mutationsObserver_ = null;
	    this.mutationEventsAdded_ = false;
	    this.connected_ = false;
	};
	
	/**
	 * "Transitionend" event handler.
	 *
	 * @private
	 * @param {TransitionEvent} event
	 * @returns {void}
	 */
	ResizeObserverController.prototype.onTransitionEnd_ = function (ref) {
	        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';
	
	    // Detect whether transition may affect dimensions of an element.
	    var isReflowProperty = transitionKeys.some(function (key) {
	        return !!~propertyName.indexOf(key);
	    });
	
	    if (isReflowProperty) {
	        this.refresh();
	    }
	};
	
	/**
	 * Returns instance of the ResizeObserverController.
	 *
	 * @returns {ResizeObserverController}
	 */
	ResizeObserverController.getInstance = function () {
	    if (!this.instance_) {
	        this.instance_ = new ResizeObserverController();
	    }
	
	    return this.instance_;
	};
	
	ResizeObserverController.instance_ = null;
	
	/**
	 * Defines non-writable/enumerable properties of the provided target object.
	 *
	 * @param {Object} target - Object for which to define properties.
	 * @param {Object} props - Properties to be defined.
	 * @returns {Object} Target object.
	 */
	var defineConfigurable = (function (target, props) {
	    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {
	        var key = list[i];
	
	        Object.defineProperty(target, key, {
	            value: props[key],
	            enumerable: false,
	            writable: false,
	            configurable: true
	        });
	    }
	
	    return target;
	});
	
	/**
	 * Returns the global object associated with provided element.
	 *
	 * @param {Object} target
	 * @returns {Object}
	 */
	var getWindowOf = (function (target) {
	    // Assume that the element is an instance of Node, which means that it
	    // has the "ownerDocument" property from which we can retrieve a
	    // corresponding global object.
	    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
	
	    // Return the local global object if it's not possible extract one from
	    // provided element.
	    return ownerGlobal || global$1;
	});
	
	// Placeholder of an empty content rectangle.
	var emptyRect = createRectInit(0, 0, 0, 0);
	
	/**
	 * Converts provided string to a number.
	 *
	 * @param {number|string} value
	 * @returns {number}
	 */
	function toFloat(value) {
	    return parseFloat(value) || 0;
	}
	
	/**
	 * Extracts borders size from provided styles.
	 *
	 * @param {CSSStyleDeclaration} styles
	 * @param {...string} positions - Borders positions (top, right, ...)
	 * @returns {number}
	 */
	function getBordersSize(styles) {
	    var positions = [], len = arguments.length - 1;
	    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];
	
	    return positions.reduce(function (size, position) {
	        var value = styles['border-' + position + '-width'];
	
	        return size + toFloat(value);
	    }, 0);
	}
	
	/**
	 * Extracts paddings sizes from provided styles.
	 *
	 * @param {CSSStyleDeclaration} styles
	 * @returns {Object} Paddings box.
	 */
	function getPaddings(styles) {
	    var positions = ['top', 'right', 'bottom', 'left'];
	    var paddings = {};
	
	    for (var i = 0, list = positions; i < list.length; i += 1) {
	        var position = list[i];
	
	        var value = styles['padding-' + position];
	
	        paddings[position] = toFloat(value);
	    }
	
	    return paddings;
	}
	
	/**
	 * Calculates content rectangle of provided SVG element.
	 *
	 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
	 *      to be calculated.
	 * @returns {DOMRectInit}
	 */
	function getSVGContentRect(target) {
	    var bbox = target.getBBox();
	
	    return createRectInit(0, 0, bbox.width, bbox.height);
	}
	
	/**
	 * Calculates content rectangle of provided HTMLElement.
	 *
	 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
	 * @returns {DOMRectInit}
	 */
	function getHTMLElementContentRect(target) {
	    // Client width & height properties can't be
	    // used exclusively as they provide rounded values.
	    var clientWidth = target.clientWidth;
	    var clientHeight = target.clientHeight;
	
	    // By this condition we can catch all non-replaced inline, hidden and
	    // detached elements. Though elements with width & height properties less
	    // than 0.5 will be discarded as well.
	    //
	    // Without it we would need to implement separate methods for each of
	    // those cases and it's not possible to perform a precise and performance
	    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
	    // gives wrong results for elements with width & height less than 0.5.
	    if (!clientWidth && !clientHeight) {
	        return emptyRect;
	    }
	
	    var styles = getWindowOf(target).getComputedStyle(target);
	    var paddings = getPaddings(styles);
	    var horizPad = paddings.left + paddings.right;
	    var vertPad = paddings.top + paddings.bottom;
	
	    // Computed styles of width & height are being used because they are the
	    // only dimensions available to JS that contain non-rounded values. It could
	    // be possible to utilize the getBoundingClientRect if only it's data wasn't
	    // affected by CSS transformations let alone paddings, borders and scroll bars.
	    var width = toFloat(styles.width),
	        height = toFloat(styles.height);
	
	    // Width & height include paddings and borders when the 'border-box' box
	    // model is applied (except for IE).
	    if (styles.boxSizing === 'border-box') {
	        // Following conditions are required to handle Internet Explorer which
	        // doesn't include paddings and borders to computed CSS dimensions.
	        //
	        // We can say that if CSS dimensions + paddings are equal to the "client"
	        // properties then it's either IE, and thus we don't need to subtract
	        // anything, or an element merely doesn't have paddings/borders styles.
	        if (Math.round(width + horizPad) !== clientWidth) {
	            width -= getBordersSize(styles, 'left', 'right') + horizPad;
	        }
	
	        if (Math.round(height + vertPad) !== clientHeight) {
	            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
	        }
	    }
	
	    // Following steps can't be applied to the document's root element as its
	    // client[Width/Height] properties represent viewport area of the window.
	    // Besides, it's as well not necessary as the <html> itself neither has
	    // rendered scroll bars nor it can be clipped.
	    if (!isDocumentElement(target)) {
	        // In some browsers (only in Firefox, actually) CSS width & height
	        // include scroll bars size which can be removed at this step as scroll
	        // bars are the only difference between rounded dimensions + paddings
	        // and "client" properties, though that is not always true in Chrome.
	        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
	        var horizScrollbar = Math.round(height + vertPad) - clientHeight;
	
	        // Chrome has a rather weird rounding of "client" properties.
	        // E.g. for an element with content width of 314.2px it sometimes gives
	        // the client width of 315px and for the width of 314.7px it may give
	        // 314px. And it doesn't happen all the time. So just ignore this delta
	        // as a non-relevant.
	        if (Math.abs(vertScrollbar) !== 1) {
	            width -= vertScrollbar;
	        }
	
	        if (Math.abs(horizScrollbar) !== 1) {
	            height -= horizScrollbar;
	        }
	    }
	
	    return createRectInit(paddings.left, paddings.top, width, height);
	}
	
	/**
	 * Checks whether provided element is an instance of the SVGGraphicsElement.
	 *
	 * @param {Element} target - Element to be checked.
	 * @returns {boolean}
	 */
	var isSVGGraphicsElement = (function () {
	    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
	    // interface.
	    if (typeof SVGGraphicsElement !== 'undefined') {
	        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
	    }
	
	    // If it's so, then check that element is at least an instance of the
	    // SVGElement and that it has the "getBBox" method.
	    // eslint-disable-next-line no-extra-parens
	    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };
	})();
	
	/**
	 * Checks whether provided element is a document element (<html>).
	 *
	 * @param {Element} target - Element to be checked.
	 * @returns {boolean}
	 */
	function isDocumentElement(target) {
	    return target === getWindowOf(target).document.documentElement;
	}
	
	/**
	 * Calculates an appropriate content rectangle for provided html or svg element.
	 *
	 * @param {Element} target - Element content rectangle of which needs to be calculated.
	 * @returns {DOMRectInit}
	 */
	function getContentRect(target) {
	    if (!isBrowser) {
	        return emptyRect;
	    }
	
	    if (isSVGGraphicsElement(target)) {
	        return getSVGContentRect(target);
	    }
	
	    return getHTMLElementContentRect(target);
	}
	
	/**
	 * Creates rectangle with an interface of the DOMRectReadOnly.
	 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
	 *
	 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
	 * @returns {DOMRectReadOnly}
	 */
	function createReadOnlyRect(ref) {
	    var x = ref.x;
	    var y = ref.y;
	    var width = ref.width;
	    var height = ref.height;
	
	    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
	    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
	    var rect = Object.create(Constr.prototype);
	
	    // Rectangle's properties are not writable and non-enumerable.
	    defineConfigurable(rect, {
	        x: x, y: y, width: width, height: height,
	        top: y,
	        right: x + width,
	        bottom: height + y,
	        left: x
	    });
	
	    return rect;
	}
	
	/**
	 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
	 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
	 *
	 * @param {number} x - X coordinate.
	 * @param {number} y - Y coordinate.
	 * @param {number} width - Rectangle's width.
	 * @param {number} height - Rectangle's height.
	 * @returns {DOMRectInit}
	 */
	function createRectInit(x, y, width, height) {
	    return { x: x, y: y, width: width, height: height };
	}
	
	/**
	 * Class that is responsible for computations of the content rectangle of
	 * provided DOM element and for keeping track of it's changes.
	 */
	var ResizeObservation = function(target) {
	    this.broadcastWidth = 0;
	    this.broadcastHeight = 0;
	    this.contentRect_ = createRectInit(0, 0, 0, 0);
	
	    this.target = target;
	};
	
	/**
	 * Updates content rectangle and tells whether it's width or height properties
	 * have changed since the last broadcast.
	 *
	 * @returns {boolean}
	 */
	
	
	/**
	 * Reference to the last observed content rectangle.
	 *
	 * @private {DOMRectInit}
	 */
	
	
	/**
	 * Broadcasted width of content rectangle.
	 *
	 * @type {number}
	 */
	ResizeObservation.prototype.isActive = function () {
	    var rect = getContentRect(this.target);
	
	    this.contentRect_ = rect;
	
	    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
	};
	
	/**
	 * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
	 * from the corresponding properties of the last observed content rectangle.
	 *
	 * @returns {DOMRectInit} Last observed content rectangle.
	 */
	ResizeObservation.prototype.broadcastRect = function () {
	    var rect = this.contentRect_;
	
	    this.broadcastWidth = rect.width;
	    this.broadcastHeight = rect.height;
	
	    return rect;
	};
	
	var ResizeObserverEntry = function(target, rectInit) {
	    var contentRect = createReadOnlyRect(rectInit);
	
	    // According to the specification following properties are not writable
	    // and are also not enumerable in the native implementation.
	    //
	    // Property accessors are not being used as they'd require to define a
	    // private WeakMap storage which may cause memory leaks in browsers that
	    // don't support this type of collections.
	    defineConfigurable(this, { target: target, contentRect: contentRect });
	};
	
	var ResizeObserverSPI = function(callback, controller, callbackCtx) {
	    this.activeObservations_ = [];
	    this.observations_ = new MapShim();
	
	    if (typeof callback !== 'function') {
	        throw new TypeError('The callback provided as parameter 1 is not a function.');
	    }
	
	    this.callback_ = callback;
	    this.controller_ = controller;
	    this.callbackCtx_ = callbackCtx;
	};
	
	/**
	 * Starts observing provided element.
	 *
	 * @param {Element} target - Element to be observed.
	 * @returns {void}
	 */
	
	
	/**
	 * Registry of the ResizeObservation instances.
	 *
	 * @private {Map<Element, ResizeObservation>}
	 */
	
	
	/**
	 * Public ResizeObserver instance which will be passed to the callback
	 * function and used as a value of it's "this" binding.
	 *
	 * @private {ResizeObserver}
	 */
	
	/**
	 * Collection of resize observations that have detected changes in dimensions
	 * of elements.
	 *
	 * @private {Array<ResizeObservation>}
	 */
	ResizeObserverSPI.prototype.observe = function (target) {
	    if (!arguments.length) {
	        throw new TypeError('1 argument required, but only 0 present.');
	    }
	
	    // Do nothing if current environment doesn't have the Element interface.
	    if (typeof Element === 'undefined' || !(Element instanceof Object)) {
	        return;
	    }
	
	    if (!(target instanceof getWindowOf(target).Element)) {
	        throw new TypeError('parameter 1 is not of type "Element".');
	    }
	
	    var observations = this.observations_;
	
	    // Do nothing if element is already being observed.
	    if (observations.has(target)) {
	        return;
	    }
	
	    observations.set(target, new ResizeObservation(target));
	
	    this.controller_.addObserver(this);
	
	    // Force the update of observations.
	    this.controller_.refresh();
	};
	
	/**
	 * Stops observing provided element.
	 *
	 * @param {Element} target - Element to stop observing.
	 * @returns {void}
	 */
	ResizeObserverSPI.prototype.unobserve = function (target) {
	    if (!arguments.length) {
	        throw new TypeError('1 argument required, but only 0 present.');
	    }
	
	    // Do nothing if current environment doesn't have the Element interface.
	    if (typeof Element === 'undefined' || !(Element instanceof Object)) {
	        return;
	    }
	
	    if (!(target instanceof getWindowOf(target).Element)) {
	        throw new TypeError('parameter 1 is not of type "Element".');
	    }
	
	    var observations = this.observations_;
	
	    // Do nothing if element is not being observed.
	    if (!observations.has(target)) {
	        return;
	    }
	
	    observations.delete(target);
	
	    if (!observations.size) {
	        this.controller_.removeObserver(this);
	    }
	};
	
	/**
	 * Stops observing all elements.
	 *
	 * @returns {void}
	 */
	ResizeObserverSPI.prototype.disconnect = function () {
	    this.clearActive();
	    this.observations_.clear();
	    this.controller_.removeObserver(this);
	};
	
	/**
	 * Collects observation instances the associated element of which has changed
	 * it's content rectangle.
	 *
	 * @returns {void}
	 */
	ResizeObserverSPI.prototype.gatherActive = function () {
	        var this$1 = this;
	
	    this.clearActive();
	
	    this.observations_.forEach(function (observation) {
	        if (observation.isActive()) {
	            this$1.activeObservations_.push(observation);
	        }
	    });
	};
	
	/**
	 * Invokes initial callback function with a list of ResizeObserverEntry
	 * instances collected from active resize observations.
	 *
	 * @returns {void}
	 */
	ResizeObserverSPI.prototype.broadcastActive = function () {
	    // Do nothing if observer doesn't have active observations.
	    if (!this.hasActive()) {
	        return;
	    }
	
	    var ctx = this.callbackCtx_;
	
	    // Create ResizeObserverEntry instance for every active observation.
	    var entries = this.activeObservations_.map(function (observation) {
	        return new ResizeObserverEntry(observation.target, observation.broadcastRect());
	    });
	
	    this.callback_.call(ctx, entries, ctx);
	    this.clearActive();
	};
	
	/**
	 * Clears the collection of active observations.
	 *
	 * @returns {void}
	 */
	ResizeObserverSPI.prototype.clearActive = function () {
	    this.activeObservations_.splice(0);
	};
	
	/**
	 * Tells whether observer has active observations.
	 *
	 * @returns {boolean}
	 */
	ResizeObserverSPI.prototype.hasActive = function () {
	    return this.activeObservations_.length > 0;
	};
	
	// Registry of internal observers. If WeakMap is not available use current shim
	// for the Map collection as it has all required methods and because WeakMap
	// can't be fully polyfilled anyway.
	var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
	
	/**
	 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
	 * exposing only those methods and properties that are defined in the spec.
	 */
	var ResizeObserver = function(callback) {
	    if (!(this instanceof ResizeObserver)) {
	        throw new TypeError('Cannot call a class as a function.');
	    }
	    if (!arguments.length) {
	        throw new TypeError('1 argument required, but only 0 present.');
	    }
	
	    var controller = ResizeObserverController.getInstance();
	    var observer = new ResizeObserverSPI(callback, controller, this);
	
	    observers.set(this, observer);
	};
	
	// Expose public methods of ResizeObserver.
	['observe', 'unobserve', 'disconnect'].forEach(function (method) {
	    ResizeObserver.prototype[method] = function () {
	        return (ref = observers.get(this))[method].apply(ref, arguments);
	        var ref;
	    };
	});
	
	var index = (function () {
	    // Export existing implementation if available.
	    if (typeof global$1.ResizeObserver !== 'undefined') {
	        return global$1.ResizeObserver;
	    }
	
	    return ResizeObserver;
	})();
	
	return index;
	
	})));
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 658 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * smoothscroll polyfill - v0.3.5
	 * https://iamdustan.github.io/smoothscroll
	 * 2016 (c) Dustan Kasten, Jeremias Menichelli - MIT License
	 */
	
	(function(w, d, undefined) {
	  'use strict';
	
	  /*
	   * aliases
	   * w: window global object
	   * d: document
	   * undefined: undefined
	   */
	
	  // polyfill
	  function polyfill() {
	    // return when scrollBehavior interface is supported
	    if ('scrollBehavior' in d.documentElement.style) {
	      return;
	    }
	
	    /*
	     * globals
	     */
	    var Element = w.HTMLElement || w.Element;
	    var SCROLL_TIME = 468;
	
	    /*
	     * object gathering original scroll methods
	     */
	    var original = {
	      scroll: w.scroll || w.scrollTo,
	      scrollBy: w.scrollBy,
	      elScroll: Element.prototype.scroll || scrollElement,
	      scrollIntoView: Element.prototype.scrollIntoView
	    };
	
	    /*
	     * define timing method
	     */
	    var now = w.performance && w.performance.now
	      ? w.performance.now.bind(w.performance) : Date.now;
	
	    /**
	     * changes scroll position inside an element
	     * @method scrollElement
	     * @param {Number} x
	     * @param {Number} y
	     */
	    function scrollElement(x, y) {
	      this.scrollLeft = x;
	      this.scrollTop = y;
	    }
	
	    /**
	     * returns result of applying ease math function to a number
	     * @method ease
	     * @param {Number} k
	     * @returns {Number}
	     */
	    function ease(k) {
	      return 0.5 * (1 - Math.cos(Math.PI * k));
	    }
	
	    /**
	     * indicates if a smooth behavior should be applied
	     * @method shouldBailOut
	     * @param {Number|Object} x
	     * @returns {Boolean}
	     */
	    function shouldBailOut(x) {
	      if (typeof x !== 'object'
	            || x === null
	            || x.behavior === undefined
	            || x.behavior === 'auto'
	            || x.behavior === 'instant') {
	        // first arg not an object/null
	        // or behavior is auto, instant or undefined
	        return true;
	      }
	
	      if (typeof x === 'object'
	            && x.behavior === 'smooth') {
	        // first argument is an object and behavior is smooth
	        return false;
	      }
	
	      // throw error when behavior is not supported
	      throw new TypeError('behavior not valid');
	    }
	
	    /**
	     * finds scrollable parent of an element
	     * @method findScrollableParent
	     * @param {Node} el
	     * @returns {Node} el
	     */
	    function findScrollableParent(el) {
	      var isBody;
	      var hasScrollableSpace;
	      var hasVisibleOverflow;
	
	      do {
	        el = el.parentNode;
	
	        // set condition variables
	        isBody = el === d.body;
	        hasScrollableSpace =
	          el.clientHeight < el.scrollHeight ||
	          el.clientWidth < el.scrollWidth;
	        hasVisibleOverflow =
	          w.getComputedStyle(el, null).overflow === 'visible';
	      } while (!isBody && !(hasScrollableSpace && !hasVisibleOverflow));
	
	      isBody = hasScrollableSpace = hasVisibleOverflow = null;
	
	      return el;
	    }
	
	    /**
	     * self invoked function that, given a context, steps through scrolling
	     * @method step
	     * @param {Object} context
	     */
	    function step(context) {
	      var time = now();
	      var value;
	      var currentX;
	      var currentY;
	      var elapsed = (time - context.startTime) / SCROLL_TIME;
	
	      // avoid elapsed times higher than one
	      elapsed = elapsed > 1 ? 1 : elapsed;
	
	      // apply easing to elapsed time
	      value = ease(elapsed);
	
	      currentX = context.startX + (context.x - context.startX) * value;
	      currentY = context.startY + (context.y - context.startY) * value;
	
	      context.method.call(context.scrollable, currentX, currentY);
	
	      // scroll more if we have not reached our destination
	      if (currentX !== context.x || currentY !== context.y) {
	        w.requestAnimationFrame(step.bind(w, context));
	      }
	    }
	
	    /**
	     * scrolls window with a smooth behavior
	     * @method smoothScroll
	     * @param {Object|Node} el
	     * @param {Number} x
	     * @param {Number} y
	     */
	    function smoothScroll(el, x, y) {
	      var scrollable;
	      var startX;
	      var startY;
	      var method;
	      var startTime = now();
	
	      // define scroll context
	      if (el === d.body) {
	        scrollable = w;
	        startX = w.scrollX || w.pageXOffset;
	        startY = w.scrollY || w.pageYOffset;
	        method = original.scroll;
	      } else {
	        scrollable = el;
	        startX = el.scrollLeft;
	        startY = el.scrollTop;
	        method = scrollElement;
	      }
	
	      // scroll looping over a frame
	      step({
	        scrollable: scrollable,
	        method: method,
	        startTime: startTime,
	        startX: startX,
	        startY: startY,
	        x: x,
	        y: y
	      });
	    }
	
	    /*
	     * ORIGINAL METHODS OVERRIDES
	     */
	
	    // w.scroll and w.scrollTo
	    w.scroll = w.scrollTo = function() {
	      // avoid smooth behavior if not required
	      if (shouldBailOut(arguments[0])) {
	        original.scroll.call(
	          w,
	          arguments[0].left || arguments[0],
	          arguments[0].top || arguments[1]
	        );
	        return;
	      }
	
	      // LET THE SMOOTHNESS BEGIN!
	      smoothScroll.call(
	        w,
	        d.body,
	        ~~arguments[0].left,
	        ~~arguments[0].top
	      );
	    };
	
	    // w.scrollBy
	    w.scrollBy = function() {
	      // avoid smooth behavior if not required
	      if (shouldBailOut(arguments[0])) {
	        original.scrollBy.call(
	          w,
	          arguments[0].left || arguments[0],
	          arguments[0].top || arguments[1]
	        );
	        return;
	      }
	
	      // LET THE SMOOTHNESS BEGIN!
	      smoothScroll.call(
	        w,
	        d.body,
	        ~~arguments[0].left + (w.scrollX || w.pageXOffset),
	        ~~arguments[0].top + (w.scrollY || w.pageYOffset)
	      );
	    };
	
	    // Element.prototype.scroll and Element.prototype.scrollTo
	    Element.prototype.scroll = Element.prototype.scrollTo = function() {
	      // avoid smooth behavior if not required
	      if (shouldBailOut(arguments[0])) {
	        original.elScroll.call(
	            this,
	            arguments[0].left || arguments[0],
	            arguments[0].top || arguments[1]
	        );
	        return;
	      }
	
	      var left = arguments[0].left;
	      var top = arguments[0].top;
	
	      // LET THE SMOOTHNESS BEGIN!
	      smoothScroll.call(
	          this,
	          this,
	          typeof left === 'number' ? left : this.scrollLeft,
	          typeof top === 'number' ? top : this.scrollTop
	      );
	    };
	
	    // Element.prototype.scrollBy
	    Element.prototype.scrollBy = function() {
	      var arg0 = arguments[0];
	
	      if (typeof arg0 === 'object') {
	        this.scroll({
	          left: arg0.left + this.scrollLeft,
	          top: arg0.top + this.scrollTop,
	          behavior: arg0.behavior
	        });
	      } else {
	        this.scroll(
	          this.scrollLeft + arg0,
	          this.scrollTop + arguments[1]
	        );
	      }
	    };
	
	    // Element.prototype.scrollIntoView
	    Element.prototype.scrollIntoView = function() {
	      // avoid smooth behavior if not required
	      if (shouldBailOut(arguments[0])) {
	        original.scrollIntoView.call(
	          this,
	          arguments[0] === undefined ? true : arguments[0]
	        );
	        return;
	      }
	
	      // LET THE SMOOTHNESS BEGIN!
	      var scrollableParent = findScrollableParent(this);
	      var parentRects = scrollableParent.getBoundingClientRect();
	      var clientRects = this.getBoundingClientRect();
	
	      if (scrollableParent !== d.body) {
	        // reveal element inside parent
	        smoothScroll.call(
	          this,
	          scrollableParent,
	          scrollableParent.scrollLeft + clientRects.left - parentRects.left,
	          scrollableParent.scrollTop + clientRects.top - parentRects.top
	        );
	        // reveal parent in viewport
	        w.scrollBy({
	          left: parentRects.left,
	          top: parentRects.top,
	          behavior: 'smooth'
	        });
	      } else {
	        // reveal element in viewport
	        w.scrollBy({
	          left: clientRects.left,
	          top: clientRects.top,
	          behavior: 'smooth'
	        });
	      }
	    };
	  }
	
	  if (true) {
	    // commonjs
	    module.exports = { polyfill: polyfill };
	  } else {
	    // global
	    polyfill();
	  }
	})(window, document);


/***/ },
/* 659 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function (str) {
		return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
			return '%' + c.charCodeAt(0).toString(16).toUpperCase();
		});
	};


/***/ },
/* 660 */
/***/ function(module, exports) {

	var camel2hyphen = function (str) {
	  return str
	          .replace(/[A-Z]/g, function (match) {
	            return '-' + match.toLowerCase();
	          })
	          .toLowerCase();
	};
	
	module.exports = camel2hyphen;

/***/ },
/* 661 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ponyfill = __webpack_require__(662);
	
	var _ponyfill2 = _interopRequireDefault(_ponyfill);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var root; /* global window */
	
	
	if (typeof self !== 'undefined') {
	  root = self;
	} else if (typeof window !== 'undefined') {
	  root = window;
	} else if (typeof global !== 'undefined') {
	  root = global;
	} else if (true) {
	  root = module;
	} else {
	  root = Function('return this')();
	}
	
	var result = (0, _ponyfill2['default'])(root);
	exports['default'] = result;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(327)(module)))

/***/ },
/* 662 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports['default'] = symbolObservablePonyfill;
	function symbolObservablePonyfill(root) {
		var result;
		var _Symbol = root.Symbol;
	
		if (typeof _Symbol === 'function') {
			if (_Symbol.observable) {
				result = _Symbol.observable;
			} else {
				result = _Symbol('observable');
				_Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}
	
		return result;
	};

/***/ },
/* 663 */
/***/ function(module, exports) {

	(function(self) {
	  'use strict';
	
	  if (self.fetch) {
	    return
	  }
	
	  var support = {
	    searchParams: 'URLSearchParams' in self,
	    iterable: 'Symbol' in self && 'iterator' in Symbol,
	    blob: 'FileReader' in self && 'Blob' in self && (function() {
	      try {
	        new Blob()
	        return true
	      } catch(e) {
	        return false
	      }
	    })(),
	    formData: 'FormData' in self,
	    arrayBuffer: 'ArrayBuffer' in self
	  }
	
	  if (support.arrayBuffer) {
	    var viewClasses = [
	      '[object Int8Array]',
	      '[object Uint8Array]',
	      '[object Uint8ClampedArray]',
	      '[object Int16Array]',
	      '[object Uint16Array]',
	      '[object Int32Array]',
	      '[object Uint32Array]',
	      '[object Float32Array]',
	      '[object Float64Array]'
	    ]
	
	    var isDataView = function(obj) {
	      return obj && DataView.prototype.isPrototypeOf(obj)
	    }
	
	    var isArrayBufferView = ArrayBuffer.isView || function(obj) {
	      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
	    }
	  }
	
	  function normalizeName(name) {
	    if (typeof name !== 'string') {
	      name = String(name)
	    }
	    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
	      throw new TypeError('Invalid character in header field name')
	    }
	    return name.toLowerCase()
	  }
	
	  function normalizeValue(value) {
	    if (typeof value !== 'string') {
	      value = String(value)
	    }
	    return value
	  }
	
	  // Build a destructive iterator for the value list
	  function iteratorFor(items) {
	    var iterator = {
	      next: function() {
	        var value = items.shift()
	        return {done: value === undefined, value: value}
	      }
	    }
	
	    if (support.iterable) {
	      iterator[Symbol.iterator] = function() {
	        return iterator
	      }
	    }
	
	    return iterator
	  }
	
	  function Headers(headers) {
	    this.map = {}
	
	    if (headers instanceof Headers) {
	      headers.forEach(function(value, name) {
	        this.append(name, value)
	      }, this)
	
	    } else if (headers) {
	      Object.getOwnPropertyNames(headers).forEach(function(name) {
	        this.append(name, headers[name])
	      }, this)
	    }
	  }
	
	  Headers.prototype.append = function(name, value) {
	    name = normalizeName(name)
	    value = normalizeValue(value)
	    var oldValue = this.map[name]
	    this.map[name] = oldValue ? oldValue+','+value : value
	  }
	
	  Headers.prototype['delete'] = function(name) {
	    delete this.map[normalizeName(name)]
	  }
	
	  Headers.prototype.get = function(name) {
	    name = normalizeName(name)
	    return this.has(name) ? this.map[name] : null
	  }
	
	  Headers.prototype.has = function(name) {
	    return this.map.hasOwnProperty(normalizeName(name))
	  }
	
	  Headers.prototype.set = function(name, value) {
	    this.map[normalizeName(name)] = normalizeValue(value)
	  }
	
	  Headers.prototype.forEach = function(callback, thisArg) {
	    for (var name in this.map) {
	      if (this.map.hasOwnProperty(name)) {
	        callback.call(thisArg, this.map[name], name, this)
	      }
	    }
	  }
	
	  Headers.prototype.keys = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push(name) })
	    return iteratorFor(items)
	  }
	
	  Headers.prototype.values = function() {
	    var items = []
	    this.forEach(function(value) { items.push(value) })
	    return iteratorFor(items)
	  }
	
	  Headers.prototype.entries = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push([name, value]) })
	    return iteratorFor(items)
	  }
	
	  if (support.iterable) {
	    Headers.prototype[Symbol.iterator] = Headers.prototype.entries
	  }
	
	  function consumed(body) {
	    if (body.bodyUsed) {
	      return Promise.reject(new TypeError('Already read'))
	    }
	    body.bodyUsed = true
	  }
	
	  function fileReaderReady(reader) {
	    return new Promise(function(resolve, reject) {
	      reader.onload = function() {
	        resolve(reader.result)
	      }
	      reader.onerror = function() {
	        reject(reader.error)
	      }
	    })
	  }
	
	  function readBlobAsArrayBuffer(blob) {
	    var reader = new FileReader()
	    var promise = fileReaderReady(reader)
	    reader.readAsArrayBuffer(blob)
	    return promise
	  }
	
	  function readBlobAsText(blob) {
	    var reader = new FileReader()
	    var promise = fileReaderReady(reader)
	    reader.readAsText(blob)
	    return promise
	  }
	
	  function readArrayBufferAsText(buf) {
	    var view = new Uint8Array(buf)
	    var chars = new Array(view.length)
	
	    for (var i = 0; i < view.length; i++) {
	      chars[i] = String.fromCharCode(view[i])
	    }
	    return chars.join('')
	  }
	
	  function bufferClone(buf) {
	    if (buf.slice) {
	      return buf.slice(0)
	    } else {
	      var view = new Uint8Array(buf.byteLength)
	      view.set(new Uint8Array(buf))
	      return view.buffer
	    }
	  }
	
	  function Body() {
	    this.bodyUsed = false
	
	    this._initBody = function(body) {
	      this._bodyInit = body
	      if (!body) {
	        this._bodyText = ''
	      } else if (typeof body === 'string') {
	        this._bodyText = body
	      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
	        this._bodyBlob = body
	      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
	        this._bodyFormData = body
	      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	        this._bodyText = body.toString()
	      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
	        this._bodyArrayBuffer = bufferClone(body.buffer)
	        // IE 10-11 can't handle a DataView body.
	        this._bodyInit = new Blob([this._bodyArrayBuffer])
	      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
	        this._bodyArrayBuffer = bufferClone(body)
	      } else {
	        throw new Error('unsupported BodyInit type')
	      }
	
	      if (!this.headers.get('content-type')) {
	        if (typeof body === 'string') {
	          this.headers.set('content-type', 'text/plain;charset=UTF-8')
	        } else if (this._bodyBlob && this._bodyBlob.type) {
	          this.headers.set('content-type', this._bodyBlob.type)
	        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
	        }
	      }
	    }
	
	    if (support.blob) {
	      this.blob = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }
	
	        if (this._bodyBlob) {
	          return Promise.resolve(this._bodyBlob)
	        } else if (this._bodyArrayBuffer) {
	          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as blob')
	        } else {
	          return Promise.resolve(new Blob([this._bodyText]))
	        }
	      }
	
	      this.arrayBuffer = function() {
	        if (this._bodyArrayBuffer) {
	          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
	        } else {
	          return this.blob().then(readBlobAsArrayBuffer)
	        }
	      }
	    }
	
	    this.text = function() {
	      var rejected = consumed(this)
	      if (rejected) {
	        return rejected
	      }
	
	      if (this._bodyBlob) {
	        return readBlobAsText(this._bodyBlob)
	      } else if (this._bodyArrayBuffer) {
	        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
	      } else if (this._bodyFormData) {
	        throw new Error('could not read FormData body as text')
	      } else {
	        return Promise.resolve(this._bodyText)
	      }
	    }
	
	    if (support.formData) {
	      this.formData = function() {
	        return this.text().then(decode)
	      }
	    }
	
	    this.json = function() {
	      return this.text().then(JSON.parse)
	    }
	
	    return this
	  }
	
	  // HTTP methods whose capitalization should be normalized
	  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']
	
	  function normalizeMethod(method) {
	    var upcased = method.toUpperCase()
	    return (methods.indexOf(upcased) > -1) ? upcased : method
	  }
	
	  function Request(input, options) {
	    options = options || {}
	    var body = options.body
	
	    if (input instanceof Request) {
	      if (input.bodyUsed) {
	        throw new TypeError('Already read')
	      }
	      this.url = input.url
	      this.credentials = input.credentials
	      if (!options.headers) {
	        this.headers = new Headers(input.headers)
	      }
	      this.method = input.method
	      this.mode = input.mode
	      if (!body && input._bodyInit != null) {
	        body = input._bodyInit
	        input.bodyUsed = true
	      }
	    } else {
	      this.url = String(input)
	    }
	
	    this.credentials = options.credentials || this.credentials || 'omit'
	    if (options.headers || !this.headers) {
	      this.headers = new Headers(options.headers)
	    }
	    this.method = normalizeMethod(options.method || this.method || 'GET')
	    this.mode = options.mode || this.mode || null
	    this.referrer = null
	
	    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
	      throw new TypeError('Body not allowed for GET or HEAD requests')
	    }
	    this._initBody(body)
	  }
	
	  Request.prototype.clone = function() {
	    return new Request(this, { body: this._bodyInit })
	  }
	
	  function decode(body) {
	    var form = new FormData()
	    body.trim().split('&').forEach(function(bytes) {
	      if (bytes) {
	        var split = bytes.split('=')
	        var name = split.shift().replace(/\+/g, ' ')
	        var value = split.join('=').replace(/\+/g, ' ')
	        form.append(decodeURIComponent(name), decodeURIComponent(value))
	      }
	    })
	    return form
	  }
	
	  function parseHeaders(rawHeaders) {
	    var headers = new Headers()
	    rawHeaders.split(/\r?\n/).forEach(function(line) {
	      var parts = line.split(':')
	      var key = parts.shift().trim()
	      if (key) {
	        var value = parts.join(':').trim()
	        headers.append(key, value)
	      }
	    })
	    return headers
	  }
	
	  Body.call(Request.prototype)
	
	  function Response(bodyInit, options) {
	    if (!options) {
	      options = {}
	    }
	
	    this.type = 'default'
	    this.status = 'status' in options ? options.status : 200
	    this.ok = this.status >= 200 && this.status < 300
	    this.statusText = 'statusText' in options ? options.statusText : 'OK'
	    this.headers = new Headers(options.headers)
	    this.url = options.url || ''
	    this._initBody(bodyInit)
	  }
	
	  Body.call(Response.prototype)
	
	  Response.prototype.clone = function() {
	    return new Response(this._bodyInit, {
	      status: this.status,
	      statusText: this.statusText,
	      headers: new Headers(this.headers),
	      url: this.url
	    })
	  }
	
	  Response.error = function() {
	    var response = new Response(null, {status: 0, statusText: ''})
	    response.type = 'error'
	    return response
	  }
	
	  var redirectStatuses = [301, 302, 303, 307, 308]
	
	  Response.redirect = function(url, status) {
	    if (redirectStatuses.indexOf(status) === -1) {
	      throw new RangeError('Invalid status code')
	    }
	
	    return new Response(null, {status: status, headers: {location: url}})
	  }
	
	  self.Headers = Headers
	  self.Request = Request
	  self.Response = Response
	
	  self.fetch = function(input, init) {
	    return new Promise(function(resolve, reject) {
	      var request = new Request(input, init)
	      var xhr = new XMLHttpRequest()
	
	      xhr.onload = function() {
	        var options = {
	          status: xhr.status,
	          statusText: xhr.statusText,
	          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
	        }
	        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')
	        var body = 'response' in xhr ? xhr.response : xhr.responseText
	        resolve(new Response(body, options))
	      }
	
	      xhr.onerror = function() {
	        reject(new TypeError('Network request failed'))
	      }
	
	      xhr.ontimeout = function() {
	        reject(new TypeError('Network request failed'))
	      }
	
	      xhr.open(request.method, request.url, true)
	
	      if (request.credentials === 'include') {
	        xhr.withCredentials = true
	      }
	
	      if ('responseType' in xhr && support.blob) {
	        xhr.responseType = 'blob'
	      }
	
	      request.headers.forEach(function(value, name) {
	        xhr.setRequestHeader(name, value)
	      })
	
	      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
	    })
	  }
	  self.fetch.polyfill = true
	})(typeof self !== 'undefined' ? self : this);


/***/ },
/* 664 */
/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(__webpack_module_template_argument_0__);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};
	
	module.exports = PooledClass;

/***/ }
/******/ ])));
//# sourceMappingURL=main.js.map